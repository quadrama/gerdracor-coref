#begin document (Emilia.xml.rksp.0.CoNLL2012.conll); part 000
Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)))	prinz	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	an	APPR	*	an	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	einem	ART	*	ein	sg	masc	-	(13
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Arbeitstische	NN	*	arbeitstische	sg	masc	-	13)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	voller	APPR	*	voll	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Briefschaften	NN	*	briefschaft	pl	fem	-	(14
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Papiere	NN	*	papier	pl	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	deren	PRELAT	*	der	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	einige	PIS	*	einiger	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	er	PPER	*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	durchläuft	VVFIN	*	durchlaufen	sg	-	-	14)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Klagen	NN	(VROOT(PSEUDO(NP*	klage	pl	fem	-	(15)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	nichts	PIS	(NP*	nichts	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	als	KOKOM	(NP*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Klagen	NN	*)))	klage	pl	fem	-	(15)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Bittschriften	NN	(VROOT(PSEUDO(NP*	bittschrift	pl	fem	-	(16)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	nichts	PIS	(NP*	nichts	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	als	KOKOM	(NP*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Bittschriften	NN	*)))	bittschrift	pl	fem	-	(16)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Die	ART	(NP*	der	pl	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	traurigen	ADJA	*	traurig	pl	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Geschäfte	NN	*)	geschäft	pl	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	und	KON	(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	man	PIS	*	man	sg	*	-	(17)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	beneidet	VVFIN	*	beneiden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	uns	PPER	*	uns	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	noch	ADV	*)	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Das	PDS	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	glaub	VVFIN	*	glaub	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	wenn	KOUS	*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	wir	PPER	*	wir	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	allen	PIS	*	aller	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	helfen	VVINF	*	helfen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	könnten	VMFIN	*	können	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	dann	ADV	*	dann	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	wären	VAFIN	*	sein	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	wir	PPER	*	wir	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	zu	PTKZU	*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	beneiden	VVINF	*	beneiden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Emilia	NE	*	emilia	-	-	-	(18)|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Indem	KOUS	(VROOT(PSEUDO(CS(S*	indem	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	er	PPER	*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	noch	ADV	(NP*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	eine	PIS	*)	ein	sg	fem	-	(19)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	von	APPR	(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	den	ART	*	der	pl	*	-	(16
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Bittschriften	NN	*)	bittschrift	pl	*	-	16)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	aufschlägt	VVFIN	*)	aufschlagen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	nach	APPR	(S(PP*	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	dem	ART	*	der	sg	neut	-	(20
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	unterschriebnen	ADJA	*	unterschriebnen	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Namen	NN	*)	name	sg	neut	-	20)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	sieht	VVFIN	*))	sehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Eine	ART	(VROOT(PSEUDO(NP*	ein	sg	fem	-	(18
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Emilia	NN	*)	emilia	sg	fem	-	18)|(20)|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Aber	KON	(NP*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	eine	ART	*	ein	sg	fem	-	(18
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Emilia	NE	*)	emilia	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Bruneschi	NE	*	bruneschi	sg	fem	-	18)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	–	NE	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	nicht	PTKNEG	(VP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Galotti	NE	*)	galotti	sg	*	(PER*)	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nicht	PTKNEG	(VROOT(PSEUDO(PP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Emilia	NE	*	emilia	*	*	-	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Galotti	NE	*)	galotti	sg	*	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Was	PWS	(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	will	VMFIN	*)	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sie	PPER	*	sie	sg	fem	-	(18
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	diese	PDAT	(NP*	dieser	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Emilia	NE	*	emilia	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Bruneschi	NE	*)	bruneschi	sg	fem	-	18)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Er	PPER	(VROOT(PSEUDO(S*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	lieset	VVFIN	*)	liesen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Viel	PIS	(VROOT(PSEUDO(S*	viel	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	gefodert	VVPP	*)	fodern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sehr	ADV	(NP*	sehr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	viel	PIS	*)	viel	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Doch	KON	(S*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sie	PPER	*	sie	sg	fem	-	(18)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	heißt	VVFIN	*	heißen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Emilia	NE	*)	emilia	sg	fem	(PER*)	(20)|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Gewährt	NN	(VROOT(PSEUDO*	gewähren	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Er	PPER	(VROOT(PSEUDO(CS(S*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	unterschreibt	VVFIN	*)	unterschreiben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	klingelt	VVFIN	(S*	klingeln	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	worauf	PROAV	*	worauf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ein	ART	(NP*	ein	sg	masc	-	(1
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Kammerdiener	NN	*)	kammerdiener	sg	masc	-	1)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	hereintritt	VVFIN	*))	hereintreten	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Es	PPER	(VROOT(PSEUDO(S*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wohl	ADV	*	wohl	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	noch	ADV	*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	keiner	PIS	(NP*	keiner	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	von	APPR	(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	den	ART	*	der	pl	masc	-	(21
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Räten	NN	*	rat	pl	masc	-	21)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	dem	ART	*	der	sg	neut	-	(22
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Vorzimmer	NN	*))))	vorzimmer	sg	neut	-	22)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	sg	*	-	(1|(1
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	KAMMERDIENER	NE	*)	kammerdiener	sg	neut	-	1)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	1)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nein	PTKANT	*	nein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	habe	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	zu	PTKA	(VP(AP*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	früh	ADJD	*)	früh	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Tag	NN	*	tag	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	gemacht	VVPP	*))	machen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Der	ART	(S(NP*	der	sg	masc	-	(23
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Morgen	NN	*)	morgen	sg	masc	-	23)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	so	ADV	(AP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	schön	ADJD	*))	schön	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	will	VMFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ausfahren	VVINF	*)	ausfahren	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Marchese	NE	(VROOT(PSEUDO(S(MPN*	marchese	sg	fem	-	(3
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Marinelli	NE	*)	marinelli	sg	fem	(PER*)	3)|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	soll	VMFIN	*	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mich	PPER	(VP*	mich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	begleiten	VVINF	*))	begleiten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Laßt	VVIMP	*	lassen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ihn	PPER	*	ihn	sg	masc	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	rufen	VVINF	*	rufen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(S(NP*	der	sg	masc	-	(1
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Kammerdiener	NN	*)	kammerdiener	sg	masc	-	1)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	geht	VVFIN	*	gehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ab	PTKVZ	*)	ab	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ich	PPER	(S*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	kann	VMFIN	*	können	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	doch	ADV	*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nicht	PTKNEG	(VP(AVP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	mehr	ADV	*)	mehr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	arbeiten	VVINF	*))	arbeiten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	war	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ruhig	ADJD	*	ruhig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	bild	ADJD	*	bild	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	mir	PPER	*	sich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	ein	PTKVZ	*	ein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	ruhig	ADJD	*	ruhig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	–	CARD	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	Auf	APPR	*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	einmal	ADV	*	einmal	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	muß	VMFIN	*	müssen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	eine	ART	*	ein	sg	fem	-	(18
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	arme	ADJA	*	arm	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	Bruneschi	NE	*	bruneschi	sg	fem	-	18)
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	Emilia	NE	*	emilia	-	-	(PER*)	(20)|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	heißen	VVINF	*	heißen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	weg	ADV	*	weg	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	28	meine	PPOSAT	*	mein	sg	fem	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	29	Ruhe	NN	*	ruhe	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	30	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	31	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	32	alles	PIS	*	alle	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	33	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	sg	*	-	(1|(1
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	KAMMERDIENER	NE	*)))	kammerdiener	sg	neut	-	1)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	welcher	PWAT	*	welcher	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wieder	ADV	*	wieder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	herein	PTKVZ	*	herein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	tritt	VVFIN	*	treten	sg	-	-	1)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nach	APPR	(VROOT(PSEUDO(S(PP*	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	dem	ART	*	der	sg	neut	-	(3
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Marchese	NN	*)	marchese	sg	neut	-	3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	geschickt	VVPP	*)	schicken	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	hier	ADV	*	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ein	ART	(NP*	ein	sg	masc	-	(24
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Brief	NN	*	brief	sg	masc	-	24)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	von	APPR	(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	der	ART	*	der	sg	fem	-	(11
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Gräfin	NE	*	gräfin	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Orsina	NE	*)))	orsina	sg	-	-	11)|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(NP*	der	sg	masc	-	(11
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Orsina	NE	*)	orsina	sg	masc	(MISC*)	11)|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Legt	VVFIN	(VROOT(PSEUDO(S*	legen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ihn	PPER	*	ihn	sg	masc	-	(24)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	hin	PTKVZ	*)	hin	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	sg	*	-	(1|(1
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	KAMMERDIENER	NE	*)	kammerdiener	sg	neut	-	1)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	1)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ihr	PPOSAT	(VROOT(PSEUDO(S(NP*	ihr	sg	masc	-	(25|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Läufer	NN	*)	läufer	sg	masc	-	25)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wartet	VVFIN	*)	warten	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(CS(S*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	will	VMFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	die	ART	(VP(NP*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Antwort	NN	*)	antwort	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	senden	VVINF	*))	senden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	wenn	KOUS	(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	einer	PIS	*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	bedarf	VVFIN	*))	bedürfen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Wo	PWAV	*	wo	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sie	PPER	*	sie	sg	fem	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	In	APPR	(VROOT(PSEUDO(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	der	ART	*	der	sg	fem	-	(26
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Stadt	NN	*)	stadt	sg	fem	-	26)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	oder	KON	(VROOT(PSEUDO(PP*	oder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	auf	APPR	*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ihrer	PPOSAT	*	ihr	sg	fem	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Villa	NN	*)	villa	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	sg	*	-	(1|(1
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	KAMMERDIENER	NE	*)	kammerdiener	sg	neut	-	1)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	1)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(S*	sie	sg	fem	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	gestern	ADV	(VP*	gestern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	die	ART	*	der	sg	fem	-	(26
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Stadt	NN	*)	stadt	sg	fem	-	26)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	gekommen	VVPP	*))	kommen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Desto	ADV	*	desto	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	schlimmer	ADJD	*	schlimm	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	–	CARD	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	besser	ADJD	*	gut	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	wollt	VMFIN	*	wollen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	sagen	VVINF	*	sagen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	So	ADV	(VROOT(PSEUDO(S*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	braucht	VVFIN	*	brauchen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	der	ART	(NP*	der	sg	masc	-	(25
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Läufer	NN	*	läufer	sg	masc	-	25)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	um	KOUI	(VP*	um	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	so	ADV	(NP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	weniger	PIS	*)	weniger	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	warten	VVINF	*))))	warten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(S(NP*	der	sg	masc	-	(1
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Kammerdiener	NN	*)	kammerdiener	sg	masc	-	1)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	geht	VVFIN	*	gehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ab	PTKVZ	*)	ab	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Meine	PPOSAT	(VROOT(PSEUDO(NP*	mein	sg	fem	-	(11|(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	teure	ADJA	*	teuer	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Gräfin	NN	*)	gräfin	sg	fem	-	11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Bitter	NN	(VROOT(PSEUDO(S*	bitter	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	indem	KOUS	*	indem	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	er	PPER	*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	den	ART	(NP*	der	sg	masc	-	(24
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Brief	NN	*)	brief	sg	masc	-	24)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	die	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Hand	NN	*)	hand	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	nimmt	VVFIN	*)	nehmen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	So	ADV	(VROOT(PSEUDO(CAP(AP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	gut	ADJD	*)	gut	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	als	KOKOM	(VP*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	gelesen	VVPP	*))	lesen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ihn	PPER	*	ihn	sg	masc	-	(24)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wieder	ADV	*	wieder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	wegwirft	VVFIN	*)	wegwerfen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Nun	ADV	(S*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ja	ADV	*)	ja	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ich	PPER	(S*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	habe	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	sie	PPER	(VP(VP*	sie	sg	fem	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	lieben	VVINF	*))	lieben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	geglaubt	VVPP	*))	glauben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	glaubt	VVFIN	*	glauben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	man	PIS	*	man	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nicht	PTKNEG	(NP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	alles	PIS	*))	alle	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Kann	VMFIN	*	können	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sein	VAINF	*	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	habe	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	sie	PPER	*	sie	sg	fem	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	auch	ADV	*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	wirklich	ADJD	*	wirklich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	geliebt	VVPP	*	lieben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Aber	KON	*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	–	$(	*	–	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	habe	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	sg	*	-	(1|(1
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	KAMMERDIENER	NE	*)))	kammerdiener	sg	neut	-	1)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	der	ART	*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	nochmals	ADV	*	nochmals	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	herein	ADV	*	herein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	tritt	VVFIN	*	treten	sg	-	-	1)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Der	ART	*	der	sg	masc	-	(2
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Maler	NN	*	maler	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Conti	NE	*	conti	sg	*	(PER*)	2)|(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	will	VMFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	die	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Gnade	NN	*	gnade	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	haben	VAINF	*	haben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	–	$.	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	–	XY	*	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Conti	NE	(VROOT(PSEUDO(MPN*	conti	*	*	(PER*)	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*)))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Recht	NN	(VROOT(PSEUDO(VP(NP*	recht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wohl	ADV	*	wohl	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	laßt	VVIMP	(S*	lassen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ihn	PPER	*	ihn	sg	masc	-	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	herein	PTKVZ	*))	herein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	kommen	VVINF	*)	kommen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Das	PDS	(S*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wird	VAFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mir	PPER	(VP*	sich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	andere	ADJA	(NP*	anderer	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Gedanken	NN	*)	gedanke	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	den	ART	*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Kopf	NN	*)	kopf	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	bringen	VVINF	*))	bringen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Steht	NN	(S*	stehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	auf	PTKVZ	*)	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Conti	NE	(VROOT(PSEUDO*	conti	sg	*	(PER*)	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(NP*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Prinz	NN	*)	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Guten	ADJA	(VROOT(PSEUDO(CNP(NP*	gute	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Morgen	NN	*)	morgen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Conti	NE	*)	conti	sg	*	(PER*)	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wie	PWAV	(VROOT(PSEUDO(S*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	leben	VVFIN	*	leben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*)	sie	pl	*	-	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	macht	VVFIN	*	machen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	die	ART	(NP*	der	sg	fem	-	(27
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Kunst	NN	*))	kunst	sg	fem	-	27)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CONTI	NE	(VROOT(PSEUDO*	conti	-	-	(LOC*)	(2|(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	2)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Prinz	NN	(VROOT(PSEUDO(S(NP*	prinz	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	die	ART	(NP*	der	sg	fem	-	(27
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Kunst	NN	*))	kunst	sg	fem	-	27)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	geht	VVFIN	*	gehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	nach	APPR	(PP*	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Brot	NN	*))	brot	sg	neut	-	(28)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Das	PDS	(VROOT(PSEUDO(CS(S*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	muß	VMFIN	*	müssen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sie	PPER	*	sie	*	*	-	(27)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*)	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	das	PDS	(S*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	soll	VMFIN	*	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	sie	PPER	*	sie	*	*	-	(27)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	–	PWS	(S*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	meinem	PPOSAT	*	mein	sg	neut	-	(29|(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	kleinen	ADJA	*	klein	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Gebiete	NN	*)	gebiet	pl	neut	-	29)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	gewiß	ADV	*	gewiß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	nicht	PTKNEG	*)))	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Aber	KON	(S*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	der	ART	(NP*	der	sg	masc	-	(2
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Künstler	NN	*)	künstler	sg	masc	-	2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	muß	VMFIN	*	müssen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	auch	ADV	(VP(VP*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	arbeiten	VVINF	*)	arbeiten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	wollen	VMINF	*))	wollen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CONTI	NE	(VROOT(PSEUDO*	conti	-	-	(LOC*)	(2|(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	2)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Arbeiten	NN	(VROOT(PSEUDO*	arbeit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Das	PDS	(VROOT(PSEUDO(S*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	seine	PPOSAT	(NP*	sein	sg	fem	-	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Lust	NN	*))	lust	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nur	ADV	(VROOT(PSEUDO(S(S(VP(AP*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	zu	PTKA	*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	viel	PIS	*)	viel	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	arbeiten	VVINF	*)	arbeiten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	müssen	VMFIN	*)	müssen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	kann	VMFIN	*	können	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ihn	PPER	(VP*	ihn	sg	masc	-	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	um	APPR	(PP*	um	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	den	ART	*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Namen	NN	*	name	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Künstler	NN	*)	künstler	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	bringen	VVINF	*))	bringen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(CS(S*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	meine	VVFIN	*	meinen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	nicht	PTKNEG	(NP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	vieles	PIS	*))	viele	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	sondern	KON	*	sondern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	viel	PIS	(CS(S*	viel	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	ein	ART	(NP*	ein	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	weniges	PIS	*))	wenig	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	aber	ADV	(S*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Fleiß	NN	*))))	fleiß	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	(S*	sie	pl	*	-	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	kommen	VVFIN	*	kommen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	doch	ADV	*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	leer	PTKVZ	*)	leer	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Conti	NE	*	conti	sg	*	(PER*)	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CONTI	NE	(VROOT(PSEUDO*	conti	-	-	(LOC*)	(2|(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	2)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S(S*	ich	sg	*	-	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	bringe	VVFIN	*	bringen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	das	ART	(NP*	der	sg	neut	-	(30
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Porträt	NN	*)	porträt	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	welches	PWS	(S*	welcher	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Sie	PPER	*	sie	sg	fem	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	mir	PPER	(VP*	sich	sg	*	-	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	befohlen	VVPP	*)	befehlen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	haben	VAFIN	*))	haben	pl	-	-	30)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	gnädiger	ADJA	(NP*	gnädig	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Herr	NN	*))	herr	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	bringe	VVFIN	*	bringen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	noch	ADV	(NP*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	eines	PIS	*	ein	sg	masc	-	(31
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	welches	PRELS	(S*	welcher	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Sie	PPER	*	sie	sg	fem	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	mir	PPER	*	sich	sg	*	-	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	befohlen	VVINF	*	befohlen	-	-	-	31)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	aber	ADV	(VP(VP(AVP*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	weil	KOUS	*)	weil	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	es	PPER	*	es	sg	neut	-	(31)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	gesehen	VVPP	*)	sehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	werden	VAINF	*))))	werden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	verdienet	VVPP	*)	verdienen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	–	$.	*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Jenes	PIS	*	jenes	sg	neut	-	(30)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Kann	VMFIN	*	können	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mich	PRF	*	mich	sg	-	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	doch	ADV	*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	kaum	ADV	*	kaum	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	erinnern	VVINF	*	erinnern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	–	XY	*	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CONTI	NE	(VROOT(PSEUDO*	conti	-	-	(LOC*)	(2|(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	2)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Die	ART	(VROOT(PSEUDO(NP*	der	sg	fem	-	(30|(11
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Gräfin	NN	*	gräfin	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Orsina	NE	*)	orsina	sg	-	-	30)|11)|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wahr	NN	(VROOT(PSEUDO*	wahr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Der	ART	(S(NP*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Auftrag	NN	*)	auftrag	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nur	ADV	*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ein	ART	(NP*	ein	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	wenig	PIS	*)	wenig	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	von	APPR	(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	lange	ADV	*	lange	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	her	APZR	*))	her	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CONTI	NE	(VROOT(PSEUDO*	conti	-	-	(LOC*)	(2|(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	2)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Unsere	PPOSAT	(VROOT(PSEUDO(S(NP*	unser	pl	masc	-	(11
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	schönen	ADJA	*	schön	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Damen	NN	*)	dame	pl	fem	-	11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sind	VAFIN	*	sein	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	alle	PIAT	(NP*	aller	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Tage	NN	*	tag	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	zum	APPRART	(PP*	zu	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Malen	NN	*)))	malen	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Die	ART	(VROOT(PSEUDO(S(NP*	der	sg	fem	-	(11
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Gräfin	NN	*)	gräfin	sg	fem	-	11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	hat	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	seit	APPR	(PP*	seit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	drei	CARD	*	drei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Monaten	NN	*)	monat	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	gerade	ADV	(VP(VP(VP(AVP*	gerade	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Einmal	ADV	*)	einmal	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	sich	PRF	*	sich	sg	-	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	entschließen	VVINF	*)	entschließen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	können	VMINF	*)	können	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	sitzen	VVINF	*)))	sitzen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wo	PWAV	(VROOT(PSEUDO(S*	wo	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sind	VAFIN	*	sein	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	die	ART	(NP*	der	pl	neut	-	(31|(30
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Stücke	NN	*))	stück	pl	neut	-	31)|30)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CONTI	NE	(VROOT(PSEUDO*	conti	-	-	(LOC*)	(2|(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	2)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	In	APPR	(VROOT(PSEUDO(S(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	dem	ART	*	der	sg	neut	-	(22
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Vorzimmer	NN	*)	vorzimmer	sg	neut	-	22)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ich	PPER	*	ich	sg	*	-	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	hole	VVFIN	*	holen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	sie	PPER	*)	sie	pl	masc	-	(30)|(31)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ihr	PPOSAT	(VROOT(PSEUDO(NP*	ihr	sg	neut	-	(30|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Bild	NN	*)	bild	sg	neut	-	30)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	mag	VMFIN	*	mögen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ihr	PPOSAT	(NP*	ihr	sg	neut	-	(30|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Bild	NN	*	bild	sg	neut	-	30)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ist	VAFIN	(S*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	sie	PPER	*	sie	sg	fem	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	doch	ADV	*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	nicht	PTKNEG	(AVP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	selber	ADV	*)))	selber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	vielleicht	ADV	*	vielleicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	find	ADJD	*	find	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	in	APPR	*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	dem	ART	*	der	sg	neut	-	(30
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Bilde	NN	*	bilde	sg	neut	-	30)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	wieder	ADV	*	wieder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	was	PWS	*	was	sg	neut	-	(32)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	in	APPR	*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	der	ART	*	der	sg	fem	-	(11
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	Person	NN	*	person	sg	fem	-	11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	mehr	ADV	*	mehr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	erblicke	VVFIN	*	erblicken	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ich	PPER	(S*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	will	VMFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	es	PPER	(VP*	es	sg	neut	-	(32)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	aber	ADV	*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	wiederfinden	VVINF	*))	wiederfinden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Der	ART	(NP*	der	sg	masc	-	(33
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	beschwerliche	ADJA	*)	beschwerlich	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Maler	NN	*	maler	sg	masc	-	33)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	glaube	VVFIN	*	glauben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	gar	ADV	*	gar	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	sie	PPER	(S*	sie	sg	fem	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	hat	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ihn	PPER	(VP*	ihn	sg	masc	-	(33)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	bestochen	VVPP	*)))	bestechen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Wär	XY	*	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	auch	ADV	*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wenn	KOUS	*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ihr	PPER	*	ihr	sg	neut	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ein	ART	*	ein	sg	neut	-	(34
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	anderes	ADJA	*	anderer	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Bild	NN	*	bild	sg	neut	-	34)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	das	PRELS	*	der	sg	neut	-	(34)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	mit	APPR	*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	andern	ADJA	*	anderer	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Farben	NN	*	farbe	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	auf	APPR	*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	einen	ART	*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	andern	ADJA	*	anderer	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Grund	NN	*	grund	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	gemalet	VVPP	*	gemalet	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	–	KON	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	in	APPR	*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	meinem	PPOSAT	*	mein	sg	neut	-	(35|(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	Herzen	NN	*	herz	sg	neut	-	35)
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	wieder	ADV	*	wieder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	Platz	NN	*	platz	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	machen	VVINF	*	machen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	will	VMFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	28	Wahrlich	ADV	*	wahrlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	29	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	30	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	31	glaube	VVFIN	*	glauben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	32	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	33	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	34	wär	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	35	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	36	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	37	zufrieden	ADJD	*	zufrieden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	38	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Als	KOUS	(VROOT(PSEUDO(S(S*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ich	PPER	*	ich	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	dort	ADV	*	dort	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	liebte	VVFIN	*)	lieben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	war	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	immer	ADV	(AP(AVP*	immer	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	so	ADV	*)	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	leicht	ADJD	*	leicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	so	ADV	(VP(AP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	fröhlich	ADJD	*)	fröhlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	ausgelassen	VVPP	*)))	ausgelassen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	KON	(VROOT(PSEUDO(S*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Nun	ADV	*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	bin	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	von	APPR	(NP(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	allem	PIS	*)	alle	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	das	ART	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Gegenteil	NN	*))	gegenteil	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Doch	KON	*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	nein	PTKANT	*	nein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nein	PTKANT	*	nein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	nein	PTKANT	*	nein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Behäglicher	ADJD	(VROOT(PSEUDO(S(CAP*	behäglicher	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	oder	KON	*	oder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nicht	PTKNEG	(AP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	behäglicher	ADJD	*))	behäglich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ich	PPER	*	ich	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	bin	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	so	ADV	(AP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	besser	ADJD	*))	gut	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(NP*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Prinz	NN	*)	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Conti	NE	(VROOT(PSEUDO(S(NP*	conti	sg	masc	(PER*)	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	den	ART	*	der	pl	masc	-	(31|(30
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Gemälden	NN	*))	gemälde	pl	masc	-	31)|30)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	wovon	PWAV	(S*	wovon	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	er	PPER	*	er	sg	masc	-	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	das	ART	(NP*	der	sg	neut	-	(30
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	eine	ART	(NP*	ein	sg	fem	-	30)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	verwandt	ADJD	(AP(AVP*	verwandt	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	gegen	APPR	*)	gegen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	einen	ART	*)	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Stuhl	NN	*))	stuhl	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	lehnet	VVFIN	*))	lehnen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CONTI	NE	(VROOT(PSEUDO*))	conti	-	-	-	(2)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	indem	KOUS	(VROOT(PSEUDO(S*	indem	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	er	PPER	*	er	sg	masc	-	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	das	ART	(NP*	der	sg	neut	-	(31
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	andere	PIS	*)	anderer	sg	neut	-	31)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	zurecht	ADV	*	zurecht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	stellet	VVFIN	*)	stellen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	bitte	VVFIN	*	bitte	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Prinz	NN	*	prinz	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Sie	PPER	*	sie	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	die	ART	(VP(NP*	der	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Schranken	NN	*	schranke	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	unserer	PPOSAT	(NP*	unser	sg	fem	-	(27|(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Kunst	NN	*))	kunst	sg	fem	-	27)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	erwägen	VVINF	*)	erwägen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	wollen	VMFIN	*))	wollen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Vieles	PIS	*	viele	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	von	APPR	*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	dem	ART	*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Anzüglichsten	NN	*	anzüglichster	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	der	ART	*	der	sg	masc	-	(36
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Schönheit	NN	*	schönheit	sg	masc	-	36)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	liegt	VVFIN	*	liegen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ganz	ADV	*	ganz	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	außer	APPR	*	außer	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	den	ART	*	der	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Grenzen	NN	*	grenze	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	derselben	PDS	*	derselbe	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Treten	VVFIN	(S*	treten	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*	sie	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	so	ADV	*)	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)))	prinz	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	nach	APPR	(VROOT(PSEUDO(PP*	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	einer	ART	*	ein	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	kurzen	ADJA	*	kurz	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Betrachtung	NN	*)	betrachtung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Vortrefflich	ADJD	(VROOT(PSEUDO(S*	vortrefflich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Conti	NE	(NP*	conti	sg	*	(PER*)	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	–	XY	(S*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ganz	ADV	*	ganz	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	vortrefflich	ADJD	*)))	vortrefflich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Das	PDS	(S*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	gilt	VVFIN	*	gelten	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Ihrer	PPOSAT	(NP*	ihr	sg	fem	-	(27|(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Kunst	NN	*)	kunst	sg	fem	-	27)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Ihrem	PPOSAT	(NP*	ihr	sg	masc	-	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Pinsel	NN	*))	pinsel	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Aber	KON	*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	geschmeichelt	VVPP	(S(CVP*	gesmeicheln	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Conti	NE	(S*	conti	sg	*	(PER*)	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ganz	ADV	(VP(AP*	ganz	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	unendlich	ADJD	*)	unendlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	geschmeichelt	VVPP	*))))	gesmeicheln	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CONTI	NE	(VROOT(PSEUDO*	conti	-	-	(LOC*)	(2|(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	2)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Das	ART	*	der	sg	neut	-	(11
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Original	NN	*	original	sg	neut	-	11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	schien	VVFIN	*	scheinen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	dieser	PDAT	*	dieser	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Meinung	NN	*	meinung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	zu	PTKZU	*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	sein	VAINF	*	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Auch	ADV	(VROOT(PSEUDO(S*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	der	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Tat	NN	*)	tat	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	nicht	PTKNEG	(VP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	mehr	ADV	*	mehr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	geschmeichelt	VVPP	*)	gesmeicheln	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	als	KOUS	(S*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	die	ART	(NP*	der	sg	fem	-	(37
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Kunst	NN	*)	kunst	sg	fem	-	37)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	schmeicheln	VVINF	*	schmeicheln	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	muß	VMFIN	*))	müssen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Die	ART	(VROOT(PSEUDO(CS(S(NP*	der	sg	fem	-	(37
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Kunst	NN	*)	kunst	sg	fem	-	37)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	muß	VMFIN	*	müssen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	malen	VVINF	(VP*	malen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	wie	PWAV	(S*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	sich	PRF	*	sich	sg	-	-	(38)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	die	ART	(NP*	der	sg	fem	-	(38
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	plastische	ADJA	*	plastisch	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Natur	NN	*))))	natur	sg	fem	-	38)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	–	KON	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	wenn	KOUS	(S(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	eine	PIS	*	ein	sg	fem	-	(38)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	gibt	VVFIN	*	geben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	–	PPER	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	das	ART	(NP*	der	sg	neut	-	(30
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	Bild	NN	*)	bild	sg	neut	-	30)
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	dachte	VVFIN	*	denken	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	ohne	APPR	(PP*	ohne	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	den	ART	*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	Abfall	NN	*))	abfall	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	welchen	VVFIN	*	welcher	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	der	ART	(NP*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	widerstrebende	ADJA	*	widerstrebend	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	28	Stoff	NN	*)	stoff	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	29	unvermeidlich	ADJD	*	unvermeidlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	30	macht	VVFIN	*	machen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	31	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	32	ohne	APPR	(PP*	ohne	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	33	das	ART	*	der	sg	neut	-	(39
Emilia.xml.rksp.0.CoNLL2012.conll	000	34	Verderb	NN	*	verderb	sg	neut	-	39)
Emilia.xml.rksp.0.CoNLL2012.conll	000	35	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	36	mit	APPR	(S(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	37	welchem	PRELS	*)	welcher	sg	neut	-	(39)
Emilia.xml.rksp.0.CoNLL2012.conll	000	38	die	ART	(NP*	der	sg	fem	-	(40
Emilia.xml.rksp.0.CoNLL2012.conll	000	39	Zeit	NN	*	zeit	sg	fem	-	40)
Emilia.xml.rksp.0.CoNLL2012.conll	000	40	dagegen	PROAV	*)	dagegen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	41	an	APPR	(PP*	an	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	42	kämpfet	ADJD	*)))))	kämpfen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	43	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(S(NP*	der	sg	masc	-	(2
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	denkende	ADJA	*	denkend	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Künstler	NN	*)	künstler	sg	masc	-	2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	noch	ADV	(AP*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	eins	PIS	(NP*	eins	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	so	ADV	(NP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	viel	PIS	*))	viel	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	wert	ADJD	*))	wert	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Aber	KON	(S*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	das	ART	(NP*	der	sg	neut	-	(11
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Original	NN	*)	original	sg	neut	-	11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	sagen	VVFIN	*)	sagen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Sie	PPER	(S*	sie	pl	*	-	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	fand	VVFIN	*)	finden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	dem	ART	(S(ISU*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	ungeachtet	APPR	*	ungeachtet	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	–	NN	*))))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CONTI	NE	(VROOT(PSEUDO*	conti	-	-	(LOC*)	(2|(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	2)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Verzeihen	VVFIN	(VROOT(PSEUDO(NP(S*	verzeihen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*)	sie	pl	*	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Prinz	NN	*)	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Das	ART	(VROOT(PSEUDO(S(NP*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Original	NN	*)	original	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	eine	ART	(NP*	ein	sg	fem	-	(11
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Person	NN	*	person	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	die	PRELS	(S*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	meine	PPOSAT	(NP*	mein	sg	fem	-	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Ehrerbietung	NN	*)	ehrerbietung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	fodert	VVFIN	*)))	fodern	sg	-	-	11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	habe	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	nichts	PIAT	(NP*	nichts	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Nachteiliges	NN	*)	nachteilige	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	von	APPR	(VP(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ihr	PPER	*)	ihr	sg	fem	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	äußern	VVINF	*)	äußern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	wollen	VMFIN	*)	wollen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	So	ADV	(VROOT(PSEUDO(S(NP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	viel	PIS	*	viel	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	als	KOKOM	(NP*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Ihnen	PPER	*))	ihnen	pl	*	-	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	beliebt	ADJD	*)	belieben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	was	PWS	(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sagte	VVFIN	*	sagen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	das	ART	(NP*	der	sg	neut	-	(11
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Original	NN	*))	original	sg	neut	-	11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CONTI	NE	(VROOT(PSEUDO*	conti	-	-	(LOC*)	(2|(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	2)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S(S*	ich	sg	*	-	(11)|(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	bin	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	zufrieden	ADJD	*)	zufrieden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	sagte	VVFIN	*	sagen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	die	ART	(NP*	der	sg	fem	-	(11
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Gräfin	NE	*)	gräfin	sg	fem	-	11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	wenn	KOUS	(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	ich	PPER	*	ich	sg	*	-	(11)|(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	häßlicher	ADJD	*	häßlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	aussehe	VVFIN	*))	aussehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nicht	PTKNEG	(VROOT(PSEUDO(AP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	häßlicher	ADJD	*)	häßlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	O	NE	*	O	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	das	ART	(NP*	der	sg	neut	-	(11
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	wahre	ADJA	*)	wahr	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Original	NN	*	original	sg	neut	-	11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CONTI	NE	(VROOT(PSEUDO*	conti	-	-	(LOC*)	(2|(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	2)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	mit	APPR	*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	einer	ART	*	ein	sg	fem	-	(41
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Miene	NN	*	miene	sg	fem	-	41)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	sagte	VVFIN	*	sagen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	sie	PPER	*	sie	sg	fem	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	das	PDS	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	–	$(	*	–	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	von	APPR	*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	der	ART	*	der	sg	fem	-	(41)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	freilich	ADV	*	freilich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	dieses	PDAT	*	dieser	sg	neut	-	(30
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	ihr	PPOSAT	*	ihr	sg	neut	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Bild	NN	*	bild	sg	neut	-	30)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	keine	PIAT	*	kein	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	Spur	NN	*	Spur	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	keinen	PIAT	*	kein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	Verdacht	NN	*	verdacht	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	zeiget	VVFIN	*	zeigen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Das	PDS	*	der	sg	neut	-	(42)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	meint	VVFIN	*	meinen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ja	ADV	*	ja	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	das	PDS	*	der	sg	neut	-	(42)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	eben	ADV	*	eben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	worin	PWAV	*	worin	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	die	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	unendliche	ADJA	*	unendlich	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	Schmeichelei	NN	*	schmeichelei	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	finde	VVFIN	*	finden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	O	XY	*	O	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	(S(S*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	kenne	VVFIN	*	kennen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	sie	PPER	*)	sie	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	jene	PDAT	(NP*	jener	pl	masc	-	(41
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	stolze	ADJA	*	stolz	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	höhnische	ADJA	*	höhnisch	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Miene	NN	*	miene	pl	masc	-	41)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	die	PRELS	(S*	der	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	auch	ADV	(VP(NP*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	das	ART	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	Gesicht	NN	*	gesicht	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	einer	ART	(NP*	ein	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	Grazie	NN	*))	grazie	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	entstellen	VVINF	*)	entstellen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	würde	VAFIN	*)))	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ich	PPER	(S*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	leugne	VVFIN	*	leugnen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ein	ART	(NP*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	schöner	ADJA	*	schön	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Mund	NN	*)	mund	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	der	PRELS	(S*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	sich	PRF	(VP*	sich	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	ein	ART	(NP*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	wenig	PIS	*)	wenig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	spöttisch	ADJD	*	spöttisch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	verziehet	VVPP	*))))	verziehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	nicht	PTKNEG	(AP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	selten	ADJD	*	selten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	um	KOUI	(S(AVP*	um	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	so	ADV	*)	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	viel	ADV	(AP*	viel	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	schöner	ADJD	*)	schön	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	ist	VAFIN	*))	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Aber	KON	(VROOT(PSEUDO(S*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wohl	ADV	(VP*	wohl	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	gemerkt	VVPP	*	merken	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ein	ART	(S(NP*	ein	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	wenig	PIS	*)	wenig	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	die	ART	(NP*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Verziehung	NN	*)))	verziehung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	muß	VMFIN	*	müssen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	bis	APPR	(VP(PP*	bis	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	zur	APPRART	*	zu	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Grimasse	NN	*)	grimasse	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	gehen	VVINF	*)	gehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	wie	KOKOM	(PP*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	bei	APPR	*	bei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	dieser	PDAT	*	dieser	sg	fem	-	(11
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	Gräfin	NN	*))	gräfin	sg	fem	-	11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Augen	NN	*	auge	pl	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	müssen	VMFIN	*	müssen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	über	APPR	*	über	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	den	ART	*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	wollüstigen	ADJA	*	wollüstig	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Spötter	NN	*	spötter	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	die	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Aufsicht	NN	*	aufsicht	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	führen	VVFIN	*	führen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	–	$(	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Augen	NN	*	auge	pl	neut	-	(43)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	wie	PWAV	*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	sie	PPER	*	sie	pl	masc	-	(43)
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	die	ART	*	der	sg	fem	-	(11
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	gute	ADJA	*	gut	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	Gräfin	NN	*	gräfin	sg	fem	-	11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	nun	ADV	*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	gerade	ADV	*	gerade	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	gar	ADV	*	gar	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	hat	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Auch	ADV	(VROOT(PSEUDO(S*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	nicht	PTKNEG	(AVP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	einmal	ADV	*)	einmal	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	hier	ADV	*	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	im	APPRART	(PP*	in	sg	neut	-	(30
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Bilde	NN	*)	bilde	sg	neut	-	30)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	hat	VAFIN	*)	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CONTI	NE	(VROOT(PSEUDO*	conti	-	-	(LOC*)	(2|(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	2)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Gnädiger	ADJA	(VROOT(PSEUDO*	gnädig	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Herr	NN	(PP*	herr	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	(S*	ich	sg	*	-	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	bin	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	äußerst	ADV	(VP*	äußerst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	betroffen	VVPP	*)))	betreffen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	–	XY	*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	worüber	PWAV	*	worüber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Alles	PIS	(VROOT(PSEUDO(S(NP(NP*	alle	sg	neut	-	(44
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	was	PRELS	(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	die	ART	(VP(NP*	der	sg	fem	-	(37
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Kunst	NN	*	kunst	sg	fem	-	37)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	aus	APPR	(PP*	aus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	den	ART	*	der	pl	masc	-	(43
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	großen	ADJA	*	groß	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	hervorragenden	ADJA	(AP*	hervorragend	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	stieren	VVFIN	(S*	stieren	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	starren	ADJA	(NP*	starr	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Medusenaugen	NN	*	medusenaugen	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	der	ART	(NP*	der	pl	fem	-	(11
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	Gräfin	NE	*))))	gräfin	pl	fem	-	43)|11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	Gutes	NN	*))	gute	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	machen	VVINF	*)	machen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	kann	VMFIN	*))	können	sg	-	-	44)
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	das	PDS	*)	der	sg	neut	-	(44)
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	haben	VAFIN	*	haben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	Sie	PPER	(VP(NP*	sie	pl	*	-	(2
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	Conti	NE	*)	conti	sg	*	(PER*)	2)|(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	redlich	ADJD	(AP*	redlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	28	daraus	PROAV	*)	daraus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	29	gemacht	VVPP	*))	machen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	30	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Redlich	NN	*	redlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sag	VVFIN	*	sag	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Nicht	PTKNEG	(AVP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	so	ADV	*)	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	redlich	ADJD	(DL*	redlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	wäre	VAFIN	(S*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	redlicher	ADJD	*))	redlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Denn	KON	(VROOT(PSEUDO(S*	denn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sagen	VVFIN	*	sagen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	(NP*	sie	pl	*	-	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	selbst	ADV	*)	selbst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Conti	NE	(S*	conti	sg	*	(PER*)	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	läßt	VVFIN	*	lassen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	sich	PRF	*	sich	sg	-	-	(45)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	aus	APPR	(PP*	aus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	diesem	PDAT	*	dieser	sg	neut	-	(30
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Bilde	NN	*)	bilde	sg	neut	-	30)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	wohl	ADV	(VP*	wohl	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	der	ART	(NP*	der	sg	masc	-	(45
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Charakter	NN	*	charakter	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	der	ART	(NP*	der	sg	fem	-	(11
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	Person	NN	*))	person	sg	fem	-	45)|11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	schließen	VVINF	*)))	schließen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	das	PDS	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sollte	VMFIN	*	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	doch	ADV	*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Stolz	ADJD	(VROOT(PSEUDO(S*	stolz	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	haben	VAFIN	*	haben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*	sie	pl	*	-	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	in	APPR	(VP(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Würde	NN	(CNP*	werden	sg	fem	(LOC*)	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Hohn	NN	(NP*	hohn	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Lächeln	NN	*))	lächeln	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Ansatz	NN	*))	ansatz	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	zu	APPR	(PP*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	trübsinniger	ADJA	*	trübsinnig	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Schwärmerei	NN	*)	schwärmerei	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	sanfte	ADJA	*	sanft	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	Schwermut	NN	*)	schwermut	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	verwandelt	VVPP	*))	verwandeln	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CONTI	NE	(VROOT(PSEUDO*))	conti	-	-	-	(2)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	etwas	ADV	(VROOT(PSEUDO(AP*	etwas	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ärgerlich	ADJD	*)	ärgerlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ah	XY	(VROOT(PSEUDO*	ah	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mein	PPOSAT	(NP*	mein	sg	masc	-	(0|(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Prinz	NN	*	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	–	VAFIN	(CS(S*	–	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	wir	PPER	*	wir	pl	*	-	(46|(2
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Maler	NN	(VP*	maler	pl	-	-	46)|2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	rechnen	VVINF	*)	rechnen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	darauf	PROAV	*	darauf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	das	ART	(NP*	der	sg	neut	-	(30|(47
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	fertige	ADJA	*	fertig	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Bild	NN	*)	bild	sg	neut	-	30)|47)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	den	ART	(NP*	der	sg	masc	-	(0|(48
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	Liebhaber	NN	*)	liebhaber	sg	masc	-	0)|48)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	noch	ADV	*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	eben	ADV	(AVP*	eben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	so	ADV	*)	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	warm	ADJD	*	warm	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	findet	VVFIN	*))	finden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	als	KOKOM	(S*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	warm	ADJD	*	warm	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	er	PPER	*	er	sg	masc	-	(0)|(48)
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	es	PPER	*	es	sg	neut	-	(30)|(47)
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	bestellte	VVFIN	*)))	bestellen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	28	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wir	PPER	(VROOT(PSEUDO(CS(S*	wir	pl	*	-	(46)|(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	malen	VVFIN	*	malen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Augen	NN	*	auge	pl	neut	-	(49
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	der	ART	(NP*	der	sg	fem	-	(50
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Liebe	NN	*)))	liebe	sg	fem	-	49)|50)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Augen	NN	(S(NP*	auge	pl	neut	-	(49
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	der	ART	(NP*	der	sg	fem	-	(50
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Liebe	NN	*))	liebe	sg	fem	-	49)|50)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	müßten	VMFIN	*	müssen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	uns	PPER	(VP*	uns	pl	*	-	(46)|(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	auch	ADV	*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	nur	ADV	*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	beurteilen	VVINF	*)))	beurteilen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Je	ADV	(VROOT(PSEUDO(NP(AVP*	je	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	nun	ADV	*)	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Conti	NE	*	conti	sg	*	(PER*)	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	;	$.	*)	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	–	XY	*	–	sg	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	warum	PWAV	(S*	warum	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	kamen	VVFIN	*	kommen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Sie	PPER	*	sie	pl	*	-	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	nicht	PTKNEG	*)	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	einen	ART	(NP*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Monat	NN	*	monat	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	früher	ADJD	(AP*	früh	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	damit	PROAV	*))	damit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Setzen	NN	(S*	setzen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*	sie	pl	*	-	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	weg	PTKVZ	*)	weg	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Was	PWS	(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	das	ART	(NP*	der	sg	neut	-	(31
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	andere	ADJA	*	anderer	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Stück	NN	*))	stück	sg	neut	-	31)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CONTI	NE	(VROOT(PSEUDO*))	conti	-	-	-	(2)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	indem	KOUS	(VROOT(PSEUDO(CS(S*	indem	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	er	PPER	*	er	sg	masc	-	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	es	PPER	*	es	sg	neut	-	(31)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	holt	VVFIN	*)	holen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	noch	ADV	(S*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	verkehrt	ADJD	*	verkehren	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	der	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Hand	NN	*)	hand	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	hält	VVFIN	*))	halten	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Auch	ADV	(VROOT(PSEUDO(NP*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ein	ART	*	ein	sg	neut	-	(8|(31
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	weibliches	ADJA	*	weiblich	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Porträt	NN	*)	porträt	sg	neut	-	8)|31)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	So	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	möcht	VMFIN	*	möchen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	es	PPER	*	es	sg	neut	-	(31)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	bald	ADV	*	bald	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	–	NN	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	lieber	ADV	*	lieber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	gar	ADV	*	gar	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	sehen	VVINF	*	sehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Denn	KON	(VROOT(PSEUDO(S*	denn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	dem	ART	(NP*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Ideal	NN	*	ideal	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	hier	ADV	*)	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	dem	ART	*	der	sg	masc	-	(51
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Finger	NN	*	finger	sg	masc	-	51)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	auf	APPR	(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	die	ART	*	der	sg	fem	-	(52
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Stirne	NN	*)))	stirne	sg	fem	-	52)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	oder	KON	*	oder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	vielmehr	ADV	(PP(AVP*	vielmehr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	hier	ADV	*	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	dem	ART	*	der	sg	masc	-	(51
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Finger	NN	*))	finger	sg	masc	-	51)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	auf	APPR	*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	das	ART	*	der	sg	neut	-	(35
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Herz	NN	*)	herz	sg	neut	-	35)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	kömmt	VVFIN	(VROOT(PSEUDO(S*	kömmen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	es	PPER	*	es	sg	neut	-	(31)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	doch	ADV	(AVP*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*)	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	bei	PTKVZ	*)	bei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ich	PPER	(S*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wünschte	VVFIN	*	wünschen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Conti	NE	(VP(NP*	conti	sg	*	(PER*)	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Ihre	PPOSAT	(NP*	ihr	sg	fem	-	(27|(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Kunst	NN	*))	kunst	sg	fem	-	27)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	andern	ADJA	*	anderer	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Vorwürfen	NN	*)	vorwurf	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	bewundern	VVINF	*)))	bewundern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CONTI	NE	(VROOT(PSEUDO*	conti	-	-	(LOC*)	(2|(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	2)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Eine	ART	*	ein	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	bewundernswürdigere	ADJA	*	bewundernswürdig	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Kunst	NN	*	kunst	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	gibt	VVFIN	*	geben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	aber	KON	*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	sicherlich	ADV	*	sicherlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	keinen	PIS	*	kein	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	bewundernswürdigern	VVINF	*	bewundernswürdigern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Gegenstand	NN	*	gegenstand	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	als	KOKOM	*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	diesen	PDS	*	dieser	sg	masc	-	(8)|(31)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	So	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wett	ADJD	*	wett	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Conti	NE	*	conti	sg	-	(PER*)	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	daß	KOUS	*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	es	PPER	*	es	sg	neut	-	(8)|(31)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	des	ART	*	der	sg	masc	-	(2
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Künstlers	NN	*	künstler	sg	masc	-	2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	eigene	ADJA	*	eigen	pl	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Gebieterin	NN	*	gebieterin	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Indem	NN	*	indem	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	der	ART	(S(NP*	der	sg	masc	-	(2
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Maler	NN	*	maler	sg	masc	-	2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	das	ART	(NP*	der	sg	neut	-	(31
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Bild	NN	*))	bild	sg	neut	-	31)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	umwendet	VVFIN	*)	umwenden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Was	PWS	*	was	sg	neut	-	(8)|(31)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	seh	XY	*	seh	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ihr	PPOSAT	(VROOT(PSEUDO(CNP(NP*	ihr	sg	masc	-	(31|(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Werk	NN	*)	werk	sg	masc	-	31)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Conti	NE	*)	conti	sg	*	(PER*)	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	oder	KON	(VROOT(PSEUDO(S*	oder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	das	ART	(NP*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Werk	NN	*)	werk	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	meiner	PPOSAT	(NP*	mein	sg	fem	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Phantasie	NN	*))	phantasie	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Emilia	NE	(NP*	emilia	*	*	-	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Galotti	NE	*)	galotti	sg	*	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CONTI	NE	(VROOT(PSEUDO*	conti	-	-	(LOC*)	(2|(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	2)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wie	PWAV	(VROOT(PSEUDO(S*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mein	PPOSAT	(NP*	mein	sg	masc	-	(0|(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Prinz	NN	*))	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(S*	sie	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	kennen	VVFIN	*	kennen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	diesen	PDAT	(NP*	dieser	sg	masc	-	(8
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Engel	NN	*))	engel	sg	masc	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)))	prinz	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	indem	KOUS	(VROOT(PSEUDO(CS(S*	indem	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	er	PPER	*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sich	PRF	(VP*	sich	sg	-	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	fassen	VVINF	*))	fassen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	sucht	VVFIN	*)	suchen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	aber	ADV	(VP*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	ohne	APPR	(PP*	ohne	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	ein	ART	*	ein	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Auge	NN	*	auge	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	von	APPR	(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	dem	ART	*	der	sg	neut	-	(31
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Bilde	NN	*))	bilde	sg	neut	-	31)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	verwenden	VVINF	*)))	verwenden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	So	ADV	(VROOT(PSEUDO(VP(AP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	halb	ADJD	*))	halb	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	um	KOUI	(VP*	um	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sie	PPER	*	sie	pl	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	eben	ADV	*	eben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	wieder	ADV	*	wieder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	kennen	VVINF	*))	kennen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Es	PPER	(NP(S*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	einige	PIAT	(NP*	einiger	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Wochen	NN	*)	woche	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	her	PTKVZ	*)	her	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	als	KOUS	(S*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	sie	PPER	*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	ihrer	PPOSAT	*	ihr	sg	fem	-	(53|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Mutter	NN	*)	mutter	sg	fem	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	einer	ART	*	ein	sg	fem	-	(54
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	Vegghia	NN	*)	vegghia	sg	fem	-	54)
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	traf	VVFIN	*))	treffen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Nachher	NN	*	nachher	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ist	VAFIN	(S*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sie	PPER	*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	mir	PPER	(VP*	sich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	nur	ADV	(PP*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	an	APPR	*	an	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	heiligen	ADJA	*	heilig	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Stätten	NN	*)	stätte	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	wieder	ADV	*	wieder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	vorgekommen	VVPP	*)	vorkommen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	–	$.	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	wo	PWAV	(S*	wo	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	das	ART	(NP*	der	sg	neut	-	(55
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	Angaffen	NN	*)	angaffen	sg	neut	-	55)
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	sich	PRF	*	sich	sg	-	-	(55)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	weniger	ADV	*	weniger	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	ziemet	VVFIN	*))	ziemet	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Auch	ADV	*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	kenn	ADV	*	kenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ihren	PPOSAT	*	ihr	sg	masc	-	(12|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Vater	NN	*	vater	sg	masc	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Er	PPER	(VROOT(PSEUDO(S*	er	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mein	PPOSAT	(NP*	mein	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Freund	NN	*)	freund	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nicht	PTKNEG	*)	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Er	PPER	*	er	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	war	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	der	PRELS	*	der	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	sich	PRF	*	sich	sg	-	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	meinen	VVFIN	*	mein	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Ansprüchen	NN	*	anspruch	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	auf	APPR	*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Sabionetta	NE	*	sabionetta	sg	neut	(LOC*)	(56)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	am	PTKA	*	an	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	meisten	PIS	*	meister	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	widersetzte	VVFIN	*	widersetzen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ein	ART	(NP*	ein	sg	masc	-	(12
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	alter	ADJA	*	alt	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Degen	NN	*)	degen	sg	masc	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	stolz	ADJD	(S(CAP*	stolz	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	rauh	ADJD	*)	rauh	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	sonst	ADV	*	sonst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	bieder	ADV	*	bieder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	und	KON	(AVP*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	gut	ADV	*))	gut	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CONTI	NE	(VROOT(PSEUDO*	conti	-	-	(LOC*)	(2|(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	2)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(NP*	der	sg	masc	-	(12
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Vater	NN	*)	vater	sg	masc	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Aber	KON	(VROOT(PSEUDO(S*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	hier	ADV	*	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	haben	VAFIN	*	haben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	wir	PPER	*	wir	pl	*	-	(0)|(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	seine	PPOSAT	(NP*	sein	pl	neut	-	(31|(8|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Tochter	NN	*))	tochter	*	*	-	31)|8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Bei	APPR	(VROOT(PSEUDO(PP*	bei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Gott	NN	*)	gott	sg	masc	-	(57)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	wie	PWAV	(VROOT(PSEUDO(VP*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	aus	APPR	(PP*	aus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	dem	ART	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Spiegel	NN	*)	spiegel	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	gestohlen	VVPP	*)	stehlen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Noch	ADV	(VROOT(PSEUDO(VP(NP(AP(AVP*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	immer	ADV	*)	immer	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	die	ART	*)	der	pl	neut	-	(58
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Augen	NN	*)	auge	pl	neut	-	58)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	auf	APPR	(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	das	ART	*	der	sg	neut	-	(31
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Bild	NN	*)	bild	sg	neut	-	31)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	geheftet	VVPP	*)	heften	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	O	ITJ	(VROOT(PSEUDO(S*	O	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*	sie	pl	*	-	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	wissen	VVFIN	*	wissen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ja	ADV	*	ja	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	wohl	ADV	*	wohl	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Conti	NE	*	conti	sg	*	(PER*)	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	man	PIS	*	man	sg	*	-	(17)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	den	ART	(NP*	der	sg	masc	-	(59|(2
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Künstler	NN	*)	künstler	sg	masc	-	59)|2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	dann	ADV	*	dann	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	erst	ADV	(AVP*	erst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	recht	ADV	*)	recht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	lobt	VVFIN	*	loben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	wenn	KOUS	(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	man	PIS	*	man	sg	*	-	(17)
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	über	APPR	(PP*	über	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	sein	PPOSAT	*	sein	-	-	-	(31|(59)
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	Werk	NN	*)	werk	-	-	-	31)
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	sein	PPOSAT	(NP*	sein	-	-	-	(17)
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	Lob	NN	*)	lob	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	vergißt	VVFIN	*)))	vergessen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CONTI	NE	(VROOT(PSEUDO*	conti	-	-	(LOC*)	(2|(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	2)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Gleichwohl	ADV	(VROOT(PSEUDO(S*	gleichwohl	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	hat	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mich	PPER	*	mich	sg	*	-	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	dieses	PDAT	(NP*	dieser	sg	neut	-	(31)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	noch	ADV	(AP*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	sehr	ADV	*)	sehr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	unzufrieden	ADJD	(PP*	unzufrieden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	mit	APPR	*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	mir	PPER	*))	sich	sg	*	-	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	gelassen	VVPP	*)	lassen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Und	KON	(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	doch	ADV	*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	bin	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ich	PPER	*	ich	sg	*	-	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	wiederum	ADV	*)	wiederum	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	sehr	ADV	(S(AP*	sehr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	zufrieden	ADJD	*)	zufrieden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	meiner	PPOSAT	*	mein	sg	fem	-	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Unzufriedenheit	NN	*)	unzufriedenheit	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	mir	PPER	*)	sich	sg	*	-	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	selbst	ADV	*)	selbst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ha	NE	*	ha	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	daß	KOUS	(VROOT(PSEUDO(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wir	PPER	*	wir	pl	*	-	(2)|(46)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	nicht	PTKNEG	(AVP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	unmittelbar	ADJD	*)	unmittelbar	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	mit	APPR	(VP(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	den	ART	*	der	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Augen	NN	*)	auge	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	malen	VVINF	*))	mal	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Auf	APPR	(VROOT(PSEUDO(VP(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	dem	ART	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	langen	ADJA	*	lang	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Wege	NN	*	weg	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	aus	APPR	(S(PP*	aus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	dem	PRELS	*)	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Auge	NN	(NP*	auge	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	durch	APPR	(PP*	durch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	den	ART	*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Arm	NN	*))	arm	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	den	ART	*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Pinsel	NN	*)	pinsel	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	wie	PWAV	(S*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	viel	PIS	*	viel	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	geht	VVFIN	*)))	gehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	da	ADV	*	da	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	verloren	VVPP	*)	verlieren	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Aber	KON	(NP*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	wie	PWAV	(S*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ich	PPER	*	ich	sg	*	-	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	sage	VVFIN	*	sagen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	ich	PPER	*	ich	sg	*	-	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	weiß	VVFIN	*	weiß	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	was	PWS	(S*	was	sg	neut	-	(60)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	hier	ADV	(VP*	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	verloren	VVPP	*)	verlieren	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	gegangen	VVPP	*	gehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	und	KON	(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	wie	PWAV	(S*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	es	PPER	*	es	sg	neut	-	(60)
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	verloren	ADJD	(CVP(VP*	verlieren	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	gegangen	VVPP	*)	gehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	warum	PWAV	(VP(VP(VP*	warum	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	es	PPER	*	es	sg	neut	-	(60)
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	verloren	VVPP	*)	verlieren	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	gehen	VVINF	*)	gehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	28	müssen	VMINF	*))	müssen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	29	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	30	darauf	PROAV	(S*	darauf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	31	bin	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	32	ich	PPER	*	ich	sg	*	-	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	33	eben	ADV	(CAP(AP*	eben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	34	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	35	stolz	ADJD	*)	stolz	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	36	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	37	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	38	stolzer	ADJD	*)))	stolz	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	39	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	40	als	KOUS	*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	41	ich	PPER	*	ich	sg	*	-	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	42	auf	APPR	(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	43	alles	PIS	*))))))	alle	sg	neut	-	(61
Emilia.xml.rksp.0.CoNLL2012.conll	000	44	das	ART	*	der	sg	neut	-	61)
Emilia.xml.rksp.0.CoNLL2012.conll	000	45	bin	VAFIN	(S*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	46	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	47	was	PWS	(S*	was	sg	neut	-	(61)
Emilia.xml.rksp.0.CoNLL2012.conll	000	48	ich	PPER	*	ich	sg	*	-	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	49	nicht	PTKNEG	(VP(VP(VP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	50	verloren	VVPP	*)	verloren	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	51	gehen	VVINF	*)	gehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	52	lassen	VVINF	*)))	lassen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	53	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Denn	KON	(VROOT(PSEUDO(S*	denn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	aus	APPR	(PP*	aus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	jenem	PDAT	*	jener	sg	neut	-	(31)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	erkenne	VVFIN	(S*	erkennen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ich	PPER	*	ich	sg	*	-	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	mehr	PIS	(NP*	mehr	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	als	KOKOM	(PP*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	aus	APPR	*	aus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	diesem	PDS	*	dieser	sg	masc	-	(30)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	ich	PPER	*	ich	sg	*	-	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	wirklich	ADJD	*	wirklich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	ein	ART	(NP*	ein	sg	masc	-	(62
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	großer	ADJA	*	groß	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	Maler	NN	*)	maler	sg	masc	-	62)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	bin	VAFIN	*)))	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	es	PPER	*	es	sg	neut	-	(62)
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	aber	ADV	*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	meine	VVFIN	*))	mein	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	Hand	NN	*	hand	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	nur	ADV	*)	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	immer	ADV	*	immer	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	ist	VAFIN	*)	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	28	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Oder	KON	(S*	oder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	meinen	VVFIN	*	meinen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Sie	PPER	*)	sie	pl	*	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Prinz	NN	(NP*	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	daß	KOUS	(CS(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Raphael	NE	*	raphael	sg	neut	(PER*)	(63)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	nicht	PTKNEG	(VP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	das	ART	(NP*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	größte	ADJA	*	groß	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	malerische	ADJA	*	malerisch	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Genie	NN	*)	genie	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	gewesen	VAPP	*)	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	wäre	VAFIN	*)	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	wenn	KOUS	(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	er	PPER	*	er	sg	masc	-	(63)
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	unglücklicher	ADJA	(NP*	unglücklich	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	Weise	NN	*)	weise	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	ohne	APPR	(PP*	ohne	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	Hände	NN	*)	hand	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	wäre	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	geboren	VVPP	(VP*	gebären	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	worden	VAPP	*))))	werden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Meinen	VVFIN	(VROOT(PSEUDO(S*	meinen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*	sie	pl	*	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Prinz	NN	*)	prinz	*	*	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)))	prinz	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	indem	KOUS	(VROOT(PSEUDO(S(S*	indem	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	er	PPER	*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	nur	ADV	*)	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	eben	ADV	*	eben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	von	APPR	(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	dem	ART	*	der	sg	neut	-	(31
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Bilde	NN	*)	bilde	sg	neut	-	31)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	wegblickt	VVFIN	*)	wegblicken	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sagen	VVFIN	*	sagen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	(NP*	sie	pl	*	-	(2
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Conti	NE	*))	conti	*	*	(PER*)	2)|(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wollen	VMFIN	*	wollen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	(VP*	sie	pl	*	-	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	wissen	VVINF	*))	wissen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CONTI	NE	(VROOT(PSEUDO*	conti	-	-	(LOC*)	(2|(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	2)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	O	XY	*	O	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	nichts	PIS	*	nichts	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nichts	PIS	*	nichts	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Plauderei	NN	*	plauderei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ihre	PPOSAT	*	ihr	sg	fem	-	(64|(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Seele	NN	*	seele	sg	fem	-	64)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	merk	NN	*	merk	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ich	PPER	*	ich	sg	*	-	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	war	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	ganz	ADV	*	ganz	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	in	APPR	*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Ihren	PPOSAT	*	ihr	pl	neut	-	(58|(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Augen	NN	*	auge	pl	neut	-	58)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	liebe	VVFIN	*	lieben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	solche	PIAT	(NP*	solcher	pl	*	-	(64
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Seelen	NN	*)	seele	pl	*	-	64)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	solche	PIAT	(NP*	solcher	pl	neut	-	(58
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Augen	NN	*))	auge	pl	neut	-	58)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)))	prinz	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	mit	APPR	(VROOT(PSEUDO(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	einer	ART	*	ein	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	erzwungenen	ADJA	*	erzwungen	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Kälte	NN	*)	kälte	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Also	ADV	(VROOT(PSEUDO(S*	also	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Conti	NE	*	conti	sg	*	(PER*)	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	rechnen	VVFIN	*	rechnen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Sie	PPER	*	sie	pl	*	-	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	doch	ADV	*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	wirklich	ADJD	*	wirklich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Emilia	NE	(NP(MPN*	emilia	*	*	-	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Galotti	NE	*)	galotti	sg	*	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	zu	APPR	*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	den	ART	*	der	pl	fem	-	(65
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	vorzüglichsten	ADJA	*	vorzüglich	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Schönheiten	NN	*	schönheit	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	unserer	PPOSAT	(NP*	unser	sg	fem	-	(26|(2)|(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	Stadt	NN	*))))	stadt	sg	fem	-	65)|26)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CONTI	NE	(VROOT(PSEUDO*	conti	-	-	(LOC*)	(2|(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	2)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Also	ADV	(VROOT(PSEUDO(S*)	also	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	mit	APPR	(VROOT(PSEUDO*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	mit	APPR	(VROOT(PSEUDO(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	zu	APPR	*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	den	ART	*	der	pl	fem	-	(65
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	vorzüglichsten	ADJA	*)	vorzüglich	pl	fem	-	65)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	und	KON	(VROOT(PSEUDO(NP*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	den	ART	*	der	sg	masc	-	(65
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	vorzüglichsten	ADJA	*	vorzüglich	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	unserer	PPOSAT	(NP*	unser	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Stadt	NN	*))	stadt	sg	masc	-	65)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	(S*	sie	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	spotten	VVFIN	*)	spotten	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	meiner	PIS	(NP*	mein	sg	fem	-	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Prinz	NN	*)	prinz	sg	fem	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Oder	KON	(VROOT(PSEUDO(S*	oder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*	sie	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sahen	VVFIN	*	sehen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	die	ART	(NP*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ganze	ADJA	*	ganz	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Zeit	NN	*	zeit	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	eben	ADV	(AP(AVP*	eben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	so	ADV	*)	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	wenig	PIS	*	wenig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	als	KOKOM	(S*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Sie	PPER	*	sie	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	hörten	VVFIN	*))))	hören	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Lieber	NE	(VROOT(PSEUDO(MPN*	lieb	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Conti	NE	*	conti	sg	*	(PER*)	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*)	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	–	XY	*	–	sg	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Die	ART	(NP*	der	pl	neut	-	(58
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Augen	NN	*)	auge	pl	neut	-	58)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	wieder	ADV	(AP*	wieder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	auf	APPR	(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	das	ART	*	der	sg	neut	-	(31
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Bild	NN	*)	bild	sg	neut	-	31)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	gerichtet	VVPP	*)	richten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	wie	PWAV	(VROOT(PSEUDO(S*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	darf	VMFIN	*	dürfen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	unser	PPOSAT	(NP*	unser	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	einer	PIS	*	ein	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	seinen	PPOSAT	(NP*	sein	sg	masc	-	(58|(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Augen	NN	*))	auge	sg	masc	-	58)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	trauen	VVINF	*)	trauen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Eigentlich	ADV	(VROOT(PSEUDO(S*	eigentlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	weiß	VVFIN	*	weiß	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	doch	ADV	*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nur	ADV	*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	allein	ADV	*	allein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ein	ART	(VP(NP*	ein	sg	masc	-	(66
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Maler	NN	*	maler	sg	masc	-	66)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	von	APPR	(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	der	ART	*	der	sg	fem	-	(36
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Schönheit	NN	*))	schönheit	sg	fem	-	36)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	urteilen	VVINF	*)))	urteilen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CONTI	NE	(VROOT(PSEUDO*	conti	-	-	(LOC*)	(2|(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	2)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	eines	PIS	(NP*	ein	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	jeden	PIAT	(NP*	jeder	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Empfindung	NN	*))	empfindung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	sollte	VMFIN	*	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	erst	ADV	*	erst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	auf	APPR	(VP(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	den	ART	*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Ausspruch	NN	*	ausspruch	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	eines	ART	(NP*	ein	sg	masc	-	(66
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Malers	NN	*))	maler	sg	masc	-	66)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	warten	VVINF	*))	warten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ins	APPRART	(NP(PP*	in	-	-	-	(67
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Kloster	NN	*)	kloster	sg	neut	-	67)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	dem	PDS	*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	der	PRELS	(S*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	es	PPER	*	es	sg	neut	-	(68)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	von	APPR	(VP(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	uns	PPER	*)	uns	pl	*	-	(66)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	lernen	VVINF	*)	lernen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	will	VMFIN	*))	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	was	PWS	(S*	was	sg	neut	-	(68)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	schön	ADJD	*	schön	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	ist	VAFIN	*))	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Aber	KON	(VROOT(PSEUDO(S*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	das	PDS	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	muß	VMFIN	*	müssen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Ihnen	PPER	(VP*	ihnen	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	doch	ADV	*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	als	APPR	(PP*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Maler	NN	*)	maler	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	sagen	VVINF	*	sagen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	mein	PPOSAT	(S(NP*	mein	sg	masc	-	(0|(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Prinz	NN	*	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	eine	ART	(NP*	ein	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	von	APPR	(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	den	ART	*	der	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	größten	ADJA	*	groß	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	Glückseligkeiten	NN	*	glückseligkeit	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	meines	PPOSAT	(NP*	mein	sg	neut	-	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	Lebens	NN	*))))	leben	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	es	PPER	(NP*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	Emilia	NE	*	emilia	*	*	-	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	Galotti	NE	*	galotti	sg	*	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	mir	PPER	(VP*	sich	sg	*	-	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	gesessen	VVPP	*))))))	sitzen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	28	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Dieser	PDAT	(VROOT(PSEUDO(S(CNP(NP*	dieser	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Kopf	NN	*)	kopf	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	dieses	PDAT	(NP*	dieser	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Antlitz	NN	*)	antlitz	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	diese	PDAT	(NP*	dieser	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Stirn	NN	*)	stirn	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	diese	PDAT	(NP*	dieser	pl	neut	-	(69
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Augen	NN	*)	auge	pl	neut	-	69)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	diese	PDAT	(NP*	dieser	pl	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Nase	NN	*)	nase	pl	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	dieser	PDAT	(NP*	dieser	sg	masc	-	(70
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	Mund	NN	*)	mund	sg	masc	-	70)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	dieses	PDAT	(NP*	dieser	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	Kinn	NN	*)	kinn	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	dieser	PDAT	(NP*	dieser	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	Hals	NN	*)	hals	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	diese	PDAT	(NP*	dieser	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	Brust	NN	*)	brust	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	dieser	PDAT	(NP*	dieser	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	28	Wuchs	NN	*)	wuchs	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	29	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	30	dieser	PDAT	(NP*	dieser	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	31	ganze	ADJA	*	ganz	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	32	Bau	NN	*))	bau	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	33	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	34	sind	VAFIN	*	sein	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	35	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	36	von	APPR	(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	37	der	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	38	Zeit	NN	*)	zeit	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	39	an	PTKVZ	*	an	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	40	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	41	mein	PPOSAT	(NP*	mein	sg	neut	-	(71|(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	42	einziges	ADJA	*	einzig	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	43	Studium	NN	*	studium	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	44	der	ART	(NP*	der	pl	fem	-	(72
Emilia.xml.rksp.0.CoNLL2012.conll	000	45	weiblichen	ADJA	*	weiblich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	46	Schönheit	NN	*)))	schönheit	sg	fem	-	71)|72)
Emilia.xml.rksp.0.CoNLL2012.conll	000	47	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Die	ART	(NP*	der	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Schilderei	NN	*)	schilderei	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	selbst	ADV	(NP*	selbst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	wovor	PWAV	(S*	wovor	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	sie	PPER	*	sie	pl	masc	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	gesessen	VVPP	*	sitzen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	hat	VAFIN	(S*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	ihr	PPOSAT	(NP*	ihr	sg	fem	-	(12|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	abwesender	ADJA	*	abwesend	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Vater	NN	*)	vater	sg	masc	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	bekommen	VVINF	*)))	bekommen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Aber	KON	*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	diese	PDAT	*	dieser	sg	fem	-	(31
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Kopie	NN	*	kopie	sg	fem	-	31)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	–	XY	*	–	sg	fem	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)))	prinz	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	der	ART	*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sich	PRF	*	sich	sg	-	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	schnell	ADJD	*	schnell	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	gegen	APPR	*	gegen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ihn	PPER	*	ihn	sg	masc	-	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	kehret	VVFIN	*	kehren	sg	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nun	ADV	(VROOT(PSEUDO*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Conti	NE	*	conti	sg	*	(PER*)	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ist	VAFIN	(VROOT(PSEUDO(S*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	doch	ADV	*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	schon	ADV	(VP*	schon	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	versagt	VVPP	*))	versagen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CONTI	NE	(VROOT(PSEUDO*	conti	-	-	(LOC*)	(2|(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	2)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ist	VAFIN	(VROOT(PSEUDO(S(S*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	für	APPR	(NP(PP*	für	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*)	sie	pl	*	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Prinz	NN	*))	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	wenn	KOUS	*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Sie	PPER	*	sie	sg	fem	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Geschmack	NN	*	geschmack	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	daran	PROAV	(VP*	daran	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	finden	VVINF	*))	finden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Geschmack	NN	(VROOT(PSEUDO*	geschmack	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Lächelnd	NN	*	lächelnd	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Dieses	PDAT	*	dieser	sg	neut	-	(71
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ihr	PPOSAT	*	ihr	sg	neut	-	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Studium	NN	*	studium	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	der	ART	*	der	pl	neut	-	(72
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	weiblichen	ADJA	*	weiblich	pl	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Schönheit	NN	*	schönheit	pl	neut	-	71)|72)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Conti	NE	*	conti	sg	neut	(PER*)	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	wie	PWAV	*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	könnt	VVFIN	*	können	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	besser	ADJD	*	gut	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	tun	VVINF	*	tun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	als	KOKOM	*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	es	PPER	*	es	sg	neut	-	(71)
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	auch	ADV	*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	zu	APPR	*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	dem	ART	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	meinigen	VVINF	*	meiniger	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	zu	PTKZU	*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	machen	VVINF	*	machen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Dort	ADV	(NP*	dort	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	jenes	PDAT	(S(NP*	jener	sg	neut	-	(30
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Porträt	NN	*)	porträt	sg	neut	-	30)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	nehmen	VVFIN	*	nehmen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Sie	PPER	*	sie	pl	*	-	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	nur	ADV	*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	wieder	ADV	*	wieder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	mit	PTKVZ	*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	–	KOUS	(S*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	einen	ART	(VP(NP*	ein	sg	masc	-	(73
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Rahmen	NN	*	rahmen	sg	masc	-	73)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	darum	PROAV	*)	darum	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	bestellen	VVINF	*)))))	bestellen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CONTI	NE	(VROOT(PSEUDO*	conti	-	-	(LOC*)	(2|(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	2)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wohl	ADV	(VROOT(PSEUDO(S*)	wohl	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	So	ADV	(VROOT(PSEUDO(S(AP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	schön	ADJD	(CAP*	schön	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	so	ADV	(AP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	reich	ADJD	*)))	reich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	als	KOUS	(S*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ihn	PPER	*	ihn	sg	masc	-	(73)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	der	ART	(VP(NP*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Schnitzer	NN	*)	schnitzer	sg	masc	(PER*)	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	nur	ADV	*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	machen	VVINF	*)	machen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	kann	VMFIN	*))	können	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Es	PPER	(VROOT(PSEUDO(S*	es	sg	neut	-	(30)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	soll	VMFIN	*	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	in	APPR	(VP(VP(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	der	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Galerie	NN	*)	galerie	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	aufgestellet	VVPP	*)	aufgeelleen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	werden	VAINF	*))	werden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Aber	KON	*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	dieses	PDAT	*	dieser	sg	neut	-	(31)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	bleibt	VVFIN	*	bleiben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	hier	ADV	*	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Mit	APPR	(VROOT(PSEUDO(CS(S(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	einem	ART	*	ein	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Studio	NN	*)	studio	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	macht	VVFIN	*	machen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	man	PIS	*	man	sg	*	-	(17)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	viel	PIAT	(NP*	viel	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Umstände	NN	*)	umstand	sg	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	auch	ADV	(S*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	läßt	VVFIN	*	lassen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	man	PIS	*	man	sg	*	-	(17)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	das	PDS	*	der	sg	neut	-	(31)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	aufhängen	VVINF	*))	aufhängen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	sondern	KON	*	sondern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	hat	VAFIN	(S*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	es	PPER	*	es	sg	neut	-	(31)
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	gern	ADV	*	gern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	bei	APPR	(PP*	bei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	der	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	Hand	NN	*)))	hand	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ich	PPER	(S*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	danke	VVFIN	*	danken	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Ihnen	PPER	*	ihnen	pl	*	-	(2
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Conti	NE	(S*	conti	-	-	(PER*)	2)|(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	danke	PROAV	*	danken	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Ihnen	PPER	*	ihnen	pl	*	-	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	recht	ADV	(AVP*	recht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	sehr	ADV	*)))	sehr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Und	KON	(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wie	PWAV	(VP*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	gesagt	VVPP	*	sagen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	meinem	PPOSAT	*	mein	sg	masc	-	(29|(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Gebiete	NN	*))	gebiet	sg	masc	-	29)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	soll	VMFIN	*	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	die	ART	(NP*	der	sg	fem	-	(37
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Kunst	NN	*)	kunst	sg	fem	-	37)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	nach	APPR	(VP(PP*	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Brot	NN	*)	brot	-	-	-	(28)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	gehen	VVINF	*))	gehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	bis	APPR	*	bis	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	ich	PPER	(S*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	selbst	ADV	(NP(AP*	selbst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	keines	PIS	*))	keiner	sg	neut	-	(28)
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	habe	VAFIN	*)	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Schicken	NN	(NP*	schicken	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*	sie	pl	*	-	(2
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Conti	NE	*	conti	sg	*	(PER*)	2)|(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	zu	APPR	(PP*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	meinem	PPOSAT	*	mein	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Schatzmeister	NN	*	schatzmeister	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	und	KON	(CS(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	lassen	VVFIN	*	lassen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Sie	PPER	*	sie	pl	*	-	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	auf	APPR	(CPP(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	Ihre	PPOSAT	*	ihr	sg	fem	-	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	Quittung	NN	*)	quittung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	für	APPR	(PP*	für	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	beide	PIAT	*	beide	pl	*	-	(30|(31
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	Porträte	NN	*)))	portrat	pl	*	-	30)|31)
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	sich	PRF	(VP*	sich	pl	-	-	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	bezahlen	VVINF	*)	bezahlen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	–	PWAV	(S*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	was	PWS	*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	Sie	PPER	*	sie	pl	*	-	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	wollen	VMFIN	*))))	wollen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	28	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	So	ADV	(VROOT(PSEUDO(NP(S(AVP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	viel	PIAT	*)	viel	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*	sie	pl	*	-	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	wollen	VMFIN	*)	wollen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Conti	NE	*)	conti	sg	*	(PER*)	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CONTI	NE	(VROOT(PSEUDO*	conti	-	-	(LOC*)	(2|(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	2)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sollte	VMFIN	(VROOT(PSEUDO(S*	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ich	PPER	*	ich	sg	fem	-	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	doch	ADV	*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nun	ADV	*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	bald	ADV	*	bald	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	fürchten	VVFIN	*	fürchten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Prinz	NN	(NP*	prinz	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Sie	PPER	*	sie	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	noch	ADV	(NP*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	etwas	PIS	*)	etwas	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	anders	ADV	(VP*	anders	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	belohnen	VVINF	*)	belohnen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	wollen	VMFIN	*))	wollen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	als	KOKOM	(NP*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	die	ART	*	der	sg	fem	-	(37
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	Kunst	NN	*))	kunst	sg	fem	-	37)
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	O	KON	(VROOT(PSEUDO(PP*	O	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	des	ART	*	der	-	-	-	(2
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	eifersüchtigen	ADJA	*	eifersüchtig	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Künstlers	NN	*)	künstler	sg	masc	-	2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nicht	PTKNEG	(VROOT(PSEUDO(CO(AVP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	doch	ADV	*))	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Hören	VVFIN	*	hören	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	(S*	sie	pl	*	-	(2
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Conti	NE	*	conti	sg	*	(PER*)	2)|(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	so	ADV	(AVP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	viel	PIAT	*)	viel	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Sie	PPER	*	sie	pl	*	-	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	wollen	VMFIN	*)	wollen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Conti	NE	(VROOT(PSEUDO(S*	conti	sg	*	(PER*)	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	geht	VVFIN	*	gehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ab	PTKVZ	*)	ab	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	So	ADV	(VROOT(PSEUDO(S(AP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	viel	ADV	*)	viel	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	er	PPER	*	er	sg	masc	-	(2)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	will	VMFIN	*)	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Gegen	NN	*	gegen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	das	ART	(NP*	der	sg	neut	-	(31
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Bild	NN	*)	bild	sg	neut	-	31)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Dich	PPER	*	dich	-	-	-	(31)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	hab	VAFIN	*	hab	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	für	APPR	*	für	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	jeden	PIAT	*	jeder	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Preis	NN	*	preis	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	noch	ADV	*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	zu	PTKA	*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	wohlfeil	ADJD	*	wohlfeil	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ah	NE	*	ah	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	schönes	ADJA	(VROOT(PSEUDO(S(NP*	schön	sg	neut	-	(31
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Werk	NN	*	werk	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	der	ART	(NP*	der	sg	fem	-	(37
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Kunst	NN	*))	kunst	sg	fem	-	31)|37)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	wahr	ADJD	*	wahr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	dich	PRF	*	dich	sg	*	-	(31)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	besitze	VVFIN	*))	besitzen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Wer	PWS	(S*	wer	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	dich	PPER	*	dich	sg	-	-	(31)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	auch	ADV	*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	besäße	ADJA	(NP*	besäßen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	schönres	ADJA	*	schönr	sg	neut	-	(31
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Meisterstück	NN	*))	meisterstück	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	der	ART	(NP*	der	sg	masc	-	(74
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Natur	NN	*)	natur	-	-	-	31)|74)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Was	PWS	(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*	sie	pl	*	-	(75)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	dafür	PROAV	*)	dafür	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	wollen	VMFIN	*	wollen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ehrliche	ADJA	(NP*	ehrlich	pl	neut	-	(75
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Mutter	NN	*)	mutter	pl	neut	-	75)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	du	PPER	*	du	sg	*	-	(76)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	willst	VVFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	alter	ADJA	(NP*	alt	sg	masc	-	(76
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Murrkopf	NN	*))	murrkopf	sg	masc	-	76)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Fodre	NN	(VROOT(PSEUDO(NP*	fodre	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	nur	ADV	*)	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Fodert	VVFIN	*	fodert	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	nur	ADV	*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Am	NN	*	an	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	liebsten	VVINF	*	lieb	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	kauft	VVFIN	*	kaufen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	dich	PRF	*	dich	sg	-	-	(8)|(31)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Zauberin	NN	*	zauberin	-	-	-	(8)|(31)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	von	APPR	*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	dir	PPER	*	dir	sg	*	-	(8)|(31)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	selbst	ADV	*	selbst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Dieses	PDAT	(CNP(NP*	dieser	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Auge	NN	*	auge	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	voll	APPR	(PP*	voll	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Liebreiz	NN	*))	liebreiz	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Bescheidenheit	NN	*)	bescheidenheit	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Dieser	PDAT	(VROOT(PSEUDO(NP*	dieser	sg	masc	-	(70
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Mund	NN	*)	mund	sg	masc	-	70)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wenn	KOUS	*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	er	PPER	*	er	sg	masc	-	(70)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sich	PRF	*	sich	sg	-	-	(70)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	zum	APPRART	(PP*	zu	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Reden	NN	*)	reden	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	öffnet	VVFIN	*)	öffnen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	wenn	KOUS	(VROOT(PSEUDO(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	er	PPER	*	er	sg	masc	-	(70)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	lächelt	VVFIN	*)	lächeln	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Dieser	PDAT	(VROOT(PSEUDO(NP*	dieser	sg	masc	-	(70
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Mund	NN	*)	mund	sg	masc	-	70)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	höre	VVFIN	*	hören	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	kommen	VVINF	*	kommen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Noch	ADV	(AP(S*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	bin	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	dir	PPER	*))	dir	sg	*	-	(31)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	zu	PTKA	*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	neidisch	ADJD	*)	neidisch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Indem	KOUS	(VROOT(PSEUDO(S*	indem	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	er	PPER	*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	das	ART	(NP*	der	sg	neut	-	(31
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Bild	NN	*)	bild	sg	neut	-	31)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	gegen	APPR	(PP*	gegen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	die	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Wand	NN	*)	wand	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	kehret	VVFIN	*)	kehren	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wird	VAFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Marinelli	NE	*	marinelli	sg	masc	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sein	VAINF	*	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Hätt	NN	*	hätt	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ihn	PPER	*	ihn	sg	masc	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	doch	ADV	*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	rufen	VVINF	*	rufen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	lassen	VVINF	*	lassen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Was	PWS	*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	für	APPR	*	für	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	einen	ART	*	ein	sg	masc	-	(23
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Morgen	NN	*	morgen	sg	masc	-	23)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	könnt	VVFIN	*	können	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	haben	VAFIN	*	haben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Marinelli	NE	(VROOT(PSEUDO*	marinelli	sg	masc	(PER*)	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(NP*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Prinz	NN	*)	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Gnädiger	ADJA	*	gnädig	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Herr	NN	*	herr	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Sie	PPER	*	sie	pl	fem	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	werden	VAFIN	*	werden	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	verzeihen	VVINF	*	verzeihen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ich	PPER	(S*	ich	sg	masc	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	war	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mir	PPER	*	sich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	eines	PIS	*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	frühen	VVFIN	*)	früh	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Befehls	NE	*	befehl	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	nicht	PTKNEG	(AP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	gewärtig	ADJD	*)	gewärtig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	bekam	VVFIN	*	bekommen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Lust	NN	(VP*	lust	sg	fem	-	(77)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	auszufahren	VVIZU	*))	ausfahren	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(S(NP*	der	sg	masc	-	(23
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Morgen	NN	*)	morgen	sg	masc	-	23)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	war	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	so	ADV	(AP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	schön	ADJD	*))	schön	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Aber	KON	(S*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	nun	ADV	*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	er	PPER	*	er	sg	masc	-	(23)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ja	ADV	*	ja	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	wohl	ADV	(VP*	wohl	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	verstrichen	VVINF	*))	verstrichen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	und	KON	(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	die	ART	(NP*	der	sg	fem	-	(77
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Lust	NN	*)	lust	sg	fem	-	77)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	mir	PPER	(VP*	sich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	vergangen	VVPP	*))	vergehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Nach	APPR	*	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	einem	ART	(NP*	ein	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	kurzen	ADJA	*	kurz	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Stillschweigen	NN	*)	stillschweigen	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	haben	VAFIN	*	haben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wir	PPER	*	wir	pl	*	-	(3)|(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Neues	NN	(NP*	neue	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Marinelli	NE	*))	marinelli	pl	-	(LOC*)	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nichts	PIS	(VROOT(PSEUDO(NP*	nichts	*	neut	-	(78)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	von	APPR	(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Belang	NN	*)	belang	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	das	PRELS	(S*	der	sg	neut	-	(78)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ich	PPER	*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	wüßte	VVFIN	*))	wissen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Die	ART	(NP*	der	sg	fem	-	(11
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Gräfin	NN	*)	gräfin	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Orsina	NE	*	orsina	*	*	(LOC*)	11)|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ist	VAFIN	(S*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	gestern	ADV	(VP*	gestern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	zur	APPRART	(PP*	zu	sg	fem	-	(26
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Stadt	NN	*)	stadt	sg	fem	-	26)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	gekommen	VVPP	*))	kommen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Hier	ADV	(VROOT(PSEUDO(S*	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	liegt	VVFIN	*	liegen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	auch	ADV	(NP*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	schon	ADV	*	schon	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ihr	PPOSAT	*	ihr	sg	fem	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	guter	ADJA	*	gut	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Morgen	NN	*	morgen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Auf	APPR	(AP(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	ihren	PPOSAT	*	ihr	sg	masc	-	(24|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Brief	NN	*)	brief	sg	masc	-	24)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	zeigend	ADJD	*)))	zeigend	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	oder	KON	(VROOT(PSEUDO(S*	oder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	was	PWS	*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	es	PPER	(VP*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sonst	ADV	*	sonst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	sein	VAINF	*)	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	mag	VMFIN	*)	mögen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	bin	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	gar	ADV	*	gar	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	neugierig	ADJD	(AP*	neugierig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	darauf	PROAV	*))	darauf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	(S*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	haben	VAFIN	*	haben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sie	PPER	(VP*	sie	pl	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	gesprochen	VVPP	*))	sprechen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Bin	VAFIN	(VROOT(PSEUDO(S*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ich	PPER	*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	leider	ADV	*	leider	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ihr	PPOSAT	(NP*	ihr	sg	masc	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Vertrauter	NN	*))	vertrauter	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Aber	KON	*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	wenn	KOUS	*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ich	PPER	*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	wieder	ADV	*	wieder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	von	APPR	*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	einer	ART	*	ein	sg	fem	-	(79
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Dame	NN	*	--	-	-	-	79)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	werde	VAFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	der	PRELS	*	der	sg	masc	-	(79)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	einkömmt	VVFIN	*	einkömmen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	Sie	PPER	*	sie	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	in	APPR	*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	gutem	ADJA	*	gut	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	Ernste	NN	*	ernst	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	zu	PTKZU	*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	lieben	VVINF	*	lieben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	Prinz	NN	*	prinz	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	–	XY	*	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nichts	PIS	*	nichts	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	verschworen	VVFIN	*	verschwieren	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Marinelli	NE	*	marinelli	sg	neut	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ja	PTKANT	*	ja	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	In	APPR	(VROOT(PSEUDO(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	der	ART	(CNP(NP*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Tat	NN	*)	tat	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Prinz	NN	*))	prinz	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Könnt	NE	*	könnt	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	doch	ADV	*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	kommen	VVINF	*	kommen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	O	XY	*	O	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	so	ADV	(S*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	mag	VMFIN	*	mögen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	die	ART	(NP*	der	sg	fem	-	(11
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Gräfin	NN	*	gräfin	sg	fem	-	11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	auch	ADV	(AVP(AVP*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	so	ADV	(NP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Unrecht	NN	*))	unrecht	sg	neut	-	(80)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	nicht	PTKNEG	*))	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	haben	VAFIN	*)	haben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Allerdings	ADV	(VROOT(PSEUDO(NP*	allerdings	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sehr	ADV	(S*	sehr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Unrecht	NN	*))	unrecht	-	-	-	(80)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Meine	PPOSAT	(S(NP*	mein	sg	-	-	(81|(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	nahe	ADJA	*	nah	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Vermählung	NN	*	vermählung	sg	fem	-	81)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	der	ART	*	der	sg	fem	-	(82
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Prinzessin	NN	*	prinzessin	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	von	APPR	(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Massa	NE	*)))	massa	pl	neut	(LOC*)	82)|(83)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	will	VMFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	durchaus	ADV	*	durchaus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	alle	PIAT	(NP*	aller	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	dergleichen	ADJA	*	dergleich	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	Händel	NN	*	händel	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	fürs	APPRART	(PP*	für	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	erste	ADJA	*))))	erster	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	abbreche	VVFIN	*	abbrechen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wenn	KOUS	*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	nur	ADV	*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	das	PDS	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	wäre	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	müßte	VMFIN	*	müssen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	freilich	ADV	*	freilich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Orsina	NE	*	orsina	sg	fem	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	sich	PRF	*	sich	sg	-	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	in	APPR	*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	ihr	PPOSAT	*	ihr	sg	fem	-	(84|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Schicksal	NN	*	schicksal	-	-	-	84)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	eben	ADV	*	eben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	wohl	ADV	*	wohl	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	zu	PTKZU	*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	finden	VVINF	*	finden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	wissen	VVINF	*	wissen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	als	KOUS	*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	der	ART	*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	Prinz	NN	*	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	in	APPR	*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	seines	PPOSAT	*	sein	sg	masc	-	(85)|(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Das	ART	*	der	sg	neut	-	(85)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	unstreitig	ADJD	*	unstreitig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	härter	ADJD	*	hart	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	als	KOKOM	*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ihres	PPOSAT	*	ihr	sg	neut	-	(84)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Mein	PPOSAT	(VROOT(PSEUDO(S(NP*	mein	sg	masc	-	(35|(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Herz	NN	*)	herz	sg	masc	-	35)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wird	VAFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	das	ART	(NP*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Opfer	NN	*	opfer	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	eines	ART	(NP*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	elenden	ADJA	*	elend	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Staatsinteresse	NN	*)))	staatsinteresse	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ihres	PIS	(VROOT(PSEUDO(S*	ihr	sg	*	-	(86)|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	darf	VMFIN	*	dürfen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sie	PPER	*	sie	*	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nur	ADV	*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	zurücknehmen	VVINF	*	zurücknehmen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	aber	ADV	(VP*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	wider	APPR	(PP*	wider	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Willen	NN	*)	wille	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	verschenken	VVINF	*))	verschenken	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Zurücknehmen	NN	(VROOT(PSEUDO*	zurücknehmen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Warum	PWAV	*	warum	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	zurücknehmen	VVINF	*	zurücknehmen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	fragt	VVFIN	(VROOT(PSEUDO(S*	fragen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	die	ART	(NP*	der	sg	fem	-	(11
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Gräfin	NN	*)	gräfin	sg	fem	-	11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	wenn	KOUS	(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	weiter	ADV	*	weiter	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	nichts	PIS	*	nichts	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	als	KOKOM	(NP*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	eine	ART	*	ein	sg	fem	-	(82|(87
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Gemahlin	NN	*)	gemahlin	sg	fem	-	82)|87)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	die	PRELS	(S*	der	sg	fem	-	(82)|(87)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	dem	ART	(NP*	der	sg	neut	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	Prinzen	NN	*)	prinz	sg	neut	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	die	ART	(CNP(NP*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	Liebe	NN	*)	liebe	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	sondern	KON	*	sondern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	die	ART	(NP*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	Politik	NN	*))	politik	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	zuführet	VVFIN	*)))	zuführet	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Neben	APPR	(VROOT(PSEUDO(S(PP*	neben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	so	ADV	(AP*	so	-	-	-	(82
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	einer	ART	*)	ein	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Gemahlin	NN	*)	gemahlin	sg	fem	-	82)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	sieht	VVFIN	*	sehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	die	ART	(NP*	der	sg	fem	-	(11
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Geliebte	NN	*)	geliebte	sg	fem	-	11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	noch	ADV	(AVP*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	immer	ADV	*)	immer	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	ihren	PPOSAT	(NP*	ihr	sg	masc	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Platz	NN	*))	platz	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	so	ADV	*	so	-	-	-	(82
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	einer	ART	*	ein	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Gemahlin	NN	*	gemahlin	sg	fem	-	82)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	fürchtet	VVFIN	*	fürchten	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	sie	PPER	*	sie	sg	fem	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	aufgeopfert	VVPP	*	aueopfern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	zu	PTKZU	*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	sein	VAINF	*	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	sondern	KON	*	sondern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	–	$(	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	–	XY	*	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Einer	ART	(VROOT(PSEUDO(NP*	ein	sg	fem	-	(8
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	neuen	ADJA	*	neu	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Geliebten	NN	*)	geliebter	pl	*	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Nun	ADV	(S*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	denn	ADV	*)	denn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wollten	VMFIN	(VROOT(PSEUDO(S*	wollter	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mir	PPER	(NP(VP*	sich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	daraus	PROAV	*	daraus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ein	ART	(NP*	ein	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Verbrechen	NN	*)	verbrechen	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	machen	VVINF	*)	machen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Marinelli	NE	*))	marinelli	sg	*	(LOC*)	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	O	XY	*	O	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	vermengen	VVFIN	(CS(S*	vermengen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Sie	PPER	*	sie	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	mich	PRF	*	mich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ja	ADV	*	ja	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	nicht	PTKNEG	*)	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	mein	PPOSAT	(S(NP*	mein	sg	masc	-	(0|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Prinz	NN	*)	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	der	ART	*	der	sg	fem	-	(11
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Närrin	NN	*)	närrin	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	deren	PRELAT	(CS(S(NP*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	Wort	NN	*)	wort	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	ich	PPER	*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	führe	VVFIN	*)	führen	sg	-	-	11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	–	NN	(S(NP*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	aus	APPR	(PP*	aus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	Mitleid	NN	*))	mitleid	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	führe	VVFIN	*))))	führen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Denn	KON	(VROOT(PSEUDO(S*	denn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	gestern	ADV	(AP*	gestern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	wahrlich	ADJD	*)	wahrlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	hat	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	sie	PPER	(VP*	sie	sg	fem	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	mich	PPER	*	mich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	sonderbar	ADJD	*	sonderbar	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	gerühret	VVPP	*))	rühren	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(S*	sie	sg	fem	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wollte	VMFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	von	APPR	(VP(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ihrer	PPOSAT	*	ihr	sg	fem	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Angelegenheit	NN	*	angelegenheit	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Ihnen	PPER	*))	ihnen	pl	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	gar	ADV	(AVP*	gar	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	nicht	PTKNEG	*)	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	sprechen	VVINF	*))	sprechen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(S*	sie	sg	fem	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wollte	VMFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sich	PRF	(VP*	sich	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ganz	ADV	(AP*	ganz	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	gelassen	ADJD	(CAP*	gelassen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	kalt	ADJD	*))	kalt	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	stellen	VVINF	*))	stellen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Aber	KON	(VROOT(PSEUDO(S*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	mitten	ADV	(PP*	mitten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	in	APPR	*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	dem	ART	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	gleichgültigsten	ADJA	*	gleichgültig	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Gespräche	NN	*)	gespräch	pl	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	entfuhr	VVFIN	*	entfahren	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	ihr	PPER	*	ihr	sg	fem	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	eine	ART	(NP*	ein	sg	fem	-	(88
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Wendung	NN	*	wendung	sg	fem	-	88)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	eine	ART	(NP*	ein	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Beziehung	NN	*	beziehung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	über	APPR	(PP*	über	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	die	ART	*	der	sg	fem	-	(82
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	andere	PIS	*))	anderer	sg	fem	-	82)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	die	PRELS	(S*	der	sg	fem	-	(88)
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	ihr	PPOSAT	(NP*	ihr	sg	fem	-	(86|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	gefoltertes	ADJA	*	gefoltert	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	Herz	NN	*)	herz	-	-	-	86)
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	verriet	VVFIN	*)))	verraten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Mit	APPR	(VROOT(PSEUDO(S(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	dem	ART	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	lustigsten	ADJA	*	lustig	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Wesen	NN	*)	wesen	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	sagte	VVFIN	*	sagen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	sie	PPER	*	sie	sg	fem	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	die	ART	(NP*	der	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	melancholischsten	ADJA	*	melancholisch	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Dinge	NN	*	ding	pl	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	und	KON	(NP(AVP*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	wiederum	ADV	*)	wiederum	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	die	ART	*	der	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	lächerlichsten	ADJA	*	lächerlich	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Possen	NN	*	posse	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	der	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	allertraurigsten	ADJA	*	allertraurigster	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	Miene	NN	*))))	miene	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(CS(S*	sie	sg	fem	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	hat	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	zu	APPR	(VP(PP*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	den	ART	*	der	pl	masc	-	(89
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Büchern	NN	*)	buch	pl	masc	-	89)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ihre	PPOSAT	(NP*	ihr	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Zuflucht	NN	*)	zuflucht	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	genommen	VVPP	*))	nehmen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	ich	PPER	(S*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	fürchte	VVFIN	*	fürchen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	die	PDS	(S*	der	pl	masc	-	(89)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	werden	VAFIN	*	werden	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	ihr	PPER	(VP*	ihr	sg	fem	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	den	ART	(NP*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	Rest	NN	*)	rest	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	geben	VVINF	*))))	geben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	So	ADV	(VROOT(PSEUDO(AVP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wie	PWAV	(S*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sie	PPER	*	sie	pl	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ihrem	PPOSAT	(NP*	ihr	sg	neut	-	(90|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	armen	ADJA	*	arm	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Verstande	NN	*)	verstande	pl	masc	-	90)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	auch	ADV	*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	den	ART	(VP(NP*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	ersten	ADJA	*	erster	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Stoß	NN	*)	stoß	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	gegeben	VVPP	*)))	geben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Aber	KON	(S(NP(S*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	was	PWS	*	was	sg	neut	-	(91)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mich	PPER	(VP*	mich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	vornehmlich	ADJD	(PP*	vornehmlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	mit	APPR	*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	von	APPR	*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ihr	PPER	*)	ihr	sg	fem	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	entfernt	VVPP	*)	entfernt	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	hat	VAFIN	*)	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	das	PDS	*)	der	sg	neut	-	(91)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	wollen	VMFIN	*	wollen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	doch	ADV	*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	nicht	PTKNEG	*)	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	brauchen	VVFIN	(S*	brauchen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	Marinelli	NE	(VP(NP*	marinelli	sg	masc	(LOC*)	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	mich	PPER	(S*	mich	sg	-	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	wieder	ADV	*	wieder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	zu	APPR	(PP*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	ihr	PPER	*)	ihr	sg	fem	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	zurück	PTKVZ	*))	zurück	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	bringen	VVINF	*)))	bringen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Wenn	KOUS	*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sie	PPER	*	sie	pl	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	aus	APPR	*	aus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Liebe	NN	*	liebe	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	närrisch	ADJD	*	närrisch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	wird	VAFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	wäre	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	sie	PPER	*	sie	sg	fem	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	früher	ADJD	*	früh	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	oder	KON	*	oder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	später	ADJD	*	spät	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	auch	ADV	*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	ohne	APPR	*	ohne	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	Liebe	NN	*	liebe	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	geworden	VAPP	*	werden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	–	$(	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	Und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	nun	ADV	*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	genug	PIS	*	genug	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	von	APPR	*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	ihr	PPER	*	ihr	sg	fem	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	28	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Von	APPR	*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	etwas	PIAT	(NP*	etwas	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	anderm	PIS	*)	ander	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Geht	VVFIN	(S*	gehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	denn	ADV	*	denn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	gar	ADV	(NP*	gar	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nichts	PIS	*)	nichts	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	vor	PTKVZ	*)	vor	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	in	APPR	*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	der	ART	(NP*	der	sg	fem	-	(26
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Stadt	NN	*)	stadt	sg	fem	-	26)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	So	ADV	(VROOT(PSEUDO(CS(AP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	gut	ADJD	*)	gut	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	wie	KOKOM	(S*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	gar	ADV	*	gar	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	nichts	PIS	*))	nichts	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Denn	KON	(S*	denn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	daß	KOUS	(NP(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	die	ART	(NP*	der	sg	fem	-	(92
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Verbindung	NN	*	verbindung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	des	ART	(NP*	der	sg	masc	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Grafen	NN	*	grafe	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Appiani	NE	*))	appiani	sg	*	-	92)|9)|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	heute	ADV	(VP*	heute	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	vollzogen	VVPP	*)	vollziehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	wird	VAFIN	*)	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	–	NN	*)	–	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	nicht	PTKNEG	(NP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	viel	ADV	*	viel	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	mehr	PIS	*))	mehr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	als	KOKOM	(NP*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	gar	ADV	*	gar	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	nichts	PIS	*)	nichts	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Des	ART	(VROOT(PSEUDO(NP*	der	-	-	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Grafen	NN	*	grafe	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Appiani	NE	*)	appiani	*	*	(PER*)	9)|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	mit	APPR	*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wem	PWS	*	wem	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	denn	KON	*	denn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ich	PPER	(S*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	soll	VMFIN	*	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ja	ADV	(VP*	ja	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	noch	ADV	*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	hören	VVINF	*	hören	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	er	PPER	*	er	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	versprochen	VVPP	*	versprechen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	ist	VAFIN	*)))	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Die	ART	(VROOT(PSEUDO(S(NP*	der	sg	fem	-	(92
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sache	NN	*)	sache	sg	fem	-	92)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sehr	ADV	(VP(VP(AP*	sehr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	geheim	ADJD	*)	geheim	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	gehalten	VVPP	*)	halten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	worden	VAPP	*))	werden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Auch	ADV	(VROOT(PSEUDO(S*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	war	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	nicht	PTKNEG	(VP(AVP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	viel	ADV	*)	viel	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Aufhebens	NN	*	aufheben	sg	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	davon	PROAV	*	davon	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	machen	VVINF	*)))	machen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	(S*	sie	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	werden	VAFIN	*	werden	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	lachen	VVINF	(VP*	lachen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Prinz	NN	(S*)))	prinz	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Aber	KON	(S*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	geht	VVFIN	*	gehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	es	PPER	*)	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	den	ART	(NP*	der	sg	masc	-	(93
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Empfindsamen	NN	*)	empfindsam	sg	masc	-	93)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Die	ART	(VROOT(PSEUDO(S(NP*	der	sg	fem	-	(50
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Liebe	NN	*)	liebe	sg	fem	-	50)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	spielet	VVFIN	*	spieleen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ihnen	PPER	*	ihnen	pl	*	-	(93)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	immer	ADV	*	immer	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	die	ART	(NP*	der	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	schlimmsten	ADJA	*	schlimm	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Streiche	NN	*))	streich	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ein	ART	*	ein	sg	neut	-	(8|(94
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Mädchen	NN	*	mädchen	sg	neut	-	8)|94)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ohne	APPR	*	ohne	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Vermögen	NN	*	vermögen	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ohne	APPR	*	ohne	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Rang	NN	*	rang	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	hat	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	ihn	PPER	*	ihn	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	in	APPR	*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	ihre	PPOSAT	*	ihr	sg	fem	-	(8)|(94)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Schlinge	NN	*	schling	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	zu	PTKZU	*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	ziehen	VVINF	*	ziehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	gewußt	ADJD	*	wissen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	–	PPER	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	mit	APPR	*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	ein	ART	*	ein	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	wenig	PIAT	*	wenig	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	Larve	NN	*	larve	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	aber	ADV	*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	mit	APPR	*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	vielem	ADJA	*	vieler	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	Prunke	NN	*	prunke	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	von	APPR	*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	28	Tugend	NN	*	tugend	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	29	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	30	Gefühl	NN	*	gefühl	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	31	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	32	Witz	NN	*	witz	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	33	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	34	–	$(	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	35	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	36	was	PWS	*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	37	weiß	VVFIN	*	weiß	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	38	ich	PPER	*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	39	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wer	PWS	*	wer	sg	*	-	(95)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sich	PRF	*	sich	sg	-	-	(95)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	den	ART	*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Eindrücken	NN	*	eindrück	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	die	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Unschuld	NN	*	unschuld	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Schönheit	NN	*	schönheit	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	auf	APPR	*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	ihn	PPER	*	ihn	sg	masc	-	(95)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	machen	VVINF	*	machen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	ohne	APPR	*	ohne	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	weitere	ADJA	*	weit	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	Rücksicht	NN	*	rücksicht	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	ganz	ADV	*	ganz	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	überlassen	VVINF	*	überlassen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	darf	VMFIN	*	dürfen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	–	XY	*	–	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	dächte	VVFIN	*	dächen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	der	ART	*	der	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	wär	NN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	28	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	29	eher	ADV	*	eher	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	30	zu	PTKZU	*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	31	beneiden	VVINF	*	beneiden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	32	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	33	als	KOKOM	*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	34	zu	PTKZU	*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	35	belachen	VVINF	*	belachen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	36	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Und	KON	(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wie	PWAV	*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	heißt	VVFIN	*	heißen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	denn	ADV	*)	denn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	die	ART	(NP*	der	sg	fem	-	(8|(94
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Glückliche	NN	*)	glücklich	sg	fem	-	8)|94)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Denn	KON	(S*	denn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	bei	APPR	(PP*	bei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	alle	PIS	*)	alle	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	dem	PDS	(S*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Appiani	NE	(MPN*	appiani	sg	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	–	NE	*)	–	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	ich	PPER	(S*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	weiß	VVFIN	*	weiß	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	wohl	ADV	*)	wohl	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Sie	PPER	*	sie	pl	fem	-	(3
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	Marinelli	NE	(CO*	marinelli	sg	masc	(LOC*)	3)|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	ihn	PPER	(VP(VP*	ihn	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	leiden	VVINF	*)	leiden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	können	VMINF	*))))	können	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	eben	ADV	(AP*	eben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	wenig	PIS	*	wenig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	als	KOKOM	(NP*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	er	PPER	*))	er	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	Sie	PPER	*	sie	sg	fem	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	28	–	NN	(NP*	–	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	29	bei	APPR	(PP*	bei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	30	alle	PIS	*)))	alle	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	31	dem	PDS	(CS(S*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	32	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	33	er	PPER	*	er	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	34	doch	ADV	*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	35	ein	ART	(NP*	ein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	36	sehr	ADV	(AP*	sehr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	37	würdiger	ADJA	*)	würdig	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	38	junger	ADJA	*	jung	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	39	Mann	NN	*	mann	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	40	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	41	ein	ART	(NP*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	42	schöner	ADJA	*	schön	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	43	Mann	NN	*)))	mann	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	44	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	45	ein	ART	(S(NP*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	46	reicher	ADJA	*	reich	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	47	Mann	NN	*)	mann	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	48	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	49	ein	ART	(NP*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	50	Mann	NN	*	mann	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	51	voller	APPR	(PP*	voll	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	52	Ehre	NN	*))))	ehre	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	53	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	hätte	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sehr	ADV	(VP*	sehr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	gewünscht	VVPP	*	wünschen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ihn	PPER	(VP*	ihn	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	mir	PPER	*	sich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	verbinden	VVINF	*	verbinden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	können	VMINF	*))))	können	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	werde	VAFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	noch	ADV	(VP*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	darauf	PROAV	*	darauf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	denken	VVINF	*))	denken	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wenn	KOUS	(VROOT(PSEUDO(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	nicht	PTKNEG	(AP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	zu	PTKA	*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	spät	ADJD	*)	spät	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ist	VAFIN	*)	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Denn	KON	(S*	denn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	so	ADV	(S*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	viel	PIS	*	viel	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ich	PPER	*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	höre	VVFIN	*)	hören	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	sein	PPOSAT	(NP*	sein	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Plan	NN	*))	plan	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	gar	ADV	(VP(AVP*	gar	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	nicht	PTKNEG	*)	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	bei	APPR	(PP*	bei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Hofe	NN	*)	hofe	sg	masc	-	(96)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	sein	PPOSAT	(NP*	sein	-	-	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	Glück	NN	*)	glück	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	machen	VVINF	*))	machen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Er	PPER	(S*	er	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	will	VMFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	seiner	PPOSAT	*	sein	sg	fem	-	(8|(94|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Gebieterin	NN	*	gebieterin	sg	fem	-	8)|94)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	nach	APPR	(PP*	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	seinen	PPOSAT	*	sein	pl	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Tälern	NN	*	täler	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	von	APPR	(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Piemont	NE	*))))	piemont	sg	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	–	CARD	(S(NP*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Gemsen	NN	*)	gemse	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	zu	PTKZU	(VP(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	jagen	VVINF	*)	jagen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	auf	APPR	(VP(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	den	ART	(CNP(NP*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	Alpen	NN	*)	alpen	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	Murmeltiere	NN	*))	murmeltier	pl	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	abzurichten	VVIZU	*)))	abrichten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Was	PWS	(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	kann	VMFIN	*	können	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	er	PPER	*	er	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Beßres	NN	(VP*	beßre	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	tun	VVINF	*))	tun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Hier	ADV	(VROOT(PSEUDO(S*	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	durch	APPR	(PP*	durch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	das	ART	*	der	sg	neut	-	(92
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Mißbündnis	NN	*	mißbündnis	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	welches	PRELS	(S*	welcher	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	er	PPER	*	er	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	trifft	VVFIN	*))	treffen	sg	-	-	92)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	ihm	PPER	*)	ihm	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	doch	ADV	*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	aus	PTKVZ	*)	aus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Der	ART	*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Zirkel	NN	*	zirkel	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	der	ART	*	der	sg	masc	-	(97
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ersten	ADJA	*	erster	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Häuser	NN	*	haus	pl	neut	-	97)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ihm	PPER	*	ihm	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	von	APPR	*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	nun	ADV	*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	an	APZR	*	an	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	verschlossen	VVPP	*	verschließen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	–	XY	*	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Mit	APPR	(VROOT(PSEUDO(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	euern	ART	*	euern	-	-	-	(97|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ersten	ADJA	*	erster	pl	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Häusern	NN	*)	haus	pl	neut	-	97)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	in	APPR	*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	welchen	PWAT	(CNP(NP*	welcher	pl	-	-	(97)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	das	ART	(NM*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Zeremoniell	NN	*)	zeremoniell	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	der	ART	(NP*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Zwang	NN	*	zwang	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	die	ART	(NP*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Langeweile	NN	*)))	langeweile	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	nicht	PTKNEG	(NP(AVP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	selten	ADJD	*)	selten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	die	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	Dürftigkeit	NN	*))	dürftigkeit	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	herrschet	VVFIN	*	herrschet	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Aber	KON	(S*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nennen	VVFIN	*	nennen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	mir	PPER	*	sich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	sie	PPER	*	sie	-	-	-	(8)|(94)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	doch	ADV	*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	der	PRELS	(S*	der	sg	masc	-	(8)|(94)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	er	PPER	*	er	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	dieses	PDAT	(NP*	dieser	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	so	ADV	(AP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	große	ADJA	*)	groß	pl	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Opfer	NN	*)))	opfer	pl	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	bringt	VVFIN	*	bringen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Es	PPER	(VROOT(PSEUDO(S*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	eine	ART	(NP*	ein	sg	fem	-	(8|(94
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	gewisse	ADJA	*	gewiß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Emilia	NE	(MPN*	emilia	*	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Galotti	NE	*)))	galotti	sg	*	-	8)|94)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wie	PWAV	*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Marinelli	NE	*	marinelli	sg	*	(LOC*)	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	eine	ART	(VROOT(PSEUDO(NP*	ein	sg	fem	-	(8|(94
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	gewisse	ADJA	*	gewiß	-	-	-	8)|94)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	–	NN	*)))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Emilia	NE	(VROOT(PSEUDO(MPN*	emilia	*	*	-	(8|(94|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Galotti	NE	*)	galotti	sg	*	-	8)|94)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Emilia	NE	(VROOT(PSEUDO(NP*	emilia	*	*	-	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Galotti	NE	*)	galotti	sg	*	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Nimmermehr	NN	*	nimmermehr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Zuverlässig	ADJD	(VROOT(PSEUDO(CO*	zuverlässig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	gnädiger	ADJA	(NP*	gnädig	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Herr	NN	*))	herr	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nein	PTKANT	*	nein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sag	VVFIN	*	sögen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	das	PDS	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	das	PDS	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	kann	VMFIN	*	können	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	sein	VAINF	*	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	(S*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	irren	VVFIN	*	irren	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sich	PRF	*	sich	pl	-	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	dem	ART	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Namen	NN	*))	name	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Das	ART	(NP*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Geschlecht	NN	*	geschlecht	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	der	ART	(S(NP*	der	sg	masc	-	(8
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Galotti	NE	*)	galotti	sg	masc	(PER*)	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	groß	ADJD	*))	groß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Eine	ART	(S(NP*	ein	sg	fem	-	(8|(94
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Galotti	NE	*)	galotti	-	-	(PER*)	8)|94)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	kann	VMFIN	*	können	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	es	PPER	(VP*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	sein	VAINF	*	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	aber	ADV	(PP(AVP*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	nicht	PTKNEG	*)	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Emilia	NE	*	emilia	*	*	-	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Galotti	NE	*)))	galotti	sg	*	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	nicht	PTKNEG	(NP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Emilia	NE	*	emilia	-	-	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	!	$.	*)))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Emilia	NE	(VROOT(PSEUDO(NP(MPN*	emilia	-	-	(PER*)	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	–	NE	*)	–	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Emilia	NE	*	emilia	*	*	-	(98|(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Galotti	NE	*)	galotti	sg	*	-	98)|8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	So	ADV	(VROOT(PSEUDO(S*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	gibt	VVFIN	*	geben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	noch	ADV	(NP*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	eine	PIS	*	ein	sg	fem	-	(8|(94
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	die	PRELS	(S*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	beide	PIAT	(NP*	beide	pl	masc	-	(98
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Namen	NN	*)	name	pl	masc	-	98)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	führt	VVFIN	*)))	führen	sg	-	-	8)|94)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	(S*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sagten	VVFIN	*	sagen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ohnedem	PIS	(NP*	ohnedem	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	eine	ART	(NP*	ein	sg	fem	-	(8|(94
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	gewisse	ADJA	*	gewiß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Emilia	NE	(MPN*	emilia	*	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Galotti	NE	*	galotti	*	*	-	8)|94)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	–	NE	*))))	–	sg	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	eine	ART	(NP*	ein	sg	fem	-	(8|(94
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	gewisse	ADJA	*)	gewiß	-	-	-	8)|94)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Von	APPR	*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	der	ART	*	der	sg	fem	-	(8
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	rechten	ADV	*	rechter	-	-	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	könnte	VMFIN	*	können	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nur	ADV	*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ein	ART	*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Narr	NN	*	narr	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	sprechen	VVINF	*	sprechen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	–	XY	*	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(S*	sie	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sind	VAFIN	*	sein	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	außer	APPR	(PP*	außer	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sich	PRF	(CNP*	sich	pl	-	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	gnädiger	ADJA	(NP*	gnädig	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Herr	NN	*))))	herr	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Kennen	VVFIN	(S*	kennen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*)	sie	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	denn	ADV	(NP(AP*	denn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	diese	PDAT	*)	dieser	sg	fem	-	(8
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Emilia	NN	*)	emilia	sg	fem	-	8)|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	habe	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	zu	PTKZU	*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	fragen	VVINF	*	fragen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Marinelli	NE	*	marinelli	sg	masc	(LOC*)	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Er	PPER	*	er	sg	masc	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Emilia	NE	(NP*	emilia	*	*	-	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Galotti	NE	*)	galotti	sg	*	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Die	ART	(VROOT(PSEUDO(NP*	der	sg	fem	-	(8
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Tochter	NN	*	tochter	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	des	ART	(NP*	der	sg	masc	-	(12
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Obersten	ADJA	*	oberer	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Galotti	NE	*)	galotti	sg	-	-	8)|12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	bei	APPR	(PP*	bei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Sabionetta	NE	*))	sabionetta	sg	*	(LOC*)	(56)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Eben	ADV	(VROOT(PSEUDO(S*)	eben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	die	ART	*	der	pl	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Die	ART	(VROOT(PSEUDO(S*	der	pl	neut	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	hier	ADV	(PP*	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	in	APPR	*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Guastalla	NE	*)	guastalla	pl	neut	(LOC*)	(99)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ihrer	PPOSAT	*	ihr	sg	fem	-	(53|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Mutter	NN	*)	mutter	sg	fem	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	wohnet	VVFIN	*)	wohnen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Eben	ADV	(VROOT(PSEUDO(S*)	eben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	die	ART	*	der	pl	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Unfern	NN	(VROOT(PSEUDO(NP*	unfer	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	der	ART	(NP*	der	sg	masc	-	(100
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Kirche	NN	*	kirche	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Allerheiligen	NN	*))	allerheilige	pl	*	(LOC*)	100)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Eben	ADV	(VROOT(PSEUDO(S*)	eben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	die	ART	*	der	pl	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Mit	APPR	(VROOT(PSEUDO(CS(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	einem	ART	*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Worte	NN	*	wort	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	–	APPR	(PP*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Indem	NN	*))	indem	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	er	PPER	(S*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	nach	APPR	(PP*	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	dem	ART	*	der	sg	masc	-	(31
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Porträte	NN	*)	portrat	sg	masc	-	31)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	springt	VVFIN	*)	springen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	es	PPER	(S*	es	sg	neut	-	(31)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	dem	ART	(NP*	der	sg	masc	-	(3
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Marinelli	NN	*	marinelli	sg	masc	-	3)|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	die	ART	*	der	sg	fem	-	(101
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	Hand	NN	*))	hand	sg	fem	-	101)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	gibt	VVFIN	*))	geben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Da	KOUS	*	da	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Diese	PDAT	*	dieser	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Diese	PDAT	(VROOT(PSEUDO(NP*	dieser	sg	fem	-	(8
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Emilia	NE	*	emilia	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Galotti	NE	*)	galotti	sg	-	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sprich	NN	(NP*	sprich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	dein	PPOSAT	(NP*	dein	sg	neut	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	verdammtes	ADJA	*	verdammt	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	»	NN	*))	»	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Eben	ADV	(NP*	eben	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	die	ART	*	der	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	«	NN	*)	«	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	noch	ADV	(AVP*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	einmal	ADV	*)	einmal	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	und	KON	(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	stoß	VVFIN	*	stoß	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	mir	PPER	*	sich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	den	ART	(NP*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	Dolch	NN	*)	dolch	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	ins	APPRART	(PP*	in	sg	neut	-	(35
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	Herz	NN	*))	herz	sg	neut	-	35)
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Eben	ADV	(VROOT(PSEUDO(S*)	eben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	die	ART	*	der	pl	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Henker	NE	(VROOT(PSEUDO(MPN*	henker	-	-	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*)))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Diese	PDAT	*	dieser	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO(S*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Diese	PDAT	(NP*	dieser	sg	fem	-	(8
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Emilia	NE	*	emilia	*	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Galotti	NE	*)	galotti	sg	*	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	wird	VAFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	heute	ADV	*	heute	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	–	NN	(NP*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	–	CARD	*))))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Gräfin	NE	(VROOT(PSEUDO(NP*	gräfin	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Appiani	NE	*)	appiani	-	-	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Hier	ADV	(S*	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	reißt	VVFIN	*	reißen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	der	ART	(NP*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Prinz	NN	*)	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	dem	ART	(NP*	der	sg	masc	-	(3
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Marinelli	NE	*))	marinelli	sg	masc	(LOC*)	3)|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	das	ART	(CS(S(NP*	der	sg	neut	-	(31
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Bild	NN	*)	bild	sg	neut	-	31)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	wieder	ADV	*	wieder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	aus	APPR	(PP*	aus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	der	ART	*	der	sg	fem	-	(101
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Hand	NN	*))	hand	sg	fem	-	101)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	wirft	VVFIN	(S*	werfen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	es	PPER	*	es	sg	neut	-	(31)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	bei	APPR	(PP*	bei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	Seite	NN	*)))	seite	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Die	ART	(VROOT(PSEUDO(S(NP*	der	sg	fem	-	(102
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Trauung	NN	*)	trauung	sg	fem	-	102)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	geschieht	VVFIN	*	geschehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	der	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Stille	NN	*	stille	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	auf	APPR	(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	dem	ART	*	der	sg	masc	-	(103
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Landgute	NN	*	landgute	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	des	ART	(NP*	der	sg	masc	-	(12
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Vaters	NN	*)	vater	sg	masc	-	103)|12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	bei	APPR	(PP*	bei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Sabionetta	NE	*))))	sabionetta	sg	*	(LOC*)	(56)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Gegen	APPR	(VROOT(PSEUDO(S(PP*	gegen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Mittag	NN	*)	mittag	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	fahren	VVFIN	*	fahren	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Mutter	NN	(CNP*	mutter	*	*	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Tochter	NN	*	tochter	sg	masc	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	der	ART	(NP*	der	sg	masc	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Graf	NN	*)	graf	sg	*	-	9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	vielleicht	ADV	(NP*	vielleicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	ein	ART	*	ein	*	*	-	(104
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	paar	PIAT	(NP*	paar	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Freunde	NN	*	freund	pl	masc	-	104)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	dahin	PROAV	*)))	dahin	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	ab	PTKVZ	*)	ab	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)))	prinz	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	der	ART	(VROOT(PSEUDO(S(NP*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sich	PRF	(AP*	sich	sg	-	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	voll	APPR	(PP*	voll	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Verzweiflung	NN	*)	verzweiflung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	in	APPR	*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	einen	ART	*)	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Stuhl	NN	*)	stuhl	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	wirft	VVFIN	*)))	werfen	sg	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	So	ADV	(VROOT(PSEUDO(S*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	bin	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ich	PPER	(VP*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	verloren	VVPP	*))	verlieren	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	So	ADV	(S*)	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	will	VMFIN	(S*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	leben	VVINF	*)	leben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Aber	KON	(VROOT(PSEUDO(S*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	was	PWS	*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Ihnen	PPER	*	ihnen	pl	*	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	gnädiger	ADJA	(NP*	gnädig	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Herr	NN	*))	herr	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)))	prinz	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	der	ART	(VROOT(PSEUDO(S(NP*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	gegen	APPR	(PP*	gegen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ihn	PPER	*))	ihn	sg	masc	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	wieder	ADV	*	wieder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	aufspringt	VVFIN	*)))	aufspringen	sg	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Verräter	NN	(VROOT(PSEUDO*	verräter	-	-	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	was	PWS	*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mir	PPER	*	sich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Nun	ADV	(S*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ja	ADV	*)	ja	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	(CS(S*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	liebe	VVFIN	*	lieben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	sie	PPER	*)	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ich	PPER	(S*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	bete	VVFIN	*	ben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	sie	PPER	*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	an	PTKVZ	*))	an	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Mögt	ADJD	(VROOT(PSEUDO(PP*	mögt	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ihr	PPOSAT	*	ihr	sg	fem	-	(105)|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	es	PPER	(CNP(NP*	es	sg	neut	-	(106)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	doch	ADV	*)	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	wissen	VVINF	*	wissen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	!	$.	*))))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	mögt	ADJD	(VROOT(PSEUDO(S(VP*	mögen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ihr	PPOSAT	(NP*	ihr	sg	neut	-	(3)|(105)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	es	PPER	(AP(AVP(S(VP*	es	sg	neut	-	(106)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	doch	ADV	*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	längst	ADV	*	längst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	gewußt	VVPP	*)	wissen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	haben	VAFIN	*)	haben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	alle	PIS	(NP*	alle	pl	masc	-	(105|(3
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	ihr	PPER	(NP*	ihr	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	denen	PRELS	(S*	der	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	der	ART	(NP*	der	pl	fem	-	(11
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	tollen	ADJA	*	toll	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	Orsina	NE	*)))))	orsina	-	-	-	11)|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	schimpfliche	ADJA	*)	schimpflich	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	Fesseln	NN	*	fessel	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	lieber	ADV	(AP*	lieber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	ewig	ADJD	*))	ewig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	tragen	VVINF	*)	tragen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	sollte	VMFIN	*)	sollen	sg	-	-	105)|3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Nur	ADV	(S*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Sie	PPER	*	sie	pl	fem	-	(3
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Marinelli	NE	*	marinelli	sg	masc	(LOC*)	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	der	ART	(S*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Sie	PPER	*	sie	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	so	ADV	(AVP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	oft	ADV	*)	oft	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	mich	APPR	(PP*	mich	sg	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Ihrer	PPOSAT	*	ihr	pl	masc	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	innigsten	ADJA	*	innig	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Freundschaft	NN	*)	freundschaft	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	versicherten	VVFIN	*))	versichern	pl	-	-	3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	–	$.	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	O	PPER	*	O	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	ein	ART	(NP*	ein	-	-	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	Fürst	NN	*)	fürst	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	hat	VAFIN	*)	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	keinen	PIAT	(NP*	kein	sg	masc	-	(107
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	Freund	NN	*)	freund	sg	masc	-	107)
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	kann	VMFIN	(VROOT(PSEUDO(S*	können	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	keinen	PIAT	(VP(NP*	kein	sg	masc	-	(107
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Freund	NN	*)	freund	sg	masc	-	107)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	haben	VAINF	*))	haben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*	sie	pl	*	-	(3
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Sie	PPER	(NP*	sie	pl	*	-	3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	so	ADV	(AP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	treulos	ADJD	(CAP*	treulos	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	so	ADV	(AP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	hämisch	ADJD	*))))	hämisch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	mir	PPER	(VP*	sich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	bis	APPR	(PP*	bis	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	auf	APPR	*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	diesen	PDAT	*	dieser	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	Augenblick	NN	*)	augenblick	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	die	ART	(NP*	der	sg	fem	-	(108
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	Gefahr	NN	*)	gefahr	sg	fem	-	108)
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	verhöhlen	VVINF	*)	verhöhlen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	dürfen	VMFIN	*	dürfen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	die	PRELS	(S*	der	pl	masc	-	(108)
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	meiner	PPOSAT	(NP*	mein	sg	masc	-	(109|(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	Liebe	NN	*)	liebe	pl	*	-	109)
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	drohte	VVFIN	*))	drohen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	wenn	KOUS	(CS(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	28	Ihnen	PPER	*	ihnen	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	29	jemals	ADV	*	jemals	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	30	das	ART	(NP*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	31	vergebe	ADJA	*))	vergeben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	32	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	33	–	KON	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	34	so	ADV	(S*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	35	werde	VAFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	36	mir	PPER	(VP*	sich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	37	meiner	PPOSAT	(NP(AP(NP*	mein	sg	fem	-	(110|(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	38	Sünden	NN	*)	sünden	pl	masc	-	110)
Emilia.xml.rksp.0.CoNLL2012.conll	000	39	keine	PIAT	*))	kein	pl	fem	-	(110)
Emilia.xml.rksp.0.CoNLL2012.conll	000	40	vergeben	VVINF	*)))	vergeben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	41	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S(S*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	weiß	VVFIN	*	weißn	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	kaum	ADV	*	kaum	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Worte	NN	(VP*	wort	pl	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	finden	VVINF	*)))	finden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Prinz	NN	*	prinz	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	–	NN	*	–	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	wenn	KOUS	*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Sie	PPER	*	sie	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	mich	PRF	(VP*	mich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	auch	ADV	*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	dazu	PROAV	*	dazu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	kommen	VVINF	*)	kommen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	ließen	VVFIN	*	lassen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	–	PPER	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	Ihnen	PPER	*	ihnen	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	mein	PPOSAT	(VP(NP*	mein	sg	neut	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	Erstaunen	NN	*)	erstaunen	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	bezeigen	VVINF	*)))	bezeigen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	(S*	sie	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	lieben	VVFIN	*)	lieben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Emilia	NE	(NP*	emilia	*	*	-	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Galotti	NE	*)	galotti	sg	*	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Schwur	NN	(NP*	schwur	sg	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	dann	ADV	(PP*	dann	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	gegen	APPR	*	gegen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Schwur	NN	*))	schwur	sg	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Wenn	KOUS	(S(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ich	PPER	*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	von	APPR	(CVP(VP(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	dieser	PDAT	*	dieser	sg	fem	-	(109
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Liebe	NN	*)	liebe	sg	fem	-	109)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	das	ART	(NP*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	geringste	ADJA	*)	gering	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	gewußt	VVPP	*)	wissen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	das	ART	(VP(NP*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	geringste	ADJA	*)	gering	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	vermutet	VVPP	*))	vermuten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	habe	VAFIN	*)	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	so	ADV	(S*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	möge	VMFIN	*	mögen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	weder	KON	(CNP*	weder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	Engel	NN	*	engel	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	noch	KON	*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	Heiliger	NN	*)	heilig	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	von	APPR	(VP(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	mir	PPER	*)	sich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	28	wissen	VVINF	*)))	wissen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	29	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Eben	NN	*	eben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	das	PDS	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	wollt	VMFIN	*	wollen	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ich	PPER	*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	in	APPR	*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	die	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Seele	NN	*	seele	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	der	ART	*	der	pl	fem	-	(11
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Orsina	NE	*	orsina	pl	fem	(LOC*)	11)|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	schwören	VVFIN	*	schwören	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ihr	PPOSAT	(VROOT(PSEUDO(S(NP*	ihr	pl	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Verdacht	NN	*)	verdacht	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	schweift	VVFIN	*	schweifen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	auf	APPR	(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	einer	ART	*	ein	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ganz	ADV	(AP*	ganz	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	andern	ADJA	*)	anderer	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Fährte	NN	*))	fährte	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	So	ADV	(VROOT(PSEUDO(S*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	verzeihen	VVFIN	*	verzeihen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mir	PPER	(NP*	sich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Marinelli	NE	*))	marinelli	sg	masc	(PER*)	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Indem	NN	(S*	indem	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	er	PPER	*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	sich	PRF	*	sich	sg	-	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	ihm	PPER	*	ihm	sg	masc	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	die	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Arme	NN	*))	arm	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	wirft	VVFIN	*	werfen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	betauern	VVFIN	*	betauern	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mich	PPER	*	mich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nun	ADV	(VROOT(PSEUDO(NP*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	da	ADV	*	da	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Prinz	NN	*)	prinz	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Erkennen	VVFIN	(VROOT(PSEUDO(S*	erkennen	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*	sie	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	da	ADV	*	da	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	die	ART	(NP*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Frucht	NN	*	frucht	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Ihrer	PPOSAT	(NP*	ihr	sg	fem	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Zurückhaltung	NN	*)))	zurückhaltung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	»	XY	(S*	»	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Fürsten	NN	*	fürst	-	-	-	(111)|(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	haben	VAFIN	*)	haben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	keinen	PIAT	(NP*	kein	sg	masc	-	(107
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Freund	NN	*)	freund	sg	masc	-	107)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	können	VMFIN	*	können	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	keinen	PIAT	*	kein	sg	masc	-	(107
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Freund	NN	*	freund	sg	masc	-	107)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	haben	VAINF	*	haben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	«	XY	*	«	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Und	KON	(NP(CNP*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	die	ART	(NP*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Ursache	NN	*))	ursache	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	wenn	KOUS	(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	dem	PDS	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	ist	VAFIN	*))	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Weil	KOUS	*	weil	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sie	PPER	*	sie	pl	*	-	(111)|(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	keinen	PIAT	*	kein	sg	masc	-	(107)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	haben	VAINF	*	haben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	wollen	VMFIN	*	wollen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Heute	ADV	(S(AVP*	heute	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	beehren	VVFIN	(S*	beehren	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sie	PPER	*))	sie	pl	*	-	(0)|(111)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	uns	PPER	*	uns	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ihrem	PPOSAT	*	ihr	sg	masc	-	(0)|(111)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Vertrauen	NN	*)	vertrauen	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	teilen	VVFIN	(CS(S*	teilen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	uns	PPER	*	uns	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	ihre	PPOSAT	(NP*	ihr	pl	neut	-	(111)|(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	geheimsten	ADJA	*	geheim	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Wünsche	NN	*)	wunsch	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	mit	PTKVZ	*)	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	schließen	VVFIN	(S*	schließen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	uns	PPER	*	uns	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	ihre	PPOSAT	(NP*	ihr	pl	masc	-	(0)|(111)
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	ganze	ADJA	*	ganz	pl	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	Seele	NN	*)	seele	pl	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	auf	PTKVZ	*)))	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	und	KON	(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	morgen	ADV	*	morgen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	sind	VAFIN	*	sein	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	wir	PPER	*	wir	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	ihnen	PPER	*	ihnen	pl	masc	-	(111)|(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	28	wieder	ADV	(AP*	wieder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	29	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	30	fremd	ADJD	*)	fremd	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	31	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	32	als	KOKOM	(S*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	33	hätten	VAFIN	*	haben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	34	sie	PPER	*	sie	pl	masc	-	(0)|(111)
Emilia.xml.rksp.0.CoNLL2012.conll	000	35	nie	ADV	(VP*	nie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	36	ein	ART	(NP*	ein	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	37	Wort	NN	*)	wort	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	38	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	39	uns	PPER	*)	uns	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	40	gewechselt	VVPP	*)))	wechseln	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	41	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ach	ITJ	(VROOT(PSEUDO(S*)	ach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Marinelli	NE	*	marinelli	sg	masc	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wie	PWAV	*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	konnt	ADJD	*	konnen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Ihnen	PPER	*	ihnen	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	vertrauen	VVINF	*	vertrauen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	was	PWS	*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	mir	PPER	*	sich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	selbst	ADV	*	selbst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	kaum	ADV	*	kaum	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	gestehen	VVINF	*	gestehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	woll	VMFIN	*	woll	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	te	FM	*	te	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	also	ADV	*	also	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wohl	ADV	*	wohl	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	noch	ADV	(NP*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	weniger	PIS	*)	weniger	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	der	ART	(VP(NP*	der	sg	fem	-	(8
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Urheberin	NN	*)	urheberin	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Ihrer	PPOSAT	(NP*	ihr	sg	fem	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Qual	NN	*)	qual	-	-	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	gestanden	VVPP	*)	stehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	haben	VAFIN	*)	haben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ihr	PPER	*	ihr	sg	neut	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Alle	PIS	(S*	aller	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	meine	PPOSAT	(NP*	mein	sg	fem	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Mühe	NN	*))	mühe	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ist	VAFIN	(S*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	vergebens	ADV	(VP*	vergebens	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	gewesen	VAPP	*	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	sie	PPER	(VP*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	ein	ART	(AVP*	ein	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	zweitesmal	ADV	*)	zweitesmal	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	sprechen	VVINF	*))))	sprechen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	das	PDS	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	erstemal	ADV	*	erstemal	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	–	XY	*	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sprach	VVFIN	(VROOT(PSEUDO(S*	sprach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ich	PPER	*)	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sie	PPER	*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	–	XY	*	–	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	O	ITJ	(S*)	O	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ich	PPER	(S*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	komme	VVFIN	*	kommen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	von	APPR	(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Sinnen	NN	*))	sinnen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	soll	VMFIN	*	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Ihnen	PPER	(VP*	ihnen	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	noch	ADV	(AVP*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	lange	ADV	*)	lange	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	erzählen	VVINF	*))	erzählen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sehen	VVFIN	*	sehen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mich	PPER	*	mich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	einen	ART	*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Raub	NN	*	raub	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	der	ART	*	der	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Wellen	NN	*	welle	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	was	PIS	*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	fragen	VVFIN	*	fragen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	viel	PIS	*	viel	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	wie	KOKOM	*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	geworden	VAPP	*	werden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Retten	VVFIN	(VROOT(PSEUDO(S*	retten	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mich	PPER	*	mich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	wenn	KOUS	(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	können	VMFIN	*	können	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	und	KON	(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	fragen	VVFIN	*	fragen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	dann	ADV	*)))	dann	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Retten	VVINF	*	rette	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ist	VAFIN	(VROOT(PSEUDO(S*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	da	ADV	*	da	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	viel	ADV	(VP*	viel	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	retten	VVINF	*)))	retten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Was	PWS	(S*	was	sg	neut	-	(112)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	(VP*	sie	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	versäumt	VVPP	*)	versäumen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	haben	VAFIN	*)	haben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	gnädiger	ADJA	(NP*	gnädig	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Herr	NN	*	herr	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	der	ART	(VP(NP*	der	sg	masc	-	(8
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Emilia	NE	*	emilia	sg	masc	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Galotti	NE	*)	galotti	sg	neut	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	bekennen	VVINF	*)	bekennen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	das	PDS	(S*	der	sg	neut	-	(112)
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	bekennen	VVFIN	*	bekennen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	Sie	PPER	*	sie	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	nun	ADV	*)))	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	der	ART	(NP*	der	sg	fem	-	(8
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	Gräfin	NN	*	gräfin	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	Appiani	NE	*)	appiani	sg	*	(PER*)	8)|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Waren	NN	(VROOT(PSEUDO(S(S(VP(NP*	sein	pl	-	-	(113
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	die	PRELS	(S*	der	pl	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	man	PIS	*	man	sg	*	-	(17)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	aus	APPR	(PP*	aus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	der	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ersten	ADJA	*	erster	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Hand	NN	*)	hand	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	nicht	PTKNEG	*))	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	haben	VAINF	*)	haben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	kann	VMFIN	*)	können	sg	-	-	113)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	kauft	VVFIN	*	kaufen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	man	PIS	*	man	sg	*	-	(17)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	aus	APPR	(PP*	aus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	der	ART	(CNP(NP*	der	sg	fem	-	(114
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	zweiten	ADJA	*)	zweiter	sg	fem	-	114)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	–	TRUNC	(CNP*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	solche	PIAT	(NP*	solcher	pl	fem	-	(113
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	Waren	NN	*))))	sein	pl	fem	-	113)
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	nicht	PTKNEG	(PP(AVP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	selten	ADJD	*)	selten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	aus	APPR	*	aus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	der	ART	*	der	sg	fem	-	(114
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	zweiten	ADJA	*)	zweiter	sg	fem	-	114)
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	um	KOUI	(AP(AVP*	um	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	28	so	ADV	*)	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	29	viel	ADV	*	viel	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	30	wohlfeiler	ADJD	*))	wohlfeil	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	31	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ernsthaft	ADJD	(VROOT(PSEUDO(S*	ernsthaft	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Marinelli	NE	(CO*	marinelli	sg	masc	(LOC*)	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ernsthaft	ADJD	*	ernsthaft	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	oder	KON	*	oder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	–	NN	*))))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Freilich	ADV	*	freilich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	auch	ADV	*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	um	KOUI	*	um	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	viel	ADV	*	viel	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	schlechter	ADJD	*	schlecht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	–	XY	*	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(S*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	werden	VAFIN	*	werden	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	unverschämt	ADJD	*)	unverschämt	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	dazu	PROAV	*	dazu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	will	VMFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	der	ART	(NP*	der	sg	masc	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Graf	NN	*)	graf	sg	*	-	9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	damit	PROAV	*	damit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	aus	APPR	(PP*	aus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	dem	ART	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Lande	NN	*))	land	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ja	PTKANT	(S*	ja	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	müßte	VMFIN	*	müssen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	man	PIS	*	man	sg	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	auf	APPR	(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	etwas	PIS	*)	etwas	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	anders	ADV	*	anders	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	denken	VVFIN	*)	denken	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	auf	APPR	(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	was	PIS	*))	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Liebster	NN	*	liebe	sg	masc	-	(3
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	bester	ADJA	*	gut	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Marinelli	NN	(NP*	marinelli	sg	masc	-	3)|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	denken	VVFIN	(S*	denken	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	für	APPR	(PP*	für	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	mich	PPER	*)))	mich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	würden	VAFIN	*	werden	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	tun	VVINF	(VP*	tun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	wenn	KOUS	(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Sie	PPER	*	sie	sg	fem	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	an	APPR	(PP*	an	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	meiner	PPOSAT	*	mein	sg	fem	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Stelle	NN	*)	stelle	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	wären	VAFIN	*)))	sein	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Vor	APPR	(VROOT(PSEUDO(PP*	vor	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	allen	PIAT	*	aller	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Dingen	NN	*	ding	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	eine	ART	(VP(NP*	ein	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Kleinigkeit	NN	*	kleinigkeit	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	als	APPR	(PP*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	eine	ART	*	ein	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Kleinigkeit	NN	*))	kleinigkeit	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	ansehen	VVINF	*))	ansehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	mir	PPER	(S(VP*	sich	sg	*	-	(0)|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	sagen	VVINF	*	sagen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	ich	PPER	*	ich	sg	*	-	(0)|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	nicht	PTKNEG	(VP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	vergebens	ADV	*	vergebens	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	sein	VAINF	*)	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	wolle	VMFIN	*))	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	was	PWS	*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	ich	PPER	*	ich	sg	*	-	(0)|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	bin	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	–	ADJA	(NP*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	Herr	NN	*))	herr	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	28	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Schmeicheln	NN	(VROOT(PSEUDO(CS(S*	schmeicheln	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mir	PPER	*	sich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	einer	ART	*	ein	sg	fem	-	(115
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Gewalt	NN	*))	gewalt	sg	fem	-	115)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	von	APPR	(S(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	der	PRELS	*)	der	sg	fem	-	(115)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	hier	ADV	*	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	keinen	PIAT	(NP*	kein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Gebrauch	NN	*)	gebrauch	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	absehe	VVFIN	*))	absehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Heute	NN	(S*	heute	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sagen	VVFIN	*	sagen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Sie	PPER	*)	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	schon	ADV	(VROOT(PSEUDO(S*	schon	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	heute	ADV	*)	heute	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Erst	ADV	(VROOT(PSEUDO(S(AVP*	erst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	heute	ADV	*)	heute	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	–	CARD	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	soll	VMFIN	*	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	es	PPER	(VP*	es	sg	neut	-	(102)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	geschehen	VVINF	*))	geschehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(VP*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	nur	ADV	*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	geschehenen	ADJA	(S(NP*	geschehen	pl	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Dingen	NN	*)	ding	pl	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ist	VAFIN	*)	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	raten	VVINF	*))	raten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Nach	APPR	*	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	einer	ART	(NP*	ein	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	kurzen	ADJA	*	kurz	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Überlegung	NN	*)	überlegung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wollen	VMFIN	(VROOT(PSEUDO(NP(S*	wollen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*	sie	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mir	PRF	(VP*	sich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	freie	ADJA	(NP*	frei	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Hand	NN	*)	hand	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	lassen	VVINF	*))	lassen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Prinz	NN	*)	prinz	-	-	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wollen	VMFIN	(VROOT(PSEUDO(S*	wollen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*	sie	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	alles	PIS	(VP*	alle	sg	neut	-	(116)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	genehmigen	VVINF	*	genehmig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	was	PWS	(S*	was	sg	neut	-	(116)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ich	PPER	*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	tue	VVFIN	*)))	tun	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Alles	PIS	(VROOT(PSEUDO(NP*	alle	sg	neut	-	(116)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Marinelli	NE	(NP*	marinelli	sg	neut	(LOC*)	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	alles	PIS	(NP*	alle	sg	neut	-	(116)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	was	PRELS	(S*	was	sg	neut	-	(116)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	diesen	PDAT	(NP*	dieser	sg	masc	-	(102
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Streich	NN	*)	streich	sg	masc	-	102)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	abwenden	VVINF	*	abwenden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	kann	VMFIN	*))))	können	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	So	ADV	(VROOT(PSEUDO(S*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	lassen	VVFIN	*	lassen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*	sie	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	uns	PPER	(VP*	uns	pl	*	-	(3)|(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	keine	PIAT	(NP*	kein	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Zeit	NN	*)	zeit	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	verlieren	VVINF	*))	verlieren	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Aber	KON	(S*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	bleiben	VVFIN	*	bleiben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Sie	PPER	*	sie	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nicht	PTKNEG	*)	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	in	APPR	*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	der	ART	(NP*	der	sg	fem	-	(26
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Stadt	NN	*)	stadt	sg	fem	-	26)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Fahren	VVFIN	(VROOT(PSEUDO(S*	fahren	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*	sie	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sogleich	ADV	*	sogleich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nach	APPR	(PP*	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Ihrem	PPOSAT	*	ihr	sg	neut	-	(117|(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Lustschlosse	NN	*)	lustschlosse	sg	neut	-	117)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	nach	APPR	(PP*	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Dosalo	NE	*))	dosalo	sg	neut	(LOC*)	(118)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(S(NP*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Weg	NN	*	weg	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	nach	APPR	(PP*	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Sabionetta	NE	*))	sabionetta	sg	neut	-	(56)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	geht	VVFIN	*	gehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	da	ADV	(AP*	da	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	vorbei	PTKVZ	*))	vorbei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wenn	KOUS	*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mir	PPER	*	sich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	gelingt	VVFIN	*	gelingen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	den	ART	*	der	sg	masc	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Grafen	NN	*	grafe	sg	masc	-	9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	augenblicklich	ADJD	*	augenblicklich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	zu	PTKZU	*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	entfernen	VVINF	*	entfernen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	denk	ADJD	*	denk	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	ich	PPER	*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	–	XY	*	–	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	Doch	KON	*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	doch	KON	*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	ich	PPER	*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	glaube	VVFIN	*	glauben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	er	PPER	*	er	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	geht	VVFIN	*	gehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	in	APPR	*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	diese	PDAT	*	dieser	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	28	Falle	NN	*	fall	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	29	gewiß	ADV	*	gewiß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	30	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(S*	sie	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wollen	VMFIN	*	wollen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ja	ADV	(VP*	ja	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Prinz	NN	(NP*	prinz	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	wegen	APPR	(NP(PP*	wegen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Ihrer	PPOSAT	*	ihr	sg	fem	-	(81|(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Vermählung	NN	*)	vermählung	sg	fem	-	81)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	einen	ART	*	ein	sg	masc	-	(119
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Gesandten	NN	*	gesandter	sg	masc	-	119)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	nach	APPR	(PP*	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Massa	NE	*)))	massa	-	-	(LOC*)	(83)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	schicken	VVINF	*))	schicken	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Lassen	VVFIN	(VROOT(PSEUDO(CS(S*	lassen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*	sie	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	den	ART	(VP(NP*	der	sg	masc	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Grafen	NN	*	grafe	sg	masc	-	9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	dieser	PDAT	(NP*	dieser	sg	masc	-	(119
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Gesandte	NN	*))	gesandter	sg	masc	-	119)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	sein	VAINF	*	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	dem	ART	*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Bedinge	NN	*)))	bedinge	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	er	PPER	*	er	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	noch	ADV	(AVP*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	heute	ADV	*)	heute	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	abreiset	VVFIN	*))	abreiset	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Verstehen	VVFIN	(S*	verstehen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*)	sie	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Vortrefflich	ADJD	(VROOT(PSEUDO*	vortrefflich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Bringen	VVFIN	*	bringen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	(S*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ihn	PPER	*	ihn	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	zu	APPR	(PP*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	mir	PPER	*)	sich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	heraus	PTKVZ	*)	heraus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Gehen	VVFIN	(VROOT(PSEUDO(S(S*	gehen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*)	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	eilen	VVFIN	*	eilen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Sie	PPER	*)	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	werfe	VVFIN	*	werfen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mich	PRF	*	mich	sg	-	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sogleich	ADV	*	sogleich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	den	ART	*	der	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Wagen	NN	*))	wagen	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Marinelli	NE	(VROOT(PSEUDO(S*	marinelli	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	geht	VVFIN	*	gehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ab	PTKVZ	*)	ab	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sogleich	ADV	(VROOT(PSEUDO(S*)	sogleich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	sogleich	ADV	(VROOT(PSEUDO(S*)	sogleich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Wo	PWAV	(S*	wo	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	blieb	VVFIN	*	bleiben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	es	PPER	*)	es	sg	neut	-	(31)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sich	PRF	(AP*	sich	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	nach	APPR	(PP*	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	dem	ART	*	der	sg	masc	-	(31
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Porträte	NN	*)	portrat	sg	masc	-	31)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	umsehend	ADJD	*)	umsehend	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Auf	APPR	(VROOT(PSEUDO(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	der	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Erde	NN	*)	erde	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	das	PDS	(VROOT(PSEUDO(S*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	war	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	zu	PTKA	(AP*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	arg	ADJD	*))	arg	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Indem	KOUS	(VROOT(PSEUDO(S*	indem	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	er	PPER	*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	es	PPER	*	es	sg	neut	-	(31)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	aufhebt	VVFIN	*)	aufheben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Doch	KON	*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	betrachten	VVFIN	*	betrachten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	betrachten	VVINF	(VROOT(PSEUDO(S*	betrachten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	mag	VMFIN	*	mögen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	dich	PRF	*	dich	sg	-	-	(8)|(31)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	fürs	APPRART	(PP*	für	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	erste	PIS	*)	erster	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	nicht	PTKNEG	(AVP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	mehr	ADV	*))	mehr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Warum	PWAV	*	warum	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sollt	VMFIN	*	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	mir	PPER	*	sich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	den	ART	*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Pfeil	NN	*	pfeil	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	noch	ADV	*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	tiefer	ADJD	*	tief	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	in	APPR	*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	die	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Wunde	NN	*	wunde	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	drücken	VVINF	*	drücken	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Setzt	VVFIN	(VROOT(PSEUDO(S*	setzen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	es	PPER	*	es	sg	neut	-	(31)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	bei	APPR	(PP*	bei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Seite	NN	*))	seite	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Geschmachtet	VVPP	*	gesmachten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	geseufzet	VVPP	*	seufzen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	hab	VAFIN	*	hab	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	lange	ADV	*	lange	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	genung	ADJD	*	genung	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	–	KON	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	länger	ADJD	*	lang	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	als	KOKOM	*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	gesollt	VVPP	*	sollen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	hätte	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	aber	ADV	*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	nichts	PIS	*	nichts	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	getan	VVPP	*	tun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	über	APPR	*	über	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	die	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	zärtliche	ADJA	*	zärtlich	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Untätigkeit	NN	*	untätigkeit	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	bei	APPR	*	bei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	einem	ART	*	ein	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Haar	NN	*	haar	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	alles	PIS	*	alle	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	verloren	VVPP	*	verlieren	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Und	KON	(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wenn	KOUS	*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nun	ADV	*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	doch	ADV	*)	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	alles	PIS	(S(VP*	alle	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	verloren	VVPP	*)	verlieren	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	wäre	VAFIN	*)	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wenn	KOUS	(VROOT(PSEUDO(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Marinelli	NE	*	marinelli	sg	*	(LOC*)	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	nichts	PIS	*	nichts	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ausrichtete	VVFIN	*)	ausrichten	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Warum	PWAV	(S*	warum	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	will	VMFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	mich	PRF	*	mich	sg	-	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	auch	ADV	*)	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	auf	APPR	(S(VP(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ihn	PPER	*)	ihn	sg	masc	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	allein	ADV	*	allein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	verlassen	VVINF	*))	verlassen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Es	PPER	(VROOT(PSEUDO(S*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	fällt	VVFIN	*	fallen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mir	PPER	*	sich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ein	PTKVZ	*	ein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	–	KOUS	(S*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	um	APPR	(PP*	um	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	diese	PDAT	*	dieser	sg	fem	-	(120
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Stunde	NN	*	stunde	sg	fem	-	120)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Nach	APPR	(PP*	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	der	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Uhr	NN	*))	uhr	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	sehend	ADJD	*))	sehend	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	um	APPR	(VROOT(PSEUDO(S(PP*	um	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	diese	PDAT	*	dieser	sg	fem	-	(120
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	nämliche	ADJA	*	nämlich	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Stunde	NN	*)	stunde	sg	fem	-	120)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	pflegt	VVFIN	*	pflegen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	das	ART	(NP*	der	sg	neut	-	(8
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	fromme	ADJA	*	fromm	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Mädchen	NN	*)	mädchen	sg	neut	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	alle	PIAT	(NP*	aller	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Morgen	NN	*)	morgen	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	bei	APPR	(PP*	bei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	den	ART	*	der	pl	masc	-	(121
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Dominikanern	NN	*)	dominikaner	pl	masc	-	121)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	die	ART	(VP(NP*	der	sg	fem	-	(122
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Messe	NN	*)	messe	sg	fem	-	122)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	hören	VVINF	*)))	hören	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Wie	PWAV	(S*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wenn	KOUS	*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	sie	PPER	(VP*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	da	ADV	*	da	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	sprechen	VVINF	*))	sprechen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	suchte	VVFIN	*)	suchen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Doch	KON	*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	heute	ADV	*	heute	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	heut	VVFIN	*	heuen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	an	APPR	*	an	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ihrem	PPOSAT	*	ihr	sg	masc	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Hochzeittage	NN	*	hochzeittage	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	–	NN	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	heute	ADV	*	heute	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	werden	VAFIN	*	werden	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	ihr	PPER	*	ihr	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	andere	ADJA	*	anderer	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	Dinge	NN	*	ding	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	am	APPRART	*	an	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	Herzen	NN	*	herz	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	liegen	VVINF	*	liegen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	als	KOKOM	*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	die	ART	*	der	sg	fem	-	(122
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	Messe	NN	*	messe	sg	fem	-	122)
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Indes	NN	(NP*	indes	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	wer	PWS	(S*	wer	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	weiß	VVFIN	*))	weiß	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Es	PPER	(S*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ein	ART	(NP*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Gang	NN	*))	gang	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Er	PPER	(S*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	klingelt	VVFIN	*	klingeln	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	und	KON	(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	indem	KOUS	(S*	indem	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	er	PPER	*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	einige	PIS	(NP*	einiger	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	von	APPR	(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	den	ART	*	der	pl	fem	-	(14
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Papieren	NN	*	papier	pl	fem	-	14)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	auf	APPR	(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	dem	ART	*	der	sg	neut	-	(13
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Tische	NN	*)))	tisch	sg	neut	-	13)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	hastig	ADJD	*	hastig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	zusammen	ADV	*	zusammen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	rafft	VVFIN	*)	raffen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	tritt	VVFIN	*	treten	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	der	ART	(NP*	der	sg	masc	-	(1
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	Kammerdiener	NN	*)	kammerdiener	sg	masc	-	1)
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	herein	PTKVZ	*))	herein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Laßt	VVIMP	*	lassen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	vorfahren	VVINF	*	vorfahren	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ist	VAFIN	(S*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	noch	ADV	(NP*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	keiner	PIS	*)	keiner	sg	masc	-	(4)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	von	APPR	(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	den	ART	*	der	pl	masc	-	(21
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Räten	NN	*)	rat	pl	masc	-	21)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	da	PTKVZ	*)	da	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	sg	*	-	(1|(1
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	KAMMERDIENER	NE	*)	kammerdiener	sg	neut	-	1)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	1)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Camillo	NE	(VROOT(PSEUDO(MPN*	camillo	-	-	-	(4
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Rota	NE	*)	rota	-	-	-	4)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Er	PPER	(VROOT(PSEUDO(S*	er	sg	masc	-	(4)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	soll	VMFIN	*	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	herein	ADJD	(VP*	herein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	kommen	VVINF	*))	kommen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(S(NP*	der	sg	masc	-	(1
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Kammerdiener	NN	*)	kammerdiener	sg	masc	-	1)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	geht	VVFIN	*	gehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ab	PTKVZ	*)	ab	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nur	ADV	*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	aufhalten	VVINF	*	aufhalten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	muß	VMFIN	*	müssen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	er	PPER	*	er	sg	masc	-	(4)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	mich	PRF	*	mich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	wollen	VMFIN	*	wollen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Dasmal	ADV	(VROOT(PSEUDO(CO(AVP*	dasmal	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	nicht	PTKNEG	*))	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ich	PPER	(S*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	stehe	VVFIN	*	stehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	gern	ADV	*	gern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	seinen	PPOSAT	(NP*	sein	pl	*	-	(4)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Bedenklichkeiten	NN	*))	bedenklichkeit	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ein	ART	(NP*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	andermal	ADV	(PP(AP(AVP*	andermal	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	um	KOUI	(AVP*	um	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	so	ADV	*)	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	viel	ADV	*)	viel	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	länger	ADJD	*)	lang	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	zu	APPR	*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Diensten	NN	*))	diensten	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Da	KOUS	(S*	da	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	war	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ja	ADV	*	ja	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	noch	ADV	*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	die	ART	(NP*	der	sg	fem	-	(19
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Bittschrift	NN	*	bittschrift	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	einer	ART	(NP*	ein	sg	fem	-	(18
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Emilia	NE	(MPN*	emilia	*	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Bruneschi	NE	*	bruneschi	*	*	-	19)|18)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	–	NE	*)))	–	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Sie	PPER	*	sie	pl	*	-	(19)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	suchend	ADJD	*)	suchend	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Die	PDS	(VROOT(PSEUDO(NP*	der	sg	fem	-	(19)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ists	ADV	*)	ists	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Aber	KON	*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	gute	ADJA	*	gut	*	*	-	(18
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Bruneschi	NE	*	bruneschi	sg	neut	-	18)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	wo	PWAV	*	wo	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	deine	PPOSAT	*	dein	sg	fem	-	(18)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Vorsprecherin	NN	*	vorsprecherin	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	–	XY	*	–	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	–	XY	*	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Camillo	NE	(VROOT(PSEUDO(NP(MPN*	camillo	*	*	-	(4
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Rota	NE	*)	rota	sg	*	-	4)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Schriften	NN	(NP*	schrift	pl	fem	-	(123)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	der	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Hand	NN	*)))	hand	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(NP*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Prinz	NN	*)	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Kommen	VVFIN	(VROOT(PSEUDO(S*	kommen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*	sie	pl	*	-	(4
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Rota	NE	(S*	rota	sg	*	-	4)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	kommen	VVFIN	*	kommen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Sie	PPER	*))	sie	pl	*	-	(4)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Hier	ADV	(S*	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	was	PWS	(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	diesen	PDAT	(VP(NP*	dieser	sg	masc	-	(23
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Morgen	NN	*)	morgen	sg	masc	-	23)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	erbrochen	VVPP	*)))	erbrochen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nicht	PTKNEG	(VROOT(PSEUDO(NP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	viel	PIAT	*	viel	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Tröstliches	NN	*)	tröstlich	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*	sie	pl	*	-	(4)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	werden	VAFIN	*	werden	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	von	APPR	*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	selbst	ADV	*	selbst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	sehen	VVINF	*	sehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	was	PWS	*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	darauf	PROAV	*	darauf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	zu	PTKZU	*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	verfügen	VVINF	*	verfügen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Nehmen	VVFIN	(S*	nehmen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*	sie	pl	*	-	(4)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nur	ADV	*)	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CAMILLO	NE	(VROOT(PSEUDO(MPN*	camillo	-	-	-	(4|(4
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ROTA	NE	*)	rota	-	-	-	4)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	4)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Gut	ADJD	(VROOT(PSEUDO(CO*	gut	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	gnädiger	ADJA	(NP*	gnädig	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Herr	NN	*))	herr	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Noch	ADV	(VROOT(PSEUDO(S(PP(S*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	hier	ADV	*	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	eine	ART	(NP*	ein	sg	fem	-	(19
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Bittschrift	NN	*))	bittschrift	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	einer	ART	*	ein	sg	fem	-	(18|(8
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Emilia	NE	(MPN*	emilia	*	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Galot	NE	*	galot	*	*	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	–	NE	*	–	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	–	NE	*	–	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Bruneschi	NE	*))	bruneschi	*	*	-	19)|18)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	will	VMFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	ich	PPER	(VP*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	sagen	VVINF	*))	sagen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ich	PPER	(S*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	habe	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	meine	PPOSAT	(VP(NP*	mein	sg	fem	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Bewilligung	NN	*)	bewilligung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	zwar	ADV	*	zwar	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	schon	ADV	*	schon	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	beigeschrieben	VVPP	*))	beigeschreiben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Aber	KON	(VROOT(PSEUDO(S*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	doch	ADV	(AP*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	–	ADJD	(AP*	–	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	die	ART	(S(NP*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Sache	NN	*)	sache	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	keine	PIAT	(NP*	kein	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Kleinigkeit	NN	*)))	kleinigkeit	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	–	ADJD	*)	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Lassen	VVFIN	*	lassen	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Sie	PPER	*	sie	sg	fem	-	(4)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	die	ART	(VP(NP*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Ausfertigung	NN	*)	ausfertigung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	noch	ADV	*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	anstehen	VVINF	*))	anstehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Oder	KON	(S*	oder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	auch	ADV	*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nicht	PTKNEG	(VP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	anstehen	VVINF	*	anstehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	wie	KOKOM	(NP*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Sie	PPER	*))	sie	pl	*	-	(4)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	wollen	VMFIN	*)	wollen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CAMILLO	NE	(VROOT(PSEUDO(MPN*	camillo	-	-	-	(4|(4
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ROTA	NE	*)	rota	-	-	-	4)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	4)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nicht	PTKNEG	(VROOT(PSEUDO(S*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wie	KOKOM	(NP*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ich	PPER	*)	ich	sg	*	-	(4)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	will	VMFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	gnädiger	ADJA	(NP*	gnädig	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Herr	NN	*))	herr	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sonst	ADV	*)	sonst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Etwas	ADV	(VROOT(PSEUDO(VP*	etwas	-	-	-	(124)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	unterschreiben	VVINF	*))	unterschreiben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CAMILLO	NE	(VROOT(PSEUDO(MPN*	camillo	-	-	-	(4|(4
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ROTA	NE	*)	rota	-	-	-	4)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	4)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ein	ART	*	ein	sg	neut	-	(124
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Todesurteil	NN	*	todesurteil	sg	neut	-	124)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wäre	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	zu	PTKZU	*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	unterschreiben	VVINF	*	unterschreiben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Recht	NN	(VROOT(PSEUDO(NP*	recht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	gern	ADV	*)	gern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO(S*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Nur	ADV	*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	her	PTKVZ	*)	her	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	geschwind	ADJD	(VROOT(PSEUDO*	geschwind	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CAMILLO	NE	(VROOT(PSEUDO(MPN*	camillo	-	-	-	(4
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ROTA	NE	*)))	rota	-	-	-	4)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	stutzig	ADJD	(VROOT(PSEUDO(CO*	stutzig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	den	ART	(AP(NP*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Prinzen	NN	*)	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	starr	ADJD	*	starr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ansehend	ADJD	*))	ansehend	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ein	ART	*	ein	sg	masc	-	(124
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Todesurteil	NN	*	todesurteil	sg	masc	-	124)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sagt	VVFIN	*	sagen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ich	PPER	*	ich	sg	*	-	(4)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	höre	VVFIN	*	hören	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ja	ADV	*	ja	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	wohl	ADV	*)	wohl	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Es	PPER	(S*	es	sg	neut	-	(124)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	könnte	VMFIN	*	können	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	schon	ADV	(VP(VP*	schon	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	geschehen	VVPP	*)	geschehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	sein	VAINF	*))	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	bin	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	eilig	ADJD	*)	eilig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CAMILLO	NE	(VROOT(PSEUDO(MPN*	camillo	-	-	-	(4
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ROTA	NE	*)))	rota	-	-	-	4)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	seine	PPOSAT	(VROOT(PSEUDO(AP(NP*	sein	pl	fem	-	(123|(4)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Schriften	NN	*)	schrift	pl	fem	-	123)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	nachsehend	ADJD	*)	nachsehend	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nun	ADV	*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	hab	VAFIN	*	hab	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(4)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	es	PPER	*	es	sg	neut	-	(124)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	doch	ADV	*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	wohl	ADV	*	wohl	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	mitgenommen	VVPP	*	mitnehmen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Verzeihen	VVFIN	*	verzeihen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Sie	PPER	(S*	sie	pl	*	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	gnädiger	ADJA	(NP*	gnädig	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Herr	NN	*))	herr	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Es	PPER	(S*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	kann	VMFIN	*	können	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Anstand	NN	(NP*	anstand	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	damit	PROAV	*)	damit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	haben	VAFIN	*)	haben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	bis	APPR	(PP*	bis	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	morgen	ADV	*)	morgen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Auch	ADV	(VROOT(PSEUDO(NP*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	das	PDS	*)	der	sg	neut	-	(125)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Packen	VVFIN	(S*	packen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*	sie	pl	*	-	(4)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nur	ADV	*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	zusammen	PTKVZ	*	zusammen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ich	PPER	(S*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	muß	VMFIN	*	müssen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	fort	ADV	(NP(AP*	fort	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	–	CARD	*)	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Morgen	NN	*)))	morgen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Rota	NE	*	rota	-	-	(LOC*)	(4)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	ein	ART	(NP*	ein	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	mehres	ADJA	*)	mehr	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Geht	VVFIN	(VROOT(PSEUDO(S*	gehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ab	PTKVZ	*)	ab	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CAMILLO	NE	(VROOT(PSEUDO(MPN*	camillo	-	-	-	(4
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ROTA	NE	*)))	rota	-	-	-	4)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	den	ART	(VROOT(PSEUDO(S(AP(NP*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Kopf	NN	*)	kopf	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	schüttelnd	ADJD	*)	schüttelnd	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	indem	KOUS	(CS(S*	indem	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	er	PPER	*	er	sg	masc	-	(4)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	die	ART	(NP*	der	sg	fem	-	(125
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Papiere	NN	*)	papier	sg	fem	-	125)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	zu	APPR	(PP*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	sich	PRF	*)	sich	sg	-	-	(4)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	nimmt	VVFIN	*)	nehmen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	abgeht	VVFIN	*))	abgehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Recht	NN	(VROOT(PSEUDO(NP*	recht	-	-	-	(126
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	gern	ADV	*)	gern	-	-	-	126)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ein	ART	(NP*	ein	sg	neut	-	(124
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Todesurteil	NN	*	todesurteil	sg	neut	-	124)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	recht	ADV	(AVP*	recht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	gern	ADV	*))	gern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ich	PPER	*	ich	sg	*	-	(4)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	hätt	VAFIN	*	hätt	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	es	PPER	*	es	sg	neut	-	(124)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ihn	PPER	*	ihn	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	in	APPR	*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	diesem	PDAT	*	dieser	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Augenblicke	NN	*	augenblick	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	mögen	VMFIN	*	mögen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	unterschreiben	VVINF	*	unterschreiben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	lassen	VVINF	*	lassen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	wenn	KOUS	*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	es	PPER	*	es	sg	neut	-	(124)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	den	ART	*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	Mörder	NN	*	mörder	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	meines	PPOSAT	*	mein	sg	masc	-	(4)
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	einzigen	ADJA	*	einzig	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	Sohnes	NN	*	sohn	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	betroffen	VVPP	*	betreffen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	hätte	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Recht	NN	(NP*	recht	-	-	-	(126
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	gern	ADV	*)	gern	-	-	-	126)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	recht	ADV	(VROOT(PSEUDO*	recht	-	-	-	(126
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	gern	ADV	*	gern	-	-	-	126)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Es	PPER	(S*	es	sg	neut	-	(126)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	geht	VVFIN	*	gehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mir	PPER	*	sich	sg	*	-	(4)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	durch	APPR	(PP*	durch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	die	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Seele	NN	*))	seele	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	dieses	PDAT	(NP*	dieser	sg	neut	-	(126
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	gräßliche	ADJA	*	gräßlich	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Recht	NN	*	recht	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	gern	ADV	*)	gern	-	-	-	126)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Claudia	NE	(VROOT(PSEUDO(MPN*	claudia	*	*	-	(53|(7|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Galotti	NE	*)	galotti	sg	*	-	53)|7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Pirro	NE	(VROOT(PSEUDO*	pirro	-	-	(PER*)	(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO*))	claudia	-	-	-	(53)|(7)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	im	APPRART	(VROOT(PSEUDO(CS(S(PP*	in	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Heraustreten	NN	*)	heraustreten	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	zu	APPR	(PP*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Pirro	NE	*))	pirro	-	-	-	(5|(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	der	ART	(S*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	von	APPR	(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	der	ART	*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	andern	ADJA	*	anderer	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Seite	NN	*)	seite	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	hereintritt	VVFIN	*))	hereintreten	sg	-	-	5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wer	PWS	(VROOT(PSEUDO(S*	wer	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sprengte	VVFIN	*	sprengen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	da	ADV	*	da	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	den	ART	*	der	sg	masc	-	(96
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Hof	NN	*))	hof	sg	masc	-	96)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	PIRRO	NE	(VROOT(PSEUDO*	pirro	-	-	(LOC*)	(5|(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Unser	PPOSAT	(VROOT(PSEUDO(CNP(NP*	unser	sg	masc	-	(12
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Herr	NN	*)	herr	sg	masc	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	gnädige	ADJA	(NP*	gnädig	sg	masc	-	(53
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Frau	NN	*))	frau	sg	masc	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO*	claudia	sg	neut	(PER*)	(53|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	53)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Mein	PPOSAT	(VROOT(PSEUDO(NP*	mein	sg	masc	-	(12|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Gemahl	NN	*)	gemahl	sg	-	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ist	VAFIN	(VROOT(PSEUDO(S*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	möglich	ADJD	*)	möglich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	PIRRO	NE	(VROOT(PSEUDO*	pirro	-	-	(LOC*)	(5|(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Er	PPER	(VROOT(PSEUDO(S*	er	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	folgt	VVFIN	*	folgen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mir	PPER	*	sich	sg	*	-	(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	auf	APPR	(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	dem	ART	*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Fuße	NN	*))	fuß	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO*	claudia	sg	neut	(PER*)	(53|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	53)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	So	ADV	(VROOT(PSEUDO(S(ISU*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	unvermutet	ADJD	*))	unvermutet	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ihm	PPER	(NP*	ihm	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	entgegen	APPR	(PP*	entgegen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	eilend	ADJD	*))	eilend	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ah	NE	(VROOT(PSEUDO(MPN*	ah	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*)))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	mein	PPOSAT	(VROOT(PSEUDO(NP*	mein	sg	masc	-	(12|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Bester	NN	*)	bester	sg	masc	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Odoardo	NE	(VROOT(PSEUDO(CNP(MPN*	odoardo	*	*	-	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Galotti	NE	*)	galotti	sg	*	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	die	ART	(NP*	der	pl	fem	-	(53|(5
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Vorigen	NN	*))	vorige	pl	fem	-	53)|5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Guten	ADJA	(VROOT(PSEUDO(CNP(NP*	gute	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Morgen	NN	*)	morgen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	meine	PPOSAT	(NP*	mein	pl	*	-	(53|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Liebe	NN	*))	liebe	pl	*	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wahr	PTKVZ	*	wahr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	das	PDS	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	heißt	VVFIN	*	heißen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	überraschen	VVINF	*	überraschen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO*	claudia	sg	neut	(PER*)	(53|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	53)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	auf	APPR	(NP(AP(AVP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	die	ART	*)	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	angenehmste	ADJA	*)	angenehmst	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Art	NN	*))	Art	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Wenn	KOUS	(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	anders	ADV	(AVP*	anders	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nur	ADV	*))	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	eine	ART	(S(VP(NP*	ein	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Überraschung	NN	*)	überraschung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	sein	VAINF	*)	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	soll	VMFIN	*)	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nichts	PIS	(VROOT(PSEUDO(CO(AVP*	nichts	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	weiter	ADV	*))	weiter	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sei	VAIMP	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	unbesorgt	ADJD	*	unbesorgt	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Das	ART	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Glück	NN	*	glück	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	des	ART	*	der	sg	masc	-	(127
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	heutigen	ADJA	*	heutig	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Tages	NN	*	tag	sg	masc	-	127)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	weckte	VVFIN	*	wecken	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	mich	PPER	*	mich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	früh	ADJD	*	früh	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	der	ART	*	der	sg	masc	-	(23
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Morgen	NN	*	morgen	sg	masc	-	23)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	war	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	schön	ADJD	*	schön	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	der	ART	*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	Weg	NN	*	weg	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	kurz	ADJD	*	kurz	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	ich	PPER	*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	vermutete	VVFIN	*	vermuten	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	euch	PPER	*	euch	pl	*	-	(8)|(53)|(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	hier	ADV	*	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	28	geschäftig	ADJD	*	geschäftig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	29	–	$(	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	30	Wie	PWAV	*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	31	leicht	ADJD	*	leicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	32	vergessen	VVPP	*	vergessen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	33	sie	PPER	*	sie	sg	fem	-	(8)|(5)|(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	34	etwas	PIS	*	etwas	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	35	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	36	fiel	VVFIN	*	fallen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	37	mir	PPER	*	sich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	38	ein	PTKVZ	*	ein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	39	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	einem	ART	*	ein	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Worte	NN	*)	wort	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ich	PPER	(CS(S*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	komme	VVFIN	*)	kommen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	sehe	VVFIN	(S*	sehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	kehre	VVFIN	(S*	kehren	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	sogleich	ADV	*	sogleich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	wieder	ADV	*	wieder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	zurück	PTKVZ	*)))	zurück	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Wo	PWAV	*	wo	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Emilia	NE	*	emilia	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Unstreitig	ADJD	(VROOT(PSEUDO(S*	unstreitig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	beschäftigt	VVFIN	*	beschäftigen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	dem	ART	*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Putze	NN	*))	putze	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO*	claudia	sg	neut	(PER*)	(53|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	53)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ihrer	PPOSAT	(VROOT(PSEUDO(NP*	ihr	-	-	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Seele	NN	*)	seele	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	(S*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	der	ART	*	der	sg	fem	-	(122
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Messe	NN	*))	messe	sg	fem	(LOC*)	122)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ich	PPER	(S*	ich	sg	*	-	(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	habe	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	heute	ADV	*	heute	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	mehr	PIAT	(AP*	mehr	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	als	KOKOM	(NP*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	jeden	PIAT	(CNP(NP*	jeder	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	andern	PIS	*)	anderer	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Tag	NN	*	tag	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Gnade	NN	*))))	gnade	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	von	APPR	(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	oben	ADV	(AP(AP*	oben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	erflehen	VVINF	*))	erflehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	sagte	VVFIN	(CS(S*	sagen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	sie	PPER	*)	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	ließ	VVFIN	(S*	lassen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	alles	PIS	*	alle	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	liegen	VVINF	(VP*	liegen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	und	KON	(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	nahm	VVFIN	*	nehmen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	ihren	PPOSAT	(NP*	ihr	sg	masc	-	(128|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	28	Schleier	NN	*))))	schleier	sg	masc	-	128)
Emilia.xml.rksp.0.CoNLL2012.conll	000	29	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	30	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	31	eilte	VVFIN	*)))	eilen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	32	–	XY	*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ganz	ADV	(VROOT(PSEUDO(S*	ganz	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	allein	ADV	*)	allein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO*	claudia	sg	neut	(PER*)	(53|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	53)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Die	ART	*	der	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wenigen	PIAT	*	weniger	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Schritte	NN	*	schritt	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	–	$.	*	–	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	–	XY	*	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Einer	PIS	(VROOT(PSEUDO(S*	einer	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	genug	PIS	(NP*	genug	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	zu	APPR	(PP*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	einem	ART	*	ein	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Fehltritt	NN	*)))	fehltritt	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO*	claudia	sg	neut	(PER*)	(53|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	53)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Zürnen	VVFIN	(VROOT(PSEUDO(CS(S*	zürnen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*	sie	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	nicht	PTKNEG	*)	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	mein	PPOSAT	(NP*	mein	sg	masc	-	(12|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Bester	NN	*)	bester	sg	masc	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	kommen	VVFIN	(S*	kommen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Sie	PPER	*	sie	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	herein	PTKVZ	*	herein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	–	KOUS	(S*	–	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	einen	ART	(VP(NP*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Augenblick	NN	*)	augenblick	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	auszuruhen	VVIZU	*)	ausruhen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	und	KON	(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	wann	PWAV	*	wann	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	Sie	PPER	*	sie	pl	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	wollen	VMFIN	*	wollen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	eine	ART	(VP(NP*	ein	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	Erfrischung	NN	*)	erfrischung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	nehmen	VVINF	*))))))	nehmen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wie	PWAV	(VROOT(PSEUDO(S*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	du	PPER	*	du	-	-	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	meinest	VVFIN	*)	meinest	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Claudia	NE	*	claudia	sg	fem	(PER*)	(53)|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Aber	KON	(S*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sie	PPER	*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sollte	VMFIN	*	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	allein	ADV	(VP*	allein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	gegangen	VVPP	*	gehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	sein	VAINF	*))	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO*	claudia	sg	neut	(PER*)	(53|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	53)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ihr	PPER	(NP*	ihr	pl	*	-	(5
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Pirro	NE	*)	pirro	-	-	(PER*)	5)|(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	bleibt	VVFIN	*	bleiben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	hier	ADV	*	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	dem	ART	*	der	sg	neut	-	(129
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Vorzimmer	NN	*)	vorzimmer	sg	neut	-	129)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	alle	PIAT	(VP(NP*	aller	pl	*	-	(130
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Besuche	NN	*)	besuch	pl	*	-	130)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	auf	APPR	(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	heute	ADV	*)	heute	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	verbitten	VVINF	*)))	verbitten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Pirro	NE	(VROOT(PSEUDO*	pirro	-	-	(PER*)	(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	bald	ADV	(S(AVP*	bald	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	darauf	PROAV	*)	darauf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Angelo	NE	*)	angelo	-	-	(PER*)	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	PIRRO	NE	(VROOT(PSEUDO*	pirro	-	-	(LOC*)	(5|(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Die	ART	(VROOT(PSEUDO(S*	der	sg	fem	-	(130)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sich	PRF	*	sich	sg	-	-	(130)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	nur	ADV	*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	aus	APPR	(VP(VP(PP*	aus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Neugierde	NN	*)	neugierde	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	melden	VVINF	*)	melden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	lassen	VVINF	*))	lassen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Was	PWS	(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	bin	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	masc	-	(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	seit	APPR	(PP*	seit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	einer	ART	*	ein	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Stunde	NN	*))	stunde	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	nicht	PTKNEG	(S(NP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	alles	PIS	*)	alle	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	ausgefragt	VVPP	(VP*	ausfragen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	worden	VAPP	*))	werden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wer	PWS	(S*	wer	sg	*	-	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	kömmt	VVFIN	*	kömmen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	da	PTKVZ	*)	da	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ANGELO	NE	(VROOT(PSEUDO*))	angelo	-	-	-	(6)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	noch	ADV	(VROOT(PSEUDO(AP*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	halb	ADJD	*	halb	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	hinter	APPR	(CPP(PP*	hinter	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	der	ART	*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Szene	NN	*)	szene	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	einem	ART	*	ein	sg	neut	-	(131
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	kurzen	ADJA	*	kurz	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Mantel	NN	*	mantel	sg	neut	-	131)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	den	PRELS	(S*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	er	PPER	*	er	sg	masc	-	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	über	APPR	(PP*	über	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	das	ART	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	Gesicht	NN	*)	gesicht	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	gezogen	VVPP	*	ziehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	den	ART	(NP*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	Hut	NN	*	hut	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	die	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	Stirne	NN	*))))))	stirne	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Pirro	NE	(VROOT(PSEUDO(MPN*	pirro	-	-	-	(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*)))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Pirro	NE	*	pirro	-	-	-	(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	PIRRO	NE	(VROOT(PSEUDO*	pirro	-	-	(LOC*)	(5|(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ein	ART	(VROOT(PSEUDO(NP*	ein	sg	masc	-	(6
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Bekannter	NN	*)	bekannter	sg	masc	-	6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	In	APPR	(S*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	dem	ART	(NP*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Angelo	NN	*)	angelo	sg	neut	(PER*)	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	vollends	ADV	*	vollends	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	hereintritt	VVFIN	*)	hereintreten	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	den	ART	(S(NP*	der	sg	masc	-	(131
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Mantel	NN	*	mantel	sg	masc	-	131)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	auseinander	ADV	*)	auseinander	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	schlägt	VVFIN	*)	schlagen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Himmel	NN	(VROOT(PSEUDO*	himmel	sg	masc	-	(132)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Angelo	NE	(VROOT(PSEUDO(MPN*	angelo	-	-	(PER*)	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*)))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Du	PPER	*	du	sg	*	-	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ANGELO	NE	(VROOT(PSEUDO*	angelo	-	-	(LOC*)	(6|(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	6)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wie	PWAV	(VROOT(PSEUDO(S*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	du	PPER	*	du	sg	*	-	(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	siehst	VVFIN	*)	sehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ich	PPER	(S*	ich	sg	*	-	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	bin	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	lange	ADV	(VP*	lange	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	genug	ADV	*	genug	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	um	APPR	(PP*	um	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	das	ART	*	der	sg	neut	-	(133
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Haus	NN	*)	haus	sg	neut	-	133)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	herumgegangen	VVINF	*	herumgegangen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	dich	PPER	(VP*	dich	sg	*	-	(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	sprechen	VVINF	*))))	sprechen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Auf	APPR	*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ein	ART	(NP*	ein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Wort	NN	*)	wort	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	PIRRO	NE	(VROOT(PSEUDO*	pirro	-	-	(LOC*)	(5|(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	du	PPER	*	du	sg	*	-	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wagst	VVFIN	*	wagen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	wieder	ADV	(VP*	wieder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ans	APPRART	(PP*	an	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Licht	NN	*)	licht	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	kommen	VVINF	*)))	kommen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Du	PPER	(S*	du	sg	*	-	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	bist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	seit	APPR	(VP(PP*	seit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	deiner	PPOSAT	*	dein	sg	fem	-	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	letzten	ADJA	*	letzter	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Mordtat	NN	*)	mordtat	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	vogelfrei	ADJD	*	vogelfrei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	erkläret	VVPP	*)	erkläret	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	auf	APPR	(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	deinen	PPOSAT	*	dein	sg	masc	-	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Kopf	NN	*)	kopf	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	steht	VVFIN	*)	stehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	eine	ART	(NP*	ein	sg	fem	-	(134
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	Belohnung	NN	*)	belohnung	sg	fem	-	134)
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	–	$.	*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ANGELO	NE	(VROOT(PSEUDO*	angelo	-	-	(LOC*)	(6|(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	6)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Die	ART	(VROOT(PSEUDO(S*	der	sg	fem	-	(134)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	doch	ADV	(NP*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	du	PPER	*)	du	sg	*	-	(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	wirst	ADV	(VP(VP*	werden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	verdienen	VVINF	*)	verdienen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	wollen	VMINF	*))	wollen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	PIRRO	NE	(VROOT(PSEUDO*	pirro	-	-	(LOC*)	(5|(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Was	PWS	*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	willst	VMFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	du	PPER	*	du	sg	*	-	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S(S*	ich	sg	*	-	(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	bitte	VVFIN	*	bitten	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	dich	PPER	*)	dich	sg	masc	-	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	mache	VVFIN	(S*	machen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	mich	PPER	*	mich	sg	*	-	(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	nicht	PTKNEG	(AP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	unglücklich	ADJD	*)))	unglücklich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ANGELO	NE	(VROOT(PSEUDO*	angelo	-	-	(LOC*)	(6|(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	6)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Damit	KOUS	*	damit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	etwa	ADV	*	etwa	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ihm	PPER	(VROOT(PSEUDO(NP*	ihm	sg	masc	-	(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	einen	ART	(NP*	ein	sg	masc	-	(135
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Beutel	NN	*	beutel	sg	masc	-	135)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mit	APPR	(AP(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Gelde	NN	*)	gelde	sg	neut	-	(136)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	zeigend	ADJD	*)))	zeigend	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Nimm	NE	*	nimm	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Es	PPER	(VROOT(PSEUDO(S*	es	sg	neut	-	(136)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	gehöret	VVFIN	*	gehöret	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	dir	PPER	*)	dir	sg	*	-	(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	PIRRO	NE	(VROOT(PSEUDO*	pirro	-	-	(LOC*)	(5|(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Mir	PPER	*	sich	sg	*	-	(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ANGELO	NE	(VROOT(PSEUDO*	angelo	-	-	(LOC*)	(6|(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	6)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Hast	VAFIN	(VROOT(PSEUDO(S*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	du	PPER	(VP*	du	sg	*	-	(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	vergessen	VVPP	*))	vergessen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Der	ART	*	der	sg	masc	-	(137
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Deutsche	NN	*	deutsche	sg	masc	(MISC*)	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	dein	PPOSAT	*	dein	sg	masc	-	(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	voriger	ADJA	*	vorig	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Herr	NN	*	herr	sg	masc	-	137)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	–	$.	*	–	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	–	XY	*	–	sg	masc	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	PIRRO	NE	(VROOT(PSEUDO*	pirro	-	-	(LOC*)	(5|(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Schweig	ADJD	(VROOT(PSEUDO(AP*	schweig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	davon	PROAV	*)	davon	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ANGELO	NE	(VROOT(PSEUDO*	angelo	-	-	(LOC*)	(6|(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	6)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Den	ART	(VROOT(PSEUDO(S*	der	sg	masc	-	(137)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	du	PPER	*	du	sg	*	-	(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	uns	PPER	*	uns	pl	*	-	(5)|(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	auf	APPR	(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	dem	ART	*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Wege	NN	*	weg	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	nach	APPR	(PP*	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Pisa	NE	*))	pisa	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	die	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Falle	NN	*)	fall	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	führtest	VVFIN	*)	führtest	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	–	$.	*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	PIRRO	NE	(VROOT(PSEUDO*	pirro	-	-	(LOC*)	(5|(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wenn	KOUS	(VROOT(PSEUDO(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	uns	PPER	*	uns	pl	*	-	(5)|(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	jemand	PIS	*	jemand	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	hörte	VVFIN	*)	hören	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ANGELO	NE	(VROOT(PSEUDO*	angelo	-	-	(LOC*)	(6|(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	6)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Hatte	VAFIN	(VROOT(PSEUDO(S*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ja	ADV	*	ja	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	die	ART	(NP*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Güte	NN	*	güte	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	uns	PPER	(VP*	uns	pl	*	-	(5)|(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	auch	ADV	*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	einen	ART	(NP*	ein	sg	masc	-	(138
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	kostbaren	ADJA	*	kostbar	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Ring	NN	*)	ring	sg	masc	-	138)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	hinterlassen	VVINF	*))))	hinterlassen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Weißt	VVFIN	(S*	weißen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	du	PPER	*	du	sg	*	-	(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*)	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Er	PPER	(S*	er	sg	masc	-	(138)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	war	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	zu	PTKA	(AP*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	kostbar	ADJD	*))	kostbar	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	der	ART	(NP*	der	sg	masc	-	(138
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Ring	NN	*	ring	sg	masc	-	138)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	als	KOKOM	(S*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	wir	PPER	*	wir	pl	*	-	(5)|(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	ihn	PPER	*	ihn	sg	masc	-	(138)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	sogleich	ADV	*	sogleich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	ohne	APPR	(PP*	ohne	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	Verdacht	NN	*))	verdacht	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	hätten	VAFIN	*	haben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	zu	APPR	(VP(PP*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	Gelde	NN	*)	gelde	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	machen	VVINF	*)	machen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	können	VMFIN	*))	können	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Endlich	ADV	(VROOT(PSEUDO(S*	endlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mir	PPER	*	sich	sg	*	-	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	es	PPER	(VP*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	damit	PROAV	*	damit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	gelungen	VVPP	*))	gelingen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(CS(S*	ich	sg	*	-	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	habe	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	hundert	CARD	(VP(NP*	hundert	-	-	-	(139
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Pistolen	NN	*)	pistole	pl	fem	-	139)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	dafür	PROAV	*	dafür	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	erhalten	VVINF	*))	erhalten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	das	PDS	(S*	der	sg	neut	-	(136)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	dein	PPOSAT	(NP*	dein	-	-	-	(140|(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Anteil	NN	*)))	anteil	-	-	-	140)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nimm	NE	(VROOT(PSEUDO(MPN*	nimm	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*)))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	PIRRO	NE	(VROOT(PSEUDO*	pirro	-	-	(LOC*)	(5|(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	*	ich	sg	*	-	(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	mag	VMFIN	*	mögen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	nichts	PIS	*	nichts	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	–	PPER	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	behalt	VVFIN	*	behalt	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	alles	PIS	*	alle	sg	neut	-	(139)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ANGELO	NE	(VROOT(PSEUDO*	angelo	-	-	(LOC*)	(6|(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	6)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Meinetwegen	NE	(VROOT(PSEUDO*	meinetwegen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wenn	KOUS	*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	dir	PPER	*	dir	sg	*	-	(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	gleich	ADV	*	gleich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	viel	PIS	*	viel	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	wie	PWAV	*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	hoch	ADJD	*	hoch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	du	PPER	*	du	sg	*	-	(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	deinen	PPOSAT	*	dein	sg	masc	-	(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Kopf	NN	*	kopf	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	feil	ADJD	*	feil	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	trägst	ADV	*	trägst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	–	CARD	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	Als	KOKOM	*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	ob	KOUS	*	ob	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	er	PPER	*	er	sg	masc	-	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	den	ART	*	der	sg	masc	-	(135
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	Beutel	NN	*	beutel	sg	masc	-	135)
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	wieder	ADV	*	wieder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	einstecken	VVINF	*	einstecken	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	wollte	VMFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	PIRRO	NE	(VROOT(PSEUDO*	pirro	-	-	(LOC*)	(5|(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	So	ADV	(VROOT(PSEUDO*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	gib	VVIMP	(S*	geben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	nur	ADV	*)	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nimmt	VVFIN	(VROOT(PSEUDO(S*	nehmen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ihn	PPER	*)	ihn	sg	masc	-	(135)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	was	PWS	*	was	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nun	ADV	*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Denn	KON	*	denn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	daß	KOUS	*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	du	PPER	*	du	sg	*	-	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	bloß	ADV	*	bloß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	deswegen	PROAV	*	deswegen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	mich	PPER	*	mich	sg	*	-	(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	aufgesucht	VVPP	*	aufsuchen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	haben	VAINF	*	haben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	solltest	VMFIN	*	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	–	$.	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	–	XY	*	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ANGELO	NE	(VROOT(PSEUDO*	angelo	-	-	(LOC*)	(6|(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	6)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Das	PDS	(VROOT(PSEUDO(S*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	kömmt	VVFIN	*	kömmen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	dir	PPER	*	dir	sg	*	-	(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nicht	PTKNEG	(AVP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	so	ADV	*)	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	recht	ADV	(AP*	recht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	glaublich	ADJD	*)	glaublich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	vor	PTKVZ	*)	vor	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Halunke	NE	*	halunke	-	-	-	(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	denkst	VVFIN	*	denken	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	du	PPER	*	du	sg	*	-	(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	von	APPR	(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	uns	PPER	*))	uns	pl	*	-	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wir	PPER	*	wir	pl	*	-	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	fähig	ADJD	*)	fähig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	sind	VAFIN	(S*	sein	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	jemand	PIS	(VP*	jemand	sg	masc	-	(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	seinen	PPOSAT	(NP*	sein	sg	masc	-	(140|(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Verdienst	NN	*)	verdienst	sg	masc	-	140)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	vorzuenthalten	VVIZU	*))	vorzuehalten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Das	PDS	(VROOT(PSEUDO(S*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	mag	VMFIN	*	mögen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	unter	APPR	(VP(PP*	unter	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	den	ART	*	der	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	so	ADV	(AP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	genannten	ADJA	*)	genannt	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ehrlichen	ADJA	*	ehrlich	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Leuten	NN	*)	leute	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Mode	NN	*	mode	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	sein	VAINF	*)	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	unter	APPR	(S*	unter	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	uns	PPER	*	uns	pl	*	-	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	nicht	PTKNEG	*))	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Leb	XY	*	leb	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wohl	ADV	(S*)	wohl	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Tut	NN	*	tut	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	als	KOKOM	(CS(S*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ob	KOUS	*	ob	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	er	PPER	*	er	sg	masc	-	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	gehen	VVINF	*	gehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	wollte	VMFIN	*)	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	kehrt	VVFIN	(S*	kehren	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	wieder	ADV	*	wieder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	um	PTKVZ	*))	um	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Eins	NN	(VROOT(PSEUDO(S*	eins	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	muß	VMFIN	*	müssen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	doch	ADV	*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	fragen	VVINF	*)	fragen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Da	ADV	(S*	da	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	kam	VVFIN	*	kommen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ja	ADV	*	ja	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	der	ART	(NP*	der	sg	masc	-	(12
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	alte	ADJA	*	alt	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Galotti	NE	*))	galotti	sg	masc	(PER*)	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	so	ADV	(VP(AVP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	ganz	ADV	*)	ganz	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	allein	ADV	(PP*	allein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	in	APPR	*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	die	ART	*	der	sg	fem	-	(26
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Stadt	NN	*)	stadt	sg	fem	-	26)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	gesprengt	VVPP	*)	sprengen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Was	PWS	*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	will	VMFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	der	ART	*	der	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	PIRRO	NE	(VROOT(PSEUDO*	pirro	-	-	(LOC*)	(5|(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nichts	PIS	(VROOT(PSEUDO(S*	nichts	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	will	VMFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	er	PPER	*	er	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ein	ART	(NP*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	bloßer	ADJA	*	bloß	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Spazierritt	NN	*))	spazierritt	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Seine	PPOSAT	*	sein	sg	fem	-	(8|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Tochter	NN	*	tochter	sg	fem	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wird	VAFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	heut	ADV	*	heuen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Abend	NN	*	abend	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	auf	APPR	*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	dem	ART	*	der	sg	masc	-	(103
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Gute	NN	*	gute	sg	masc	-	103)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	von	APPR	*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	dem	PRELS	*	der	sg	masc	-	(103)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	er	PPER	*	er	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	herkömmt	VVFIN	*	herkömmen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	dem	ART	*	der	sg	masc	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	Grafen	NN	*	grafe	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	Appiani	NE	*	appiani	sg	*	(PER*)	9)|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	angetrauet	VVPP	*	antrauen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Er	PPER	*	er	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	kann	VMFIN	*	können	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	die	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Zeit	NN	*	zeit	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	erwarten	VVINF	*	erwarten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	–	XY	*	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ANGELO	NE	(VROOT(PSEUDO*	angelo	-	-	(LOC*)	(6|(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	6)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	reitet	VVFIN	*	reiten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	bald	ADV	*	bald	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	wieder	ADV	*	wieder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	hinaus	PTKVZ	*)	hinaus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	PIRRO	NE	(VROOT(PSEUDO*	pirro	-	-	(LOC*)	(5|(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	So	ADV	(VROOT(PSEUDO(S*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	bald	ADV	*	bald	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	daß	KOUS	(CS(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	er	PPER	*	er	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	dich	PRF	*	dich	sg	-	-	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	hier	ADV	*	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	trifft	VVFIN	*)	treffen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	wo	PWAV	(S*	wo	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	du	PPER	*	du	sg	*	-	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	noch	ADV	(VP(AVP*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	lange	ADV	*)	lange	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	verziehest	VVPP	*))))	verziehest	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Aber	KON	(S*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	du	PPER	*	du	sg	*	-	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	hast	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	doch	ADV	*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	keinen	PIAT	(NP*	kein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Anschlag	NN	*))	anschlag	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	auf	APPR	(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	ihn	PPER	*)	ihn	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nimm	VVIMP	(VROOT(PSEUDO(S*	nimm	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	dich	PPER	*	dich	sg	*	-	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Acht	NE	*))	acht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Er	PPER	*	er	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ein	ART	*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Mann	NN	*	mann	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	–	XY	*	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ANGELO	NE	(VROOT(PSEUDO*	angelo	-	-	(LOC*)	(6|(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	6)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Kenn	KON	*	kenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ihn	PPER	*	ihn	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Hab	XY	*	hab	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	unter	APPR	*	unter	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ihm	PPER	*	ihm	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	gedient	VVPP	*	dienen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Wenn	KOUS	(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	darum	PROAV	*	darum	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	bei	APPR	(PP*	bei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ihm	PPER	*))	ihm	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	nur	ADV	(S(VP*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	viel	ADV	*	viel	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	holen	VVINF	*))	holen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	wäre	VAFIN	*)	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Wenn	KOUS	(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	fahren	VVFIN	*	fahren	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	die	ART	(NP*	der	pl	masc	-	(9|(8
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	junge	ADJA	*	jung	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Leute	NN	*)	leute	pl	*	-	9)|8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	nach	PTKVZ	*)	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	PIRRO	NE	(VROOT(PSEUDO*	pirro	-	-	(LOC*)	(5|(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Gegen	APPR	(VROOT(PSEUDO(PP*	gegen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Mittag	NN	*)	mittag	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ANGELO	NE	(VROOT(PSEUDO*	angelo	-	-	(LOC*)	(6|(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	6)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Mit	APPR	(VROOT(PSEUDO(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	viel	PIAT	(NP*	viel	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Begleitung	NN	*))	begleitung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	PIRRO	NE	(VROOT(PSEUDO*	pirro	-	-	(LOC*)	(5|(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	In	APPR	(VROOT(PSEUDO(S(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	einem	ART	*	ein	sg	neut	-	(141
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	einzigen	ADJA	*	einzig	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Wagen	NN	*)	wagen	sg	neut	-	141)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	die	ART	(CNP(NP*	der	sg	fem	-	(53
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Mutter	NN	*)	mutter	sg	fem	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	die	ART	(NP*	der	sg	fem	-	(8
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Tochter	NN	*)	tochter	sg	fem	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	der	ART	(NP*	der	sg	masc	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Graf	NN	*)))	graf	sg	*	-	9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ein	ART	(VROOT(PSEUDO(S(NP(NM*	ein	*	*	-	(104
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Paar	NN	*)	paar	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Freunde	NN	*)	freund	sg	*	-	104)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	kommen	VVFIN	*	kommen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	aus	APPR	(PP*	aus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Sabionetta	NE	*)	sabionetta	-	-	(LOC*)	(56)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	als	APPR	(PP*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Zeugen	NN	*))	zeuge	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ANGELO	NE	(VROOT(PSEUDO*	angelo	-	-	(LOC*)	(6|(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	6)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Bediente	NN	*	bediente	pl	neut	-	(142)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	PIRRO	NE	(VROOT(PSEUDO*	pirro	-	-	(LOC*)	(5|(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nur	ADV	(VROOT(PSEUDO(S(AP*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	zwei	CARD	*)	zwei	-	-	-	(142)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	außer	APPR	(PP*	außer	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	mir	PPER	*)	sich	sg	*	-	(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	der	PRELS	(S*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ich	PPER	(VP*	ich	sg	*	-	(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	zu	APPR	(PP*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Pferde	NN	*)	pferd	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	vorauf	APPR	(VZ*	vorauf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	reiten	VVINF	*))	reiten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	soll	VMFIN	*))	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ANGELO	NE	(VROOT(PSEUDO*	angelo	-	-	(LOC*)	(6|(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	6)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Das	PDS	(VROOT(PSEUDO(S*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	gut	ADJD	*)	gut	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Noch	ADV	(NP*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	eins	PIS	*	einer	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	wessen	PDS	(S*	wessen	-	-	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	die	ART	(NP*	der	sg	fem	-	(143
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Equipage	NN	*)))	equipage	sg	fem	-	143)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	es	PPER	*	es	sg	neut	-	(143)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	eure	PPOSAT	*	euer	-	-	-	(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	oder	KON	(VROOT(PSEUDO(PP*	oder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	des	ART	*	der	sg	*	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Grafen	NN	*)	grafe	sg	*	-	9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	PIRRO	NE	(VROOT(PSEUDO*	pirro	-	-	(LOC*)	(5|(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Des	ART	(VROOT(PSEUDO(NP*	der	-	-	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Grafen	NN	*)	grafe	-	-	-	9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ANGELO	NE	(VROOT(PSEUDO*	angelo	-	-	(LOC*)	(6|(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	6)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Schlimm	ADJD	(VROOT(PSEUDO*	schlimm	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Da	ADV	(VROOT(PSEUDO(S*	da	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	noch	ADV	*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ein	ART	(NP*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Vorreiter	NN	*)	vorreiter	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	außer	APPR	(PP*	außer	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	einem	ART	*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	handfesten	ADJA	*	handfest	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Kutscher	NN	*))	kutscher	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Doch	KON	*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	PIRRO	NE	(VROOT(PSEUDO*	pirro	-	-	(LOC*)	(5|(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	erstaune	VVFIN	*)	erstaunen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Aber	KON	*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	was	PWS	*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	willst	VMFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	du	PPER	*	du	sg	*	-	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Das	ART	(NP*	der	sg	neut	-	(144
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Bißchen	NN	*)	bißchen	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Schmuck	NN	(NP*	schmuck	sg	-	-	144)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	das	PRELS	(S(S*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	die	ART	(NP*	der	sg	fem	-	(8
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Braut	NN	*	braut	sg	fem	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	etwa	ADV	*)	etwa	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	haben	VAFIN	*)	haben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	dürfte	VMFIN	*	dürfen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	wird	VAFIN	(S*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	schwerlich	ADJD	*	schwerlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	der	ART	(VP(NP*	der	sg	masc	-	(145
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	Mühe	NN	*)	mühe	sg	masc	-	145)
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	lohnen	VVINF	*))))	lohnen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	–	$.	*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ANGELO	NE	(VROOT(PSEUDO*	angelo	-	-	(LOC*)	(6|(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	6)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	So	ADV	(VROOT(PSEUDO(S*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	lohnt	VVFIN	*	lohnen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ihrer	PPER	*	ihr	sg	fem	-	(145)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	die	ART	(NP*	der	sg	fem	-	(8
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Braut	NN	*)	braut	-	-	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	selbst	ADV	*)	selbst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	PIRRO	NE	(VROOT(PSEUDO*	pirro	-	-	(LOC*)	(5|(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	auch	ADV	(PP*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	bei	APPR	*	bei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	diesem	PDAT	*	dieser	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Verbrechen	NN	*)	verbrechen	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	soll	VMFIN	*	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ich	PPER	*	ich	sg	*	-	(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	dein	PPOSAT	(VP(NP*	dein	sg	masc	-	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Mitschuldiger	NN	*)	mitschuldiger	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	sein	VAINF	*))	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ANGELO	NE	(VROOT(PSEUDO*	angelo	-	-	(LOC*)	(6|(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	6)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Du	PPER	(VROOT(PSEUDO(S*	du	sg	*	-	(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	reitest	VVFIN	*	reitest	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	vorauf	PTKVZ	*)	vorauf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Reite	NN	(VROOT(PSEUDO(S*	reite	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	doch	ADV	*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	reite	VVFIN	*)	reien	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	kehre	VVFIN	*	kehren	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	dich	PRF	*	dich	sg	-	-	(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	an	APPR	(PP*	an	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nichts	PIS	*))	nichts	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	PIRRO	NE	(VROOT(PSEUDO*	pirro	-	-	(LOC*)	(5|(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nimmermehr	ADV	(VROOT(PSEUDO(S*)	nimmermehr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ANGELO	NE	(VROOT(PSEUDO*	angelo	-	-	(LOC*)	(6|(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	6)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wie	PWAV	(VROOT(PSEUDO*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	glaube	VVFIN	*	glauben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	gar	ADV	*	gar	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	du	PPER	(S*	du	sg	*	-	(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	willst	VVFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	den	ART	(NP*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Gewissenhaften	NN	*)	gewissenhaft	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	spielen	VVINF	*))	spielen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Bursche	NE	*	bursche	pl	masc	-	(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	denke	VVFIN	*	denken	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	du	PPER	(S*	du	sg	*	-	(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	kennst	VVFIN	*	kennen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	mich	PPER	*))	mich	sg	*	-	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Wo	PWAV	(S*	wo	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	du	PPER	*	du	sg	*	-	(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	plauderst	VVFIN	*)	plauderst	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wo	PWAV	(VROOT(PSEUDO(S*	wo	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sich	PRF	*	sich	sg	-	-	(146)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ein	ART	(NP*	ein	sg	masc	-	(146
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	einziger	ADJA	*	einzig	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Umstand	NN	*)	umstand	sg	masc	-	146)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	anders	ADV	*	anders	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	findet	VVFIN	*	finden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	als	KOKOM	(VP(NP*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	du	PPER	*)	du	sg	*	-	(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	mir	PPER	*	sich	sg	*	-	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	ihn	PPER	*	ihn	sg	masc	-	(146)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	angegeben	VVPP	*))	angeben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	PIRRO	NE	(VROOT(PSEUDO*	pirro	-	-	(LOC*)	(5|(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Aber	KON	(VROOT(PSEUDO(S*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Angelo	NE	*	angelo	-	-	(PER*)	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	um	APPR	(PP*	um	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	des	ART	*	der	sg	masc	-	(132
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Himmels	NN	*	himmel	sg	masc	-	132)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	willen	APZR	*))	willen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ANGELO	NE	(VROOT(PSEUDO*	angelo	-	-	(LOC*)	(6|(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	6)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Tu	NE	(VROOT(PSEUDO(S*	tu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	was	PWS	*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	du	PPER	(VP*	du	sg	*	-	(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	lassen	VVINF	*)	lassen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	kannst	VMFIN	*)	können	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Geht	VVFIN	(VROOT(PSEUDO(S*	gehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ab	PTKVZ	*)	ab	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	PIRRO	NE	(VROOT(PSEUDO*	pirro	-	-	(LOC*)	(5|(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ha	XY	*	ha	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Laß	KOUS	*	lassen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	dich	PPER	*	dich	sg	-	-	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	den	ART	*	der	sg	masc	-	(147
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Teufel	NN	*	teufel	sg	masc	-	147)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	bei	APPR	*	bei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Einem	ART	*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Haare	NN	*	haar	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	fassen	VVINF	*	fassen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	du	PPER	*	du	sg	*	-	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	bist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	sein	PPOSAT	*	sein	-	-	-	(147)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	auf	APPR	*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	ewig	ADJD	*	ewig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	APPR	(VROOT(PSEUDO(PP*	ich	sg	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Unglücklicher	NN	*)	unglücklicher	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Odoardo	NE	(VROOT(PSEUDO(CNP*	odoardo	-	-	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Claudia	NE	(MPN*	claudia	*	*	-	(53|(7|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Galotti	NE	*))	galotti	sg	*	-	53)|7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Pirro	NE	(VROOT(PSEUDO*	pirro	-	-	(PER*)	(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	bleibt	VVFIN	*	bleiben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mir	PPER	*	sich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	zu	PTKA	*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	lang	ADJD	*	lang	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	aus	PTKVZ	*	aus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	–	XY	*	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO*	claudia	sg	neut	(PER*)	(53|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	53)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Noch	ADV	(VROOT(PSEUDO(NP*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	einen	ART	(NP*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Augenblick	NN	*)	augenblick	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Odoardo	NE	*)	odoardo	-	-	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Es	PPER	(VROOT(PSEUDO(S*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	würde	VAFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sie	PPER	(VP*	sie	-	-	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	schmerzen	VVINF	*	schmerzen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	deines	PPOSAT	(VP(NP*	dein	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Anblicks	NN	*)	anblick	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	verfehlen	VVINF	*))))	verfehlen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	muß	VMFIN	*	müssen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	auch	ADV	(PP*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	bei	APPR	*	bei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	dem	ART	*	der	sg	neut	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Grafen	NN	*)	grafe	sg	neut	-	9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	noch	ADV	(VP*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	einsprechen	VVINF	*))	einsprechen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Kaum	ADV	(VROOT(PSEUDO(S*	kaum	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	kann	VMFIN	*	können	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ichs	CARD	(VP*	ichs	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	erwarten	VVINF	*	erwarten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	diesen	PDAT	(VP(NP*	dieser	pl	*	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	würdigen	ADJA	*	würdigen	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	jungen	ADJA	*	jung	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Mann	NN	*)	mann	*	masc	-	9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	meinen	PPOSAT	(NP*	mein	pl	-	-	(9|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Sohn	NN	*)	sohn	sg	masc	-	9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	nennen	VVINF	*))))	nennen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Alles	PIS	(VROOT(PSEUDO(S*	alle	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	entzückt	VVFIN	*	entzücken	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mich	PPER	*	mich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	an	APPR	(PP*	an	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ihm	PPER	*))	ihm	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	vor	APPR	(NP(PP*	vor	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	allem	PIS	*)	alle	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	der	ART	*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Entschluß	NN	*	entschluß	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	in	APPR	(VP(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	seinen	PPOSAT	*	sein	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	väterlichen	ADJA	*	väterlich	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Tälern	NN	*)	täler	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	sich	PRF	(NP*	sich	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	selbst	ADV	*)	selbst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	leben	VVINF	*))))	leben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO*	claudia	sg	neut	(PER*)	(53|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	53)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Das	ART	(VROOT(PSEUDO(S(NP*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Herz	NN	*)	herz	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	bricht	VVFIN	*	brechen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mir	PPER	*	sich	sg	*	-	(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	wenn	KOUS	(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ich	PPER	*	ich	sg	*	-	(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	hieran	PROAV	*	hieran	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	gedenke	VVFIN	*))	gedenken	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	So	ADV	(S(AVP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ganz	ADV	*)	ganz	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sollen	VMFIN	*	sollen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	wir	PPER	*	wir	pl	*	-	(12)|(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	sie	PPER	(VP*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	verlieren	VVINF	*))	verlieren	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	diese	PDAT	(NP*	dieser	sg	fem	-	(8
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	einzige	ADJA	*	einzig	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	geliebte	ADJA	*	geliebt	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Tochter	NN	*)	tochter	*	*	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	nennst	VVFIN	*	nennen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	du	PPER	*	du	sg	*	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	sie	PPER	(S*	sie	pl	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	verlieren	VVFIN	*))	verlieren	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(VP(NP*	sie	pl	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	in	APPR	(NP(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	den	ART	*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Armen	NN	*)	arme	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	der	ART	*	der	sg	masc	-	(50
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Liebe	NN	*))	liebe	sg	masc	-	50)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	wissen	VVINF	*))	wissen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Vermenge	NN	(VROOT(PSEUDO(S(NP*	vermenge	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	dein	PPOSAT	(NP*	dein	sg	neut	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Vergnügen	NN	*))	vergnügen	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	an	APPR	(PP*	an	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ihr	PPER	*)	ihr	sg	neut	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	nicht	PTKNEG	(PP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	mit	APPR	*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	ihrem	PPOSAT	*	ihr	sg	masc	-	(148|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Glücke	NN	*))	glücke	sg	masc	-	148)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Du	PPER	(S*	du	sg	*	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	möchtest	VMFIN	*	möchtest	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	meinen	PPOSAT	(VP(NP*	meinen	pl	-	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	alten	ADJA	*	alt	pl	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Argwohn	NN	*)	argwohn	pl	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	erneuern	VVINF	*))	erneuern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	mehr	ADV	(NP*	mehr	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	das	ART	(CNP(NP*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Geräusch	NN	*)	geräusch	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	die	ART	(NP*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	Zerstreuung	NN	*	zerstreuung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	der	ART	(NP*	der	sg	fem	-	(149
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	Welt	NN	*))))	welt	sg	fem	-	149)
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	mehr	ADV	*	mehr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	die	ART	(NP*	der	sg	fem	-	(150
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	Nähe	NN	*	nähe	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	des	ART	(NP*	der	sg	masc	-	(96
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	Hofes	NE	*))	hof	sg	masc	-	150)|96)
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	war	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	als	KOKOM	(NP*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	28	die	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	29	Notwendigkeit	NN	*	notwendigkeit	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	30	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	31	unserer	PPOSAT	(VP(NP*	unser	sg	fem	-	(8|(53)|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	32	Tochter	NN	*)	tochter	sg	fem	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	33	eine	ART	(NP*	ein	sg	fem	-	(151
Emilia.xml.rksp.0.CoNLL2012.conll	000	34	anständige	ADJA	*	anständig	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	35	Erziehung	NN	*)	erziehung	sg	fem	-	151)
Emilia.xml.rksp.0.CoNLL2012.conll	000	36	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	37	geben	VVINF	*)	geben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	38	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	39	was	PWS	(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	40	dich	PPER	*	dich	sg	-	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	41	bewog	VVFIN	*	bewegen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	42	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	43	hier	ADV	(VP*	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	44	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	45	der	ART	*	der	sg	fem	-	(26
Emilia.xml.rksp.0.CoNLL2012.conll	000	46	Stadt	NN	*)	stadt	sg	fem	-	26)
Emilia.xml.rksp.0.CoNLL2012.conll	000	47	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	48	ihr	PPER	*)	ihr	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	49	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	50	bleiben	VVINF	*))))))	bleiben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	51	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	52	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	53	fern	ADJD	(NP(PP*	fern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	54	von	APPR	*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	55	einem	ART	(CNP(NP*	ein	sg	masc	-	(12
Emilia.xml.rksp.0.CoNLL2012.conll	000	56	Manne	NN	*)	manne	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	57	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	58	Vater	NN	*))	vater	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	59	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	60	der	PRELS	(S*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	61	euch	PPER	*	euch	sg	masc	-	(8)|(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	62	so	ADV	(AP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	63	herzlich	ADJD	*)	herzlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	64	liebet	VVFIN	*))	lieben	sg	-	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	65	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO*	claudia	sg	neut	(PER*)	(53|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	53)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wie	PWAV	(VROOT(PSEUDO(S(NP(AP*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ungerecht	ADJD	*)	ungerecht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Odoardo	NE	*))	odoardo	-	-	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Aber	KON	(VROOT(PSEUDO(S*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	laß	KOUS	(S*	lassen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mich	PPER	*	mich	sg	*	-	(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	heute	ADV	*	heute	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nur	ADV	*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ein	ART	(NP*	ein	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	einziges	PIS	*	einzig	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	für	APPR	(PP*	für	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	diese	PDAT	*	dieser	sg	fem	-	(26
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Stadt	NN	*)	stadt	sg	fem	-	26)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	für	APPR	(VP(PP*	für	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	diese	PDAT	*	dieser	sg	fem	-	(150
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Nähe	NN	*	nähe	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	des	ART	(NP*	der	sg	masc	-	(96
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	Hofes	NN	*))	hof	sg	masc	-	150)|96)
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	sprechen	VVINF	*)))	sprechen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	die	PRELS	(S*	der	sg	fem	-	(150)|(26)
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	deiner	PPOSAT	(NP*	dein	sg	fem	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	strengen	ADJA	*	streng	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	Tugend	NN	*)	tugend	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	so	ADV	(AP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	verhaßt	ADJD	*)	verhaßt	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	sind	VAFIN	*))	sein	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Hier	ADV	(NP*	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nur	ADV	(S*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	hier	ADV	*	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	konnte	VMFIN	*	können	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	die	ART	(NP*	der	sg	fem	-	(50
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Liebe	NN	*)	liebe	sg	fem	-	50)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	zusammen	ADV	*	zusammen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	bringen	VVINF	(VP*	bringen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	was	PWS	(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	für	APPR	(VP(PP*	für	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	einander	PPER	*)	einander	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	geschaffen	VVPP	*)	schaffen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	war	VAFIN	*))))	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Hier	ADV	(VROOT(PSEUDO(CS(S*	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	nur	ADV	*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	konnte	VMFIN	*	können	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	der	ART	(NP*	der	sg	masc	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Graf	NN	*	graf	sg	masc	-	9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Emilien	NE	*)	emilie	pl	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	finden	VVINF	*)	finden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	fand	VVFIN	(S*	finden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	sie	PPER	*))	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Das	ART	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	räum	NN	*	räum	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ein	PTKVZ	*	ein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Aber	KON	(VROOT(PSEUDO(S*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	gute	ADJA	(S(NP*	gut	sg	fem	-	(53
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Claudia	NE	*)	claudia	sg	fem	(PER*)	53)|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	hattest	VAFIN	*	hatteen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	du	PPER	*	du	sg	*	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	darum	PROAV	*	darum	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Recht	NN	*	recht	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	weil	KOUS	(S*	weil	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	dir	PPER	*	dir	sg	*	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	der	ART	(NP*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Ausgang	NN	*)	ausgang	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Recht	NN	*	recht	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	gibt	VVFIN	*)))	geben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Gut	ADJD	*	gut	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	mit	APPR	(VP(AVP(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	dieser	PDAT	*	dieser	sg	fem	-	(151
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Stadterziehung	NN	*)	stadterziehung	sg	fem	-	151)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	so	ADV	*)	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	abgelaufen	VVPP	*))	ablaufen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Laßt	VVIMP	(VROOT(PSEUDO(CS(S*	lassen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	uns	PPER	*	uns	pl	*	-	(53)|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	nicht	PTKNEG	(VP(AP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	weise	ADJD	*)	weise	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	sein	VAINF	*)	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	wollen	VMFIN	*)	wollen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	wo	PWAV	(S*	wo	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	wir	PPER	(NP*	wir	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	nichts	PIS	*)	nichts	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	als	KOKOM	(VP(AP*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	glücklich	ADJD	*)	glücklich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	gewesen	VAPP	*)))	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Gut	ADJD	(VROOT(PSEUDO(DL*	gut	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	so	ADV	(VP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	damit	PROAV	*	damit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	abgelaufen	VVPP	*)))	ablaufen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Nun	ADV	(S*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	haben	VAFIN	*	haben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sie	PPER	*	sie	pl	*	-	(8)|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	sich	PRF	(VP*	sich	pl	-	-	(9)|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	gefunden	VVPP	*	finden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	die	ART	(S*	der	pl	fem	-	(9)|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	für	APPR	(VP(PP*	für	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	einander	PPER	*)	einander	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	bestimmt	VVPP	*)	bestimmen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	waren	VAFIN	*)))	sein	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	nun	ADV	*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	laß	ADJD	(S*	lassen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	sie	PPER	*	sie	sg	fem	-	(9)|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	ziehen	VVFIN	*	ziehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	wohin	PWAV	(S*	wohin	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	Unschuld	NN	(CNP*	unschuld	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	Ruhe	NN	*)	ruhe	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	sie	PPER	(VP*	sie	sg	fem	-	(8)|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	rufen	VVINF	*)))	rufen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Was	PWS	(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sollte	VMFIN	*)	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	der	ART	(NP*	der	sg	masc	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Graf	NN	*	graf	sg	masc	-	9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	hier	ADV	*)	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sich	PRF	(VROOT(PSEUDO(S(CVP(VP*	sich	pl	-	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	bücken	VVINF	*)	bücken	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	schmeicheln	VVINF	*	schmeicheln	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	kriechen	VVINF	(VP(VP*	kriechen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	und	KON	(VP*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	die	ART	(NP*	der	sg	fem	-	(3
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Marinellis	NE	*)	marinelli	sg	fem	-	3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	auszustechen	VVIZU	*))	auustechen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	suchen	VVINF	*)))	suchen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	um	KOUI	(VROOT(PSEUDO(CS(VP*	um	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	endlich	ADV	*	endlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ein	ART	(NP*	ein	sg	neut	-	(152
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Glück	NN	*)	glück	sg	neut	-	152)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	machen	VVINF	*))	machen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	dessen	PDS	(S*	der	sg	masc	-	(152)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	er	PPER	*	er	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	bedarf	VVFIN	*))	bedürfen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	um	KOUI	*	um	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	endlich	ADV	*	endlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	einer	ART	*	ein	sg	fem	-	(153
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Ehre	NN	*	ehre	sg	fem	-	153)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	gewürdiget	VVPP	*	gewürdiget	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	zu	PTKZU	*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	werden	VAINF	*	werden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	die	PRELS	*	der	sg	fem	-	(153)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	für	APPR	*	für	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	ihn	PPER	*	ihn	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	keine	PIAT	*	kein	sg	fem	-	(153)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	wäre	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Pirro	NE	*	pirro	-	-	-	(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	PIRRO	NE	(VROOT(PSEUDO*	pirro	-	-	(LOC*)	(5|(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Hier	ADV	*	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	bin	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Geh	NN	(VROOT(PSEUDO(CS*	geh	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	führe	VVFIN	(S*	führen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mein	PPOSAT	(NP*	mein	sg	neut	-	(154|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Pferd	NN	*)	pferd	sg	neut	-	154)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	vor	APPR	(PP*	vor	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	das	ART	*	der	sg	neut	-	(155
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Haus	NN	*	haus	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	des	ART	(NP*	der	sg	masc	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Grafen	NN	*))))	grafe	sg	masc	-	155)|9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(CS(S*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	komme	VVFIN	*	kommen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	nach	PTKVZ	*)	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	will	VMFIN	(S*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	mich	PPER	(VP*	mich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	da	ADV	*	da	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	wieder	ADV	*	wieder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	aufsetzen	VVINF	*)))	aufsetzen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Pirro	NE	(VROOT(PSEUDO(S*	pirro	-	-	-	(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	geht	VVFIN	*)	gehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Warum	PWAV	(S*	warum	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	soll	VMFIN	*	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	der	ART	(NP*	der	sg	masc	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Graf	NN	*)	graf	sg	masc	-	9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	hier	ADV	(VP*	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	dienen	VVINF	*))	dienen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	wenn	KOUS	(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	er	PPER	*	er	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	dort	ADV	*	dort	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	selbst	ADV	(VP*	selbst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	befehlen	VVINF	*)	befehlen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	kann	VMFIN	*)	können	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Dazu	PROAV	(S*	dazu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	bedenkst	VVFIN	*	bedenken	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	du	PPER	*	du	sg	*	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Claudia	NE	*	claudia	-	-	(PER*)	(53)|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	durch	APPR	(PP*	durch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	unsere	PPOSAT	*	unser	pl	masc	-	(8|(12)|(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Tochter	NN	*)	tochter	pl	masc	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	er	PPER	*	er	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	es	PPER	(VP*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	vollends	ADV	*	vollends	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	dem	ART	*	der	sg	neut	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	Prinzen	NN	*)	prinz	sg	neut	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	verderbt	VVPP	*)))	verderben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Der	ART	*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Prinz	NN	*	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	haßt	VVFIN	*	hassen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mich	PPER	*	mich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	–	XY	*	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO*	claudia	sg	neut	(PER*)	(53|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	53)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Vielleicht	ADV	(VROOT(PSEUDO(S(NP*	vielleicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	weniger	PIS	*)	weniger	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	als	KOKOM	(S*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	du	PPER	*	du	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	besorgest	VVFIN	*))	besorgest	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Besorgest	NN	(VROOT(PSEUDO*	besorgest	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	besorg	VVFIN	*	besorg	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	auch	ADV	*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	was	PIS	*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO*	claudia	sg	neut	(PER*)	(53|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	53)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Denn	KON	*	denn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	hab	VAFIN	*	hab	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	dir	PPER	*	dir	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	schon	ADV	*	schon	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	gesagt	VVPP	*	sagen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	daß	KOUS	*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	der	ART	*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Prinz	NN	*	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	unsere	PPOSAT	*	unser	pl	neut	-	(8|(12)|(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Tochter	NN	*	tochter	pl	neut	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	gesehen	VVPP	*	sehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	hat	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(NP*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Prinz	NN	*)	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wo	PWAV	*	wo	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	das	PDS	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO*	claudia	sg	neut	(PER*)	(53|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	53)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	In	APPR	(VROOT(PSEUDO(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	der	ART	*	der	sg	fem	-	(54
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	letzten	ADJA	*	letzter	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Vegghia	NE	*	vegghia	sg	fem	-	54)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	bei	APPR	(S(PP*	bei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	dem	PRELS	*)	der	sg	masc	-	(156
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Kanzler	NN	(NP*	kanzler	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Grimaldi	NE	*)	grimaldi	-	-	(PER*)	156)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	die	PRELS	(S*	der	sg	fem	-	(54)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	er	PPER	*	er	sg	masc	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	seiner	PPOSAT	*	sein	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Gegenwart	NN	*)	gegenwart	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	beehrte	VVFIN	*)))	beehren	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Er	PPER	*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	bezeigte	VVFIN	*	bezeigen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sich	PRF	*	sich	sg	-	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	gegen	APPR	*	gegen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	sie	PPER	*	sie	*	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	gnädig	ADJD	*	gnädig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	–	XY	*	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	So	ADV	(VROOT(PSEUDO(S(ISU*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	gnädig	ADJD	*))	gnädig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO*	claudia	sg	neut	(PER*)	(53|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	53)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Er	PPER	(VROOT(PSEUDO(S*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	unterhielt	VVFIN	*	unterhalten	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sich	PRF	*	sich	sg	-	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ihr	PPER	*)	ihr	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	so	ADV	(AVP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	lange	ADV	*)	lange	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	–	CARD	(NP*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	–	NN	*))))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Unterhielt	VVFIN	(VROOT(PSEUDO(S*	unterhielt	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sich	PRF	*	sich	sg	-	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ihr	PPER	*))	ihr	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO*	claudia	sg	neut	(PER*)	(53|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	53)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Schien	NE	*	schien	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	von	APPR	*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ihrer	PPOSAT	*	ihr	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Munterkeit	NN	*	munterkeit	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ihrem	PPOSAT	*	ihr	sg	masc	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Witze	NN	*	witze	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	bezaubert	VVPP	*	bezaubern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	–	XY	*	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	So	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	bezaubert	VVFIN	*	bezaubern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO*	claudia	sg	neut	(PER*)	(53|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	53)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Hat	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	von	APPR	*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ihrer	PPOSAT	*	ihr	sg	fem	-	(157|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Schönheit	NN	*	schönheit	sg	fem	-	157)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	mit	APPR	*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	vielen	PIAT	*	vieler	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Lobeserhebungen	NN	*	lobeserhebung	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	gesprochen	VVPP	*	sprechen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	–	$.	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	–	XY	*	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Lobeserhebungen	NN	(VROOT(PSEUDO*	lobeserhebung	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	das	PDS	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	alles	PIS	*	alle	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	erzählst	VVFIN	*	erzählen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	du	PPER	*	du	sg	*	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	mir	PPER	*	sich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	einem	ART	*	ein	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Tone	NN	*	tone	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	der	ART	(NP*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Entzückung	NN	*)))	entzückung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	O	NE	(VROOT(PSEUDO(MPN*	O	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Claudia	NE	*	claudia	-	-	-	(53|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*)))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	eitle	VVFIN	(VROOT(PSEUDO(S*	eitel	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	törichte	VVFIN	*)	töricht	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Mutter	NE	*	mutter	sg	fem	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO*	claudia	sg	neut	(PER*)	(53|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	53)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wie	PWAV	*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nun	ADV	(VROOT(PSEUDO(CS(AP*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	gut	ADJD	*)	gut	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nun	ADV	(AP*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	gut	ADJD	*))	gut	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Auch	ADV	(VROOT(PSEUDO(S(NP*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	das	PDS	*)	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	so	ADV	(VP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	abgelaufen	VVPP	*))	ablaufen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ha	NE	*	ha	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	wenn	KOUS	(VROOT(PSEUDO(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ich	PPER	*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mir	PRF	*	sich	sg	-	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	einbilde	ADJA	(NP*	einbilde	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	–	NN	*)	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Das	ART	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	gerade	ADV	*	gerade	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	wäre	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	der	ART	(NP*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Ort	NN	*)	ort	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	wo	PWAV	(S*	wo	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	ich	PPER	(VP*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	am	APPRART	(AA*	an	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	tödlichsten	ADJA	*)	tödlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	verwunden	VVINF	*))	verwunden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	bin	VAFIN	*))	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ein	ART	(NP*	ein	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Wollüstling	NN	*	wollüstling	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	der	PRELS	(CVP(VP*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	bewundert	VVPP	*)	bewundern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	begehrt	VVPP	*))	begehren	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Claudia	NE	*	claudia	sg	fem	-	(53)|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Claudia	NE	(VROOT(PSEUDO(MPN*	claudia	sg	fem	-	(53)|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*)))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	der	ART	(VROOT(PSEUDO(S(NP*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	bloße	ADJA	*	bloß	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Gedanke	NN	*)	gedanke	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	setzt	VVFIN	*	setzen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	mich	PPER	*	mich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Wut	NN	*))	wut	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Du	PPER	(S*	du	sg	*	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	hättest	VAFIN	*	hättest	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mir	PPER	(S*	sich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	das	PDS	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	sogleich	ADV	*	sogleich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	sollen	VMFIN	*	sollen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	gemeldet	VVPP	(VP*	melden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	haben	VAINF	*)))	haben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Doch	KON	(S*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	möchte	VMFIN	*	möchten	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	dir	PPER	*	dir	sg	*	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	heute	ADV	*	heute	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	nicht	PTKNEG	*)	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	gern	ADV	(VP*	gern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	etwas	PIAT	(NP*	etwas	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Unangenehmes	NN	*)	unangenehme	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	sagen	VVINF	*)	sagen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ich	PPER	*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	würde	VAFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Indem	KOUS	(S*	indem	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	sie	PPER	*	sie	sg	fem	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ihn	PPER	*	ihn	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	bei	APPR	(PP*	bei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	der	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Hand	NN	*)	hand	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	ergreift	VVFIN	*))	ergreifen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	wenn	KOUS	(VROOT(PSEUDO(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ich	PPER	*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	länger	ADJD	*	lang	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	bliebe	VVFIN	*)	bleiben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Drum	NN	(S*	drum	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	laß	VVFIN	*	lassen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mich	PPER	*)	mich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	laß	KOUS	*	lassen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	mich	PPER	*	mich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Gott	NN	(S(VP*	gott	-	-	-	(57)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	befohlen	VVINF	*))	befehlen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Claudia	NE	*	claudia	sg	fem	-	(53)|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Kommt	VVFIN	(S*	kommen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	glücklich	ADJD	*	glücklich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nach	PTKVZ	*)	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO(MPN*	claudia	-	-	-	(53|(7|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	GALOTTI	NE	*)	galotti	-	-	-	7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	53)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Welch	PWAT	(VROOT(PSEUDO(NP*	welch	-	-	-	(12
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ein	ART	*	ein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Mann	NN	*)	mann	-	-	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	O	NE	*	O	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	der	ART	(NP*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	rauhen	ADJA	*	rauh	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Tugend	NN	*)	tugend	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wenn	KOUS	(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	anders	ADV	*	anders	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sie	PPER	*	sie	pl	*	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	diesen	PDAT	(NP*	dieser	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Namen	NN	*))	name	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	verdienet	VVFIN	*	verdienen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Alles	PIS	*	alle	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	scheint	VVFIN	*	scheinen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ihr	PPER	*	ihr	sg	fem	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	verdächtig	ADJD	*	verdächtig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	alles	PIS	*	alle	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	strafbar	ADJD	*	strafbar	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Oder	NE	(NP*	oder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	wenn	KOUS	(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	das	PDS	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	die	ART	(VP(NP*	der	pl	masc	-	(158
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Menschen	NN	*)	mensch	pl	masc	-	158)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	kennen	VVINF	*)	kennen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	heißt	VVFIN	*))	heißen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	–	XY	*	–	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	wer	PWS	(S*	wer	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	sollte	VMFIN	*	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	sich	PRF	(VP*	sich	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	wünschen	VVINF	*))	wünschen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	sie	PPER	(S(VP*	sie	-	-	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	kennen	VVINF	*)))	kennen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Wo	PWAV	(S*	wo	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	bleibt	VVFIN	*)	bleiben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	aber	ADV	(NP*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	auch	ADV	*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Emilia	NE	*)	emilia	*	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Er	PPER	(S*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	des	ART	(NP*	der	sg	masc	-	(12
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Vaters	NN	*))	vater	sg	masc	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Feind	NE	*	feind	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	folglich	ADV	*	folglich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	folglich	ADV	(AVP*	folglich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	wenn	KOUS	(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	er	PPER	*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	ein	ART	(NP*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Auge	NN	*	auge	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	für	APPR	(PP*	für	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	die	ART	*	der	pl	*	-	(8
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	Tochter	NN	*))	tochter	pl	*	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	hat	VAFIN	*))	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	so	ADV	(S*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	einzig	ADJD	*	einzig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	um	KOUI	(VP*	um	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	ihn	PPER	*	ihn	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	28	beschimpfen	VVINF	*)))	beschimpfen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	29	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Emilia	NE	(VROOT(PSEUDO(CNP*	emilia	-	-	(PER*)	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Claudia	NE	(MPN*	claudia	*	*	-	(53|(7|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Galotti	NE	*))	galotti	sg	*	-	53)|7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	EMILIA	NE	(VROOT(PSEUDO*))	emilia	-	-	-	(8)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	stürzet	VVFIN	(VROOT(PSEUDO(S*	stürzen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	einer	ART	*	ein	sg	fem	-	(159
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ängstlichen	ADJA	*	ängstlich	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Verwirrung	NN	*)	verwirrung	sg	fem	-	159)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	herein	PTKVZ	*)	herein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wohl	ADV	(VROOT(PSEUDO(NP*	wohl	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	mir	PPER	*)	sich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	wohl	ADV	(VROOT(PSEUDO(NP*	wohl	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	mir	PPER	*)	sich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nun	ADV	(VROOT(PSEUDO(S*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	bin	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Sicherheit	NN	*))	sicherheit	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Oder	KON	(VROOT(PSEUDO(S*	oder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	er	PPER	*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mir	PPER	(VP*	sich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	gar	ADV	*	gar	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	gefolgt	VVPP	*))	folgen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Indem	KOUS	(VROOT(PSEUDO(S(S*	indem	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sie	PPER	*	sie	pl	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	den	ART	(NP*	der	sg	masc	-	(128
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Schleier	NN	*)	schleier	sg	masc	-	128)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	zurück	PTKVZ	*)	zurück	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	wirft	VVFIN	*	werfen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ihre	PPOSAT	(NP*	ihr	pl	neut	-	(53|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Mutter	NN	*)	mutter	pl	neut	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	erblicket	VVFIN	*)	erblicket	pl	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ist	VVFIN	(VROOT(PSEUDO(S*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	er	PPER	*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	meine	PPOSAT	(NP*	mein	sg	-	-	(53|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Mutter	NN	*))	mutter	*	*	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	er	PPER	*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Nein	PTKANT	(S*	nein	sg	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	dem	ART	(NP*	der	sg	masc	-	(132
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Himmel	NN	*)	himmel	sg	masc	-	132)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	sei	VAFIN	*)	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Dank	NN	(S*)	dank	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO*	claudia	sg	neut	(PER*)	(53|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	53)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	dir	PPER	*	dir	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	meine	PPOSAT	(NP*	mein	sg	fem	-	(8|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Tochter	NN	*))	tochter	sg	fem	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	was	PWS	*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	dir	PPER	*	dir	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	EMILIA	NE	(VROOT(PSEUDO*	emilia	sg	neut	(LOC*)	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nichts	PIS	*	nichts	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	nichts	PIS	*	nichts	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	–	PPER	*	–	sg	neut	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO*	claudia	sg	neut	(PER*)	(53|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	53)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	blickest	VVFIN	*	blickest	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	so	ADV	(AP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	wild	ADJD	*)	wild	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	um	APPR	(PP*	um	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	dich	PPER	*))	dich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	zitterst	ADV	*	zitterst	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	an	APPR	(PP*	an	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	jedem	PIAT	*	jeder	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Gliede	NN	*))	gliede	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	EMILIA	NE	(VROOT(PSEUDO*	emilia	sg	neut	(LOC*)	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Was	PWS	*	was	sg	neut	-	(160)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	hab	VAFIN	*	hab	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	hören	VVINF	*	hören	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	müssen	VMFIN	*	müssen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wo	PWAV	*	wo	-	-	-	(100
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	wo	PWAV	*	wo	-	-	-	100)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	hab	VAFIN	*	hab	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ich	PPER	*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	es	PPER	*	es	sg	neut	-	(160)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	hören	VVINF	*	hören	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	müssen	VMFIN	*	müssen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO*	claudia	sg	neut	(PER*)	(53|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	53)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	habe	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	dich	PRF	(VP*	dich	sg	neut	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	der	ART	*	der	sg	fem	-	(100
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Kirche	NN	*)	kirche	sg	fem	-	100)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	geglaubt	VVPP	*))	glauben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	–	$.	*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	EMILIA	NE	(VROOT(PSEUDO*	emilia	sg	neut	(LOC*)	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Eben	ADV	(VROOT(PSEUDO(S*	eben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	da	ADV	*)	da	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Was	PWS	*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	dem	ART	*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Laster	NN	*	laster	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Kirch	NE	*	kirch	-	-	(PER*)	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Altar	NE	*	altar	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ah	NE	*	ah	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	meine	PPOSAT	(NP*	mein	-	-	-	(53|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Mutter	NN	*)	mutter	-	-	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sich	PRF	(VROOT(PSEUDO(AP*	sich	sg	-	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ihr	PPER	*	ihr	sg	fem	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	die	ART	*	der	sg	fem	-	(161
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Arme	NN	*)	arme	sg	fem	-	161)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	werfend	ADJD	*)	werfend	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO*	claudia	sg	neut	(PER*)	(53|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	53)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Rede	NN	(VROOT(PSEUDO(NP*	rede	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	meine	PPOSAT	(NP*	mein	sg	fem	-	(8|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Tochter	NN	*))	tochter	sg	fem	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Mach	NE	*	mach	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	meiner	PPOSAT	*	mein	sg	fem	-	(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Furcht	NN	*	furcht	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ein	ART	*	ein	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Ende	NN	*	ende	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Was	PWS	(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	kann	VMFIN	*)	können	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	dir	PPER	*	dir	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	da	ADV	(NP*	da	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	an	APPR	(VP(AP(PP*	an	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	heiliger	ADJA	*	heilig	-	-	-	(100
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Stätte	NN	*	stätte	sg	-	-	100)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	so	ADV	(S*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Schlimmes	NE	*	schlimmes	sg	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	begegnet	VVFIN	*)))	begegnen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	sein	VAINF	*))	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	EMILIA	NE	(VROOT(PSEUDO*	emilia	sg	neut	(LOC*)	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nie	ADV	*	nie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	hätte	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	meine	PPOSAT	*	mein	sg	fem	-	(162|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Andacht	NN	*	andacht	sg	fem	-	162)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	inniger	ADJD	*	innig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	brünstiger	ADJD	*	brünstig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	sein	VAINF	*	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	sollen	VMFIN	*	sollen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	als	KOKOM	*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	heute	ADV	*	heute	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	nie	ADV	*	nie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	sie	PPER	*	sie	sg	fem	-	(162)
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	weniger	ADV	*	weniger	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	gewesen	VAPP	*	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	was	PWS	*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	sie	PPER	*	sie	sg	fem	-	(162)
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	sein	VAINF	*	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	sollte	VMFIN	*	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO*	claudia	sg	neut	(PER*)	(53|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	53)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wir	PPER	(VROOT(PSEUDO(S*	wir	pl	*	-	(8)|(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sind	VAFIN	*	sein	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Menschen	NN	(CNP*	mensch	pl	masc	-	(158)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Emilia	NE	*))	emilia	-	-	(PER*)	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Die	ART	(VROOT(PSEUDO(S(VP(NP*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Gabe	NN	*)	gabe	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	beten	VVINF	*))	beten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	immer	ADV	(PP*	immer	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	in	APPR	*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	unserer	PPOSAT	*	unser	sg	fem	-	(158)|(53)|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Gewalt	NN	*))	gewalt	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Dem	ART	(VROOT(PSEUDO(S(NP*	der	sg	masc	-	(132
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Himmel	NN	*)	himmel	sg	masc	-	132)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	beten	VVINF	(VP*	beten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	wollen	VMINF	*)	wollen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	auch	ADV	*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	beten	VVFIN	*)	beten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	EMILIA	NE	(VROOT(PSEUDO*	emilia	sg	neut	(LOC*)	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(CO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sündigen	VVINF	*	sündigen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wollen	VMFIN	*)	wollen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	auch	ADV	(VP*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	sündigen	VVINF	*))	sündigen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO*	claudia	sg	neut	(PER*)	(53|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	53)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Das	PDS	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	hat	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	meine	PPOSAT	*	mein	sg	fem	-	(8|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Emilia	NE	*	emilia	sg	fem	(PER*)	8)|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	wollen	VMFIN	*	wollen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	EMILIA	NE	(VROOT(PSEUDO*	emilia	sg	neut	(LOC*)	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nein	PTKANT	(VROOT(PSEUDO(S*	nein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	meine	PPOSAT	(NP*	mein	pl	masc	-	(53|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Mutter	NN	*)	mutter	sg	masc	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	so	ADV	(S(AP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	tief	ADJD	*)	tief	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ließ	VVFIN	*	lassen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	mich	PPER	*	mich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	die	ART	(VP(NP*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Gnade	NN	*)	gnade	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	sinken	VVINF	*)))	sinken	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Aber	KON	(S*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	daß	KOUS	(PP*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	fremdes	ADJA	*	fremd	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Laster	NN	*)	laster	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	uns	PPER	*	uns	pl	*	-	(8)|(53)|(158)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	wider	APPR	(PP*	wider	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	unsern	PPOSAT	*	unsern	-	-	-	(8)|(158)|(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Willen	NN	*))	wille	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	zu	APPR	(S(VP(PP*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Mitschuldigen	NN	*)	mitschuldigen	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	machen	VVINF	*)	machen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	kann	VMFIN	*)	können	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO*	claudia	sg	neut	(PER*)	(53|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	53)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Fasse	VVFIN	(VROOT(PSEUDO(S*	fasse	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	dich	PPER	*)	dich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sammle	NN	(NP*	sammle	pl	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	deine	PPOSAT	(CNP(NP*	dein	pl	neut	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Gedanken	NN	*)	gedanke	pl	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	so	ADV	(NP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	viel	PIS	*)))	viel	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	dir	PPER	(AP*	dir	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	möglich	ADJD	*)	möglich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sag	NE	*	sag	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	es	PPER	*	es	sg	neut	-	(163)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	mir	PPER	*	sich	sg	*	-	(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	mit	APPR	*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	eins	PIS	*	eins	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	was	PRELS	*	was	sg	neut	-	(163)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	dir	PPER	*	dir	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	geschehen	VVFIN	*	geschehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	EMILIA	NE	(VROOT(PSEUDO*	emilia	sg	neut	(LOC*)	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Eben	ADV	*	eben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	hatt	VAFIN	*	hatt	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	mich	PRF	*	mich	sg	-	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	–	CARD	*	–	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	weiter	ADV	*	weiter	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	von	APPR	*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	dem	ART	*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Altare	NN	*	altare	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	als	KOUS	*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	ich	PPER	*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	sonst	ADV	*	sonst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	pflege	VVFIN	*	pflegen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	–	VVIMP	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	denn	ADV	*	denn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	ich	PPER	*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	kam	VVFIN	*	kommen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	zu	PTKA	*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	spät	ADJD	*	spät	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	–	$.	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	auf	APPR	*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	meine	PPOSAT	*	mein	pl	masc	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	Knie	NN	*	knie	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	gelassen	VVPP	*	lassen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Eben	ADV	(VROOT(PSEUDO(CS(S*	eben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	fing	VVFIN	*	fangen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	an	PTKVZ	*	an	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	mein	PPOSAT	(VP(NP*	mein	sg	neut	-	(164|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Herz	NN	*)	herz	sg	neut	-	164)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	erheben	VVINF	*)))	erheben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	als	KOKOM	(S*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	dicht	ADJD	(PP*	dicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	hinter	APPR	*	hinter	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	mir	PPER	*)	sich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	etwas	PIS	*	etwas	*	neut	-	(165)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	seinen	PPOSAT	(NP*	sein	sg	masc	-	(165)
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	Platz	NN	*)	platz	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	nahm	VVFIN	*))	nehmen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	So	ADV	(VROOT(PSEUDO(S*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	dicht	ADJD	(PP*	dicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	hinter	APPR	*	hinter	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mir	PPER	*))	sich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ich	PPER	(S*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	konnte	VMFIN	*	können	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	weder	KON	*	weder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	vor	PTKVZ	*	vor	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	noch	ADV	(CO(VP(PP*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	zur	APPRART	*	zu	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Seite	NN	*)	seite	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	rücken	VVINF	*)	rücken	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	–	KON	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	so	ADV	(AVP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	gern	ADV	*)))	gern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	ich	PPER	(CS(S*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	auch	ADV	*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	wollte	VMFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	aus	APPR	(PP*	aus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	Furcht	NN	*))	furcht	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	eines	PIS	(NP*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	andern	PIAT	(NP*	anderer	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	Andacht	NN	*))	andacht	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	mich	PPER	(VP*	mich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	meiner	PIS	*)	mein	sg	fem	-	(162)|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	28	stören	VVINF	*)	stören	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	29	möchte	VMFIN	*))	möchten	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	30	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Andacht	NN	*	andacht	-	-	-	(162)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	das	PDS	(VROOT(PSEUDO(S*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	war	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	das	ART	(NP*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Schlimmste	NN	*)	schlimme	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	was	PWS	(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ich	PPER	*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	besorgte	VVFIN	*))	besorgen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Aber	KON	*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	währte	VVFIN	*	währen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	lange	ADV	*	lange	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	hört	VVFIN	*	hören	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	ich	PPER	*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	ganz	ADV	*	ganz	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	nah	ADJD	*	nah	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	an	APPR	*	an	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	meinem	PPOSAT	*	mein	sg	masc	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	Ohre	NN	*	ohre	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	–	NN	*	–	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	nach	APPR	*	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	einem	ART	*	ein	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	tiefen	ADJA	*	tief	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	Seufzer	NN	*	seufzer	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	–	KON	*	–	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	den	ART	*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	28	Namen	NN	*	name	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	29	einer	ART	*	ein	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	30	Heiligen	NN	*	heilige	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	31	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	32	–	NN	*	–	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	33	den	ART	*	der	sg	masc	-	(98
Emilia.xml.rksp.0.CoNLL2012.conll	000	34	Namen	NN	*	name	sg	masc	-	98)
Emilia.xml.rksp.0.CoNLL2012.conll	000	35	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	36	–	$.	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	37	zürnen	VVFIN	*	zürnen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	38	Sie	PPER	*	sie	pl	*	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	39	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	40	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	41	meine	PPOSAT	*	mein	sg	fem	-	(53|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	42	Mutter	NN	*	mutter	sg	fem	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	43	–	APPO	*	–	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	44	den	ART	*	der	sg	masc	-	(98
Emilia.xml.rksp.0.CoNLL2012.conll	000	45	Namen	NN	*	name	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	46	Ihrer	PPOSAT	*	ihr	pl	masc	-	(8|(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	47	Tochter	NN	*	tochter	pl	masc	-	98)|8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	48	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Meinen	PPOSAT	(NP*	mein	pl	masc	-	(98|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Namen	NN	*)	name	pl	masc	-	98)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	O	XY	*	O	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	laute	VVFIN	*	lauten	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Donner	NN	*)	donner	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	mich	PPER	(VP*	mich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	verhindert	VVPP	*)	verhindern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	hätten	VAFIN	(S*	haben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	mehr	ADV	(VP*	mehr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	hören	VVINF	*)))	hören	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Es	PPER	*	es	sg	neut	-	(165)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sprach	VVFIN	*	sprechen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	von	APPR	*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Schönheit	NN	*	schönheit	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	von	APPR	*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Liebe	NN	*	liebe	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	–	APZR	*	–	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Es	PPER	*	es	sg	neut	-	(165)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	klagte	VVFIN	*	klagen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	daß	KOUS	*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	dieser	PDAT	*	dieser	sg	masc	-	(127
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Tag	NN	*	tag	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	welcher	PRELS	*	welcher	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	mein	PPOSAT	*	mein	sg	neut	-	(148|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	Glück	NN	*	glück	sg	neut	-	148)
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	mache	VVFIN	*	machen	sg	-	-	127)
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	–	KOKOM	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	wenn	KOUS	*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	er	PPER	*	er	sg	masc	-	(127)
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	es	PPER	*	es	sg	neut	-	(148)
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	anders	ADV	*	anders	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	mache	VVFIN	*	machen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	–	PIS	*	–	pl	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	28	sein	PPOSAT	*	sein	-	-	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	29	Unglück	NN	*	unglück	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	30	auf	APPR	*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	31	immer	ADV	*	immer	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	32	entscheide	VVFIN	*	entscheiden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	33	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Es	PPER	*	es	sg	neut	-	(165)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	beschwor	VVFIN	*	beschwören	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mich	PPER	*	mich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	–	CARD	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	hören	VVINF	*	hören	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	mußt	VMFIN	*	mussen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	ich	PPER	*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	dies	PDS	*	dieser	sg	neut	-	(160
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	alles	PIS	*	alle	sg	neut	-	160)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Aber	KON	(VROOT(PSEUDO(CS(S*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ich	PPER	*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	blickte	VVFIN	*	blicken	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	um	PTKVZ	*	um	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ich	PPER	(S*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	wollte	VMFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	tun	VVINF	*))	tun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	als	KOKOM	(S*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	ob	KOUS	*	ob	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	ich	PPER	*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	es	PPER	*	es	sg	neut	-	(160)|(165)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	hörte	VVFIN	*))	hören	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Was	PWS	*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	konnt	VVFIN	*	konnen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ich	PPER	*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	sonst	ADV	*	sonst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Meinen	PPOSAT	(NP(VP(NP*	meinen	pl	neut	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	guten	ADJA	*	gut	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Engel	NN	*)	engel	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	bitten	VVINF	*)	bitten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	mich	PPER	(VP*	mich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Taubheit	NN	*)	taubheit	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	schlagen	VVINF	*)))	schlagen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	und	KON	(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	wann	ADV	*	wann	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	auch	ADV	*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	wann	PWAV	(S*	wann	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	auch	ADV	*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	auf	APPR	(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	immer	ADV	*)))	immer	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Das	PDS	(S*	der	sg	neut	-	(166)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	bat	VVFIN	*	bitten	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	das	PDS	(S*	der	sg	neut	-	(166)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	war	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	das	ART	(NP*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	einzige	ADJA	*	einzig	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	was	PRELS	(S*	was	sg	neut	-	(166)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	ich	PPER	*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	beten	VVINF	*	beten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	konnte	VMFIN	*))))	können	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Endlich	ADV	(S*	endlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ward	VVFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	es	PPER	*)	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Zeit	NN	(NP*	zeit	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	mich	PPER	(VP*	mich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	wieder	ADV	*	wieder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	erheben	VVINF	*)))	erheben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Das	ART	(VROOT(PSEUDO(S(NP*	der	sg	neut	-	(122
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	heilige	ADJA	*	heilig	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Amt	NN	*)	amt	-	-	-	122)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ging	VVFIN	*	gehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	zu	APPR	(PP*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Ende	NN	*))	ende	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	zitterte	VVFIN	*	zittern	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mich	PPER	(VP*	mich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	umzukehren	VVIZU	*))	umkehren	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	zitterte	VVFIN	*	zittern	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ihn	PPER	(VP*	ihn	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	erblicken	VVINF	*)	erblicken	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	der	PRELS	(S*	der	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	sich	PRF	*	sich	sg	-	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	den	ART	(NP*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Frevel	NN	*)	frevel	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	erlauben	VVINF	(VP*	erlauben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	dürfen	VMINF	*))))	dürfen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	da	KOUS	*	da	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mich	PPER	*	mich	sg	-	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	umwandte	VVFIN	*	umwenden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	da	KOUS	*	da	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ich	PPER	*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	ihn	PPER	*	ihn	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	erblickte	VVFIN	*	erblicken	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	–	XY	*	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO*	claudia	sg	neut	(PER*)	(53|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	53)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wen	PWS	(VROOT(PSEUDO(S*	wen	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	meine	PPOSAT	(NP*	mein	sg	fem	-	(8|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Tochter	NN	*))	tochter	sg	fem	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	EMILIA	NE	(VROOT(PSEUDO*	emilia	sg	neut	(LOC*)	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Raten	VVFIN	*	raten	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*	sie	pl	*	-	(53
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	meine	PPOSAT	*	mein	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Mutter	NN	*	mutter	sg	fem	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	raten	VVFIN	*	raten	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Sie	PPER	*	sie	pl	*	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	–	$(	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Ich	PPER	*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	glaubte	VVFIN	*	glauben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	in	APPR	*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	die	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Erde	NN	*	erde	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	zu	PTKZU	*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	sinken	VVINF	*	sinken	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	–	$.	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	Ihn	PPER	*	ihn	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	selbst	ADV	*	selbst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO*	claudia	sg	neut	(PER*)	(53|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	53)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wen	PWS	(VROOT(PSEUDO(S*	wen	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ihn	PPER	(NP*	ihn	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	selbst	ADV	*))	selbst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	EMILIA	NE	(VROOT(PSEUDO*	emilia	sg	neut	(LOC*)	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Den	ART	(VROOT(PSEUDO(NP*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Prinzen	NN	*)	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO*	claudia	sg	neut	(PER*)	(53|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	53)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Den	ART	(VROOT(PSEUDO(NP*	der	pl	fem	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Prinzen	NN	*)	prinz	pl	fem	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	O	PPER	(S(VP*	O	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	gesegnet	VVPP	*)	segnen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sei	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	die	ART	(NP*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Ungeduld	NN	*))	ungeduld	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	deines	PPOSAT	(NP*	dein	sg	masc	-	(12|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Vaters	NN	*	vater	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	der	PRELS	(CS(S*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	eben	ADV	*	eben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	hier	ADV	*	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	war	VAFIN	*)	sein	sg	-	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	dich	PPER	(S(VP*	dich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	erwarten	VVINF	*)	erwarten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	wollte	VMFIN	*)))	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	EMILIA	NE	(VROOT(PSEUDO*	emilia	sg	neut	(LOC*)	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Mein	PPOSAT	(VROOT(PSEUDO(NP*	mein	sg	masc	-	(12|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Vater	NN	*	vater	sg	masc	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	hier	ADV	*)	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wollte	VMFIN	(S*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mich	PPER	*	mich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	erwarten	VVINF	*)	erwarten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO*	claudia	sg	neut	(PER*)	(53|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	53)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wenn	KOUS	*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	du	PPER	*	du	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	in	APPR	*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	deiner	PPOSAT	*	dein	sg	fem	-	(159|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Verwirrung	NN	*	verwirrung	sg	fem	-	159)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	auch	ADV	*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ihn	PPER	*	ihn	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	das	PDS	*	der	sg	neut	-	(160)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	hättest	VAFIN	*	hättest	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	hören	VVINF	*	hören	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	lassen	VVINF	*	lassen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	EMILIA	NE	(VROOT(PSEUDO*	emilia	sg	neut	(LOC*)	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nun	ADV	(VROOT(PSEUDO(S*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	meine	PPOSAT	(NP*	mein	sg	fem	-	(53|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Mutter	NN	*))	mutter	sg	fem	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Was	PWS	*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	hätt	VAFIN	*	hätt	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	er	PPER	*	er	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	an	APPR	*	an	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	mir	PPER	*	sich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Strafbares	NN	*	strafbar	sg	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	finden	VVINF	*	finden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	können	VMINF	*	können	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO*	claudia	sg	neut	(PER*)	(53|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	53)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nichts	PIS	(VROOT(PSEUDO(S*	nichts	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	eben	ADV	(NP*	eben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	wenig	PIS	*	wenig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	als	KOKOM	(PP*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	an	APPR	*	an	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	mir	PPER	*)))	sich	sg	*	-	(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(CS(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	doch	ADV	*)	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	doch	KON	*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	–	NE	(S(MPN*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Ha	NE	*)	ha	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	du	PPER	*	du	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	kennst	VVFIN	*	kennen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	deinen	PPOSAT	(NP*	dein	sg	masc	-	(12|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Vater	NN	*)	vater	sg	masc	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	nicht	PTKNEG	*))	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	In	APPR	*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	seinem	PPOSAT	*	sein	sg	neut	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Zorne	NN	*	zorne	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	hätt	VAFIN	*	hätt	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	er	PPER	*	er	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	den	ART	*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	unschuldigen	ADJA	*	unschuldig	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Gegenstand	NN	*	gegenstand	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	des	ART	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Verbrechens	NN	*	verbrechen	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	mit	APPR	*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	dem	ART	*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Verbrecher	NN	*	verbrecher	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	verwechselt	VVPP	*	verwechseln	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	In	APPR	*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	seiner	PPOSAT	*	sein	sg	fem	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Wut	NN	*	wut	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	hätt	VAFIN	*	hätt	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ich	PPER	*	ich	sg	*	-	(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ihm	PPER	*	ihm	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	geschienen	VVPP	*	geschien	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	das	PDS	*	der	sg	neut	-	(167)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	veranlaßt	VVPP	*	veranlassen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	zu	PTKZU	*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	haben	VAINF	*	haben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	was	PWS	*	was	sg	neut	-	(167)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	ich	PPER	*	ich	sg	*	-	(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	weder	KON	*	weder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	verhindern	VVFIN	*	verhindern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	noch	ADV	*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	vorhersehen	VVINF	*	vorhersehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	können	VMFIN	*	können	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Aber	KON	(S*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	weiter	ADV	*	weiter	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	meine	PPOSAT	(NP*	mein	sg	fem	-	(8|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Tochter	NN	*))	tochter	sg	fem	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	weiter	ADV	*	weiter	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Als	KOUS	(VROOT(PSEUDO(S*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	du	PPER	*	du	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	den	ART	(NP*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Prinzen	NN	*)	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	erkanntest	VVPP	*	erkanntest	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	–	$.	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Ich	PPER	(S*	ich	sg	*	-	(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	will	VMFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	hoffen	VVINF	(VP*	hoffen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	du	PPER	*	du	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	deiner	PIS	(AP*	dein	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	mächtig	ADJD	*	mächtig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	genug	ADV	*)	genug	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	warest	VVFIN	*	warest	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	ihm	PPER	(VP*	ihm	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	Einem	ART	*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	Blicke	NN	*)	blick	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	alle	PIS	(NP*	alle	pl	*	-	(168
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	die	ART	(NP*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	Verachtung	NN	*))	verachtung	sg	fem	-	168)
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	bezeigen	VVINF	*)	bezeigen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	die	PRELS	(S*	der	sg	fem	-	(168)
Emilia.xml.rksp.0.CoNLL2012.conll	000	28	er	PPER	*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	29	verdienet	VVFIN	*))))))	verdienen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	30	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	EMILIA	NE	(VROOT(PSEUDO*	emilia	sg	neut	(LOC*)	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Das	PDS	(VROOT(PSEUDO(S*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	war	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	meine	PPOSAT	(NP*	mein	sg	fem	-	(53|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Mutter	NN	*))	mutter	sg	fem	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nach	APPR	*	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	dem	ART	*	der	sg	neut	-	(169
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Blicke	NN	*	blick	sg	neut	-	169)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	mit	APPR	*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	dem	PRELS	*	der	sg	masc	-	(169)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ich	PPER	*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ihn	PPER	*	ihn	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	erkannte	VVFIN	*	erkennen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	hatt	VAFIN	*	hatt	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	ich	PPER	*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	das	ART	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	Herz	NN	*	herz	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	einen	ART	*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	zweiten	ADJA	*	zweiter	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	auf	APPR	*	auf	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	ihn	PPER	*	ihn	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	zu	PTKZU	*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	richten	VVINF	*	richten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	floh	VVFIN	*	fliehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	–	PPER	*	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO*	claudia	sg	neut	(PER*)	(53|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	53)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	der	ART	*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Prinz	NN	*	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	dir	PPER	*	dir	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nach	APPR	*	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	–	XY	*	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	EMILIA	NE	(VROOT(PSEUDO*	emilia	sg	neut	(LOC*)	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ich	PPER	*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	wußte	VVFIN	*)	wissen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	bis	KOUS	*	bis	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ich	PPER	*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	in	APPR	(VP(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	der	ART	*	der	sg	fem	-	(170
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Halle	NN	*)	halle	sg	fem	-	170)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	mich	PPER	*	mich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	bei	APPR	(PP*	bei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	der	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Hand	NN	*)	hand	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	ergriffen	VVPP	*)	ergreifen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	fühlte	VVFIN	*)	fühlen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	von	APPR	(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ihm	PPER	*))	ihm	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Aus	APPR	*	aus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Scham	NN	*	scham	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mußt	VMFIN	*	mussen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ich	PPER	*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Stand	NN	*	stand	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	halten	VVINF	*	halten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	mich	PPER	*	mich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	von	APPR	*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	ihm	PPER	*	ihm	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	loszuwinden	VVIZU	*	loswinden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	würde	VAFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	die	ART	*	der	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	Vorbeigehenden	NN	*	vorbeigehend	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	zu	PTKA	*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	aufmerksam	ADJD	*	aufmerksam	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	auf	APPR	*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	uns	PPER	*	uns	pl	*	-	(8)|(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	gemacht	VVPP	*	machen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	haben	VAFIN	*	haben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Das	PDS	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	war	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	die	ART	*	der	sg	fem	-	(171
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	einzige	ADJA	*	einzig	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Überlegung	NN	*	überlegung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	deren	PRELAT	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ich	PPER	*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	fähig	ADJD	*	fähig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	war	VAFIN	*	sein	sg	-	-	171)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	–	$.	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	oder	KON	*	oder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	deren	PDS	*	der	sg	fem	-	(171)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	ich	PPER	*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	nun	ADV	*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	mich	PPER	*	mich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	wieder	ADV	*	wieder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	erinnere	VVFIN	*	erinnern	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Er	PPER	*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sprach	VVFIN	*	sprechen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ich	PPER	*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	hab	VAFIN	*	hab	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ihm	PPER	*	ihm	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	geantwortet	VVPP	*	antworten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Aber	KON	(VROOT(PSEUDO(S*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	was	PWS	*	was	sg	neut	-	(172)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	er	PPER	*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sprach	VVFIN	*	sprechen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	was	PWS	(S*	was	sg	neut	-	(173)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ich	PPER	*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ihm	PPER	(VP*	ihm	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	geantwortet	VVPP	*	antworten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	;	$.	*)))	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	fällt	VVFIN	(NP(CS(S(AVP(S*	fallen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	mir	PPER	*	sich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	es	PPER	*	es	sg	neut	-	(173)|(172)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	noch	ADV	*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	bei	PTKVZ	*)	bei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	so	ADV	*)	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	gut	ADJD	*)	gut	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	so	ADV	(S*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	will	VMFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	ich	PPER	*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	es	PPER	*	es	sg	neut	-	(172)|(173)
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	Ihnen	PPER	(VP*	ihnen	pl	*	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	sagen	VVINF	*)))	sagen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	28	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	29	meine	PPOSAT	(NP*	mein	pl	masc	-	(53|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	30	Mutter	NN	*))	mutter	pl	masc	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	31	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Itzt	VVPP	(VROOT(PSEUDO(S*	itzt	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	weiß	VVFIN	*	weiß	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	von	APPR	(NP(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	dem	ART	*	der	sg	neut	-	(172|(173
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	allen	PIS	*)	aller	sg	neut	-	172)|173)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	nichts	PIS	*))	nichts	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Meine	PPOSAT	(VROOT(PSEUDO(S(NP*	mein	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sinne	NN	*)	sinn	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	hatten	VAFIN	*	haben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mich	PPER	(VP*	mich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	verlassen	VVPP	*))	verlassen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Umsonst	ADV	*	umsonst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	denk	ADJD	*	denk	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ich	PPER	*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	nach	PTKVZ	*	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	wie	PWAV	*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	ich	PPER	*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	von	APPR	*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	ihm	PPER	*	ihm	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	weg	PTKVZ	*	weg	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	aus	APPR	*	aus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	der	ART	*	der	sg	fem	-	(170
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	Halle	NN	*	halle	sg	fem	-	170)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	gekommen	VVPP	*	kommen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	finde	VVFIN	*	finden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mich	PPER	*	mich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	erst	ADV	*	erst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	auf	APPR	*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	der	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Straße	NN	*	straße	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	wieder	ADV	*	wieder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	höre	VVFIN	*	hören	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	ihn	PPER	*	ihn	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	hinter	APPR	*	hinter	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	mir	PPER	*	sich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	herkommen	VVINF	*	herkommen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	höre	VVFIN	*	hören	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	ihn	PPER	*	ihn	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	mit	APPR	*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	mir	PPER	*	sich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	zugleich	ADV	*	zugleich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	in	APPR	*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	das	ART	*	der	sg	neut	-	(133
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	Haus	NN	*	haus	sg	neut	-	133)
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	treten	VVFIN	*	treten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	mit	APPR	*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	28	mir	PPER	*	sich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	29	die	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	30	Treppe	NN	*	treppe	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	31	hinauf	ADV	*	hinauf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	32	steigen	VVINF	*	steigen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	33	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	34	–	XY	*	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO*	claudia	sg	neut	(PER*)	(53|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	53)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Die	ART	*	der	sg	fem	-	(174
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Furcht	NN	*	furcht	sg	fem	-	174)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	hat	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ihren	PPOSAT	*	ihr	pl	masc	-	(174)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	besondern	VVINF	*	besondern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Sinn	NN	*	sinn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	meine	PPOSAT	*	mein	sg	fem	-	(8|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Tochter	NN	*	tochter	sg	fem	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ich	PPER	(NP(S*	ich	sg	*	-	(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	werde	VAFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	es	PPER	(VP*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nie	ADV	*	nie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	vergessen	VVPP	*))	vergessen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	mit	APPR	(S(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	welcher	PWAT	*	welcher	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Gebärde	NN	*)	gebärde	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	du	PPER	*	du	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	hereinstürztest	VVFIN	*))	hereinstürztest	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Nein	PTKANT	(S*	nein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	so	ADV	(AVP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	weit	ADJD	*)	weit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	durfte	VMFIN	*	dürfen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	er	PPER	*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	wagen	VVINF	(VP*	wagen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	dir	PPER	(VP*	dir	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	folgen	VVINF	*))))	folgen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Gott	NN	*	gott	-	-	-	(57)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Gott	NN	(VROOT(PSEUDO*	gott	-	-	-	(57)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	wenn	KOUS	(VROOT(PSEUDO(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	dein	PPOSAT	(NP*	dein	sg	masc	-	(12|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Vater	NN	*)	vater	sg	masc	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	das	ART	(NP*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	wüßte	ADJA	*))	wissen	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Wie	PWAV	(S*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wild	ADJD	*	wild	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	er	PPER	*	er	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	schon	ADV	*)	schon	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	war	VAFIN	(S*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	als	KOUS	(S*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	er	PPER	*	er	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	nur	ADV	*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	hörte	VVFIN	*))	hören	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	der	ART	(NP*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Prinz	NN	*)	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	dich	PPER	(VP*	dich	sg	-	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	jüngst	ADV	*	jung	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	ohne	APPR	(PP*	ohne	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	Mißfallen	NN	*)	mißfalle	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	gesehen	VVPP	*))	sehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Indes	NN	(S*	indes	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sei	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ruhig	ADJD	*)	ruhig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	meine	PPOSAT	(NP*	mein	sg	fem	-	(8|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Tochter	NN	*)	tochter	sg	fem	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nimm	KOUS	(VROOT(PSEUDO(S*	nimm	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	es	PPER	*	es	sg	neut	-	(175)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	für	APPR	(PP*	für	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	einen	ART	*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Traum	NN	*)	traum	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	was	PRELS	(S*	was	sg	neut	-	(175)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	dir	PPER	*	dir	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	begegnet	VVPP	*	begegnen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	ist	VAFIN	*))	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Auch	ADV	(VROOT(PSEUDO(S*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wird	VAFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	es	PPER	*	es	sg	neut	-	(175)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	noch	ADV	(NP(AP*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	weniger	PIAT	*)	weniger	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Folgen	NN	*)	folge	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	haben	VAFIN	*	haben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	als	KOKOM	(NP*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	ein	ART	*	ein	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Traum	NN	*))	traum	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Du	PPER	(VROOT(PSEUDO(S*	du	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	entgehest	VVFIN	*	entgehest	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	heute	ADV	*	heute	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	eins	CARD	*)	einer	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	allen	PIAT	(NP*	aller	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Nachstellungen	NN	*))	nachstellung	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	EMILIA	NE	(VROOT(PSEUDO*	emilia	sg	neut	(LOC*)	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Aber	KON	(VROOT(PSEUDO(S*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	meine	PPOSAT	(NP*	mein	-	-	-	(53|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Mutter	NN	*))	mutter	-	-	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(S(NP*	der	sg	masc	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Graf	NN	*)	graf	sg	masc	(PER*)	9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	muß	VMFIN	*	müssen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	das	PDS	(VP*	der	sg	neut	-	(175)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	wissen	VVINF	*))	wissen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ihm	PPER	(VROOT(PSEUDO(S*	ihm	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	muß	VMFIN	*	müssen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	es	PPER	(VP*	es	sg	neut	-	(175)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	sagen	VVINF	*))	sagen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO*	claudia	sg	neut	(PER*)	(53|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	53)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Um	KOUI	*	um	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	alle	PIAT	*	aller	pl	masc	-	(149
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Welt	NN	*	welt	sg	*	-	149)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Wozu	PWAV	*	wozu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	warum	PWAV	(VROOT(PSEUDO*	warum	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Willst	VVFIN	(VROOT(PSEUDO(S*	willen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	du	PPER	*	du	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	für	APPR	(PP*	für	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nichts	PIS	*)	nichts	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	und	KON	(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	wieder	ADV	*	wieder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	für	APPR	(PP*	für	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	nichts	PIS	*)	nichts	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	ihn	PPER	(VP*	ihn	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	unruhig	ADJD	*	unruhig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	machen	VVINF	*)))	machen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wann	PWAV	*	wann	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	er	PPER	*	er	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	auch	ADV	(AP*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	itzt	ADJD	*)	itzt	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	würde	VAFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	wisse	VVFIN	(S*	wissen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	mein	PPOSAT	(NP*	mein	sg	neut	-	(8|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Kind	NN	*)	kind	sg	neut	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	ein	ART	(NP*	ein	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	Gift	NN	*	gift	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	welches	PRELS	(S*	welcher	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	gleich	ADV	*	gleich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	wirket	VVFIN	*	wirken	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	darum	PROAV	(S*	darum	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	kein	PIAT	(NP*	kein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	minder	ADV	(AP*	minder	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	gefährliches	ADJA	*)	gefährlich	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	Gift	NN	*))))	gift	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	28	ist	VAFIN	*)))	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	29	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	auf	APPR	(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	den	ART	*	der	sg	masc	-	(176
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Liebhaber	NN	*)	liebhaber	sg	masc	-	176)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	keinen	PIAT	(NP*	kein	sg	masc	-	(177
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Eindruck	NN	*)	eindruck	sg	masc	-	177)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	macht	VVFIN	*)	machen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	kann	VMFIN	*	können	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	ihn	PPER	(VP*	ihn	sg	masc	-	(177)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	auf	APPR	(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	den	ART	*	der	sg	masc	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Gemahl	NN	*)	gemahl	sg	masc	-	9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	machen	VVINF	*))	machen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Den	ART	*	der	*	*	-	(176
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Liebhaber	NN	*	liebhaber	sg	*	-	176)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	könnt	VVFIN	*	können	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	sogar	ADV	*	sogar	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	schmeicheln	VVINF	*	schmeicheln	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	einem	ART	*	ein	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	wichtigen	ADJA	*	wichtig	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Mitbewerber	NN	*	mitbewerber	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	den	ART	*	der	sg	masc	-	(178
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Rang	NN	*	rang	sg	masc	-	178)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	abzulaufen	VVIZU	*	ablaufen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Aber	KON	(VROOT(PSEUDO(S*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wenn	KOUS	*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	er	PPER	*	er	sg	masc	-	(176)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ihm	PPER	*	ihm	sg	neut	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	den	ART	(S*	der	sg	masc	-	(178)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	nun	ADV	(VP*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	einmal	ADV	*	einmal	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	abgelaufen	VVPP	*)	ablaufen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	hat	VAFIN	*)	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	ah	ADJD	(CO*	ah	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	mein	PPOSAT	(NP*	mein	sg	masc	-	(8|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Kind	NN	*)	kind	sg	masc	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	–	KON	*	–	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	so	ADV	(S*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	wird	VAFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	aus	APPR	(PP*	aus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	dem	ART	*	der	sg	neut	-	(176
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	Liebhaber	NN	*)	liebhaber	sg	neut	-	176)
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	oft	ADV	*	oft	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	ein	ART	(NP*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	ganz	ADV	(AP*	ganz	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	anderes	ADJA	*)	anderer	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	Geschöpf	NN	*))))	geschöpf	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Dein	PPOSAT	(VROOT(PSEUDO(S(NP*	dein	sg	neut	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	gutes	ADJA	*	gut	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Gestirn	NN	*)	gestirn	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	behüte	VVFIN	*	behüten	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	dich	PRF	*	dich	sg	-	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	vor	APPR	(PP*	vor	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	dieser	PDAT	*	dieser	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Erfahrung	NN	*))	erfahrung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	EMILIA	NE	(VROOT(PSEUDO*	emilia	sg	neut	(LOC*)	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(S*	sie	pl	*	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wissen	VVFIN	*	wissen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	meine	PPOSAT	(NP*	mein	pl	masc	-	(53|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Mutter	NN	*)	mutter	pl	masc	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	wie	PWAV	(S*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	gern	ADV	*	gern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	ich	PPER	(VP(NP(AP*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Ihren	PPOSAT	*))	ihr	pl	neut	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	bessern	VVINF	*)	bessern	pl	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Einsichten	NN	*	einsicht	pl	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	mich	PPER	*	mich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	allem	PIS	*)	alle	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	unterwerfe	VVFIN	*))	unterwerfen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Aber	KON	(S*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	wenn	KOUS	*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	er	PPER	*	er	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	von	APPR	(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	einem	ART	*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	andern	PIS	*)	anderer	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	erführe	VVFIN	*)	erführen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	der	ART	(NP*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Prinz	NN	*)	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	mich	PPER	*	mich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	heute	ADV	(VP*	heute	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	gesprochen	VVPP	*))	sprechen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Würde	VAFIN	(VROOT(PSEUDO(S*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	mein	PPOSAT	(NP*	mein	sg	masc	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Verschweigen	NN	*)	verschweigen	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	früh	ADJD	(VP(CAP*	früh	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	oder	KON	*	oder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	spät	ADJD	*)	spät	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	seine	PPOSAT	(NP*	sein	sg	fem	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Unruhe	NN	*)	unruhe	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	vermehren	VVINF	*))	vermehren	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ich	PPER	(S*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	dächte	VVFIN	*	dächen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	doch	ADV	*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ich	PPER	(S*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	behielte	VVFIN	*	behielten	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	lieber	ADV	(AVP*	lieber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	vor	APPR	(PP*	vor	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	ihm	PPER	*))))	ihm	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	nichts	PIS	(NP*	nichts	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	auf	APPR	(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	dem	ART	*	der	sg	masc	-	(164
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Herzen	NN	*))	herz	sg	masc	-	164)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO*	claudia	sg	neut	(PER*)	(53|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	53)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Schwachheit	NN	(VROOT(PSEUDO*	schwachheit	sg	fem	-	(179)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	verliebte	ADJA	(VROOT(PSEUDO(NP*	verliebt	sg	-	-	(179
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Schwachheit	NN	*)	schwachheit	sg	fem	-	179)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Nein	PTKANT	(S*	nein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	durchaus	ADV	*	durchaus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nicht	PTKNEG	*)	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	meine	PPOSAT	(NP*	mein	sg	fem	-	(8|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Tochter	NN	*)	tochter	sg	fem	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sag	NE	*	sag	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ihm	PPER	*	ihm	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nichts	PIS	*	nichts	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Laß	KOUS	(VROOT(PSEUDO(S*	lassen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ihn	PPER	*	ihn	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	nichts	PIS	(VP*	nichts	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	merken	VVINF	*))	merken	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	EMILIA	NE	(VROOT(PSEUDO*	emilia	sg	neut	(LOC*)	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nun	ADV	(VROOT(PSEUDO*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ja	PTKANT	(S*	ja	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	meine	PPOSAT	(NP*	mein	-	-	-	(53|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Mutter	NN	*))	mutter	-	-	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	habe	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	keinen	PIAT	(NP*	kein	sg	masc	-	(180
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Willen	NN	*	wille	sg	masc	-	180)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	gegen	APPR	(PP*	gegen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	den	ART	*	der	sg	masc	-	(180
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Ihrigen	NN	*)))	ihrige	sg	masc	-	180)|(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Aha	NE	*	aha	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Mit	APPR	(VROOT(PSEUDO(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	einem	ART	*	ein	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	tiefen	ADJA	*	tief	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Atemzuge	NN	*)	atemzuge	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Auch	ADV	(VROOT(PSEUDO(S*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wird	VAFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mir	PPER	*	sich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	wieder	ADV	*	wieder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ganz	ADV	(AP*	ganz	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	leicht	ADJD	*))	leicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Was	PWS	(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	für	APPR	(PP*	für	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ein	ART	*	ein	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	albernes	ADJA	*)	albern	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*)	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	furchtsames	ADJA	(S(NP*	furchtsam	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Ding	NN	*)	ding	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	ich	PPER	*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	bin	VAFIN	*)	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	meine	PPOSAT	*	mein	sg	fem	-	(53|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Mutter	NN	*	mutter	sg	fem	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ich	PPER	(S*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	hätte	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mich	PPER	(VP*	mich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	noch	ADV	(AVP*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	wohl	ADV	*	wohl	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	anders	ADV	*)	anders	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	dabei	PROAV	(VP*	dabei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	nehmen	VVINF	*)	nehmen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	können	VMINF	*))	können	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	würde	VAFIN	(S*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	mir	PPER	*	sich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	eben	ADV	*	eben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	so	ADV	(NP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	wenig	PIS	*)	wenig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	vergeben	VVPP	*	vergeben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	haben	VAFIN	*)	haben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO*	claudia	sg	neut	(PER*)	(53|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	53)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(CS(S*	ich	sg	*	-	(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wollte	VMFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	dir	PPER	*	dir	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	das	PDS	(VP*	der	sg	neut	-	(181)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	sagen	VVINF	*))	sagen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	meine	PPOSAT	(S(NP*	mein	sg	fem	-	(8|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Tochter	NN	*)	tochter	sg	fem	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	bevor	KOUS	(S*	bevor	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	dir	PPER	*	dir	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	es	PPER	*	es	sg	neut	-	(181)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	dein	PPOSAT	(NP*	dein	sg	masc	-	(182|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	eigner	ADJA	*	eign	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	gesunder	ADJA	*	gesund	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	Verstand	NN	*)	verstand	sg	masc	-	182)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	sagte	VVFIN	*)))	sagen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ich	PPER	*	ich	sg	*	-	(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wußte	VVFIN	*	wissen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	er	PPER	(S*	er	sg	masc	-	(182)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	würde	VAFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	dir	PPER	*	dir	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	es	PPER	(VP*	es	sg	neut	-	(181)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	sagen	VVINF	*	sagen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	sobald	KOUS	(S*	sobald	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	du	PPER	*	du	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	wieder	ADV	(VP*	wieder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	zu	APPR	(PP*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	dir	PPER	*)	dir	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	selbst	ADV	*	selbst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	gekommen	VVPP	*)))))	kommen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Der	ART	(S(NP*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Prinz	NN	*)	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	galant	ADJD	*)	galant	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Du	PPER	(VROOT(PSEUDO(S*	du	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	bist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	die	ART	(VP(NP*	der	sg	fem	-	(183
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	unbedeutende	ADJA	*	unbedeutend	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Sprache	NN	*	sprache	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	der	ART	(NP*	der	sg	fem	-	(184
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Galanterie	NN	*))	galanterie	sg	fem	-	183)|184)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	zu	PTKA	(AP*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	wenig	PIS	*)	wenig	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	gewohnt	VVPP	*))	wohnen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Eine	ART	(VROOT(PSEUDO(S(NP*	ein	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Höflichkeit	NN	*)	höflichkeit	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wird	VAFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ihr	PPER	*	ihr	sg	fem	-	(184)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	zur	APPRART	(PP*	zu	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Empfindung	NN	*))	empfindung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	eine	ART	(CNP(NP*	ein	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Schmeichelei	NN	*	schmeichelei	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	zur	APPRART	(PP*	zu	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Beteurung	NN	*))	beteurung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	ein	ART	(NP*	ein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Einfall	NN	*	einfall	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	zum	APPRART	(PP*	zu	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	Wunsche	NN	*))	wunsche	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	ein	ART	(NP*	ein	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	Wunsch	NN	*	wunsch	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	zum	APPRART	(PP*	zu	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	Vorsatze	NN	*))))	vorsatze	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nichts	PIS	(VROOT(PSEUDO(CS(S*	nichts	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	klingt	VVFIN	*	klingen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	dieser	PDAT	*	dieser	sg	fem	-	(183
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Sprache	NN	*)	sprache	sg	fem	-	183)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	wie	KOKOM	(NP*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	alles	PIS	*))	alle	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	alles	PIS	(S*	alle	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	in	APPR	(NP(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	ihr	PPER	*)	ihr	sg	fem	-	(183)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	viel	PIS	*)	viel	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	als	KOKOM	(NP*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	nichts	PIS	*)))	nichts	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	EMILIA	NE	(VROOT(PSEUDO*	emilia	sg	neut	(LOC*)	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	O	ITJ	(VROOT(PSEUDO(S*)	O	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	meine	PPOSAT	(NP*	mein	-	-	-	(53|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Mutter	NN	*)	mutter	-	-	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	so	ADV	(S*)	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	müßte	VMFIN	(S*	müssen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	mir	PRF	(VP*	sich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	meiner	PPOSAT	*	mein	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Furcht	NN	*	furcht	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	vollends	ADV	*)	vollends	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	lächerlich	ADJD	*	lächerlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	vorkommen	VVINF	*))	vorkommen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Nun	ADV	(S*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	soll	VMFIN	*	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	er	PPER	*	er	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	gewiß	ADV	(VP*	gewiß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	nichts	PIS	*	nichts	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	davon	PROAV	*	davon	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	erfahren	VVINF	*))	erfahren	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	mein	PPOSAT	(NP*	mein	sg	masc	-	(9|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	guter	ADJA	*	gut	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Appiani	NN	*)	appiani	sg	masc	-	9)|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Er	PPER	(VROOT(PSEUDO(S*	er	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	könnte	VMFIN	*	können	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mich	PPER	*	mich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	leicht	ADJD	*	leicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	für	APPR	(PP*	für	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	mehr	ADV	(AP*	mehr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	eitel	ADJD	*))	eitel	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	als	KOKOM	(S*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	tugendhaft	ADJD	*	tugendhaft	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	halten	VVFIN	*))	halten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Hui	NE	*	hui	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	daß	KOUS	(VROOT(PSEUDO(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	er	PPER	*	er	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	da	ADV	*	da	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	selbst	ADV	*	selbst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	kömmt	VVFIN	*)	kömmen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Es	PPER	(VROOT(PSEUDO(S*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sein	PPOSAT	(NP*	sein	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Gang	NN	*))	gang	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Graf	NE	(VROOT(PSEUDO(MPN*	graf	sg	*	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Appiani	NE	*)	appiani	sg	*	-	9)|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Die	ART	(VROOT(PSEUDO(NP*	der	pl	*	-	(8|(53
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Vorigen	NN	*)	vorige	pl	*	-	8)|53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	APPIANI	NE	(VROOT(PSEUDO*))	appiani	-	-	-	(9)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	tritt	VVFIN	(VROOT(PSEUDO(CS(S*	treten	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	tiefsinnig	ADJD	*	tiefsinnig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	vor	APPR	(AP(PP*	vor	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	sich	PRF	*)	sich	pl	-	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	hingeschlagnen	ADJA	*)	hingeslagnen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Augen	NN	*)	auge	pl	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	herein	PTKVZ	*)	herein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	kömmt	VVFIN	(S*	kömmen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	ihnen	PPER	*	ihnen	pl	*	-	(53)|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	näher	ADJD	*	nah	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	ohne	KOUI	(VP*	ohne	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	sie	PPER	*	sie	pl	neut	-	(53)|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	erblicken	VVINF	*)	erblicken	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	bis	APPR	(PP*	bis	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	Emilia	NE	*))))	emilia	-	-	(PER*)	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	ihm	PPER	*	ihm	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	entgegen	APPR	*	entgegen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	springt	VVFIN	*	springen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ah	XY	(VROOT(PSEUDO*	ah	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	meine	PPOSAT	(NP*	mein	pl	masc	-	(8|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Teuerste	NN	*)	teuere	pl	masc	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ich	PPER	(S*	ich	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	war	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mir	PRF	*	sich	sg	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Sie	PPER	*	sie	pl	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	dem	ART	*	der	sg	neut	-	(129
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Vorzimmer	NN	*))	vorzimmer	sg	neut	-	129)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	nicht	PTKNEG	(AP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	vermutend	ADJD	*)	vermutend	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	EMILIA	NE	(VROOT(PSEUDO*	emilia	sg	neut	(LOC*)	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(CS(S*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wünschte	VVFIN	*	wünschen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*	sie	pl	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	heiter	PTKVZ	*)	heiter	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Herr	NN	(S(NP*	herr	sg	masc	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Graf	NN	*)	graf	sg	*	(PER*)	9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	auch	ADV	(S*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	wo	PWAV	*	wo	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Sie	PPER	*	sie	pl	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	mich	PPER	(VP*	mich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	vermuten	VVINF	*))))	vermuten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	So	ADV	(S(ISU*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	feierlich	ADJD	*))	feierlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	so	ADV	(VROOT(PSEUDO(VP(AP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ernsthaft	ADJD	*))	ernsthaft	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ist	VAFIN	(S*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	dieser	PDAT	(NP*	dieser	sg	masc	-	(127
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Tag	NN	*)	tag	sg	masc	-	127)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	keiner	PIS	(VP*	keiner	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	freudigern	VVINF	*))	freudigern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Aufwallung	NN	(S*	aufwallung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	wert	ADJD	*)	wert	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	APPIANI	NE	(VROOT(PSEUDO*	appiani	-	-	(LOC*)	(9|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	9)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Er	PPER	(VROOT(PSEUDO(S*	er	sg	masc	-	(127)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mehr	ADV	(AP*	mehr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	wert	ADJD	*	wert	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	als	KOKOM	(NP*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	mein	PPOSAT	*	mein	sg	neut	-	(185|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ganzes	ADJA	*	ganz	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Leben	NN	*)))	leben	sg	neut	-	185)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Aber	KON	(VROOT(PSEUDO(S*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	schwanger	ADJD	*	schwang	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	so	ADV	*)	so	-	-	-	(186
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	viel	PIAT	(NP*	viel	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Glückseligkeit	NN	*)	glückseligkeit	sg	fem	-	186)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	für	APPR	(PP*	für	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	mich	PPER	*))	mich	sg	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	mag	VMFIN	(S*	mögen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	wohl	ADV	*	wohl	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	diese	PDAT	(VP(NP*	dieser	sg	fem	-	(186
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Glückseligkeit	NN	*	glückseligkeit	sg	fem	-	186)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	selbst	ADV	*)	selbst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	sein	VAINF	*)	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	die	PRELS	(S*	der	sg	fem	-	(186)
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	mich	PPER	*	mich	sg	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	so	ADV	(AP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	ernst	ADJD	*)	ernst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	die	PRELS	(S*	der	sg	fem	-	(186)
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	mich	PPER	*	mich	sg	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	wie	KOKOM	(CS(S*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	Sie	PPER	*	sie	pl	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	28	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	29	nennen	VVFIN	*)	nennen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	30	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	31	mein	PPOSAT	(S(NP*	mein	sg	masc	-	(8|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	32	Fräulein	NN	*)	fräulein	sg	masc	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	33	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	34	so	ADV	(AP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	35	feierlich	ADJD	*))))))	feierlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	36	macht	VVFIN	*	machen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	37	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Indem	KOUS	(S*	indem	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	er	PPER	*	er	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	die	ART	(NP*	der	pl	masc	-	(53
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Mutter	NN	*))	mutter	pl	masc	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	erblickt	VVFIN	*	erblicken	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ha	XY	*	ha	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	auch	ADV	(VROOT(PSEUDO(NP*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	(CNP(NP*	sie	pl	*	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	hier	ADV	*)	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	meine	PPOSAT	(NP*	mein	sg	fem	-	(53|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	gnädige	ADJA	*	gnädig	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Frau	NN	*)))	frau	sg	fem	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	nun	ADV	(AVP*	nun	-	-	-	(53
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	bald	ADV	*)	bald	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mir	PPER	(S(VP*	sich	sg	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	einem	ART	*	ein	sg	masc	-	(187
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	innigern	TRUNC	*	innigern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Namen	NN	*)	name	sg	masc	-	187)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	verehrende	ADJA	*)))	verehrend	-	-	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO*	claudia	sg	neut	(PER*)	(53|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	53)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(S*	der	sg	masc	-	(187)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	mein	PPOSAT	(VP(NP*	mein	sg	masc	-	(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	größter	ADJA	*	groß	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Stolz	NN	*)	stolz	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	sein	VAINF	*)	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	wird	VAFIN	*)	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Wie	PWAV	(S*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	glücklich	ADJD	*	glücklich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	bist	VAFIN	*)	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	du	PPER	(NP*	du	sg	*	-	(8
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	meine	PPOSAT	(NP*	mein	sg	fem	-	(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Emilia	NE	*))	emilia	sg	neut	-	8)|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Warum	PWAV	(S*	warum	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	hat	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	dein	PPOSAT	(NP*	dein	sg	masc	-	(12|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Vater	NN	*))	vater	sg	masc	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	unsere	PPOSAT	(S(NP*	unser	sg	fem	-	(8)|(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Entzückung	NN	*)	entzückung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	teilen	VVINF	(VP*	teilen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	wollen	VMINF	*))	wollen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	APPIANI	NE	(VROOT(PSEUDO*	appiani	-	-	(LOC*)	(9|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	9)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Eben	ADV	*	eben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	hab	VAFIN	*	hab	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	mich	PRF	*	mich	sg	-	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	aus	APPR	*	aus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	seinen	PPOSAT	*	sein	pl	masc	-	(188|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Armen	NN	*	arm	pl	masc	-	188)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	gerissen	VVPP	*	reißen	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	oder	KON	*	oder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	vielmehr	ADV	*	vielmehr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	er	PPER	*	er	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	sich	PRF	*	sich	sg	-	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	aus	APPR	*	aus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	meinen	PPOSAT	*	meinen	pl	neut	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Welch	NN	(NP*	welch	sg	masc	-	(12
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ein	ART	(NP*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Mann	NN	*))	mann	sg	masc	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	meine	PPOSAT	(CNP(NP*	mein	sg	fem	-	(8|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Emilia	NN	*)	emilia	sg	fem	(PER*)	8)|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Ihr	PPOSAT	(NP*	ihr	sg	masc	-	(12|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Vater	NN	*))	vater	sg	masc	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Das	ART	(VROOT(PSEUDO(NP*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Muster	NN	*	muster	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	aller	PIAT	(NP*	aller	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	männlichen	ADJA	*	männlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Tugend	NN	*))	tugend	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Zu	APPR	(VROOT(PSEUDO(PP*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	was	PWS	(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	für	APPR	(PP*	für	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Gesinnungen	NN	*)	gesinnung	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	erhebt	VVFIN	*	erheben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	sich	PRF	*	sich	sg	-	-	(189)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	meine	PPOSAT	(NP*	mein	sg	fem	-	(189|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Seele	NN	*))	seele	sg	fem	-	189)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	in	APPR	*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	seiner	PPOSAT	*	sein	sg	fem	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Gegenwart	NN	*)	gegenwart	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nie	ADV	(VROOT(PSEUDO(S*	nie	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mein	PPOSAT	(NP*	mein	sg	masc	-	(190|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Entschluß	NN	*)	entschluß	sg	masc	-	190)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	immer	ADV	(VP(AP*	immer	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	gut	ADJD	(CAP*	gut	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	immer	ADV	(AP*	immer	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	edel	ADJD	*)))	edel	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	sein	VAINF	*)	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	lebendiger	ADJA	(AP*	lebendig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	als	KOKOM	(S*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	wenn	KOUS	*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	ich	PPER	*	ich	sg	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	ihn	PPER	*	ihn	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	sehe	VVFIN	*))))	sehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	–	NN	(S*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	wenn	KOUS	*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	ich	PPER	*	ich	sg	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	ihn	PPER	*	ihn	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	mir	PPER	*	sich	sg	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	denke	VVFIN	*)	denken	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	womit	PWAV	*	womit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sonst	ADV	*	sonst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	als	KOKOM	(PP*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	mit	APPR	*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	der	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Erfüllung	NN	*	erfüllung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	dieses	PDAT	(NP*	dieser	sg	neut	-	(190
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Entschlusses	NN	*))	entschluß	sg	neut	-	190)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	kann	VMFIN	*	können	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	ich	PPER	*	ich	sg	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	mich	PRF	(VP*	mich	sg	-	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	der	ART	(NP*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Ehre	NN	*)	ehre	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	würdig	ADJD	*	würdig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	machen	VVINF	*	machen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	sein	PPOSAT	(VP(NP*	sein	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	Sohn	NN	*)	sohn	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	heißen	VVINF	*))))	heißen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	der	ART	(NP*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	Ihrige	NN	(VP*	ihrige	sg	masc	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	sein	VAINF	*))	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	28	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	29	meine	PPOSAT	(NP*	mein	sg	fem	-	(8|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	30	Emilia	NN	*))	emilia	sg	fem	-	8)|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	31	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	EMILIA	NE	(VROOT(PSEUDO*	emilia	sg	neut	(LOC*)	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	er	PPER	*	er	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wollte	VMFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mich	PPER	(VP*	mich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	erwarten	VVINF	*))	erwarten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	APPIANI	NE	(VROOT(PSEUDO*	appiani	-	-	(LOC*)	(9|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	9)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	urteile	VVFIN	*	urteilen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	weil	KOUS	(S*	weil	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ihn	PPER	*	ihn	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	seine	PPOSAT	(NP*	sein	sg	fem	-	(8|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Emilia	NN	*)	emilia	sg	fem	(PER*)	8)|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	für	APPR	(PP*	für	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	diesen	PDAT	*	dieser	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	augenblicklichen	ADJA	*	augenblicklich	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Besuch	NN	*)	besuch	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	zu	APPR	(CVP(VP(AVP*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	sehr	ADV	*)	sehr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	erschüttert	VVPP	*)	erschüttern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	zu	PTKA	(VP(AVP*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	sehr	ADV	*)	sehr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	sich	PRF	*	sich	sg	-	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	seiner	PPOSAT	(NP*	sein	pl	fem	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	ganzen	ADJA	*	ganz	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	Seele	NN	*)	seele	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	bemächtiget	VVPP	*))	bemächtigen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	hätte	VAFIN	*))	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO*	claudia	sg	neut	(PER*)	(53|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	53)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Er	PPER	(VROOT(PSEUDO(S*	er	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	glaubte	VVFIN	*	glauben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	dich	PRF	(VP*	dich	sg	-	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mit	APPR	(VP(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	deinem	PPOSAT	*	dein	sg	masc	-	(144|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Brautschmucke	NN	*)	brautschmuck	sg	masc	-	144)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	beschäftiget	VVPP	*)	beschäftiget	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	finden	VVINF	*))	finden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	und	KON	(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	hörte	VVFIN	*	hören	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	–	PPER	*))))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	APPIANI	NE	(VROOT(PSEUDO*	appiani	-	-	(LOC*)	(9|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	9)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ich	PPER	*	ich	sg	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	der	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	zärtlichsten	ADJA	*	zärtlich	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Bewunderung	NN	*)	bewunderung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	wieder	ADV	(VP*	wieder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	von	APPR	(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	ihm	PPER	*)	ihm	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	gehört	VVPP	*)	gehören	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	habe	VAFIN	*)	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	So	ADV	(NP(AP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	recht	ADJD	*)	recht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	meine	PPOSAT	(NP*	mein	sg	fem	-	(8|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Emilia	NE	*))	emilia	sg	fem	-	8)|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(CS(S*	ich	sg	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	werde	VAFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	eine	ART	(NP*	ein	sg	fem	-	(8
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	fromme	ADJA	*	fromm	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Frau	NN	*)	frau	sg	fem	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	an	APPR	(PP*	an	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Ihnen	PPER	*)	ihnen	pl	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	haben	VAFIN	*)	haben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	die	ART	(S*	der	pl	masc	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	nicht	PTKNEG	(AP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	stolz	ADJD	*	stolz	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	auf	APPR	(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	ihre	PPOSAT	*	ihr	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	Frömmigkeit	NN	*))	frömmigkeit	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	ist	VAFIN	*))	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO*	claudia	sg	neut	(PER*)	(53|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	53)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Aber	KON	(VROOT(PSEUDO(S*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	meine	PPOSAT	(NP*	mein	pl	neut	-	(8|(9|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Kinder	NN	*)	kind	pl	neut	-	8)|9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	eines	PIS	*	ein	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	tun	VVFIN	*	tun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	und	KON	(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	das	PDS	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	andere	PIS	(VP*	anderer	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	lassen	VVINF	*)))	lassen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Nun	ADV	*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	hohe	ADJA	*	hoch	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Zeit	NN	*	zeit	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	nun	ADV	*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	mach	ADJD	*	machen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Emilia	NE	*	emilia	-	-	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	APPIANI	NE	(VROOT(PSEUDO*	appiani	-	-	(LOC*)	(9|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	9)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Was	PWS	*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	meine	PPOSAT	(VROOT(PSEUDO(NP*	mein	sg	fem	-	(53|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	gnädige	ADJA	*	gnädig	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Frau	NN	*)	frau	sg	fem	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO*	claudia	sg	neut	(PER*)	(53|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	53)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(S*	sie	pl	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wollen	VMFIN	*	wollen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sie	PPER	*	sie	pl	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	doch	ADV	*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Herr	NN	(VP(NP*	herr	sg	masc	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Graf	NN	*	graf	sg	*	(PER*)	9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	so	ADV	(AVP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	wie	KOKOM	(S*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	sie	PPER	*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	da	ADV	*	da	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	ist	VAFIN	*)))	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	zum	APPRART	(PP*	zu	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	Altare	NN	*)	altare	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	führen	VVINF	*))	führen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	APPIANI	NE	(VROOT(PSEUDO*	appiani	-	-	(LOC*)	(9|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	9)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wahrlich	ADJD	*	wahrlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	das	PDS	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	werd	VVFIN	*	werd	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ich	PPER	*	ich	sg	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	nun	ADV	*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	erst	ADV	*	erst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	gewahr	ADJD	*	gewahr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Wer	PWS	(S*	wer	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	kann	VMFIN	*	können	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Sie	PPER	(VP*	sie	*	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	sehen	VVINF	*))	sehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Emilia	NE	(DL*	emilia	-	-	(PER*)	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	und	KON	(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	auch	ADV	*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	auf	APPR	(VP(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Ihren	PPOSAT	*	ihr	sg	masc	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Putz	NN	*)	putz	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	achten	VVINF	*)))	achter	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	warum	PWAV	(S(AVP(AVP*	warum	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	so	ADV	*)	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	so	ADV	*)	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	wie	KOKOM	(NP*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	sie	PPER	*)	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	da	ADV	*	da	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	ist	VAFIN	*)	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	EMILIA	NE	(VROOT(PSEUDO*	emilia	sg	neut	(LOC*)	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nein	PTKANT	(VROOT(PSEUDO(S*	nein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mein	PPOSAT	(NP*	mein	sg	masc	-	(9|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	lieber	ADJA	*	lieber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Graf	NN	*)	graf	sg	*	(PER*)	9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	nicht	PTKNEG	(S*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	nicht	PTKNEG	(S*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	ganz	ADV	*	ganz	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	so	ADV	*)))	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Aber	KON	(VROOT(PSEUDO(S*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	auch	ADV	*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	viel	ADV	(AP*	viel	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	prächtiger	ADJD	*	prächtig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	nicht	PTKNEG	(AVP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	viel	ADV	*)))	viel	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Husch	NN	(NP*	husch	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	husch	ADJD	(CS*	husch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ich	PPER	(S*	ich	sg	masc	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	bin	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	fertig	ADJD	*)))	fertig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Nichts	PIS	(S(NP*	nichts	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	gar	ADV	*	gar	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nichts	PIS	*)	nichts	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	von	APPR	(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	dem	ART	*	der	sg	neut	-	(191
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Geschmeide	NN	*	geschmeide	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	dem	ART	(NP*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	letzten	ADJA	*	letzter	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Geschenke	NN	*)))	geschenk	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Ihrer	PPOSAT	(NP*	ihr	pl	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	verschwendrischen	ADJA	*	verschwendrisch	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Großmut	NN	*)	großmut	sg	neut	-	191)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nichts	PIS	(VROOT(PSEUDO(CS(S*	nichts	*	neut	-	(192
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	gar	ADV	(NP*	gar	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nichts	PIS	*))	nichts	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	was	PRELS	(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	sich	PRF	*	sich	sg	-	-	(192)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	nur	ADV	(PP*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	zu	APPR	*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	solchem	PIAT	*	solcher	sg	neut	-	(191
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Geschmeide	NN	*)	geschmeide	sg	neut	-	191)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	schickte	VVFIN	*))	schicken	sg	-	-	192)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ich	PPER	(S*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	könnte	VMFIN	*	können	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ihm	PPER	(VP(AP*	ihm	sg	masc	-	(191)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	gram	ADJD	*)	gram	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	sein	VAINF	*))	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	diesem	PDAT	(NP*	dieser	sg	masc	-	(191
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Geschmeide	NN	*	geschmeide	sg	masc	-	191)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	wenn	KOUS	(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	es	PPER	*	es	sg	neut	-	(191)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	von	APPR	(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Ihnen	PPER	*)	ihnen	pl	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	wäre	VAFIN	*))	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Denn	KON	*	denn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	dreimal	ADV	*	dreimal	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	hat	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	mir	PPER	*	sich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	von	APPR	*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ihm	PPER	*	ihm	sg	masc	-	(191)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	geträumet	VVPP	*	träumen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	–	XY	*	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO*	claudia	sg	neut	(PER*)	(53|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	53)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nun	ADV	(VROOT(PSEUDO(S*)	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	davon	PROAV	(VROOT(PSEUDO(S*	davon	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	weiß	VVFIN	*	weißn	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ja	ADV	*	ja	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nichts	PIS	*)	nichts	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	EMILIA	NE	(VROOT(PSEUDO*	emilia	sg	neut	(LOC*)	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Als	KOKOM	*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ob	KOUS	*	ob	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	es	PPER	*	es	sg	neut	-	(191)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	trüge	VVFIN	*	tragen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	als	KOKOM	*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	ob	KOUS	*	ob	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	plötzlich	ADJD	*	plötzlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	sich	PRF	*	sich	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	jeder	PIAT	*	jeder	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Stein	NN	*	stein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	desselben	PDS	*	derselbe	sg	neut	-	(191)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	in	APPR	*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	eine	ART	*	ein	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	Perle	NN	*	perle	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	verwandle	VVFIN	*	verwandeln	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Perlen	NN	(NP*	perle	pl	fem	-	(193)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	aber	ADV	*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	meine	PPOSAT	(S(NP*	mein	sg	fem	-	(53|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Mutter	NN	(CNP*	mutter	sg	fem	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Perlen	NN	*))	perle	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	bedeuten	VVFIN	*))	bedeuten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Tränen	NN	*	träne	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO*	claudia	sg	neut	(PER*)	(53|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	53)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Kind	NN	(VROOT(PSEUDO*	kind	sg	neut	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Die	ART	(VROOT(PSEUDO(S(NP*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Bedeutung	NN	*)	bedeutung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	träumerischer	ADJD	(AP*	träumerisch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	als	KOKOM	(NP*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	der	ART	*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Traum	NN	*)))	traum	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Warest	NN	(S*	warest	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	du	PPER	*	du	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	von	APPR	(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	je	ADV	*))	je	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	her	ADV	(NP*	her	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	eine	ART	*	ein	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	größere	ADJA	*	groß	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Liebhaberin	NN	*	liebhaberin	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	von	APPR	(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Perlen	NN	*)	perle	pl	fem	-	(193)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	als	KOKOM	(PP*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	von	APPR	*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	Steinen	NN	*))	stein	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	EMILIA	NE	(VROOT(PSEUDO*	emilia	sg	neut	(LOC*)	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Freilich	ADV	(VROOT(PSEUDO(S*	freilich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	meine	PPOSAT	(NP*	mein	pl	masc	-	(53|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Mutter	NN	*)	mutter	pl	masc	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	freilich	ADV	(NP*	freilich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	–	CARD	*))))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	APPIANI	NE	(VROOT(PSEUDO*))	appiani	-	-	-	(9)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	nackdenkend	ADJD	(VROOT(PSEUDO(CO*	nackdenkend	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	schwermütig	ADJD	*)	schwermütig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Bedeuten	NN	(VROOT(PSEUDO(NP*	bedeute	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Tränen	NN	*	träne	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	–	CARD	*	–	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	bedeuten	ADJA	(NP*	bedeuten	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Tränen	NN	*))	träne	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	EMILIA	NE	(VROOT(PSEUDO*	emilia	sg	neut	(LOC*)	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wie	PWAV	(VROOT(PSEUDO*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ihnen	PPER	*	ihnen	pl	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	fällt	VVFIN	*	fallen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	das	PDS	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	auf	PTKVZ	*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ihnen	PPER	*	ihnen	pl	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	APPIANI	NE	(VROOT(PSEUDO*	appiani	-	-	(LOC*)	(9|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	9)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ja	PTKANT	(VROOT(PSEUDO(S*	ja	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wohl	ADV	*	wohl	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	sollte	VMFIN	*	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	mich	PPER	(VP*	mich	sg	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	schämen	VVINF	*))	schämen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Aber	KON	(NP*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	wenn	KOUS	(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	die	ART	(NP*	der	sg	fem	-	(194
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Einbildungskraft	NN	*)	einbildungskraft	sg	fem	-	194)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	einmal	ADV	(VP*	einmal	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	zu	APPR	(PP*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	traurigen	ADJA	*	traurig	pl	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Bildern	NN	*)	bild	pl	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	gestimmt	VVPP	*)	stimmen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	ist	VAFIN	*))	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	–	$.	*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	EMILIA	NE	(VROOT(PSEUDO*	emilia	sg	neut	(LOC*)	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Warum	PWAV	*	warum	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sie	PPER	*	sie	sg	fem	-	(194)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	das	PDS	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	auch	ADV	*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Und	KON	(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	was	PIS	*	was	sg	neut	-	(195)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	meinen	VVFIN	*	meinen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Sie	PPER	*)	sie	pl	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	das	KOUS	(S*	der	sg	neut	-	(195)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ich	PPER	*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	mir	PRF	(VP*	sich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	ausgedacht	VVPP	*)	ausdenken	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	habe	VAFIN	*)	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Was	PWS	*	was	sg	neut	-	(196)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	trug	VVFIN	*	tragen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	wie	KOKOM	*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	sah	VVFIN	*	sehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ich	PPER	*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	als	KOUS	*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	ich	PPER	*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Ihnen	PPER	*	ihnen	pl	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	zuerst	ADV	*	zuerst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	gefiel	VVFIN	*	gefallen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	–	$(	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	Wissen	VVFIN	*	wissen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	Sie	PPER	*	sie	pl	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	es	PPER	*	es	sg	neut	-	(197)
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	noch	ADV	*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	APPIANI	NE	(VROOT(PSEUDO*	appiani	-	-	(LOC*)	(9|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	9)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ob	KOUS	(VROOT(PSEUDO(S*	ob	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ich	PPER	*	ich	sg	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	es	PPER	*	es	sg	neut	-	(197)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	noch	ADV	*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	weiß	VVFIN	*)	weiß	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sehe	VVFIN	*	sehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*	sie	pl	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Gedanken	NN	*)	gedanke	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	nie	ADV	(AVP*	nie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	anders	ADV	*)	anders	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	als	KOKOM	(S*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	so	ADV	(CAVP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	sehe	VVFIN	(AVP(S*	sehen	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Sie	PPER	*)	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	so	ADV	*))	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	auch	ADV	(S*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	wenn	KOUS	*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	ich	PPER	*	ich	sg	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	Sie	PPER	*	sie	sg	-	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	sehe	VVFIN	*)))	sehen	sg	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	EMILIA	NE	(VROOT(PSEUDO*	emilia	sg	neut	(LOC*)	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Also	ADV	(VROOT(PSEUDO(PP*	also	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ein	ART	(NP*	ein	sg	masc	-	(196
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Kleid	NN	*))	kleid	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	von	APPR	(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	der	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	nämlichen	ADJA	*	nämlich	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Farbe	NN	*	farbe	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	von	APPR	(AP(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	dem	ART	*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	nämlichen	ADJA	*	nämlich	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Schnitte	NN	*	schnitt	sg	masc	-	196)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	;	$.	*)	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	fliegend	ADJD	(CAP*	fliegend	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	frei	ADJD	*)))	frei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	–	XY	*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	APPIANI	NE	(VROOT(PSEUDO*	appiani	-	-	(LOC*)	(9|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	9)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Vortrefflich	ADJD	(VROOT(PSEUDO*	vortrefflich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	EMILIA	NE	(VROOT(PSEUDO*	emilia	sg	neut	(LOC*)	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	das	ART	*	der	sg	neut	-	(198
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Haar	NN	*	haar	sg	neut	-	198)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	–	XY	*	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	APPIANI	NE	(VROOT(PSEUDO*	appiani	-	-	(LOC*)	(9|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	9)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	In	APPR	(VROOT(PSEUDO(CPP(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	seinem	PPOSAT	*	sein	sg	neut	-	(198)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	eignen	ADJA	*	eignen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	braunen	ADJA	*	braun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Glanze	NN	*)	glanze	pl	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Locken	NN	*	locke	pl	fem	-	(199)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	wie	PWAV	(S*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	sie	PPER	*	sie	pl	fem	-	(199)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	die	ART	(NP*	der	sg	fem	-	(74
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Natur	NN	*)	natur	sg	fem	-	74)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	schlug	VVFIN	*)))	schlagen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	–	$.	*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	EMILIA	NE	(VROOT(PSEUDO*	emilia	sg	neut	(LOC*)	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Die	ART	(VROOT(PSEUDO(VP(NP*	der	sg	fem	-	(200
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Rose	NN	*	rose	sg	fem	-	200)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	darin	PROAV	*)	darin	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	vergessen	VVINF	*))	vergessen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Recht	NN	(VROOT(PSEUDO*	recht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	recht	ADV	(VROOT(PSEUDO(S*)	recht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Eine	ART	(NP*	ein	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	kleine	ADJA	*	klein	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Geduld	NN	*	geduld	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	und	KON	(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ich	PPER	*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	stehe	VVFIN	*))	stehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	so	ADV	(AVP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	vor	APPR	(PP*	vor	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Ihnen	PPER	*))	ihnen	pl	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	da	ADV	*	da	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Graf	NE	(VROOT(PSEUDO(MPN*	graf	sg	*	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Appiani	NE	*)	appiani	sg	*	-	9)|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Claudia	NE	(VROOT(PSEUDO(MPN*	claudia	*	*	-	(53|(7|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Galotti	NE	*)	galotti	sg	*	-	53)|7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	APPIANI	NE	(VROOT(PSEUDO*))	appiani	-	-	-	(9)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	indem	KOUS	(VROOT(PSEUDO(S*	indem	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	er	PPER	*	er	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ihr	PPER	*	ihr	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	einer	ART	*	ein	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	niedergeschlagnen	ADJA	*	niedergeschlagn	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Miene	NN	*)	miene	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	nachsieht	VVFIN	*)	nachsehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Perlen	NN	(VROOT(PSEUDO(S*	perle	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	bedeuten	VVFIN	*	bedeuten	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Tränen	NN	*)	träne	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Eine	ART	(NP*	ein	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	kleine	ADJA	*)	klein	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Geduld	NN	*	geduld	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ja	PTKANT	(S*	ja	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	wenn	KOUS	*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	die	ART	(NP*	der	sg	fem	-	(40
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Zeit	NN	*)	zeit	sg	fem	-	40)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	nur	ADV	*)	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	außer	APPR	(S(NP(PP*	außer	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	uns	PPER	*))	uns	pl	*	-	(8)|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	wäre	VAFIN	*)	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Wenn	KOUS	(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	eine	ART	(NP*	ein	-	-	-	(201
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Minute	NN	*)	minute	-	-	-	201)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	am	APPRART	(PP*	an	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Zeiger	NN	*))	zeiger	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	sich	PRF	(S*	sich	sg	-	-	(201)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	in	APPR	(VP(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	uns	PPER	*)	uns	pl	*	-	(9)|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	nicht	PTKNEG	(PP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	in	APPR	*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Jahre	NN	*)	jahr	pl	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	ausdehnen	VVINF	*)	ausdehnen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	könnte	VMFIN	*)	können	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO*	claudia	sg	neut	(PER*)	(53|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	53)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Emiliens	NE	(VROOT(PSEUDO(S(NP*	emilien	sg	neut	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Beobachtung	NN	*	beobachtung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Herr	NN	(NP*	herr	sg	masc	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Graf	NE	*))	graf	sg	*	(PER*)	9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	war	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	so	ADV	(AP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	schnell	ADJD	*)	schnell	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	als	APPR	(PP*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	richtig	ADJD	*))	richtig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	*	sie	pl	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sind	VAFIN	*	sein	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	heut	ADV	*	heut	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ernster	ADJD	*	ernst	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	als	KOKOM	*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	gewöhnlich	ADJD	*	gewöhnlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nur	ADV	*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	noch	ADV	*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	einen	ART	*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Schritt	NN	*	schritt	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	von	APPR	*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	dem	ART	*	der	sg	neut	-	(102
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Ziele	NN	*	ziel	pl	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Ihrer	PPOSAT	*	ihr	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Wünsche	NN	*	wunsch	sg	-	-	102)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	–	PPER	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	sollt	VMFIN	*	sollen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Sie	PPER	*	sie	pl	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	reuen	VVFIN	*	reuen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	Herr	NN	*	herr	sg	masc	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	Graf	NN	*	graf	sg	*	(PER*)	9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	daß	KOUS	*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	das	ART	*	der	sg	neut	-	(102
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	Ziel	NN	*	ziel	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	Ihrer	PPOSAT	*	ihr	pl	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	Wünsche	NN	*	wunsch	pl	masc	-	102)
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	gewesen	VAPP	*	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	APPIANI	NE	(VROOT(PSEUDO*	appiani	-	-	(LOC*)	(9|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	9)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ah	XY	(VROOT(PSEUDO*	ah	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	meine	PPOSAT	(NP*	mein	-	-	-	(53|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Mutter	NN	*)	mutter	-	-	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Sie	PPER	(S*	sie	pl	*	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	können	VMFIN	*	können	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	das	ART	(VP(NP*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	von	APPR	(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Ihrem	PPOSAT	*	ihr	sg	masc	-	(9|(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Sohne	NN	*))	sohne	sg	masc	-	9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	argwohnen	VVINF	*))	argwohnen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Aber	KON	*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	wahr	ADJD	*	wahr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ich	PPER	*	ich	sg	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	bin	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	heut	ADV	*	heut	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	ungewöhnlich	ADJD	*	ungewöhnlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	trübe	ADJD	*	trüben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	finster	ADJD	*	finster	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Nur	ADV	(S*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sehen	VVFIN	*	sehen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Sie	PPER	*)	sie	pl	*	-	(53
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	gnädige	ADJA	*	gnädig	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Frau	NN	*	frau	sg	fem	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	noch	ADV	(NP*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Einen	ART	*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Schritt	NN	*	schritt	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	vom	APPRART	(PP*	von	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Ziele	NN	*	ziel	pl	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	oder	KON	(S*	oder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	noch	ADV	(VP(VP(AVP*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	gar	ADV	*	gar	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	nicht	PTKNEG	*)	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	ausgelaufen	VVPP	*)	auslaufen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	sein	VAINF	*)	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	im	APPRART	(NP(PP*	in	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	Grunde	NN	*)	grund	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	eines	PIS	*))))	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Alles	PIS	(CS(S*	alle	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	was	PWS	*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	sehe	VVFIN	*)	sehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	alles	PIS	(S*	alle	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	was	PWS	*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	ich	PPER	*	ich	sg	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	höre	VVFIN	*)	hören	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	alles	PIS	(S*	alle	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	was	PWS	(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	ich	PPER	*	ich	sg	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	träume	VVFIN	*)	traum	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	prediget	VVFIN	*	prediget	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	mir	PPER	*	sich	sg	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	seit	APPR	(CAVP(AVP*	seit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	gestern	ADV	*)	gestern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	ehegestern	ADV	*)	ehegestern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	diese	PDAT	(NP*	dieser	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	Wahrheit	NN	*)))	wahrheit	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Dieser	PDAT	*	dieser	sg	masc	-	(202
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Eine	ART	*	ein	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Gedanke	NN	*	gedanke	-	-	-	202)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	kettet	VVFIN	*	ketten	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	sich	PRF	*	sich	sg	-	-	(202)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	an	APPR	*	an	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	jeden	PIAT	*	jeder	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	andern	VVINF	*	anderer	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	den	PRELS	*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	ich	PPER	*	ich	sg	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	haben	VAFIN	*	haben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	muß	VMFIN	*	müssen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	haben	VAINF	*	haben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	will	VMFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Was	PWS	*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	das	PDS	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	*	ich	sg	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	versteh	VVFIN	*	versteh	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO*	claudia	sg	neut	(PER*)	(53|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	53)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	*	sie	pl	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	machen	VVFIN	*	machen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mich	PPER	*	mich	sg	*	-	(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	unruhig	ADJD	*	unruhig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Herr	NN	*	herr	sg	masc	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Graf	NN	*	graf	sg	*	-	9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	–	XY	*	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	APPIANI	NE	(VROOT(PSEUDO*	appiani	-	-	(LOC*)	(9|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	9)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Eines	PIS	(VROOT(PSEUDO(S*	ein	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	kömmt	VVFIN	*	kömmen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	dann	ADV	*	dann	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	zum	APPRART	(PP*	zu	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	andern	PIS	*))	anderer	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ich	PPER	(S*	ich	sg	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	bin	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ärgerlich	ADJD	*)	ärgerlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ärgerlich	ADJD	(PP*	ärgerlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	über	APPR	*	über	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	meine	PPOSAT	(CNP(NP*	mein	sg	fem	-	(203|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Freunde	NN	*)	freund	sg	fem	-	203)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	über	APPR	(NP(PP*	über	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	mich	PPER	*))	mich	sg	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	selbst	ADV	*))	selbst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	–	XY	*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO*	claudia	sg	neut	(PER*)	(53|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	53)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wie	PWAV	*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	APPIANI	NE	(VROOT(PSEUDO*	appiani	-	-	(LOC*)	(9|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	9)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Meine	PPOSAT	(VROOT(PSEUDO(S(NP*	mein	sg	fem	-	(203|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Freunde	NN	*)	freund	sg	fem	-	203)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	verlangen	VVFIN	*	verlangen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	schlechterdings	ADJD	*	schlechterdings	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	daß	KOUS	(CS(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ich	PPER	*	ich	sg	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	dem	ART	(VP(NP*	der	sg	neut	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Prinzen	NN	*	prinz	sg	neut	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	von	APPR	(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	meiner	PPOSAT	*	mein	sg	fem	-	(102|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Heirat	NN	*))	heirat	sg	fem	-	102)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	ein	ART	(NP*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Wort	NN	*)	wort	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	sagen	VVINF	*)	sagen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	soll	VMFIN	*)	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	ehe	KOUS	(S*	ehe	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	ich	PPER	*	ich	sg	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	sie	PPER	*	sie	*	*	-	(102)
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	vollziehe	VVFIN	*)))	vollziehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	*	sie	pl	*	-	(203)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	geben	VVFIN	*	geben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mir	PPER	*	sich	sg	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	zu	PTKVZ	*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ich	PPER	*	ich	sg	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	sei	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	schuldig	ADJD	*	schuldig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	aber	KON	*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	die	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Achtung	NN	*	achtung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	gegen	APPR	*	gegen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	ihn	PPER	*	ihn	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	woll	VMFIN	*	woll	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	anders	ADV	*	anders	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Und	KON	(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	bin	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	schwach	ADJD	*)	schwach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	genug	ADV	(VP*	genug	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	gewesen	VAPP	*	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	es	PPER	(VP*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	ihnen	PPER	*	ihnen	pl	masc	-	(203)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	versprechen	VVINF	*)))	versprechen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Eben	ADV	*	eben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wollt	VMFIN	*	wollen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	noch	ADV	*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	bei	APPR	*	bei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ihm	PPER	*	ihm	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	vorfahren	VVINF	*	vorfahren	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO*))	claudia	-	-	-	(53)|(7)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	stutzig	ADJD	(VROOT(PSEUDO*	stutzig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Bei	APPR	(VROOT(PSEUDO(PP*	bei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	dem	ART	*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Prinzen	NN	*)	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Pirro	NE	(VROOT(PSEUDO(S*	pirro	-	-	(PER*)	(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	gleich	ADV	(AVP*	gleich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	darauf	PROAV	*)	darauf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Marinelli	NE	*	marinelli	-	-	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	die	ART	(NP*	der	pl	fem	-	(53|(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Vorigen	NN	*))	vorige	pl	*	-	53)|9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	PIRRO	NE	(VROOT(PSEUDO*	pirro	-	-	(LOC*)	(5|(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Gnädige	ADJA	(VROOT(PSEUDO(CS(S(NP*	gnädig	sg	fem	-	(53
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Frau	NN	*	frau	sg	fem	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	der	ART	(NP*	der	sg	masc	-	(3
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Marchese	NN	*	marchese	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Marinelli	NE	*))	marinelli	sg	masc	(PER*)	3)|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	hält	VVFIN	*	halten	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	vor	APPR	(PP*	vor	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	dem	ART	*	der	sg	neut	-	(133
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Hause	NN	*))	haus	sg	neut	-	133)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	erkundiget	VVFIN	(S*	erkundiget	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	sich	PRF	*	sich	sg	-	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	nach	APPR	(PP*	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	dem	ART	*	der	sg	neut	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	Herrn	NN	*	herr	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	Grafen	NE	*)))	grafe	-	-	-	9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	APPIANI	NE	(VROOT(PSEUDO*	appiani	-	-	(LOC*)	(9|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	9)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nach	APPR	(VROOT(PSEUDO(PP*	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	mir	PPER	*)	sich	sg	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	PIRRO	NE	(VROOT(PSEUDO*	pirro	-	-	(LOC*)	(5|(5)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Hier	ADV	(VROOT(PSEUDO(S*	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	er	PPER	*	er	sg	masc	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	schon	ADV	*)	schon	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Öffnet	VVFIN	(VROOT(PSEUDO(CS(S*	öffnen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ihm	PPER	*	ihm	sg	masc	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	die	ART	(NP*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Türe	NN	*))	türe	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	geht	VVFIN	(S*	gehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ab	PTKVZ	*))	ab	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	bitt	VVFIN	*	bitt	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	um	APPR	*	um	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Verzeihung	NN	*	verzeihung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	gnädige	ADJA	*	gnädig	sg	fem	-	(53
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Frau	NN	*	frau	sg	fem	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Mein	PPOSAT	(NP*	mein	sg	masc	-	(9|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Herr	NN	*	herr	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Graf	NE	*	graf	sg	masc	(PER*)	9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ich	PPER	(S*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	war	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	vor	APPR	(PP*	vor	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Ihrem	PPOSAT	*	ihr	sg	masc	-	(155|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Hause	NN	*)))	haus	sg	masc	-	155)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	erfuhr	VVFIN	(S*	erfahren	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	ich	PPER	*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	Sie	PPER	(VP*	sie	sg	-	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	hier	ADV	*	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	treffen	VVINF	*)	treffen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	würde	VAFIN	*))	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	hab	VVFIN	*	hab	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ein	ART	*	ein	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	dringendes	ADJA	*	dringend	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Geschäft	NN	*	geschäft	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	an	APPR	*	an	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Sie	PPER	*	sie	pl	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	–	ADJA	*	–	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Gnädige	ADJA	*	gnädig	sg	fem	-	(53
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Frau	NN	*	frau	sg	fem	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	ich	PPER	*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	bitte	ADV	*	bitte	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	nochmals	ADV	*	nochmals	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	um	APPR	*	um	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	Verzeihung	NN	*	verzeihung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	in	APPR	*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	einigen	PIAT	*	einiger	pl	fem	-	(204
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	Minuten	NN	*	minute	pl	fem	-	204)
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	geschehen	VVPP	*	geschehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO*	claudia	sg	neut	(PER*)	(53|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	53)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Die	ART	(VROOT(PSEUDO(S*	der	sg	-	-	(204)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ich	PPER	*	ich	sg	*	-	(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	verzögern	VVINF	*	verzögern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	will	VMFIN	*)	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Macht	VVFIN	(VROOT(PSEUDO(CS(S*	macht	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ihm	PPER	*	ihm	sg	masc	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	eine	ART	(NP*	ein	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Verbeugung	NN	*))	verbeugung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	geht	VVFIN	(S*	gehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ab	PTKVZ	*))	ab	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Marinelli	NE	(VROOT(PSEUDO*	marinelli	sg	masc	(PER*)	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Appiani	NE	(VROOT(PSEUDO*	appiani	sg	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	APPIANI	NE	(VROOT(PSEUDO*	appiani	-	-	(LOC*)	(9|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	9)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nun	ADV	(VROOT(PSEUDO(S*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mein	PPOSAT	(NP*	mein	sg	masc	-	(3|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Herr	NN	*))	herr	sg	masc	-	3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	komme	VVFIN	*	kommen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	von	APPR	(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	des	ART	*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Prinzen	NN	*	prinz	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Durchlaucht	NN	*))	durchlaucht	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	APPIANI	NE	(VROOT(PSEUDO*	appiani	-	-	(LOC*)	(9|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	9)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	zu	APPR	(PP*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	seinem	PPOSAT	*	sein	sg	masc	-	(205|(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Befehl	NN	*))	befehl	sg	masc	-	205)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	bin	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	stolz	ADJD	*	stolz	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	der	ART	(VP(NP*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Überbringer	NN	*	überbringer	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	einer	ART	(NP*	ein	sg	masc	-	(206
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	so	ADV	(AP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	vorzüglichen	ADJA	*)	vorzüglich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Gnade	NN	*))	gnade	-	-	-	206)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	sein	VAINF	*)))	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wenn	KOUS	*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Graf	NN	*	graf	sg	*	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Appiani	NE	*	appiani	sg	*	-	9)|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	mit	APPR	*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Gewalt	NN	*	gewalt	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	einen	PIS	*	ein	sg	masc	-	(3
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	seiner	PPOSAT	*	sein	sg	fem	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	ergebensten	ADJA	*	ergeben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Freunde	NN	*	freund	pl	masc	-	3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	in	APPR	*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	mir	PPER	*	sich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	verkennen	VVINF	*	verkennen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	will	VMFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	–	XY	*	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	APPIANI	NE	(VROOT(PSEUDO*	appiani	-	-	(LOC*)	(9|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	9)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ohne	APPR	(VROOT(PSEUDO(S(PP*	ohne	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	weitere	ADJA	*	weit	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Vorrede	NN	*)	vorrede	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	wenn	KOUS	*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ich	PPER	*	ich	sg	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	bitten	VVINF	*	bitten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	darf	VMFIN	*)	dürfen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Auch	ADV	(VROOT(PSEUDO(NP*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	das	PDS	*)	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Der	ART	(S(NP*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Prinz	NN	*)	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	muß	VMFIN	*	müssen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	sogleich	ADV	*	sogleich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	an	APPR	(PP*	an	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	den	ART	*	der	sg	masc	-	(207
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Herzog	NN	*	herzog	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	von	APPR	(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Massa	NE	*))	massa	pl	neut	(LOC*)	207)|(83)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Angelegenheit	NN	*	angelegenheit	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	seiner	PPOSAT	(NP*	sein	sg	fem	-	(81|(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Vermählung	NN	*)	vermählung	sg	fem	-	81)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	dessen	PDS	*)))	der	sg	masc	-	(207)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	Prinzessin	NN	(NP*	prinzessin	sg	fem	-	(82
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	Tochter	NN	*	tochter	sg	fem	-	82)
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	einen	ART	(VP(NP*	ein	sg	masc	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	Bevollmächtigten	NN	*)	bevollmächtigter	sg	masc	-	9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	senden	VVINF	*))	senden	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Er	PPER	(VROOT(PSEUDO(S*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	war	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	lange	ADV	(AP*	lange	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	unschlüssig	ADJD	*	unschlüssig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	wen	PWS	(S*	wen	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	er	PPER	(VP*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	dazu	PROAV	*	dazu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	ernennen	VVINF	*)	ernennen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	solle	VMFIN	*)))	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Endlich	ADV	(VROOT(PSEUDO(S*	endlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	seine	PPOSAT	(CNP(NP*	sein	sg	fem	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Wahl	NN	*)	wahl	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Herr	NN	(NP*	herr	sg	*	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Graf	NN	*	graf	sg	*	(PER*)	9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	auf	APPR	(VP(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Sie	PPER	*)	sie	pl	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	gefallen	VVPP	*))))	fallen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	APPIANI	NE	(VROOT(PSEUDO*	appiani	-	-	(LOC*)	(9|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	9)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Auf	APPR	(VROOT(PSEUDO(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	mich	PPER	*)	mich	sg	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	das	PDS	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	–	KON	*	–	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	wenn	KOUS	(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	die	ART	(NP*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Freundschaft	NN	*)	freundschaft	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ruhmredig	ADJD	(VP*	ruhmredig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	sein	VAINF	*)))	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	darf	VMFIN	(S*	dürfen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	–	PPER	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	nicht	PTKNEG	*)	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	ohne	APPR	(PP*	ohne	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	mein	PPOSAT	*	mein	sg	neut	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Zutun	NN	*)	zutun	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	–	XY	*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	APPIANI	NE	(VROOT(PSEUDO*	appiani	-	-	(LOC*)	(9|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	9)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wahrlich	ADJD	(VROOT(PSEUDO(S*	wahrlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	setzen	VVFIN	*	setzen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	mich	PPER	*	mich	sg	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	wegen	APPR	(PP*	wegen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	eines	ART	*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Dankes	NN	*)	dank	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Verlegenheit	NN	*))	verlegenheit	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ich	PPER	(NP(S*	ich	sg	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	habe	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	schon	ADV	(VP*	schon	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	längst	ADV	*	längst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	nicht	PTKNEG	(AVP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	mehr	ADV	*)	mehr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	erwartet	VVPP	*))	erwarten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	der	ART	(VP(NP*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Prinz	NN	*	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	mich	PPER	(VP*	mich	sg	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	brauchen	VVINF	*)))	brauchen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	geruhen	VVINF	*)	geruhen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	werde	VAFIN	*))	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	bin	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	versichert	VVPP	(VP*	versichern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ihm	PPER	(VP*	ihm	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	bloß	ADV	*	bloß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	an	APPR	(PP*	an	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	einer	ART	*	ein	sg	fem	-	(208
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	würdigen	ADJA	*	würdig	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Gelegenheit	NN	*)	gelegenheit	sg	fem	-	208)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	gemangelt	VVPP	*)	mangeln	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	hat	VAFIN	*)))	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(CS(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wenn	KOUS	*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	auch	ADV	*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	diese	PDAT	(VP(NP*	dieser	pl	*	-	(208)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	so	ADV	(CNP(NP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	eines	ART	*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Mannes	NN	*)	mann	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	wie	KOKOM	(NP*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Graf	NE	(MPN*	graf	sg	*	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Appiani	NE	*)	appiani	sg	*	-	9)|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	noch	ADV	(AP*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	würdig	ADJD	*))))	würdig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	genug	ADV	*	genug	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	sein	VAINF	*)	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	sollte	VMFIN	*)	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	so	ADV	(S*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	freilich	ADV	(VP*	freilich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	meine	PPOSAT	(NP*	mein	sg	fem	-	(209|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	Freundschaft	NN	*)	freundschaft	sg	fem	-	209)
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	zu	PTKA	(AP*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	voreilig	ADJD	*)	voreilig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	gewesen	VAPP	*)))	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	APPIANI	NE	(VROOT(PSEUDO*	appiani	-	-	(LOC*)	(9|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	9)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Freundschaft	NN	(VROOT(PSEUDO(NP(CNP*	freundschaft	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Freundschaft	NN	*)	freundschaft	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	um	APPR	(PP*	um	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	das	ART	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	dritte	ADJA	*	dritter	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Wort	NN	*))	wort	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Mit	APPR	*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wem	PWS	*	wem	sg	masc	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	red	FM	*	red	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ich	PPER	*	ich	sg	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	denn	ADV	*	denn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Des	ART	*	der	-	-	-	(209|(3
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Marchese	NN	*	marchese	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Marinelli	NE	*	marinelli	*	*	(PER*)	3)|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Freundschaft	NN	*	freundschaft	sg	fem	-	209)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	hätt	PTKVZ	*	hätt	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ich	PPER	*	ich	sg	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	mir	PPER	*	sich	sg	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	nie	ADV	*	nie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	träumen	VVINF	*	träumen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	lassen	VVINF	*	lassen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	erkenne	VVFIN	*	erkennen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mein	PPOSAT	(CNP(NP*	mein	sg	neut	-	(210|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Unrecht	NN	*)	unrecht	sg	neut	-	210)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Herr	NN	(NP*	herr	sg	masc	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Graf	NN	*)	graf	sg	neut	(PER*)	9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	mein	PPOSAT	(NP*	mein	sg	neut	-	(210|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	unverzeihliches	ADJA	*	unverzeihlich	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Unrecht	NN	*))	unrecht	sg	neut	-	210)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	ich	PPER	*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	ohne	APPR	(VP(PP*	ohne	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	Ihre	PPOSAT	(CNP(NP*	ihr	sg	fem	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	Erlaubnis	NN	*)	erlaubnis	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	Ihr	PPOSAT	(NP*	ihr	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	Freund	NN	*)))	freund	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	sein	VAINF	*)	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	wollen	VMFIN	*))	wollen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Bei	APPR	(PP*	bei	sg	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	dem	ART	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	allen	PIS	*)	aller	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	was	PWS	(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	tut	VVFIN	*	tun	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	das	PDS	*)	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Die	ART	*	der	sg	fem	-	(206
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Gnade	NN	*	gnade	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	des	ART	*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Prinzen	NN	*	prinz	sg	masc	-	206)|0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	die	PRELS	*	der	pl	fem	-	(211
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Ihnen	PPER	*	ihnen	pl	fem	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	angetragene	ADJA	*	angetragen	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Ehre	NN	*	ehre	sg	fem	-	211)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	bleiben	VVINF	*	bleiben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	was	PWS	*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	sie	PPER	*	sie	pl	masc	-	(211)|(206)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	sind	VAFIN	*	sein	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	ich	PPER	*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	zweifle	VVFIN	*	zweifeln	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	Sie	PPER	*	sie	pl	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	werden	VAFIN	*	werden	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	sie	PPER	*	sie	pl	*	-	(206)|(211)
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	mit	APPR	*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	Begierd	NE	*	begierd	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	ergreifen	VVINF	*	ergreifen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	28	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	APPIANI	NE	(VROOT(PSEUDO*))	appiani	-	-	-	(9)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	nach	APPR	(VROOT(PSEUDO(PP*	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	einiger	PIAT	*	einiger	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Überlegung	NN	*)	überlegung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Allerdings	ADV	(VROOT(PSEUDO(S*)	allerdings	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nun	ADV	(VROOT(PSEUDO(S(AVP*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	so	ADV	*)	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	kommen	VVFIN	*	kommen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Sie	PPER	*)	sie	pl	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	APPIANI	NE	(VROOT(PSEUDO*	appiani	-	-	(LOC*)	(9|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	9)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wohin	PWAV	(VROOT(PSEUDO*	wohin	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nach	APPR	(VROOT(PSEUDO(CPP(PP*	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Dosalo	NE	*)	dosalo	-	-	(PER*)	(118)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	zu	APPR	(PP*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	dem	ART	*	der	sg	neut	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Prinzen	NN	*))	prinz	sg	neut	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	liegt	VVFIN	*	liegen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	schon	ADV	*	schon	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	alles	PIS	*	alle	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	fertig	PTKVZ	*	fertig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Sie	PPER	*	sie	pl	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	müssen	VMFIN	*	müssen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	noch	ADV	*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	heut	ADV	*	heut	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	abreisen	VVINF	*	abreisen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	APPIANI	NE	(VROOT(PSEUDO*	appiani	-	-	(LOC*)	(9|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	9)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sagen	VVFIN	*	sagen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*)	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Noch	ADV	*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	heute	ADV	*	heute	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Lieber	ADV	(VROOT(PSEUDO(S*	lieber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	noch	ADV	*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	dieser	PDAT	*	dieser	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nämlichen	ADJA	*	nämlich	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Stunde	NN	*)	stunde	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	als	KOKOM	(PP*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	in	APPR	*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	der	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	folgenden	ADJA	*))	folgend	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Die	ART	(VROOT(PSEUDO(S(NP*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sache	NN	*)	sache	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	von	APPR	(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	der	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	äußersten	ADJA	*	äußerer	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Eil	NN	*))	eil	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	APPIANI	NE	(VROOT(PSEUDO*	appiani	-	-	(LOC*)	(9|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	9)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	In	APPR	(VROOT(PSEUDO(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Wahrheit	NN	*)	wahrheit	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	So	ADV	(NP(CS(S*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	tut	VVFIN	*	tun	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	mir	PPER	*	sich	sg	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	leid	ADJD	*)	leid	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	ich	PPER	*	ich	sg	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	die	ART	(NP*	der	sg	fem	-	(211
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Ehre	NN	*)))	ehre	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	welche	PRELS	(S*	welcher	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	mir	PPER	(VP*	sich	sg	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	der	ART	(NP*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	Prinz	NN	*)	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	zugedacht	VVPP	*)	zugedenken	-	-	-	211)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	verbitten	VVINF	*	verbitten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	muß	VMFIN	*))	müssen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wie	PWAV	(VROOT(PSEUDO*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	APPIANI	NE	(VROOT(PSEUDO*	appiani	-	-	(LOC*)	(9|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	9)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	kann	VMFIN	*	können	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	heute	ADV	*	heute	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	abreisen	VVINF	*)	abreisen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	auch	ADV	(S*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	morgen	ADV	(AVP*	morgen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	nicht	PTKNEG	*))	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	auch	ADV	(AVP*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	übermorgen	ADV	*)	übermorgen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	noch	ADV	(CO(AVP*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	nicht	PTKNEG	*))	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(S*	sie	pl	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	scherzen	VVFIN	*	scherzen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Herr	NN	(NP*	herr	sg	masc	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Graf	NN	*))	graf	sg	*	(PER*)	9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	APPIANI	NE	(VROOT(PSEUDO*	appiani	-	-	(LOC*)	(9|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	9)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Mit	APPR	(VROOT(PSEUDO(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ihnen	PPER	*)	ihnen	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Unvergleichlich	ADJD	(VROOT(PSEUDO*	unvergleichlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wenn	KOUS	(VROOT(PSEUDO(S(AVP(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	der	ART	(NP*	der	sg	masc	-	(212
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Scherz	NN	*)	scherz	sg	masc	-	212)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	den	ART	(NP*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Prinzen	NN	*)	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	gilt	VVFIN	*)	gelten	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	so	ADV	*)	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	er	PPER	*	er	sg	masc	-	(212)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	um	KOUI	(AVP*	um	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	viel	ADV	(AVP*	viel	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	lustiger	ADJD	*)))	lustig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*	sie	pl	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	können	VMFIN	*	können	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	APPIANI	NE	(VROOT(PSEUDO*	appiani	-	-	(LOC*)	(9|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	9)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nein	PTKANT	*	nein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mein	PPOSAT	*	mein	sg	masc	-	(3|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Herr	NN	*	herr	sg	masc	-	3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	nein	PTKANT	*	nein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Und	KON	(VP(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	hoffe	VVFIN	*	hoffen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	der	ART	(NP*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Prinz	NN	*)	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	selbst	ADV	(NP*	selbst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	meine	PPOSAT	*	mein	sg	fem	-	(213|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Entschuldigung	NN	*)	entschuldigung	sg	fem	-	213)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	wird	VAFIN	*))	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	gelten	VVINF	*	gelten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	lassen	VVINF	*)	lassen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Die	PDS	(VROOT(PSEUDO(S*	der	sg	fem	-	(213)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	bin	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ich	PPER	(VP*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	begierig	ADJD	*	begierig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	hören	VVINF	*)))	hören	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	APPIANI	NE	(VROOT(PSEUDO*	appiani	-	-	(LOC*)	(9|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	9)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	O	ITJ	(VROOT(PSEUDO(S*	O	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	eine	ART	(NP*	ein	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Kleinigkeit	NN	*))	kleinigkeit	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sehen	VVFIN	*	sehen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ich	PPER	*	ich	sg	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	soll	VMFIN	*	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	noch	ADV	*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	heut	ADV	*	heut	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	eine	ART	*	ein	sg	fem	-	(8
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Frau	NN	*	frau	sg	fem	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	nehmen	VVINF	*	nehmen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nun	ADV	(VROOT(PSEUDO(S*)	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	dann	ADV	*)	dann	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	APPIANI	NE	(VROOT(PSEUDO*	appiani	-	-	(LOC*)	(9|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	9)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	dann	ADV	*)	dann	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	dann	ADV	*	dann	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ihre	PPOSAT	(S(NP*	ihr	sg	fem	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Frage	NN	*)	frage	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	auch	ADV	(AP*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	verzweifelt	ADJD	*	verzweifelt	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	naiv	ADJD	*))	naiv	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Man	PIS	(VROOT(PSEUDO(S*	man	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	hat	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Exempel	NN	(CVP(VP(NP*	exempel	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Herr	NN	(NP*	herr	sg	masc	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Graf	NN	*	graf	sg	neut	(PER*)	9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*)))	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	daß	KOUS	*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	sich	PRF	(VP*	sich	pl	-	-	(214)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Hochzeiten	NN	*	hochzeit	pl	fem	-	(214)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	aufschieben	VVINF	*	aufschieben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	lassen	VVINF	*)))	lassen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ich	PPER	(S*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	glaube	VVFIN	*	glauben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	freilich	ADV	*	freilich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	der	ART	(CNP(NP*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Braut	NN	*)	braut	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	oder	KON	*	oder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	dem	ART	(NP*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Bräutigam	NN	*	bräutigam	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	immer	ADV	*))	immer	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	damit	PROAV	(VP*	damit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	gedient	VVPP	*)	dienen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	ist	VAFIN	*))	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Die	ART	(VROOT(PSEUDO(S(NP*	der	sg	fem	-	(215
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sache	NN	*)	sache	sg	fem	-	215)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mag	VMFIN	*	mögen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ihr	PPOSAT	(VP(NP*	ihr	sg	neut	-	(215)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Unangenehmes	NN	*)	unangenehme	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	haben	VAINF	*))	haben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Aber	KON	*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	doch	ADV	*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	dächt	VVFIN	*	dächen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ich	PPER	*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	der	ART	*	der	sg	masc	-	(205
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Befehl	NN	*	befehl	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	des	ART	*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Herrn	NN	*	herr	sg	masc	-	205)|0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	–	NE	*	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	APPIANI	NE	(VROOT(PSEUDO*	appiani	-	-	(LOC*)	(9|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	9)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(NP*	der	sg	masc	-	(205
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Befehl	NN	*	befehl	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	des	ART	(NP*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Herrn	NN	*))	herr	sg	masc	-	205)|0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	KON	(VROOT(PSEUDO(PP*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	des	ART	*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Herrn	NN	*)	herr	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ein	ART	*	ein	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Herr	NN	*	herr	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	den	PRELS	*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	man	PIS	*	man	sg	*	-	(17)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	sich	PRF	*	sich	sg	-	-	(17)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	selber	ADV	*	selber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	wählt	VVFIN	*	wählen	sg	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	unser	PPOSAT	*	unser	sg	masc	-	(216|(17)|(3)|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Herr	NN	*	herr	sg	masc	-	216)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	eigentlich	ADV	*	eigentlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	–	$(	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	Ich	PPER	*	ich	sg	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	gebe	VVFIN	*	geben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	zu	PTKVZ	*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	daß	KOUS	*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	Sie	PPER	*	sie	pl	fem	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	dem	ART	*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	Prinzen	NN	*	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	unbedingtern	ADV	*	unbedingtern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	Gehorsam	NN	*	gehorsam	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	schuldig	ADJD	*	schuldig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	wären	VAFIN	*	sein	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	28	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Aber	KON	*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ich	PPER	(S*	ich	sg	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	kam	VVFIN	*	kommen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	an	APPR	(PP*	an	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	seinen	PPOSAT	*	sein	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Hof	NN	*)	hof	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	als	APPR	(PP*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ein	ART	*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Freiwilliger	NN	*))	freiwillige	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wollte	VMFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	die	ART	(VP(NP*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Ehre	NN	*)	ehre	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	haben	VAINF	*)	haben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ihm	PPER	(VP*	ihm	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	dienen	VVINF	*)	dienen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	aber	ADV	(AVP*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	nicht	PTKNEG	*)	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	sein	PPOSAT	(NP*	sein	-	-	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Sklave	NN	*)	sklave	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	werden	VAINF	*))	werden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	*	ich	sg	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	bin	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	der	ART	*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Vasall	NN	*	vasall	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	eines	PIS	*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	größern	VVINF	*	größern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Herrn	NN	*	herr	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	–	XY	*	–	sg	masc	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Größer	ADJD	(VROOT(PSEUDO(CO(CAP*	größer	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	oder	KON	*	oder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	kleiner	ADJD	*)	klein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Herr	NN	(S*	herr	sg	masc	-	(216)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Herr	NN	*))	herr	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	APPIANI	NE	(VROOT(PSEUDO*	appiani	-	-	(LOC*)	(9|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	9)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Daß	KOUS	(VROOT(PSEUDO(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ich	PPER	*	ich	sg	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Ihnen	PPER	*)	ihnen	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	darüber	PROAV	(NP(AP*	darüber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	stritte	ADJA	*)))	stritt	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Genug	NN	*	genug	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sagen	VVFIN	*	sagen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Sie	PPER	*	sie	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	dem	ART	*	der	sg	neut	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Prinzen	NN	*	prinz	sg	neut	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	was	PWS	*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Sie	PPER	*	sie	sg	fem	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	gehört	VVPP	*	gehören	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	haben	VAFIN	*	haben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	daß	KOUS	*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	mir	PPER	*	sich	sg	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	leid	ADJD	*	leid	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	tut	VVFIN	*	tun	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	seine	PPOSAT	*	sein	sg	fem	-	(206|(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	Gnade	NN	*	gnade	sg	fem	-	206)
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	annehmen	VVINF	*	annehmen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	zu	PTKZU	*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	können	VMINF	*	können	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	weil	KOUS	*	weil	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	28	ich	PPER	*	ich	sg	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	29	eben	ADV	*	eben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	30	heut	ADV	*	heut	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	31	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	32	eine	ART	*	ein	sg	fem	-	(102
Emilia.xml.rksp.0.CoNLL2012.conll	000	33	Verbindung	NN	*	verbindung	sg	fem	-	102)
Emilia.xml.rksp.0.CoNLL2012.conll	000	34	vollzöge	VVFIN	*	vollzögen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	35	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	36	die	PRELS	*	der	sg	fem	-	(102)
Emilia.xml.rksp.0.CoNLL2012.conll	000	37	mein	PPOSAT	*	mein	sg	neut	-	(152|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	38	ganzes	ADJA	*	ganz	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	39	Glück	NN	*	glück	sg	neut	-	152)
Emilia.xml.rksp.0.CoNLL2012.conll	000	40	ausmache	VVFIN	*	ausmachen	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	41	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wollen	VMFIN	*	wollen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*	sie	pl	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ihn	PPER	*	ihn	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	zugleich	ADV	*	zugleich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	wissen	VVINF	*	wissen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	lassen	VVINF	*	lassen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	mit	APPR	*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	wem	PWS	*	wem	sg	masc	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	APPIANI	NE	(VROOT(PSEUDO*	appiani	-	-	(LOC*)	(9|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	9)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Mit	APPR	(VROOT(PSEUDO(PP*	mit	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Emilia	NE	(MPN*	emilia	*	*	-	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Galotti	NE	*))	galotti	sg	*	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(NP*	der	sg	masc	-	(8
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Tochter	NN	*	tochter	sg	masc	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	aus	APPR	(PP*	aus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	diesem	PDAT	*	dieser	sg	neut	-	(133
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Hause	NN	*))	haus	sg	neut	-	133)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	APPIANI	NE	(VROOT(PSEUDO*	appiani	-	-	(LOC*)	(9|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	9)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Aus	APPR	(VROOT(PSEUDO(PP*	aus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	diesem	PDAT	*	dieser	sg	neut	-	(133
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Hause	NN	*)	haus	sg	neut	-	133)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Hm	XY	*	hm	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	hm	XY	*	hm	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	APPIANI	NE	(VROOT(PSEUDO*	appiani	-	-	(LOC*)	(9|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	9)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Was	PWS	*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	beliebt	ADJD	*	belieben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sollte	VMFIN	*	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	meinen	VVINF	(VP*	meinen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	sonach	ADJD	*	sonach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	um	KOUI	(AVP*	um	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	so	ADV	*)	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	weniger	PIAT	(VP(NP*	weniger	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Schwierigkeit	NN	*)	schwierigkeit	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	haben	VAINF	*)	haben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	könne	VMFIN	*))	können	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	die	ART	(VP(NP*	der	sg	fem	-	(102
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	Zeremonie	NN	*)	zeremonie	sg	fem	-	102)
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	bis	APPR	(PP*	bis	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	zu	APPR	*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	Ihrer	PPOSAT	*	ihr	sg	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	Zurückkunft	NN	*)	zurückkunft	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	auszusetzen	VVIZU	*))	aussetzen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	APPIANI	NE	(VROOT(PSEUDO*	appiani	-	-	(LOC*)	(9|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	9)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Die	ART	(VROOT(PSEUDO(NP*	der	sg	fem	-	(102
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Zeremonie	NN	*)	zeremonie	sg	fem	-	102)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nur	ADV	(VROOT(PSEUDO(NP*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	die	ART	*	der	sg	fem	-	(102
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Zeremonie	NN	*)	zeremonie	sg	fem	-	102)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Die	ART	(VROOT(PSEUDO(S(NP*	der	pl	*	-	(53|(12
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	guten	ADJA	*	gut	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Eltern	NN	*)	eltern	pl	*	-	53)|12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	werden	VAFIN	*	werden	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	es	PPER	(VP*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	so	ADV	(AP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	genau	ADJD	*)	genau	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	nehmen	VVINF	*))	nehmen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	APPIANI	NE	(VROOT(PSEUDO*	appiani	-	-	(LOC*)	(9|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	9)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Die	ART	(VROOT(PSEUDO(NP*	der	pl	*	-	(12|(53
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	guten	ADJA	*	gut	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Eltern	NN	*)	eltern	pl	*	-	12)|53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Emilia	NE	*	emilia	-	-	(PER*)	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	bleibt	VVFIN	*	bleiben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Ihnen	PPER	*	ihnen	pl	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ja	ADV	*	ja	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	wohl	ADV	*	wohl	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	gewiß	ADV	*)	gewiß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	APPIANI	NE	(VROOT(PSEUDO*	appiani	-	-	(LOC*)	(9|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	9)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ja	PTKANT	(VROOT(PSEUDO(S*	ja	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wohl	ADV	*	wohl	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	gewiß	ADV	*)	gewiß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	(S*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sind	VAFIN	*	sein	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Ihrem	PPOSAT	*	ihr	sg	neut	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Ja	NN	*	ja	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	wohl	ADV	(NP*	wohl	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	–	NN	*)))	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	ja	ADV	(NP*	ja	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	wohl	ADV	*	wohl	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	ein	ART	*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	ganzer	ADJA	*	ganz	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Affe	NN	*)	affe	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Mir	PPER	(VROOT(PSEUDO(NP*	sich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	das	PDS	(NP*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Graf	NN	*))	graf	sg	*	(PER*)	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	APPIANI	NE	(VROOT(PSEUDO*	appiani	-	-	(LOC*)	(9|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	9)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Warum	PWAV	*	warum	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Himmel	NN	(VROOT(PSEUDO(CNP*	himmel	sg	masc	-	(132)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Hölle	NN	*)	hölle	sg	neut	-	(217)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Wir	PPER	(S*	wir	pl	*	-	(9)|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	werden	VAFIN	*	werden	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	uns	PPER	(VP*	uns	pl	-	-	(9)|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	sprechen	VVINF	*))	sprechen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	APPIANI	NE	(VROOT(PSEUDO*	appiani	-	-	(LOC*)	(9|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	9)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Pah	NE	(VROOT(PSEUDO(MPN*	pah	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*)))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Hämisch	ADJD	(VROOT(PSEUDO(S*	hämisch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	der	ART	(CNP(NP*	der	sg	masc	-	(3
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Affe	NN	*	affe	sg	masc	-	3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	;	$.	*)	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	aber	KON	*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	–	XY	*))))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Tod	NN	(VROOT(PSEUDO(CNP*	tod	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Verdammnis	NN	*)	verdammnis	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Graf	NN	*	graf	sg	*	(PER*)	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	(NP(AP*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	fodere	ADJA	*)	fod	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Genugtuung	NN	*)	genugtuung	sg	fem	-	(218)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	APPIANI	NE	(VROOT(PSEUDO*	appiani	-	-	(LOC*)	(9|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	9)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Das	PDS	(VROOT(PSEUDO(S*	der	sg	neut	-	(219)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	versteht	VVFIN	*	verstehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sich	PRF	*)	sich	sg	-	-	(219)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	würde	VAFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sie	PPER	*	sie	sg	fem	-	(218)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	gleich	ADV	*	gleich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	itzt	ADJD	(VP*	itzt	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	nehmen	VVINF	*))	nehmen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	nur	ADV	(PP*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	ich	PPER	*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	dem	ART	(NP*	der	sg	neut	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	zärtlichen	ADJA	*	zärtlich	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Bräutigam	NE	*))	bräutigam	sg	neut	-	9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	den	ART	*	der	pl	masc	-	(127
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	heutigen	ADJA	*	heutig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	Tag	NN	*)	tag	sg	masc	-	127)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	nicht	PTKNEG	(S*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	verderben	VVINF	*	verderben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	mag	VMFIN	*)	mögen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	APPIANI	NE	(VROOT(PSEUDO*	appiani	-	-	(LOC*)	(9|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	9)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Gutherziges	NE	(VROOT(PSEUDO(NP*	gutherzig	-	-	-	(3
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ding	NE	*)	ding	-	-	-	3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nicht	PTKNEG	(VROOT(PSEUDO(CO(AVP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	doch	ADV	*))	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nicht	PTKNEG	(VROOT(PSEUDO(CO(AVP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	doch	ADV	*))	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Indem	KOUS	(VROOT(PSEUDO(S*	indem	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	er	PPER	*	er	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ihn	PPER	*	ihn	sg	masc	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	bei	APPR	(PP*	bei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	der	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Hand	NN	*)	hand	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ergreift	VVFIN	*)	ergreifen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nach	APPR	*	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Massa	NE	*	massa	-	-	-	(83)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	freilich	ADV	*	freilich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mag	VMFIN	*	mögen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ich	PPER	*	ich	sg	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	mich	PRF	*	mich	sg	-	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	heute	ADV	*	heute	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	schicken	VVINF	*	schicken	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	lassen	VVINF	*	lassen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	aber	ADV	*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	zu	APPR	*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	einem	ART	*	ein	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Spaziergange	NN	*	spaziergange	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	mit	APPR	*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	Ihnen	PPER	*	ihnen	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	hab	VAFIN	*	hab	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	ich	PPER	*	ich	sg	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	Zeit	NN	*	zeit	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	übrig	PTKVZ	*	übrig	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Kommen	VVFIN	*	kommen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	(NP*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	kommen	VVFIN	(S*	kommen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Sie	PPER	*))	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*))	marinelli	-	-	-	(3|(3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	der	ART	(VROOT(PSEUDO(CS(S*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sich	PRF	*	sich	sg	-	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	losreißt	VVFIN	*)	losreißen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	abgeht	VVFIN	*)))	abgehen	sg	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nur	ADV	(VROOT(PSEUDO(NP*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Geduld	NN	*	geduld	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Graf	NN	(CO*	graf	sg	*	(PER*)	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	nur	ADV	(NP*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Geduld	NN	*)))	geduld	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Appiani	NE	(VROOT(PSEUDO*	appiani	sg	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Claudia	NE	(VROOT(PSEUDO(MPN*	claudia	*	*	-	(53|(7|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Galotti	NE	*)	galotti	sg	*	-	53)|7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	APPIANI	NE	(VROOT(PSEUDO*	appiani	-	-	(LOC*)	(9|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	9)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Geh	XY	(VROOT(PSEUDO*	geh	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Nichtswürdiger	NN	*	nichtswürdiger	-	-	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ha	NE	*	ha	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	das	PDS	(VROOT(PSEUDO(S*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	hat	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	gut	ADJD	(VP*	gut	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	getan	VVPP	*))	tun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Mein	PPOSAT	(VROOT(PSEUDO(S(NP*	mein	sg	neut	-	(220|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Blut	NN	*)	blut	sg	neut	-	220)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	in	APPR	(VP(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Wallung	NN	*)	wallung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	gekommen	VVPP	*))	kommen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(CO(S*	ich	sg	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	fühle	VVFIN	*	fühlen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mich	PRF	(NP*	mich	sg	-	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	anders	ADV	*))	anders	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	besser	ADJD	*)	gut	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO*))	claudia	-	-	-	(53)|(7)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	eiligst	ADJD	(VROOT(PSEUDO(CO*	eiligst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	besorgt	ADJD	*)	besorgen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Gott	NN	(VROOT(PSEUDO*	gott	-	-	-	(57)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Herr	NN	*	herr	sg	masc	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Graf	NN	*	graf	sg	*	(PER*)	9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	–	XY	*	–	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Ich	PPER	*	ich	sg	*	-	(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	hab	VAFIN	*	hab	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	einen	ART	*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	heftigen	ADJA	*	heftig	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Wortwechsel	NN	*	wortwechsel	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	gehört	VVFIN	*	gehören	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ihr	PPOSAT	(S(NP*	ihr	pl	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Gesicht	NN	*)	gesicht	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	glühet	VVFIN	*)	glühen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	vorgefallen	VVPP	*)	vorfallen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	APPIANI	NE	(VROOT(PSEUDO*	appiani	-	-	(LOC*)	(9|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	9)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nichts	PIS	(VROOT(PSEUDO(S(CNP*	nichts	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	gnädige	ADJA	(NP*	gnädig	sg	fem	-	(53
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Frau	NN	*))	frau	sg	fem	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	gar	ADV	(NP*	gar	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	nichts	PIS	*))	nichts	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(S(NP*	der	sg	masc	-	(3
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Kammerherr	NN	*	kammerherr	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Marinelli	NE	*)	marinelli	sg	masc	(PER*)	3)|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	hat	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	mir	PPER	(VP*	sich	sg	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	einen	ART	(NP*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	großen	ADJA	*	groß	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Dienst	NN	*)	dienst	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	erwiesen	VVPP	*))	erweisen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Er	PPER	(VROOT(PSEUDO(S*	er	sg	masc	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	hat	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mich	PPER	(VP*	mich	sg	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	des	ART	(NP*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Ganges	NN	*)	gang	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	zum	APPRART	(PP*	zu	sg	neut	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Prinzen	NN	*)	prinz	sg	neut	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	überhoben	VVPP	*))	überhoben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO*	claudia	sg	neut	(PER*)	(53|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	53)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	In	APPR	(VROOT(PSEUDO(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	der	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Tat	NN	*)	tat	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	APPIANI	NE	(VROOT(PSEUDO*	appiani	-	-	(LOC*)	(9|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	9)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wir	PPER	(VROOT(PSEUDO(S*	wir	pl	*	-	(8)|(53)|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	können	VMFIN	*	können	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	nun	ADV	*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	um	KOUI	(AVP*	um	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	so	ADV	*)	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	viel	ADV	(VP*	viel	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	früher	ADJD	*	früh	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	abfahren	VVINF	*))	abfahren	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(CS(S*	ich	sg	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	gehe	VVFIN	*	gehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	meine	PPOSAT	(VP(NP*	mein	pl	*	-	(104|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Leute	NN	*)	leute	pl	*	-	104)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	treiben	VVINF	*)))	treiben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	bin	VAFIN	(S*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	sogleich	ADV	*	sogleich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	wieder	ADV	*	wieder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	hier	ADV	*))	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Emilia	NE	(VROOT(PSEUDO(S*	emilia	-	-	(PER*)	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wird	VAFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	indes	ADV	*	indes	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	auch	ADV	(AP*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	fertig	ADJD	*))	fertig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO*	claudia	sg	neut	(PER*)	(53|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	53)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Kann	VMFIN	(VROOT(PSEUDO(S*	können	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ich	PPER	*	ich	sg	*	-	(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ganz	ADV	(VP(AP*	ganz	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ruhig	ADJD	*)	ruhig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	sein	VAINF	*)	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Herr	NN	(NP*	herr	sg	masc	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Graf	NN	*))	graf	sg	*	(PER*)	9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	APPIANI	NE	(VROOT(PSEUDO*	appiani	-	-	(LOC*)	(9|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	9)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ganz	ADV	(VROOT(PSEUDO(CO(AP*	ganz	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ruhig	ADJD	*)	ruhig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	gnädige	ADJA	(NP*	gnädig	sg	fem	-	(53
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Frau	NN	*))	frau	sg	fem	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(S*	sie	sg	fem	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	geht	VVFIN	*	gehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	herein	PTKVZ	*	herein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	er	PPER	*	er	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	fort	PTKVZ	*)	fort	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(NP*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Prinz	NN	*)	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Marinelli	NE	(VROOT(PSEUDO*	marinelli	sg	masc	(PER*)	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Umsonst	ADV	(VROOT(PSEUDO(S*	umsonst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	er	PPER	*	er	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	schlug	VVFIN	*	schlagen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	die	ART	(NP*	der	sg	fem	-	(211
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	angetragene	ADJA	*	angetragen	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Ehre	NN	*)	ehre	sg	fem	-	211)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	der	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	größten	ADJA	*	groß	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Verachtung	NN	*)	verachtung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	aus	PTKVZ	*)	aus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	bleibt	VVFIN	*	bleiben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	es	PPER	*	es	sg	neut	-	(221)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	dabei	PROAV	*)	dabei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	So	ADV	(VROOT(PSEUDO(S*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	geht	VVFIN	*	gehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	es	PPER	*	es	sg	neut	-	(221)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	vor	APPR	(PP*	vor	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	sich	PRF	*))	sich	sg	-	-	(221)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	so	ADV	(VROOT(PSEUDO(S*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wird	VAFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Emilia	NE	*	emilia	-	-	(PER*)	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	noch	ADV	(AVP*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	heute	ADV	*)	heute	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	die	ART	(NP*	der	sg	fem	-	(8
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Seinige	NN	*))	seinige	sg	fem	-	8)|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Allem	PIAT	*	allem	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ansehen	NN	*	ansehen	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	nach	PTKVZ	*	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	versprach	VVFIN	*	versprechen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mir	PRF	*	sich	sg	-	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	von	APPR	(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Ihrem	PPOSAT	*	ihr	sg	masc	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Einfalle	NN	*)	einfalle	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	so	ADV	(AP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	viel	PIS	*))	viel	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Wer	PWS	(S*	wer	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	weiß	VVFIN	*	weiß	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	wie	PWAV	(S(AP*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	albern	ADJD	*)	albern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	sich	PRF	(VP*	sich	pl	-	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	dabei	PROAV	*	dabei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	genommen	VVPP	*)))	nehmen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Wenn	KOUS	(NP(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	der	ART	(NP*	der	sg	masc	-	(222
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Rat	NN	*	Rat	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	eines	ART	(NP*	ein	sg	masc	-	(3
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Toren	NN	*))	tor	sg	masc	-	222)|3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	einmal	ADV	(AP*	einmal	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	gut	ADJD	*)	gut	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	ist	VAFIN	*)	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	so	ADV	(S*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	muß	VMFIN	*	müssen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	ihn	PPER	(VP*	ihn	sg	masc	-	(222)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	ein	ART	(NP*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	gescheuter	ADJA	*	gescheut	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	Mann	NN	*)	mann	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	ausführen	VVINF	*)))	ausführen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Das	PDS	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	hätt	VVFIN	*	hätt	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	bedenken	VVINF	*	bedenken	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	sollen	VMFIN	*	sollen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Da	ADV	*	da	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	find	ADJD	*	find	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	mich	PRF	*	mich	sg	-	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	schön	ADJD	*	schön	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	belohnt	VVPP	*	belohnen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wofür	PWAV	*	wofür	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	belohnt	VVFIN	*	belohnen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Daß	KOUS	(VROOT(PSEUDO(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ich	PPER	*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	noch	ADV	*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mein	PPOSAT	(VP(NP*	mein	sg	neut	-	(223|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Leben	NN	*)	leben	sg	neut	-	223)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	darüber	PROAV	*	darüber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	die	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Schanze	NN	*)	schanze	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	schlagen	VVINF	*)	schlagen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	wollte	VMFIN	*)	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Als	KOUS	*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sahe	VVFIN	*	sahen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	daß	KOUS	*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	weder	KON	*	weder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Ernst	NN	*	ernst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	noch	KON	*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Spott	NN	*	spott	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	den	ART	*	der	sg	masc	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Grafen	NN	*	grafe	sg	masc	-	9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	bewegen	VVINF	*	bewegen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	konnte	VMFIN	*	können	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	seine	PPOSAT	*	sein	sg	fem	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	Liebe	NN	*	liebe	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	der	ART	*	der	sg	fem	-	(211
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	Ehre	NN	*	ehre	sg	fem	-	211)
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	nachzusetzen	VVIZU	*	nachsetzen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	versucht	VVPP	*	versuchen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	ich	PPER	*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	ihn	PPER	*	ihn	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	in	APPR	*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	28	Harnisch	NN	*	harnisch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	29	zu	PTKZU	*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	30	jagen	VVINF	*	jagen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	31	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sagte	VVFIN	*	sagen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ihm	PPER	*	ihm	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Dinge	NN	*	ding	sg	-	-	(224)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	über	APPR	(S(PP*	über	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	die	PRELS	*)	der	pl	masc	-	(224)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	er	PPER	*	er	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	sich	PRF	*	sich	sg	-	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	vergaß	VVFIN	*))	vergessen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Er	PPER	(VROOT(PSEUDO(CS(S*	er	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	stieß	VVFIN	*	stoßen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Beleidigungen	NN	(NP*	beleidigung	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	gegen	APPR	(PP*	gegen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	mich	PPER	*))	mich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	aus	PTKVZ	*	aus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	und	KON	(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	ich	PPER	(NP*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	foderte	ADJA	(CNP(NP*	fodern	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Genugtuung	NN	*)	genugtuung	sg	fem	-	(218)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	–	NN	*))))	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	foderte	VVFIN	(S*	fodern	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	sie	PPER	*	sie	sg	fem	-	(218)
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	gleich	ADV	*	gleich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	auf	APPR	(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	der	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	Stelle	NN	*)))	stelle	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ich	PPER	*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	dachte	VVFIN	*	denken	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	entweder	KON	*	entweder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	er	PPER	*	er	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	mich	PPER	*	mich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	oder	KON	*	oder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	ich	PPER	*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	ihn	PPER	*	ihn	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S(S*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ihn	PPER	*	ihn	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	so	ADV	(S*))	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	das	ART	(NP*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Feld	NN	*)	feld	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ganz	ADV	(AP*	ganz	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	unser	ADJD	*))	unser	sg	neut	-	(0)|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Oder	KON	(VROOT(PSEUDO(S*	oder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	er	PPER	*	er	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mich	PPER	*	mich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nun	ADV	*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	wenn	KOUS	(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	auch	ADV	*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	so	ADV	(S*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	muß	VMFIN	*	müssen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	er	PPER	*	er	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	fliehen	VVINF	(VP*	fliehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	und	KON	(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	der	ART	(NP*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	Prinz	NN	*)	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	gewinnt	VVFIN	*	gewinnen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	wenigstens	ADV	*	wenigstens	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	Zeit	NN	*)))))	zeit	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Das	PDS	(VROOT(PSEUDO(S*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	hätten	VAFIN	*	haben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	(VP*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	getan	VVPP	*))	tun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Marinelli	NE	*	marinelli	sg	*	(LOC*)	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ha	XY	*	ha	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	man	PIS	*	man	sg	*	-	(3)|(225)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sollt	VMFIN	*	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	voraus	ADV	*	voraus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	wissen	VVINF	*	wissen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	wenn	KOUS	*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	man	PIS	*	man	sg	*	-	(3)|(225)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	töricht	ADJD	*	töricht	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	bereit	ADJD	*	bereit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	sich	PRF	*	sich	sg	-	-	(3)|(225)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	für	APPR	*	für	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	die	ART	*	der	pl	fem	-	(0|(226
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	Großen	NN	*	groß	pl	fem	-	0)|226)
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	aufzuopfern	VVIZU	*	auuopfern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	–	$.	*	–	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	man	PIS	*	man	sg	*	-	(3)|(225)
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	sollt	VMFIN	*	sollen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	voraus	ADV	*	voraus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	wissen	VVINF	*	wissen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	wie	PWAV	*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	28	erkenntlich	ADJD	*	erkenntlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	29	sie	PPER	*	sie	sg	fem	-	(0)|(226)
Emilia.xml.rksp.0.CoNLL2012.conll	000	30	sein	VAINF	*	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	31	würden	VAFIN	*	werden	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	32	–	XY	*	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	der	ART	(NP*	der	sg	masc	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Graf	NN	*))	graf	sg	masc	-	9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Er	PPER	(S*	er	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	stehet	VVFIN	*	stehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	dem	ART	*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Rufe	NN	*)	rufe	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	sich	PRF	(VP(VP*	sich	sg	-	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	so	ADV	(AP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	etwas	PIS	*)	etwas	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	zweimal	ADV	*	zweimal	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	sagen	VVINF	*)	sagen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	lassen	VVINF	*)))	lassen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nachdem	KOUS	(VROOT(PSEUDO(S*	nachdem	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	fällt	VVFIN	*	fallen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ohne	APPR	(PP*	ohne	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Zweifel	NN	*))	zweifel	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Wer	PWS	(S*	wer	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	kann	VMFIN	*	können	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ihm	PPER	(VP*	ihm	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	auch	ADV	*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	verdenken	VVINF	*))	verdenken	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Er	PPER	(S*	er	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	versetzte	VVFIN	*	versetzen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	daß	KOUS	(CS(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	er	PPER	*	er	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	auf	APPR	(VP(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	heute	ADV	(AP*	heute	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	doch	ADV	*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	noch	ADV	*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	etwas	PIAT	*))	etwas	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Wichtigeres	NN	*	wichtigere	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	tun	VVINF	*))	tun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	habe	VAFIN	*)	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	als	KOKOM	(S*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	sich	PRF	*	sich	sg	-	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	mir	PPER	*))))	sich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	den	ART	(VP(NP*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	Hals	NN	*)	hals	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	brechen	VVINF	*))	brechen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	beschied	VVFIN	*	bescheiden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	er	PPER	*	er	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	mich	PRF	*	mich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	auf	APPR	(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	die	ART	*	der	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ersten	ADJA	*	erster	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	acht	CARD	*	acht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Tage	NN	*)	tag	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	nach	APPR	(PP*	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	der	ART	*	der	sg	fem	-	(102
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Hochzeit	NN	*))	hochzeit	sg	fem	-	102)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Mit	APPR	(VROOT(PSEUDO(PP*	mit	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Emilia	NE	(MPN*	emilia	*	*	-	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Galotti	NE	*))	galotti	sg	*	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(S(NP*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Gedanke	NN	*)	gedanke	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	macht	VVFIN	*	machen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mich	PPER	*	mich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	rasend	ADJD	*)	rasend	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Darauf	PROAV	*	darauf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ließen	VVFIN	*	lassen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	gut	ADJD	*	gut	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	sein	VAINF	*	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	gingen	VVFIN	*	gehen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	–	$(	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	kommen	VVFIN	*	kommen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	prahlen	VVFIN	*	prahlen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	daß	KOUS	*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	Ihr	PPOSAT	*	ihr	pl	*	-	(223|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	Leben	NN	*	leben	sg	neut	-	223)
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	für	APPR	*	für	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	mich	PPER	*	mich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	in	APPR	*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	die	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	Schanze	NN	*	schanze	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	geschlagen	VVPP	*	schlagen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	28	sich	PRF	*	sich	sg	-	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	29	mir	PPER	*	sich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	30	aufgeopfert	VVPP	*	aueopfern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	31	–	XY	*	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	-	(227)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wollen	VMFIN	*	wollen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*	sie	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	aber	ADV	*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	gnädiger	ADJA	(S(NP*	gnädig	*	*	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Herr	NN	*	herr	sg	*	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	das	PRELS	(S*	der	sg	neut	-	(227)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	ich	PPER	*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	weiter	ADV	*))	weiter	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	hätte	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	tun	VVINF	(VP*	tun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	sollen	VMINF	*)))	sollen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Weiter	ADV	*	weiter	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	tun	VVFIN	*	tun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Als	KOKOM	*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ob	KOUS	*	ob	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	er	PPER	*	er	sg	masc	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	etwas	PIS	*	etwas	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	getan	VVPP	*	tun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	hätte	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	lassen	VVFIN	*	lassen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*	sie	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	doch	ADV	*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	hören	VVINF	*	hören	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	gnädiger	ADJA	(NP*	gnädig	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Herr	NN	*)	herr	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	was	PWS	(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Sie	PPER	(VP*	sie	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	für	APPR	(PP*	für	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	sich	PRF	*	sich	sg	-	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	selbst	ADV	*)	selbst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	getan	VVPP	*)	tun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	haben	VAFIN	*))	haben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	(NP(S*	sie	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	waren	VAFIN	*	sein	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	so	ADV	(AP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	glücklich	ADJD	*))	glücklich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	sie	PPER	(VP*	sie	pl	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	noch	ADV	*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	der	ART	*	der	sg	fem	-	(100
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Kirche	NN	*)	kirche	sg	fem	-	100)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	sprechen	VVINF	*)))	sprechen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	haben	VAFIN	*	haben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*	sie	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mit	APPR	(VP(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ihr	PPER	*)	ihr	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	abgeredet	VVPP	*))	abreden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)))	prinz	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	höhnisch	ADJD	(VROOT(PSEUDO*	höhnisch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Neugierde	NN	(VROOT(PSEUDO(NP*	neugierde	sg	-	-	(228)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	zur	APPRART	(PP*	zu	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Gnüge	NN	*))	gnug	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Die	ART	(S*	der	sg	-	-	(228)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nur	ADV	*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	befriedigen	VVINF	*	befriedigen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	muß	VMFIN	*)	müssen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	O	NE	(NP*	O	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	es	PPER	(S*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ging	VVFIN	*	gehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	alles	PIS	*))	alle	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	nach	APPR	*	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Wunsch	NN	*	wunsch	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	(S*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	brauchen	VVFIN	*	brauchen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sich	PRF	(VP*	sich	pl	-	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nicht	PTKNEG	(AVP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	weiter	ADV	*)	weiter	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	bemühen	VVINF	*)))	bemühen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	mein	PPOSAT	(NP*	mein	sg	masc	-	(3|(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	allzudienstfertiger	ADJA	*	allzudienstfertig	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Freund	NN	*)	freund	sg	masc	-	3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	(S*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	kam	VVFIN	*)	kommen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	meinem	PPOSAT	(NP*	mein	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Verlangen	NN	*	verlangen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	mehr	PIS	(S(NP*	mehr	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	als	KOKOM	(NP*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	halbes	ADJA	*	halb	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Weges	NN	*))	weg	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	entgegen	PTKVZ	*))	entgegen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	hätte	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sie	PPER	(VP(VP*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nur	ADV	(AVP*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	gleich	ADV	*)	gleich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	mitnehmen	VVINF	*)	mitnehmen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	dürfen	VMINF	*))	dürfen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Kalt	NN	(VROOT(PSEUDO(CO*	kalt	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	befehlend	ADJD	*)	befehlend	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nun	ADV	*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wissen	VVFIN	*	wissen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	was	PWS	*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	wissen	VVINF	*	wissen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	wollen	VMFIN	*	wollen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	–	$(	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	können	VMFIN	*	können	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	gehn	CARD	*	gehn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	können	VMFIN	*	können	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	gehn	CARD	*	gehn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ja	PTKANT	(S*	ja	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ja	ADV	*	ja	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	das	PDS	(S*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	das	ART	(NP*	der	sg	neut	-	(229
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Ende	NN	*)))	ende	sg	neut	-	229)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	vom	APPRART	(PP*	von	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Liede	NN	*)	liede	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	würd	VAFIN	*	würd	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	es	PPER	*	es	sg	neut	-	(229)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	sein	VAINF	*	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	gesetzt	VVPP	*	setzen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	auch	ADV	*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	ich	PPER	*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	wollte	VMFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	noch	ADV	*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	das	ART	*	der	sg	neut	-	(230
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Unmögliche	NN	*	unmögliche	sg	neut	-	230)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	versuchen	VVINF	*	versuchen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Das	ART	*	der	sg	neut	-	(230
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Unmögliche	NN	*	unmögliche	sg	neut	-	230)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	sag	VVFIN	*	sag	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ich	PPER	*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	So	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	unmöglich	ADJD	*	unmöglich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	wär	VAFIN	*	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	es	PPER	*	es	sg	neut	-	(230)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	nun	ADV	*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	wohl	ADV	*	wohl	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	aber	ADV	*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	kühn	ADJD	*	kühn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Wenn	KOUS	*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wir	PPER	*	wir	pl	*	-	(0)|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	die	ART	*	der	sg	fem	-	(8
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Braut	NN	*	braut	sg	fem	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	in	APPR	*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	unserer	PPOSAT	*	unser	sg	fem	-	(3)|(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Gewalt	NN	*	gewalt	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	hätten	VAFIN	*	haben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	stünd	ADJD	*	stünd	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	ich	PPER	*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	dafür	PROAV	*	dafür	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	daß	KOUS	*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	aus	APPR	*	aus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	der	ART	*	der	sg	fem	-	(102
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	Hochzeit	NN	*	hochzeit	sg	fem	-	102)
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	nichts	PIS	*	nichts	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	werden	VAINF	*	werden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	sollte	VMFIN	*	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ei	XY	*	ei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	wofür	PWAV	(VROOT(PSEUDO(S*	wofür	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	der	ART	(NP*	der	sg	masc	-	(3
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Mann	NN	*)	mann	sg	masc	-	3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nicht	PTKNEG	(VP(NP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	alles	PIS	*)	alle	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	stehen	VVINF	*)	stehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	will	VMFIN	*)	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nun	ADV	*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	dürft	VMFIN	*	dürfen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ihm	PPER	*	ihm	sg	masc	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	nur	ADV	*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	noch	ADV	*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ein	ART	*	ein	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Kommando	NN	*	kommando	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	von	APPR	*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	meiner	PPOSAT	*	mein	sg	fem	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Leibwache	NN	*	leibwache	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	geben	VVINF	*	geben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	er	PPER	*	er	sg	masc	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	legte	VVFIN	*	legen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	sich	PRF	*	sich	sg	-	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	an	APPR	*	an	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	der	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	Landstraße	NN	*	landstraße	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	damit	PROAV	*	damit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	in	APPR	*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	Hinterhalt	NN	*	hinterhalt	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	fiele	VVFIN	*	fallen	pl	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	selbst	ADV	*	selbst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	28	funfziger	ADJD	*	funfziger	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	29	einen	ART	*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	30	Wagen	NN	*	wagen	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	31	an	PTKVZ	*	an	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	32	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	33	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	34	riß	VVFIN	*	reißen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	35	ein	ART	*	ein	sg	masc	-	(231
Emilia.xml.rksp.0.CoNLL2012.conll	000	36	Mädchen	NN	*	mädchen	sg	masc	-	231)
Emilia.xml.rksp.0.CoNLL2012.conll	000	37	heraus	PTKVZ	*	heraus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	38	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	39	das	PRELS	*	der	sg	neut	-	(231)
Emilia.xml.rksp.0.CoNLL2012.conll	000	40	er	PPER	*	er	sg	masc	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	41	im	APPRART	*	in	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	42	Triumphe	NN	*	triumph	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	43	mir	PPER	*	sich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	44	zubrächte	VVFIN	*	zubrächen	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	45	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Es	PPER	(VROOT(PSEUDO(S*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	eher	ADV	(CVP(VP(VP(NP*	eher	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ein	ART	*	ein	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Mädchen	NN	*	mädchen	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Gewalt	NN	*))	gewalt	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	entführt	VVPP	*)	entführen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	worden	VAPP	*)	werden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	ohne	APPR	(VP(PP*	ohne	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	daß	KOUS	(AP(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	einer	ART	(NP*	ein	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	gewaltsamen	ADJA	*	gewaltsam	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	Entführung	NN	*))	entführung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	ähnlich	ADJD	*))	ähnlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	gesehen	VVPP	*)))	sehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wenn	KOUS	(VROOT(PSEUDO(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	das	PDS	(VP*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	machen	VVINF	*))	machen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	wüßten	VVFIN	*	wissen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	so	ADV	(S*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	würden	VAFIN	*	werden	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	erst	ADV	(VP*	erst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	lange	ADV	*	lange	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	davon	PROAV	*	davon	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	schwatzen	VVINF	*)))	schwatzen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Aber	KON	(VROOT(PSEUDO(S*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	für	APPR	(PP*	für	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	den	ART	*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Ausgang	NN	*)	ausgang	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	müßte	VMFIN	*	müssen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	man	PIS	*	man	sg	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	stehen	VVINF	*	stehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	sollen	VMFIN	*)	sollen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	könnten	VMFIN	*	können	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sich	PRF	*	sich	pl	-	-	(232)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Unglücksfälle	NN	*	unglücksfall	pl	masc	-	(232)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	dabei	PROAV	*	dabei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	eräugnen	VVINF	*	eräugnen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	–	XY	*	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	meine	PPOSAT	(NP*	mein	sg	fem	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Art	NN	*	Art	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	daß	KOUS	(CS(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ich	PPER	(NP*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Leute	NN	*)	leute	pl	*	-	(233)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Dinge	NN	(VP*	ding	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	verantworten	VVINF	*)	verantworten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	lasse	VVFIN	*)	lassen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	wofür	PWAV	(S*	wofür	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	sie	PPER	*	sie	-	-	-	(233)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	nicht	PTKNEG	*)))	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	können	VMFIN	*)	können	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Also	ADV	(VROOT(PSEUDO*	also	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	gnädiger	ADJA	(NP*	gnädig	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Herr	NN	*	herr	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	–	CARD	*)	–	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Man	PIS	(S*	man	sg	*	-	(0)|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	hört	VVFIN	*	hören	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	von	APPR	(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	weitem	ADJA	*)	weit	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	einen	ART	(NP*	ein	sg	masc	-	(234
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Schuß	NN	*))	schuß	sg	masc	-	234)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ha	XY	*	ha	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	was	PWS	*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	war	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	das	PDS	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Hört	NN	*	hören	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	recht	ADV	*	recht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Hörten	VVFIN	(S*	hört	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*	sie	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*)	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	auch	ADV	(NP*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	gnädiger	ADJA	(NP*	gnädig	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Herr	NN	*	herr	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	einen	ART	(VP(NP*	ein	sg	masc	-	(234
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Schuß	NN	*)	schuß	sg	masc	-	234)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	fallen	VVINF	*)))	fallen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Und	KON	(NP*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	da	ADV	*	da	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	noch	ADV	*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	einen	PIS	*)	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Was	PWS	*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	das	PDS	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	was	PWS	*	was	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	gibts	ADV	*	gibt	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	meinen	VVFIN	*	meinen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*	sie	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	wohl	ADV	*)	wohl	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Wie	PWAV	(S*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wann	PWAV	*	wann	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	tätiger	ADJD	*)	tätig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	wäre	VAFIN	(S*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	als	KOKOM	(S*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Sie	PPER	*	sie	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	glauben	VVFIN	*))	glauben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Tätiger	NN	(VROOT(PSEUDO*	tätiger	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	So	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sagen	VVFIN	*	sagen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	doch	ADV	*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	–	XY	*	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Kurz	ADJD	(VROOT(PSEUDO(S*	kurz	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wovon	VVFIN	*	wovon	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	gesprochen	VVPP	(CVP*	sprechen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	geschieht	VVPP	*))	geschehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ist	VAFIN	(VROOT(PSEUDO(S*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	möglich	ADJD	*)	möglich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nur	ADV	(VROOT(PSEUDO(S*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	vergessen	VVFIN	*	vergessen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*	sie	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Prinz	NN	(VP(NP*	prinz	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	wessen	VVFIN	(S*	wessen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Sie	PPER	*	sie	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	mich	PPER	*	mich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	eben	ADV	*))	eben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	versichert	VVPP	*))	versichern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ich	PPER	*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	habe	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nochmals	ADV	*	nochmals	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Ihr	PPOSAT	*	ihr	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Wort	NN	*	wort	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	–	XY	*	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Aber	KON	(VROOT(PSEUDO(S*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	die	ART	(NP*	der	pl	*	-	(235
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Anstalten	NN	*)	anstalt	pl	*	-	235)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sind	VAFIN	*	sein	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	doch	ADV	(AP*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	–	ADJD	*))))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Als	KOUS	(VROOT(PSEUDO(S*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sie	PPER	*	sie	sg	fem	-	(235)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	nur	ADV	(VP(AP*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	immer	ADV	*)	immer	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	sein	VAINF	*)	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	können	VMFIN	*)	können	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Die	ART	(S(NP*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Ausführung	NN	*)	ausführung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Leuten	NN	*)	leute	pl	*	-	(236)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	anvertrauet	VVPP	(VP*	anvertrauet	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	auf	APPR	(S(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	die	PRELS	*)	der	pl	*	-	(236)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	ich	PPER	*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	mich	PRF	(VP*	mich	sg	-	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	verlassen	VVINF	*)	verlassen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	kann	VMFIN	*))	können	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(S(NP*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Weg	NN	*)	weg	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	geht	VVFIN	*	gehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	hart	ADJD	*	hart	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	an	APPR	(PP*	an	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	der	ART	*	der	sg	fem	-	(237
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Planke	NN	*	planke	sg	fem	-	237)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	des	ART	(NP*	der	sg	neut	-	(238
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Tiergartens	NN	*))	tiergarten	sg	neut	-	238)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	vorbei	PTKVZ	*)	vorbei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Da	ADV	(VROOT(PSEUDO(CS(S*	da	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wird	VAFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ein	ART	(NP*	ein	sg	masc	-	(239
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Teil	NN	*)	teil	sg	masc	-	239)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	den	ART	(VP(NP*	der	pl	fem	-	(141
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Wagen	NN	*)	wagen	pl	fem	-	141)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	angefallen	VVPP	*)	anfallen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	haben	VAFIN	*)	haben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	gleichsam	ADJD	(S*	gleichsam	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	um	KOUI	(VP*	um	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	ihn	PPER	*	ihn	sg	masc	-	(141)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	plündern	VVINF	*))))	plündern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(CS(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ein	ART	(NP*	ein	sg	masc	-	(240
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	andrer	ADJA	*	andr	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Teil	NN	*)	teil	sg	masc	-	240)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	wobei	PWAV	(S*	wobei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	einer	PIS	*	ein	sg	fem	-	(10)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	von	APPR	(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	meinen	PPOSAT	*	mein	pl	masc	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Bedienten	NN	*)	bedient	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	ist	VAFIN	*))	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	wird	VAFIN	(S*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	aus	APPR	(VP(VP(PP*	aus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	dem	ART	*	der	sg	neut	-	(238
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	Tiergarten	NN	*)	tiergart	sg	neut	-	238)
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	gestürzt	VVPP	*)	stürzen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	sein	VAINF	*	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	den	ART	(NP*	der	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	Angefallenen	NN	*	angefallener	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	gleichsam	ADJD	(PP*	gleichsam	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	zur	APPRART	*	zu	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	Hülfe	NN	*)))))	hülfe	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Während	APPR	(VROOT(PSEUDO(S(PP*	während	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	des	ART	*	der	sg	masc	-	(241
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Handgemenges	NN	*)	handgemeng	sg	masc	-	241)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	in	APPR	(VP(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	das	PRELS	*)	der	sg	neut	-	(241)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	beide	PIAT	(NP*	beide	pl	masc	-	(240|(239
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Teile	NN	*)	teil	pl	masc	-	240)|239)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	zum	APPRART	(PP*	zu	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Schein	NN	*)	schein	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	geraten	VVPP	*)	geraten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	soll	VMFIN	*	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	mein	PPOSAT	(CVP(VP(NP*	mein	sg	masc	-	(10|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Bedienter	NN	*	bedienter	*	*	-	10)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	Emilien	NE	*)	emilie	pl	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	ergreifen	VVINF	*	ergreifen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	als	KOKOM	(S*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	ob	KOUS	*	ob	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	er	PPER	*	er	sg	masc	-	(10)
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	sie	PPER	(VP*	sie	pl	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	retten	VVINF	*)	retten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	wolle	VMFIN	*))	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	durch	APPR	(VP(PP*	durch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	den	ART	*	der	sg	masc	-	(238
Emilia.xml.rksp.0.CoNLL2012.conll	000	28	Tiergarten	NN	*)	tiergart	sg	masc	-	238)
Emilia.xml.rksp.0.CoNLL2012.conll	000	29	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	30	das	ART	*	der	sg	neut	-	(117
Emilia.xml.rksp.0.CoNLL2012.conll	000	31	Schloß	NN	*)	schloß	sg	neut	-	117)
Emilia.xml.rksp.0.CoNLL2012.conll	000	32	bringen	VVINF	*)))	bringen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	33	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	So	ADV	(S*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	die	ART	(NP*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Abrede	NN	*))	abrede	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Was	PWS	(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sagen	VVFIN	*)	sagen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Sie	PPER	*	sie	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nun	ADV	(NP*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Prinz	NN	*)	prinz	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(S*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	überraschen	VVFIN	*	überraschen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mich	PRF	*	mich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	auf	APPR	(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	eine	ART	*	ein	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	sonderbare	ADJA	*	sonderbar	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Art	NN	*))	Art	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Und	KON	(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	eine	ART	(NP*	ein	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Bangigkeit	NN	*)	bangigkeit	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	überfällt	VVFIN	*	überfallen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	mich	PPER	*)	mich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	–	CARD	(S(NP*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	Marinelli	NN	*)	marinelli	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	tritt	VVFIN	*	treten	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	an	APPR	(PP*	an	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	das	ART	*	der	sg	neut	-	(242
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	Fenster	NN	*))	fenster	sg	neut	-	242)
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wornach	PROAV	(VROOT(PSEUDO(S*	wornach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sehen	VVFIN	*	sehen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*)	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Dahinaus	PROAV	*	dahinaus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	muß	VMFIN	*	müssen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sein	VAINF	*	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Recht	NN	*	recht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	eine	ART	*	ein	sg	fem	-	(6|(243
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Maske	NN	*	maske	sg	fem	-	6)|243)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	kömmt	VVFIN	*	kömmen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	bereits	ADV	*	bereits	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	um	APPR	*	um	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	die	ART	*	der	sg	fem	-	(237
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Planke	NN	*	planke	sg	fem	-	237)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	gesprengt	VVPP	*	sprengen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	–	$(	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	ohne	APPR	*	ohne	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Zweifel	NN	*	zweifel	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	mir	PPER	*	sich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	den	ART	*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	Erfolg	NN	*	erfolg	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	zu	PTKZU	*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	berichten	VVINF	*	berichten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Entfernen	VVFIN	(S*	entfernen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*)	sie	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sich	PRF	*	sich	pl	-	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	gnädiger	ADJA	(NP*	gnädig	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Herr	NN	*)	herr	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ah	NE	(VROOT(PSEUDO(MPN*	ah	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Marinelli	NE	*	marinelli	sg	masc	(LOC*)	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	–	NE	*)))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nun	ADV	(VROOT(PSEUDO(S*)	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wahr	ADJD	*	wahr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nun	ADV	*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	hab	ADJD	*	hab	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ich	PPER	*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	zu	PTKA	*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	viel	PIS	*	viel	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	getan	VVPP	*	tun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	vorhin	ADV	*	vorhin	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	zu	PTKA	*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	wenig	PIAT	*	wenig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Das	PDS	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Aber	KON	*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sehe	VVFIN	*	sehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	bei	APPR	*	bei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	alle	PIS	*	alle	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	dem	ART	*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ab	PTKVZ	*	ab	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	–	$.	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	–	XY	*	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Absehn	NN	(VROOT(PSEUDO*	absehn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Lieber	NN	*	lieber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	alles	PIS	(NP*	alle	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	eins	PIS	*))	einer	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Geschwind	NN	*	geschwind	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	entfernen	VVFIN	*	entfernen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Sie	PPER	*	sie	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	sich	PRF	*	sich	pl	-	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Die	ART	(S(NP*	der	sg	fem	-	(6|(243
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Maske	NN	*)	maske	sg	fem	-	6)|243)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	muß	VMFIN	*	müssen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Sie	PPER	(VP*	sie	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	sehen	VVINF	*))	sehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(S(NP*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Prinz	NN	*)	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	geht	VVFIN	*	gehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ab	PTKVZ	*)	ab	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Marinelli	NE	(VROOT(PSEUDO*	marinelli	sg	masc	(LOC*)	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	bald	ADV	(S(AVP*	bald	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	darauf	PROAV	*)	darauf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Angelo	NE	*)	angelo	-	-	(PER*)	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*))	marinelli	-	-	-	(3|(3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	der	ART	(VROOT(PSEUDO(S(NP*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wieder	ADV	*	wieder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	nach	APPR	(PP*	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	dem	ART	*	der	sg	neut	-	(242
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Fenster	NN	*))	fenster	sg	neut	-	242)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	geht	VVFIN	*)))	gehen	sg	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Dort	ADV	(VROOT(PSEUDO(S*	dort	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	fährt	VVFIN	*	fahren	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	der	ART	(NP*	der	sg	masc	-	(141
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Wagen	NN	*)	wagen	sg	masc	-	141)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	langsam	ADJD	*	langsam	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	nach	APPR	(PP*	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	der	ART	*	der	sg	fem	-	(26
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Stadt	NN	*)	stadt	sg	fem	-	26)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	zurück	PTKVZ	*)	zurück	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	So	ADV	(S(ISU*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	langsam	ADJD	*))	langsam	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	in	APPR	(NP(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	jedem	PIAT	*	jeder	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Schlage	NN	*)	schlage	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ein	ART	*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Bedienter	NN	*))	bedienter	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Das	PDS	(CS(S*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sind	VAFIN	*	sein	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Anzeigen	NN	*)	anzeige	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	die	PRELS	(S*	der	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	mir	PPER	*	sich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	nicht	PTKNEG	*))	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	gefallen	VVPP	*	fallen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	der	ART	(NP*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Streich	NN	*)	streich	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	wohl	ADV	(VP(AP*	wohl	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	nur	ADV	*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	halb	ADJD	*)	halb	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	gelungen	VVPP	*)	gelingen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	ist	VAFIN	*)	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	man	PIS	*	man	sg	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	einen	ART	(NP*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	Verwundeten	NN	*)	verwundeter	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	gemächlich	ADJD	*)	gemächlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	zurückführet	VVPP	*	zurückführet	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	28	–	NN	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	29	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	30	keinen	PIAT	(NP*	kein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	31	Toten	NN	*)	tote	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	32	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Die	ART	(S(NP*	der	sg	fem	-	(6|(243
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Maske	NN	*)	maske	sg	fem	-	6)|243)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	steigt	VVFIN	*	steigen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ab	PTKVZ	*)	ab	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Es	PPER	(S*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Angelo	NE	(NP*	angelo	-	-	(PER*)	(243)|(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	selbst	ADV	*))	selbst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(NP*	der	sg	masc	-	(243
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Tolldreiste	NN	*)	tolldreiste	sg	masc	-	243)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Endlich	ADV	(S*	endlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	hier	ADV	(S*	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	weiß	VVFIN	*	weißer	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	er	PPER	*))	er	sg	masc	-	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	die	ART	(NP*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Schliche	NN	*)	schliche	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Er	PPER	(S*	er	sg	masc	-	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	winkt	VVFIN	*	winken	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mir	PPER	*	sich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	zu	PTKVZ	*)	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Er	PPER	(VROOT(PSEUDO(S*	er	sg	masc	-	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	muß	VMFIN	*	müssen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	seiner	PPOSAT	(VP(AP(NP*	sein	sg	fem	-	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Sache	NN	*)	sache	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	gewiß	ADJD	*)	gewiß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	sein	VAINF	*))	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ha	XY	*	ha	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Herr	NN	*	herr	sg	masc	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Graf	NE	(NP*	graf	sg	masc	(PER*)	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	der	ART	(S*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Sie	PPER	*	sie	sg	fem	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	nicht	PTKNEG	(NP(AP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	nach	APPR	(S(VP(PP*	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Massa	NE	*))	massa	-	-	-	(83)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	wollten	VMFIN	*)	wollen	pl	-	-	9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	und	KON	(S(AVP*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	nun	ADV	*)	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	noch	ADV	(NP*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	einen	PIS	*)	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	weitern	VVINF	*))	weitern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	Weg	NN	*)	weg	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	müssen	VMFIN	*))	müssen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Wer	PWS	(S*	wer	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	hatte	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Sie	PPER	(VP*	sie	sg	fem	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	die	ART	(S(NP*	der	pl	fem	-	(244
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Affen	NN	*	affen	pl	fem	-	244)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	so	ADV	*)	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	kennen	VVFIN	*)	kennen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	gelehrt	VVPP	*))	lehren	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Indem	KOUS	(VROOT(PSEUDO(S*	indem	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	er	PPER	*	er	sg	masc	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	nach	APPR	(PP*	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	der	ART	*	der	sg	fem	-	(245
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Türe	NN	*)	türe	sg	fem	-	245)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	zugeht	VVFIN	*)	zugehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ja	PTKANT	(VROOT(PSEUDO(S*	ja	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wohl	ADV	*	wohl	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sind	VAFIN	*	sein	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sie	PPER	*	sie	-	-	-	(244)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	hämisch	ADJD	*)	hämisch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Nun	ADV	*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Angelo	NE	*	angelo	-	-	(PER*)	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ANGELO	NE	(VROOT(PSEUDO*))	angelo	-	-	-	(6|(6)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	der	ART	*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	die	ART	*	der	sg	fem	-	(243
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Maske	NN	*	maske	sg	fem	-	243)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	abgenommen	VVPP	*	abnehmen	-	-	-	6)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Passen	VVFIN	(VROOT(PSEUDO(S*	passen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	auf	PTKVZ	*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Herr	NN	(NP*	herr	sg	masc	-	(3
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Kammerherr	NN	*))	kammerherr	sg	masc	-	3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Man	PIS	(VROOT(PSEUDO(S*	man	sg	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	muß	VMFIN	*	müssen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sie	PPER	*	sie	*	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	gleich	ADV	*	gleich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	bringen	VVINF	*)	bringen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wie	PWAV	*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	lief	VVFIN	*	laufen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	sonst	ADV	*	sonst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ab	PTKVZ	*)	ab	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ANGELO	NE	(VROOT(PSEUDO*	angelo	-	-	(LOC*)	(6|(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	6)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	denke	VVFIN	*)	denken	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ja	PTKANT	(S*	ja	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	recht	ADJD	(AP*	recht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	gut	ADJD	*))	gut	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wie	PWAV	(VROOT(PSEUDO(S*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	steht	VVFIN	*	stehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	dem	ART	*	der	sg	masc	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Grafen	NN	*))	grafe	sg	masc	-	9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ANGELO	NE	(VROOT(PSEUDO*	angelo	-	-	(LOC*)	(6|(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	6)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Zu	PTKZU	*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	dienen	VVINF	*	dienen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	So	ADV	(VROOT(PSEUDO*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	so	ADV	(S*)	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Aber	KON	(S*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	er	PPER	*	er	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	muß	VMFIN	*	müssen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Wind	NN	(VP(VP*	wind	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	gehabt	VAPP	*)	haben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	haben	VAINF	*))	haben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Denn	KON	(VROOT(PSEUDO(S*	denn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	er	PPER	*	er	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	war	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nicht	PTKNEG	(AP(AVP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ganz	ADV	*)	ganz	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	unbereitet	ADJD	*))	unbereitet	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Geschwind	NN	(VROOT(PSEUDO(S*	geschwind	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sage	VVFIN	*	sagen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mir	PPER	*	sich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	was	PWS	(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	du	PPER	(VP*	du	sg	*	-	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	mir	PPER	*	sich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	sagen	VVINF	*))	sagen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	hast	VAFIN	*))	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ist	VAFIN	(S*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	er	PPER	*	er	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	tot	ADJD	*)	tot	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ANGELO	NE	(VROOT(PSEUDO*	angelo	-	-	(LOC*)	(6|(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	6)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Es	PPER	(VROOT(PSEUDO(S*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	tut	VVFIN	*	tun	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mir	PPER	*	sich	sg	*	-	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	leid	ADJD	*	leid	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	um	APPR	(PP*	um	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	den	ART	*	der	sg	masc	-	(246
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	guten	ADJA	*	gut	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Herrn	NN	*))	herr	sg	masc	-	246)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nun	ADV	(VROOT(PSEUDO(S*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	da	ADV	*	da	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	für	APPR	(PP*	für	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	dein	PPOSAT	*	dein	sg	neut	-	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	mitleidiges	ADJA	*	mitleidig	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Herz	NN	*))	herz	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Gibt	VVFIN	(VROOT(PSEUDO(S*	geben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ihm	PPER	*	ihm	sg	masc	-	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	einen	ART	(NP*	ein	sg	masc	-	(247
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Beutel	NN	*	beutel	sg	masc	-	247)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Gold	NN	*)))	gold	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ANGELO	NE	(VROOT(PSEUDO*	angelo	-	-	(LOC*)	(6|(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	6)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Vollends	ADV	(VROOT(PSEUDO(NP*	vollends	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	mein	PPOSAT	*	mein	sg	masc	-	(246|(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	braver	ADJA	*	brav	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Nicolo	NN	*)	nicolo	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	der	ART	(VROOT(PSEUDO(VP(VP(NP*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	das	ART	(NP*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Bad	NE	*))	Bad	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mit	APPR	(VZ*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	bezahlen	VVINF	*))	bezahlen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	müssen	VMINF	*)	müssen	pl	-	-	246)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	So	ADV	(VROOT(PSEUDO(S*)	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Verlust	NN	(VROOT(PSEUDO(NP*	verlust	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	auf	APPR	(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	beiden	PIAT	*	beide	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Seiten	NN	*))	seite	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ANGELO	NE	(VROOT(PSEUDO*	angelo	-	-	(LOC*)	(6|(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	6)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	könnte	VMFIN	*	können	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	weinen	VVINF	(VP*	weinen	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	um	KOUI	(PP*	um	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	den	ART	*	der	sg	masc	-	(246
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ehrlichen	ADJA	*	ehrlich	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Jungen	NN	*)))	junge	sg	masc	-	246)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ob	KOUS	(VROOT(PSEUDO(S*	ob	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	mir	PPER	*	sich	sg	*	-	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sein	PPOSAT	(NP*	sein	-	-	-	(248|(246)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Tod	NN	*)	tod	sg	masc	-	248)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	schon	ADV	*	schon	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	das	ART	(NP*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Indem	NN	*)	indem	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	er	PPER	*	er	sg	masc	-	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	den	ART	(NP*	der	sg	masc	-	(247
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Beutel	NN	*	beutel	sg	masc	-	247)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	der	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Hand	NN	*))	hand	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	wieget	VVFIN	*)	wieget	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	um	APPR	(VROOT(PSEUDO(VP(PP*	um	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ein	ART	*	ein	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Vierteil	NN	*)	vierteil	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	verbessert	VVPP	*)	verbessern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Denn	KON	(VROOT(PSEUDO(S*	denn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ich	PPER	(S*	ich	sg	*	-	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	bin	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sein	PPOSAT	(NP*	sein	-	-	-	(246)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Erbe	NN	*))	erbe	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	weil	KOUS	*	weil	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ich	PPER	*	ich	sg	*	-	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	ihn	PPER	(VP*	ihn	sg	masc	-	(246)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	gerächet	VVPP	*)	rächen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	habe	VAFIN	*)	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Das	PDS	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	unser	PPOSAT	*	unser	sg	neut	-	(249|(246)|(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Gesetz	NN	*	gesetz	sg	neut	-	249)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ein	ART	*	ein	sg	masc	-	(249
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	gutes	ADJA	*	gut	sg	neut	-	249)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	mein	PPOSAT	*	mein	sg	neut	-	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	ich	PPER	*	ich	sg	*	-	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	als	KOKOM	*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	für	APPR	*	für	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	Treu	NN	*	treu	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	Freundschaft	NN	*	freundschaft	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	je	ADV	*	je	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	gemacht	VVPP	*	machen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	worden	VAPP	*	werden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Dieser	PDAT	*	dieser	sg	masc	-	(246
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Nicolo	NN	*	nicolo	sg	masc	-	246)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Herr	NN	*	herr	sg	masc	-	(3
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Kammerherr	NN	*	kammerherr	sg	masc	-	3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	–	XY	*	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Mit	APPR	(VROOT(PSEUDO(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	deinem	PPOSAT	*	dein	sg	neut	-	(246|(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Nicolo	NN	*)	nicolo	sg	neut	-	246)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Aber	KON	(NP*	aber	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	der	ART	*	der	sg	masc	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Graf	NN	*	graf	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	der	ART	(NP*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Graf	NN	*	graf	sg	masc	-	9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	–	NE	*))))	–	sg	neut	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ANGELO	NE	(VROOT(PSEUDO*	angelo	-	-	(LOC*)	(6|(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	6)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Blitz	NE	(VROOT(PSEUDO(MPN*	blitz	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*)))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	der	ART	(VROOT(PSEUDO(S(NP*	der	sg	masc	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Graf	NN	*)	graf	sg	masc	-	9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	hatte	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ihn	PPER	(VP*	ihn	sg	masc	-	(246)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	gut	ADJD	*	gut	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	gefaßt	VVPP	*))	fassen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Dafür	PROAV	*	dafür	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	faßt	VVFIN	*	fassen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	auch	ADV	*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	wieder	ADV	*	wieder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	den	ART	*	der	sg	masc	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Grafen	NN	*	grafe	sg	masc	-	9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Er	PPER	*	er	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	stürzte	VVFIN	*	stürzen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	wenn	KOUS	*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	er	PPER	*	er	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	noch	ADV	*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	lebendig	ADJD	*	lebendig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	zurück	PTKVZ	*	zurück	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	in	APPR	*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	die	ART	*	der	sg	fem	-	(141
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Kutsche	NN	*	kutsche	sg	fem	-	141)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	kam	VVFIN	*	kommen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	steh	ADJD	*	steh	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	ich	PPER	*	ich	sg	*	-	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	dafür	PROAV	*	dafür	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	daß	KOUS	*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	er	PPER	*	er	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	lebendig	ADJD	*	lebendig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	wieder	ADV	*	wieder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	heraus	VVINF	*	heraus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	kömmt	VVFIN	*	kömmen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	28	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wenn	KOUS	(VROOT(PSEUDO(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	das	PDS	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	nur	ADV	(AP*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	gewiß	ADJD	*)	gewiß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ist	VAFIN	*)	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Angelo	NE	*	angelo	sg	*	(PER*)	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ANGELO	NE	(VROOT(PSEUDO*	angelo	-	-	(LOC*)	(6|(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	6)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	will	VMFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Ihre	PPOSAT	(VP(NP*	ihr	sg	fem	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Kundschaft	NN	*)	kundschaft	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	verlieren	VVINF	*	verlieren	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	wenn	KOUS	(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	nicht	PTKNEG	(AVP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	gewiß	ADV	*)	gewiß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	ist	VAFIN	*)))	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Haben	VAFIN	(S*	haben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	noch	ADV	*)	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	was	PIS	(NP*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	befehlen	VVINF	*))	befehlen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	denn	KON	(VROOT(PSEUDO(CS(S*	denn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	mein	PPOSAT	(NP*	mein	sg	masc	-	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Weg	NN	*)	weg	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	der	ART	(NP*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	weiteste	ADJA	*))	weit	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	wir	PPER	(S*	wir	pl	*	-	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	wollen	VMFIN	*	wollen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	heute	ADV	(PP*	heute	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	noch	ADV	*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	über	APPR	*	über	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	die	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Grenze	NN	*)))	grenze	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	So	ADV	(VROOT(PSEUDO*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	geh	XY	*	gehn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ANGELO	NE	(VROOT(PSEUDO*	angelo	-	-	(LOC*)	(6|(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	6)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wenn	KOUS	(VROOT(PSEUDO(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wieder	ADV	(NP*	wieder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	was	PIS	*)	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	vorfällt	VVFIN	*	vorfallen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Herr	NN	(NP*	herr	sg	masc	-	(3
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Kammerherr	NN	*	kammerherr	sg	masc	-	3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	–	KOUS	(S*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Sie	PPER	(VP*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	wissen	VVINF	*	wissen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	wo	PWAV	(VP*	wo	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	ich	PPER	*	ich	sg	*	-	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	erfragen	VVINF	*)))	erfragen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	bin	VAFIN	*)))	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sich	PRF	(VP*	sich	sg	-	-	(250)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ein	ART	(VP(NP*	ein	sg	masc	-	(250
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	andrer	ADJA	*)	andrer	sg	masc	-	250)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	tun	VVINF	*))	tun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	getrauet	VVPP	*)	trauen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	wird	VAFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	für	APPR	(VP(PP*	für	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	mich	PPER	*)	mich	sg	*	-	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	auch	ADV	*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	keine	PIAT	(NP*	kein	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Hexerei	NN	*)	hexerei	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	sein	VAINF	*))	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	billiger	ADJD	*	billig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	bin	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	als	KOKOM	(NP*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	jeder	PIS	(NP*	jeder	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	andere	PIS	*)	anderer	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Geht	VVFIN	(VROOT(PSEUDO(S*	gehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ab	PTKVZ	*)	ab	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Gut	ADJD	*	gut	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	das	PDS	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Aber	KON	(AP(S*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	doch	ADV	*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nicht	PTKNEG	(AVP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	so	ADV	*))	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	recht	ADJD	*	recht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	gut	ADJD	*)	gut	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Pfui	NE	*	pfui	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Angelo	NE	*	angelo	-	-	-	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	so	ADV	(VROOT(PSEUDO(VP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ein	ART	(NP*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Knicker	NN	*)	knicker	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	sein	VAINF	*))	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Einen	ART	(VROOT(PSEUDO(S(NP*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	zweiten	ADJA	*	zweiter	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Schuß	NN	*)	schuß	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	wäre	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	er	PPER	(VP*	er	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ja	ADV	*	ja	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	wohl	ADV	*	wohl	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	noch	ADV	*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	wert	ADJD	*	wert	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	gewesen	VAPP	*))	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Und	KON	(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wie	PWAV	*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	er	PPER	*	er	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	sich	PRF	*	sich	sg	-	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	vielleicht	ADV	*	vielleicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	nun	ADV	*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	martern	VVINF	*	martern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	muß	VMFIN	*)	müssen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	der	ART	(NP*	der	sg	masc	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	arme	ADJA	*	arm	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Graf	NN	*)	graf	sg	masc	-	9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Pfui	NE	*	pfui	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Angelo	NE	*	angelo	-	-	-	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Das	PDS	(VROOT(PSEUDO(S*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	heißt	VVFIN	*	heißen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sein	PPOSAT	(NP*	sein	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Handwerk	NN	*)	handwerk	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	sehr	ADV	(AP*	sehr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	grausam	ADJD	*)	grausam	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	treiben	VVINF	*	treiben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	–	TRUNC	(CNP*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	verpfuschen	VVINF	*))	verpfuschen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Aber	KON	(S*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	davon	PROAV	*	davon	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	muß	VMFIN	*	müssen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	der	ART	(VP(NP*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Prinz	NN	*)	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	noch	ADV	*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	nichts	PIS	*	nichts	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	wissen	VVINF	*))	wissen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Er	PPER	(VROOT(PSEUDO(S*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	muß	VMFIN	*	müssen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	erst	ADV	(AVP*	erst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	selbst	ADV	*)	selbst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	finden	VVINF	(VP*	finden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	wie	PWAV	(S(AP*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	zuträglich	ADJD	*)	zuträglich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	ihm	PPER	*	ihm	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	dieser	PDAT	(NP*	dieser	sg	masc	-	(251
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Tod	NN	*)	tod	sg	masc	-	251)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	ist	VAFIN	*)))	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Dieser	PDAT	(NP*	dieser	sg	masc	-	(251
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Tod	NN	*)	tod	sg	masc	-	251)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Was	PWS	*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	gäb	XY	*	geben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ich	PPER	*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	um	APPR	*	um	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	die	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Gewißheit	NN	*	gewißheit	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(NP*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Prinz	NN	*)	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Marinelli	NE	(VROOT(PSEUDO*	marinelli	sg	masc	(PER*)	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Dort	ADV	(VROOT(PSEUDO(S*	dort	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	kömmt	VVFIN	*	kömmen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sie	PPER	*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	die	ART	(NP*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Allee	NN	*)	allee	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	herauf	PTKVZ	*)	herauf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(S*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	eilet	VVFIN	*	eilet	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	vor	APPR	(PP*	vor	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	dem	ART	*	der	sg	neut	-	(10
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Bedienten	NN	*)	bedient	sg	neut	-	10)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	her	PTKVZ	*)	her	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Die	ART	(VROOT(PSEUDO(S(NP*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Furcht	NN	*	furcht	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	wie	PWAV	(S*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	scheinet	VVFIN	*))	scheinen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	beflügelt	VVFIN	*	beflügeln	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	ihre	PPOSAT	(NP*	ihr	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Füße	NN	*))	fuß	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(S*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	muß	VMFIN	*	müssen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	noch	ADV	(VP(NP*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nichts	PIS	*)	nichts	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	argwohnen	VVINF	*))	argwohnen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(S*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	glaubt	VVFIN	*	glauben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sich	PRF	(VP*	sich	sg	-	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nur	ADV	(PP*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	vor	APPR	*	vor	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Räubern	NN	*)	räuber	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	retten	VVINF	*)))	retten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Aber	KON	*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wie	PWAV	(S(AVP*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	lange	ADV	*)	lange	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	kann	VMFIN	*	können	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	das	PDS	(VP*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	dauern	VVINF	*))	dauern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	So	ADV	(VROOT(PSEUDO(S*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	haben	VAFIN	*	haben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wir	PPER	*	wir	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sie	PPER	*	sie	*	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	doch	ADV	*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	fürs	APPRART	(PP*	für	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	erste	PIS	*))	erster	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wird	VAFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	die	ART	(NP*	der	sg	fem	-	(53
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Mutter	NN	*)	mutter	sg	fem	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	sie	PPER	*	sie	*	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	aufsuchen	VVINF	*)	aufsuchen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wird	VAFIN	(VROOT(PSEUDO(S*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	der	ART	(NP*	der	sg	masc	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Graf	NN	*)	graf	sg	masc	-	9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ihr	PPER	*	ihr	sg	masc	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	nachkommen	VVFIN	*)	nachkommen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sind	VAFIN	*	sein	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wir	PPER	*	wir	pl	*	-	(3)|(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	alsdann	ADV	(AVP*	alsdann	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	weiter	ADV	*))	weiter	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wie	PWAV	(VROOT(PSEUDO(S*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	kann	VMFIN	*	können	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sie	PPER	*	sie	pl	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ihnen	PPER	*	ihnen	pl	*	-	(53)|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	vorenthalten	VVFIN	*)	vorenthalten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Auf	APPR	(VROOT(PSEUDO(S(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	das	ART	(NP*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	alles	PIS	*))	alle	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	weiß	VVFIN	*	weiß	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ich	PPER	*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	freilich	ADV	*	freilich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	noch	ADV	*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	nichts	PIS	(NP*	nichts	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	antworten	VVINF	*)))	antworten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Aber	KON	(VROOT(PSEUDO(S*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wir	PPER	*	wir	pl	*	-	(0)|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	müssen	VMFIN	*	müssen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sehen	VVINF	*)	sehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Gedulden	VVFIN	(VROOT(PSEUDO(S*	gedulden	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*	sie	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sich	PRF	*	sich	pl	-	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	gnädiger	ADJA	(NP*	gnädig	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Herr	NN	*))	herr	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(S(NP*	der	sg	masc	-	(252
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	erste	ADJA	*	erster	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Schritt	NN	*)	schritt	sg	masc	-	252)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mußte	VMFIN	*	müssen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	doch	ADV	(VP(VP*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	getan	VVPP	*)	tun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	sein	VAINF	*))	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wozu	PWAV	(VROOT(PSEUDO*	wozu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	wenn	KOUS	(VROOT(PSEUDO(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wir	PPER	*	wir	pl	*	-	(0)|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ihn	PPER	*	ihn	sg	masc	-	(252)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	zurücktun	VVINF	*	zurücktun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	müssen	VMFIN	*)	müssen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Vielleicht	ADV	(VROOT(PSEUDO(S*	vielleicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	müssen	VMFIN	*	müssen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wir	PPER	*	wir	pl	*	-	(3)|(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*)	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Da	ADV	(S*	da	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sind	VAFIN	*	sein	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	tausend	CARD	(NP*	tausend	-	-	-	(253
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Dinge	NN	*)	ding	pl	neut	-	253)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	auf	APPR	(VP(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	die	PRELS	*)	der	pl	masc	-	(253)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	sich	PRF	*	sich	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	weiter	ADV	*	weiter	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	fußen	VVINF	*))	fußen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	läßt	VVFIN	*	lassen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Und	KON	(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	vergessen	VVFIN	*	vergessen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Sie	PPER	*)	sie	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	denn	KON	(S*	denn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	das	ART	(NP*	der	sg	neut	-	(254
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Vornehmste	NN	*))	vornehmste	sg	neut	-	254)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	-	(254)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	kann	VMFIN	*	können	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	vergessen	VVINF	(VP*	vergessen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	woran	PWAV	(S*	woran	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	sicher	ADJD	(VP*	sicher	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	noch	ADV	(AVP*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	nicht	PTKNEG	*)	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	gedacht	VVPP	*)	denken	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	habe	VAFIN	*)))	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Das	ART	(NP*	der	sg	neut	-	(254
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Vornehmste	NN	*)	vornehmste	sg	neut	-	254)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	was	PWS	*	was	sg	neut	-	(254)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	das	PDS	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Die	ART	*	der	sg	fem	-	(255
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Kunst	NN	*	kunst	sg	fem	-	255)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	zu	PTKZU	*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	gefallen	VVINF	*	fallen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	zu	PTKZU	*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	überreden	VVINF	*	überreden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	–	PWAV	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	die	ART	*	der	sg	fem	-	(255)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	einem	ART	*	ein	sg	neut	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Prinzen	NN	*	prinz	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	welcher	PWAT	*	welcher	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	liebt	VVFIN	*	lieben	sg	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	nie	ADV	*	nie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	fehlet	VVFIN	*	fehlen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nie	ADV	*	nie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	fehlet	VVFIN	*	fehlen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Außer	APPR	(VROOT(PSEUDO(PP*	außer	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wo	PWAV	(S*	wo	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	er	PPER	*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	sie	PPER	*	sie	sg	fem	-	(255)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	gerade	ADV	(AP*	gerade	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	am	PTKA	*	an	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	nötigsten	ADJD	*)	nötig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	brauchte	VVFIN	*))	brauchen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	habe	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	von	APPR	*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	dieser	PDAT	*	dieser	sg	fem	-	(255
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Kunst	NN	*	kunst	sg	fem	-	255)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	schon	ADV	*	schon	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	heut	ADV	*	heut	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	einen	ART	*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	zu	PTKZU	*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	schlechten	ADJA	*	schlecht	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Versuch	NN	*	versuch	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	gemacht	VVPP	*	machen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Mit	APPR	*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	allen	PIAT	*	aller	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Schmeicheleien	NN	*	schmeichelei	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Beteuerungen	NN	*	beteuerung	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	konnt	VVFIN	*	konnen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	ihr	PPER	*	ihr	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	auch	ADV	*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	ein	ART	*	ein	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Wort	NN	*	wort	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	auspressen	VVINF	*	auspressen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Stumm	NN	(VROOT(PSEUDO(CS*	stumm	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	niedergeschlagen	VVFIN	*	niederschlagen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	zitternd	ADJD	(S*	zitternd	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	stand	VVFIN	*	stehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	sie	PPER	*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	da	PTKVZ	*	da	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	wie	KOKOM	(NP*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	eine	ART	*	ein	sg	fem	-	(256
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Verbrecherin	NN	*	verbrecherin	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	die	PRELS	(S*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	ihr	PPOSAT	(NP*	ihr	sg	fem	-	(256)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	Todesurteil	NN	*)	todesurteil	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	höret	VVFIN	*))))	höret	sg	neut	-	256)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ihre	PPOSAT	(VROOT(PSEUDO(S(NP*	ihr	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Angst	NN	*)	angst	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	steckte	VVFIN	*	stecken	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mich	PPER	*	mich	sg	fem	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	an	PTKVZ	*	an	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ich	PPER	(CS(S*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	zitterte	VVFIN	*	zittern	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	mit	PTKVZ	*)	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	schloß	VVFIN	(S*	schließen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	einer	ART	*	ein	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Bitte	NN	*	bitte	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	um	APPR	(PP*	um	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	Vergebung	NN	*)))))	vergebung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Kaum	ADV	*	kaum	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	getrau	ADJD	*	getrau	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	mir	PPER	*	sich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	sie	PPER	*	sie	*	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	wieder	ADV	*	wieder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	anzureden	VVIZU	*	anreden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Bei	APPR	*	bei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ihrem	PPOSAT	*	ihr	sg	masc	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Eintritte	NN	*	eintritt	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	wenigstens	ADV	*	wenigstens	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	wag	VAFIN	*	wag	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	zu	PTKZU	*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	sein	VAINF	*	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(S*	sie	pl	*	-	(3
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Marinelli	NE	*	marinelli	sg	masc	(LOC*)	3)|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	müssen	VMFIN	*	müssen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	sie	PPER	(VP*	sie	pl	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	empfangen	VVINF	*))	empfangen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(CS(S*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	will	VMFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	hier	ADV	(VP*	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	der	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Nähe	NN	*)	nähe	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	hören	VVINF	*	hören	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	wie	PWAV	(S*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	abläuft	VVFIN	*)))	ablaufen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	kommen	VVFIN	(S*	kommen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	wenn	KOUS	(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	mich	PRF	(VP*	mich	sg	-	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	mehr	ADV	*	mehr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	gesammelt	VVPP	*)	sammeln	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	habe	VAFIN	*)))	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Marinelli	NE	(VROOT(PSEUDO(DL(CO*	marinelli	sg	masc	(LOC*)	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	bald	ADV	(AVP*	bald	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	darauf	PROAV	*))	darauf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	dessen	PDS	*	der	sg	neut	-	(10|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Bedienter	NN	(S*))	bedienter	sg	neut	-	10)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Battista	NE	(VROOT(PSEUDO(S*	battista	-	-	(PER*)	(10)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Emilien	NE	*))	emilie	pl	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wenn	KOUS	*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sie	PPER	*	sie	pl	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ihn	PPER	*	ihn	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	selbst	ADV	*	selbst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	stürzen	VVINF	*	stürzen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	gesehen	VVPP	*	sehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	–	$(	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	das	PDS	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	muß	VMFIN	*	müssen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	sie	PPER	*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	wohl	ADV	*	wohl	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	da	KOUS	*	da	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	sie	PPER	*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	fortgeeilet	VVFIN	*	fortgeeilet	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	–	$(	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	Sie	PPER	*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	kömmt	VVFIN	*	kömmen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Auch	ADV	(VROOT(PSEUDO(S(NP*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ich	PPER	*)	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	will	VMFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	das	ART	(VP(NP*	der	sg	neut	-	(257
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	erste	ADJA	*)	erster	sg	neut	-	257)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	sein	VAINF	*	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	was	PWS	(S*	was	sg	neut	-	(257)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	ihr	PPOSAT	(NP*	ihr	sg	masc	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	hier	ADV	(AP*	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	in	APPR	*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	die	ART	*)	der	pl	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Augen	NN	*)	auge	pl	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	fällt	VVFIN	*)))	fallen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Er	PPER	(VROOT(PSEUDO(S*	er	sg	masc	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	zieht	VVFIN	*	ziehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sich	PRF	*	sich	sg	-	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	einen	ART	*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Winkel	NN	*	winkel	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	des	ART	(NP*	der	sg	masc	-	(258
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Saales	NN	*))	saal	sg	masc	-	258)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	zurück	PTKVZ	*)	zurück	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	BATTISTA	NE	(VROOT(PSEUDO*	battista	sg	neut	(LOC*)	(10|(10)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	10)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nur	ADV	(VROOT(PSEUDO(S*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	hier	ADV	*	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	herein	PTKVZ	*	herein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	gnädiges	ADJA	(NP*	gnädig	sg	neut	-	(8
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Fräulein	NN	*))	fräulein	sg	neut	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	EMILIA	NE	(VROOT(PSEUDO*))	emilia	-	-	-	(8)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	außer	APPR	(VROOT(PSEUDO(PP*	außer	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Atem	NN	*)	atem	sg	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ah	NE	(VROOT(PSEUDO(MPN*	ah	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*)))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ah	NE	*	ah	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ich	PPER	*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	danke	VVFIN	*	danken	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Ihm	PPER	*	ihm	sg	masc	-	(10)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	mein	PPOSAT	*	mein	sg	masc	-	(10|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Freund	NN	*	freund	sg	masc	-	10)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	–	XY	*	–	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	ich	PPER	*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	dank	APPR	*	dank	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Ihm	PPER	*	ihm	sg	*	-	(10)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Aber	KON	(NP*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Gott	NN	*	gott	sg	masc	(PER*)	(57)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*)	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Gott	NN	*	gott	sg	masc	(PER*)	(57)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	wo	PWAV	*	wo	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	bin	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	so	ADV	(S*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ganz	ADV	*	ganz	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	allein	ADV	*)	allein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wo	PWAV	(VROOT(PSEUDO(S*	wo	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	bleibt	VVFIN	*	bleiben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	meine	PPOSAT	(NP*	mein	sg	fem	-	(53|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Mutter	NN	*))	mutter	sg	fem	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wo	PWAV	(VROOT(PSEUDO(S*	wo	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	blieb	VVFIN	*	bleiben	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	der	ART	(NP*	der	sg	masc	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Graf	NN	*))	graf	sg	-	-	9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	(S*	sie	pl	*	-	(53)|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	kommen	VVFIN	*	kommen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	doch	ADV	*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nach	PTKVZ	*)	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	mir	PPER	(VROOT(PSEUDO(S*	sich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	auf	APPR	(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	dem	ART	*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Fuße	NN	*)	fuß	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nach	PTKVZ	*)	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	BATTISTA	NE	(VROOT(PSEUDO*	battista	sg	neut	(LOC*)	(10|(10)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	10)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(10)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	vermute	VVFIN	*)	vermuten	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	EMILIA	NE	(VROOT(PSEUDO*	emilia	sg	neut	(LOC*)	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Er	PPER	(VROOT(PSEUDO(S*	er	sg	masc	-	(10)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	vermutet	VVFIN	*)	vermuten	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Er	PPER	(VROOT(PSEUDO(S*	er	sg	masc	-	(10)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	weiß	VVFIN	*	weißn	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*)	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Er	PPER	(VROOT(PSEUDO(S*	er	sg	masc	-	(10)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sah	VVFIN	*	sehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sie	PPER	*	sie	*	*	-	(53)|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*)	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ward	NN	(S*	ward	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	nicht	PTKNEG	(VP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	gar	ADV	*	gar	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	hinter	APPR	(PP*	hinter	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	uns	PPER	*)	uns	pl	*	-	(10)|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	geschossen	VVPP	*))	schießen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	BATTISTA	NE	(VROOT(PSEUDO*	battista	sg	neut	(LOC*)	(10|(10)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	10)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Geschossen	NN	(VROOT(PSEUDO*	geschoß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Das	PDS	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wäre	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	EMILIA	NE	(VROOT(PSEUDO*	emilia	sg	neut	(LOC*)	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ganz	ADV	(VROOT(PSEUDO(S(ISU*	ganz	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	gewiß	ADJD	*))	gewiß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	das	PDS	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	hat	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	den	ART	(VP(CNP(NP*	der	sg	masc	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Grafen	NN	*)	grafe	sg	masc	-	9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	oder	KON	*	oder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	meine	PPOSAT	(NP*	mein	sg	fem	-	(53|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Mutter	NN	*))	mutter	sg	fem	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	getroffen	VVPP	*))	treffen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	BATTISTA	NE	(VROOT(PSEUDO*	battista	sg	neut	(LOC*)	(10|(10)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	10)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(10)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	will	VMFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	gleich	ADV	(VP*	gleich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nach	APPR	(PP*	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ihnen	PPER	*)	ihnen	pl	*	-	(9)|(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ausgehen	VVINF	*))	ausgehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	EMILIA	NE	(VROOT(PSEUDO*	emilia	sg	neut	(LOC*)	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nicht	PTKNEG	(VROOT(PSEUDO(PP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ohne	APPR	*	ohne	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mich	PPER	*)	mich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ich	PPER	*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	will	VMFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mit	APPR	*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ich	PPER	*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	muß	VMFIN	*	müssen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	mit	APPR	*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	komm	VVIMP	(S*	kommen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Er	PPER	(NP*	er	sg	masc	-	(10
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	mein	PPOSAT	(NP*	mein	sg	masc	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Freund	NN	*)))	freund	sg	masc	-	10)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*))	marinelli	-	-	-	(3|(3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	der	ART	(VROOT(PSEUDO(S(NP*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	plötzlich	ADJD	(S*	plötzlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	herzu	PROAV	*	herzu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	tritt	VVFIN	*)	treten	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	als	KOKOM	(S*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ob	KOUS	*	ob	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	er	PPER	*	er	sg	masc	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	eben	ADV	*	eben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	herein	PTKVZ	*))	herein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	käme	VVFIN	*)))	kommen	sg	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ah	XY	(VROOT(PSEUDO*	ah	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	gnädiges	ADJA	(NP*	gnädig	sg	neut	-	(8
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Fräulein	NN	*)	fräulein	sg	neut	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	für	APPR	(PP*	für	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ein	ART	*	ein	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Unglück	NN	*)	unglück	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*)	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	oder	KON	*	oder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	vielmehr	ADV	(PP*	vielmehr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	was	PWS	(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	für	APPR	(PP*	für	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	ein	ART	*	ein	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Glück	NN	*)	glück	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	–	NN	*	–	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	was	PWS	(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	für	APPR	(PP*	für	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	ein	ART	*	ein	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	glückliches	ADJA	*	glücklich	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	Unglück	NN	*)	unglück	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	verschafft	VVFIN	*)	verschaffen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	uns	PPER	*	uns	pl	*	-	(8)|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	die	ART	(NP*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	Ehre	NN	*)))	ehre	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	–	XY	*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	EMILIA	NE	(VROOT(PSEUDO*))	emilia	-	-	-	(8)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	stutzend	ADJD	(VROOT(PSEUDO*	stutzend	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wie	PWAV	(VROOT(PSEUDO*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(CNP(NP*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	hier	ADV	*)	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mein	PPOSAT	(NP*	mein	sg	masc	-	(3|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Herr	NN	*))	herr	sg	masc	-	3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ich	PPER	(S*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	bin	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	also	ADV	*	also	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	wohl	ADV	*)	wohl	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	bei	APPR	(PP*	bei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Ihnen	PPER	*)	ihnen	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Verzeihen	VVFIN	(S*	verzeihen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*)	sie	pl	*	-	(3
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Herr	NN	(NP*	herr	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Kammerherr	NN	*)	kammerherr	sg	masc	-	3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wir	PPER	(VROOT(PSEUDO(S*	wir	pl	*	-	(53)|(9)|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sind	VAFIN	*	sein	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	von	APPR	(VP(VP(PP*	von	-	-	-	(259
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Räubern	NN	*	räuber	pl	masc	-	259)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ohnfern	APZR	*)	ohnfern	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	überfallen	VVPP	*)	überfallen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	worden	VAPP	*))	werden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Da	ADV	(VROOT(PSEUDO(CS(S*	da	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	kamen	VVFIN	*	kommen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	uns	PPER	*	uns	pl	*	-	(53)|(8)|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	gute	ADJA	(NP*	gut	pl	*	-	(10
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Leute	NN	*)	leute	pl	*	-	10)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	zu	APPR	(PP*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Hülfe	NN	*)	hülfe	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	–	TRUNC	(S(CNP*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	dieser	PDAT	(NP*	dieser	sg	masc	-	(10
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	ehrliche	ADJA	*	ehrlich	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Mann	NN	*))	mann	sg	masc	-	10)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	hob	VVFIN	*	heben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	mich	PPER	*	mich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	aus	APPR	(PP*	aus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	dem	ART	*	der	sg	neut	-	(141
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	Wagen	NN	*)))	wagen	sg	neut	-	141)
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	brachte	VVFIN	(S*	bringen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	mich	PPER	*	mich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	hierher	PROAV	*))	hierher	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Aber	KON	(S*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	erschrecke	VVFIN	*	erschrecken	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	mich	PPER	(VP(VP*	mich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	allein	ADV	*	allein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	gerettet	VVPP	*)	retten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	sehen	VVINF	*)))	sehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Meine	PPOSAT	(VROOT(PSEUDO(S(NP*	mein	-	-	-	(53|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Mutter	NN	*)	mutter	sg	fem	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	noch	ADV	*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	der	ART	*	der	sg	fem	-	(260
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Gefahr	NN	*))	gefahr	sg	fem	-	260)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Hinter	APPR	(VROOT(PSEUDO(S(PP*	hinter	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	uns	PPER	*)	uns	pl	*	-	(10)|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ward	VAFIN	*	ward	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sogar	ADV	(VP*	sogar	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	geschossen	VVPP	*))	schießen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	*	sie	sg	fem	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	vielleicht	ADV	*	vielleicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	tot	ADJD	*	tot	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	–	$(	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ich	PPER	*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	lebe	VVFIN	*	leben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Verzeihen	VVFIN	(S*	verzeihen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*)	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	muß	VMFIN	*	müssen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	fort	PTKVZ	*	fort	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ich	PPER	(S*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	muß	VMFIN	*	müssen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	wieder	ADV	*	wieder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	hin	PTKVZ	*))	hin	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	wo	PWAV	(S*	wo	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	ich	PPER	*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	gleich	ADV	*	gleich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	hätte	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	bleiben	VVINF	(VP*	bleiben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	sollen	VMINF	*))	sollen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Beruhigen	VVFIN	(VROOT(PSEUDO(S*	beruhigen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*	sie	pl	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sich	PRF	*	sich	pl	-	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	gnädiges	ADJA	(NP*	gnädig	sg	neut	-	(8
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Fräulein	NN	*))	fräulein	sg	neut	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Es	PPER	(VROOT(PSEUDO(CS(S*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	stehet	VVFIN	*	stehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	alles	PIS	*	alle	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	gut	ADJD	*	gut	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	sie	PPER	(S*	sie	pl	*	-	(9)|(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	werden	VAFIN	*	werden	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	bald	ADV	(VP*	bald	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	bei	APPR	(PP*	bei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Ihnen	PPER	*)	ihnen	pl	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	sein	VAINF	*)))	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	die	ART	(S(NP*	der	pl	fem	-	(53|(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	geliebten	ADJA	*	geliebt	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Personen	NN	*)	person	pl	fem	-	53)|9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	für	APPR	(S(PP*	für	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	die	PRELS	*)	der	pl	*	-	(9)|(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	Sie	PPER	(NP*	sie	pl	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	so	ADV	*)	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	viel	PIAT	(VP(NP*	viel	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	zärtliche	ADJA	*	zärtlich	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	Angst	NN	*)	angst	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	empfinden	VVINF	*))))	empfinden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Indes	NN	*	indes	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Battista	NE	*	battista	-	-	(PER*)	(10)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	geh	XY	*	geh	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	lauf	PTKVZ	*	lauf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	sie	PPER	*	sie	pl	*	-	(53)|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	dürften	VMFIN	*	dürfen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	vielleicht	ADV	*	vielleicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	wissen	VVINF	*	wissen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	wo	PWAV	*	wo	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	das	ART	*	der	sg	neut	-	(8
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	Fräulein	NN	*	fräulein	sg	neut	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(S*	sie	pl	*	-	(9)|(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	dürften	VMFIN	*	dürfen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sie	PPER	*	sie	pl	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	vielleicht	ADV	(VP*	vielleicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	in	APPR	(AVP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	einem	ART	*)	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	von	APPR	(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	den	ART	*	der	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Wirtschaftshäusern	NN	*	wirtschaftshaus	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	des	ART	(NP*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Gartens	NN	*))	garten	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	suchen	VVINF	*))	suchen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Bringe	VVFIN	(VROOT(PSEUDO(S*	bring	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sie	PPER	*	sie	pl	*	-	(53)|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	unverzüglich	ADJD	(AP*	unverzüglich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	hierher	PROAV	*))	hierher	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Battista	NE	(VROOT(PSEUDO(S*	battista	sg	fem	(PER*)	(10)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	geht	VVFIN	*	gehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ab	PTKVZ	*)	ab	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	EMILIA	NE	(VROOT(PSEUDO*	emilia	sg	neut	(LOC*)	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Gewiß	ADV	(VROOT(PSEUDO(S*)	gewiß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sind	VAFIN	(VROOT(PSEUDO(S*	sein	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sie	PPER	(NP*	sie	pl	*	-	(9)|(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	alle	PIS	*)	alle	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	geborgen	VVPP	*)	bergen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ist	VAFIN	(VROOT(PSEUDO(S*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ihnen	PPER	*	ihnen	pl	*	-	(9)|(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	nichts	PIS	(VP*	nichts	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	widerfahren	VVINF	*))	widerfahren	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ah	NE	(NP*	ah	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	was	PWS	(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	dieser	PDAT	(NP*	dieser	sg	masc	-	(127
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Tag	NN	*)	tag	sg	masc	-	127)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	für	APPR	(PP*	für	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	ein	ART	*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Tag	NN	*	tag	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	des	ART	(NP*	der	sg	neut	-	(261
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Schreckens	NN	*)	schrecken	sg	neut	-	261)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	für	APPR	(PP*	für	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	mich	PPER	*))))	mich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Aber	KON	*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sollte	VMFIN	*	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	hier	ADV	*	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	bleiben	VVINF	*	bleiben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	ich	PPER	*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	sollte	VMFIN	*	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	ihnen	PPER	*	ihnen	pl	*	-	(53)|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	entgegen	APPR	*	entgegen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	eilen	VVINF	*	eilen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	–	XY	*	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wozu	PWAV	(VROOT(PSEUDO(S*	wozu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	das	PDS	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	gnädiges	ADJA	(NP*	gnädig	sg	neut	-	(8
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Fräulein	NN	*))	fräulein	sg	neut	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(S*	sie	pl	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sind	VAFIN	*	sein	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ohnedem	PIS	(AVP*	ohnedem	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	schon	ADV	*)	schon	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ohne	APPR	(PP*	ohne	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Atem	NN	(CNP*	atem	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Kräfte	NN	*)))	kraft	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Erholen	VVFIN	(VROOT(PSEUDO(CS(S*	erholen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*	sie	pl	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sich	PRF	*	sich	pl	-	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	vielmehr	ADV	*)	vielmehr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	geruhen	VVFIN	(S*	geruhen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	ein	ART	*	ein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Zimmer	NN	*)	zimmer	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	treten	VVINF	*)	treten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	wo	PWAV	(S*	wo	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	mehr	PIAT	(NP*	mehr	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	Bequemlichkeit	NN	*)	bequemlichkeit	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	ist	VAFIN	*)))	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ich	PPER	(S*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	will	VMFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	wetten	VVINF	(VP*	wetten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	der	ART	(NP*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Prinz	NN	*)	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	schon	ADV	(AVP*	schon	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	selbst	ADV	*)	selbst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	um	APPR	(PP*	um	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Ihre	PPOSAT	*	ihr	sg	fem	-	(53|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	teuere	ADJA	*	teu	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	ehrwürdige	ADJA	*	ehrwürdig	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Mutter	NN	*))))	mutter	sg	masc	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	ist	VAFIN	(S*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	und	KON	(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	sie	PPER	*	sie	pl	*	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	Ihnen	PPER	*	ihnen	pl	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	zuführet	VVFIN	*))	zuführet	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	EMILIA	NE	(VROOT(PSEUDO*	emilia	sg	neut	(LOC*)	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wer	PWS	(VROOT(PSEUDO(S*	wer	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sagen	VVFIN	*	sagen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Sie	PPER	*)	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Unser	PPOSAT	(VROOT(PSEUDO(NP*	unser	sg	neut	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	gnädigster	ADJA	*	gnädig	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Prinz	NN	*	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	selbst	ADV	*)	selbst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	EMILIA	NE	(VROOT(PSEUDO*))	emilia	-	-	-	(8)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	äußerst	ADV	(VROOT(PSEUDO(S*)	äußerst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	bestürzt	VVFIN	*	bestürzen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(NP*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Prinz	NN	*)	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Er	PPER	(VROOT(PSEUDO(S*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	floh	VVFIN	*	fliehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	auf	APPR	(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	die	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	erste	ADJA	*	erster	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Nachricht	NN	*)	nachricht	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Ihnen	PPER	(NP*	ihnen	pl	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	zu	APPR	(PP*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Hülfe	NN	*)))	hülfe	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Er	PPER	*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	höchst	ADV	*	höchst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ergrimmt	VVPP	*	ergrimmen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	daß	KOUS	*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ein	ART	*	ein	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	solches	PIAT	*	solcher	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Verbrechen	NN	*	verbrechen	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	ihm	PPER	*	ihm	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	nahe	PTKVZ	*	nahe	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	unter	APPR	*	unter	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	seinen	PPOSAT	*	sein	pl	fem	-	(58|(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	Augen	NN	*	auge	pl	fem	-	58)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	gleichsam	ADJD	*	gleichsam	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	hat	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	dürfen	VMFIN	*	dürfen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	gewagt	VVPP	*	wagen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	werden	VAINF	*	werden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Er	PPER	(VROOT(PSEUDO(CS(S*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	läßt	VVFIN	*	lassen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	den	ART	(VP(NP*	der	pl	masc	-	(259
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Tätern	NN	*)	täter	pl	masc	-	259)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nachsetzen	VVINF	*))	nachsetzen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ihre	PPOSAT	(S(NP*	ihr	sg	fem	-	(259)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Strafe	NN	*	strafe	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	wenn	KOUS	(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	sie	PPER	*	sie	pl	neut	-	(259)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	ergriffen	VVPP	*	ergreifen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	werden	VAFIN	*))	werden	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	wird	VAFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	unerhört	ADJD	(VP*	unerhört	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	sein	VAINF	*)))	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	EMILIA	NE	(VROOT(PSEUDO*	emilia	sg	neut	(LOC*)	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(NP*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Prinz	NN	*)	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Wo	PWAV	(S*	wo	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	bin	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	masc	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	denn	ADV	*)	denn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	also	ADV	*	also	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Auf	APPR	(VROOT(PSEUDO(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Dosalo	NE	*	dosalo	-	-	-	(118)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	dem	ART	(NP*	der	sg	masc	-	(117
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Lustschlosse	NN	*	lustschlosse	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	des	ART	(NP*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Prinzen	NN	*)))	prinz	sg	masc	-	117)|0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	EMILIA	NE	(VROOT(PSEUDO*	emilia	sg	neut	(LOC*)	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Welch	PWAT	(VROOT(PSEUDO(NP*	welch	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ein	ART	*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Zufall	NN	*)	zufall	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Und	KON	(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	glauben	VVFIN	*)	glauben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	er	PPER	*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	gleich	ADV	*	gleich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	selbst	ADV	(VP*	selbst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	erscheinen	VVINF	*)	erscheinen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	könne	VMFIN	*)	können	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Aber	KON	(S*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	doch	ADV	*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Gesellschaft	NN	*))	gesellschaft	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	meiner	PPOSAT	(NP*	mein	sg	fem	-	(53|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Mutter	NN	*)	mutter	sg	fem	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Hier	ADV	(VROOT(PSEUDO(S*	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	er	PPER	*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	schon	ADV	*)	schon	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(NP*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Prinz	NN	*)	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Emilia	NE	(VROOT(PSEUDO*	emilia	-	-	(PER*)	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Marinelli	NE	(VROOT(PSEUDO*	marinelli	sg	masc	(PER*)	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wo	PWAV	*	wo	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sie	PPER	*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	wo	PWAV	(VROOT(PSEUDO*	wo	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Wir	PPER	(S*	wir	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	suchen	VVFIN	*	suchen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Sie	PPER	*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	überall	ADV	*)	überall	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	schönstes	ADJA	(NP*	schönst	sg	neut	-	(8
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Fräulein	NN	*)	fräulein	sg	*	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	(S*	sie	pl	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sind	VAFIN	*	sein	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	doch	ADV	*)	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	wohl	ADV	*	wohl	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Nun	ADV	(S*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ist	VAFIN	*)	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	alles	PIS	(NP*	alle	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	wohl	ADV	*)	wohl	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(CNP(NP*	der	sg	masc	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Graf	NN	*)	graf	sg	masc	(PER*)	9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Ihre	PPOSAT	(NP*	ihr	sg	fem	-	(53
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Mutter	NN	*	mutter	sg	fem	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*))	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	–	$.	*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	EMILIA	NE	(VROOT(PSEUDO*	emilia	sg	neut	(LOC*)	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ah	NE	(VROOT(PSEUDO*	ah	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	gnädigster	ADJA	*	gnädig	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Herr	NN	*	herr	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	wo	PWAV	*	wo	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sind	VAFIN	*	sein	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sie	PPER	*	sie	pl	*	-	(53)|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wo	PWAV	(VROOT(PSEUDO(S*	wo	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	meine	PPOSAT	(NP*	mein	sg	fem	-	(53|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Mutter	NN	*))	mutter	sg	fem	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nicht	PTKNEG	(VROOT(PSEUDO(S(AVP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	weit	ADJD	*)	weit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	hier	ADV	*	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ganz	ADV	(PP*	ganz	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	in	APPR	*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	der	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Nähe	NN	*))	nähe	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	EMILIA	NE	(VROOT(PSEUDO*	emilia	sg	neut	(LOC*)	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Gott	NN	(VROOT(PSEUDO(S*	gott	sg	masc	(PER*)	(57)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	welchem	PWAT	*	welcher	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Zustande	NN	*)	zustande	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	werde	VAFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ich	PPER	*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	die	ART	(CNP(NP*	der	sg	fem	-	(53
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	eine	PIS	*)	ein	sg	fem	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	oder	KON	*	oder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	den	ART	(NP*	der	pl	masc	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	andern	PIS	*	anderer	pl	masc	-	9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	vielleicht	ADV	(VP*	vielleicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	treffen	VVINF	*))))	treffen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ganz	ADV	(VROOT(PSEUDO(VP*	ganz	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	gewiß	ADV	*	gewiß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	treffen	VVINF	*)	treffen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	denn	KON	*	denn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*	sie	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	verhehlen	VVFIN	*	verhehlen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	mir	PPER	*	sich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	gnädiger	ADJA	*	gnädig	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Herr	NN	*	herr	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	–	$(	*	–	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	ich	PPER	*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	seh	VAFIN	*	seh	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Sie	PPER	*	sie	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	verhehlen	VVFIN	*	verhehlen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	mir	PPER	*	sich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	–	XY	*	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nicht	PTKNEG	(VROOT(PSEUDO(CO(AVP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	doch	ADV	*)	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	bestes	ADJA	(NP*	gut	sg	neut	-	(8
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Fräulein	NN	*))	fräulein	sg	neut	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Geben	VVFIN	(S*	geben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*	sie	pl	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mir	PPER	(NP(AP*	sich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Ihren	PPOSAT	*)	ihr	sg	masc	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Arm	NN	*))	arm	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	folgen	VVFIN	(S*	folgen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Sie	PPER	*	sie	pl	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	mir	PPER	*	sich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	getrost	ADJD	*)	getrost	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	EMILIA	NE	(VROOT(PSEUDO*))	emilia	-	-	-	(8)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	unentschlossen	ADJD	(VROOT(PSEUDO*	unentschlossen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Aber	KON	*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	–	$(	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wenn	KOUS	*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ihnen	PPER	*	ihnen	pl	fem	-	(9)|(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nichts	PIS	*	nichts	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	widerfahren	VVFIN	*	widerfahren	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	–	PPER	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	wenn	KOUS	*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	meine	PPOSAT	*	mein	pl	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Ahnungen	NN	*	ahnung	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	mich	PPER	*	mich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	trügen	VVINF	*	tragen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	warum	PWAV	*	warum	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	sind	VAFIN	*	sein	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	sie	PPER	*	sie	pl	*	-	(53)|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	schon	ADV	*	schon	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	hier	ADV	*	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Warum	PWAV	(VROOT(PSEUDO(S*	warum	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	kamen	VVFIN	*	kommen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sie	PPER	*	sie	pl	*	-	(53)|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Ihnen	PPER	(CNP*	ihnen	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	gnädiger	ADJA	(NP*	gnädig	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Herr	NN	*))))	herr	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	So	ADV	(VROOT(PSEUDO(S*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	eilen	VVFIN	*	eilen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*	sie	pl	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	doch	ADV	*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	mein	PPOSAT	(VP(NP*	mein	sg	masc	-	(8|(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Fräulein	NN	*)	fräulein	sg	masc	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	alle	PIS	(NP*	aller	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	diese	PDAT	(NP*	dieser	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Schreckenbilder	NN	*	schreckenbild	pl	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	eins	CARD	*)))	einer	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	verschwinden	VVINF	*	verschwinden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	sehen	VVINF	*)))	sehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	EMILIA	NE	(VROOT(PSEUDO*	emilia	sg	neut	(LOC*)	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	soll	VMFIN	*	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ich	PPER	(VP*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	tun	VVINF	*))	tun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Die	ART	(VROOT(PSEUDO(AP(NP*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Hände	NN	*)	hand	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ringend	ADJD	*)	ringend	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wie	PWAV	(VROOT(PSEUDO(S*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mein	PPOSAT	(NP*	mein	sg	masc	-	(8|(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Fräulein	NN	*))	fräulein	sg	masc	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sollten	VMFIN	(VROOT(PSEUDO(S*	sollen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*	sie	pl	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	einen	ART	(VP(NP*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Verdacht	NN	*	verdacht	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	gegen	APPR	(PP*	gegen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	mich	PPER	*))	mich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	hegen	VVINF	*))	hegen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	EMILIA	NE	(VROOT(PSEUDO*))	emilia	-	-	-	(8|(8)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	die	ART	(VROOT(PSEUDO(NP*	der	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	vor	APPR	(AP(PP*	vor	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ihm	PPER	*)	ihm	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	niederfällt	VVFIN	*))))	niederfallen	sg	-	-	8)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Zu	APPR	*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ihren	PPOSAT	*	ihr	pl	masc	-	(262|(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Füßen	NN	*	fuß	pl	masc	-	262)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	gnädiger	ADJA	*	gnädig	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Herr	NN	*	herr	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	–	XY	*	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)))	prinz	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	sie	PPER	(VROOT(PSEUDO(AP*	sie	-	-	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	aufhebend	ADJD	*)	aufhebend	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	bin	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	äußerst	ADV	(AP*	äußerst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	beschämt	ADJD	*))	beschämen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ja	PTKANT	(S*	ja	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Emilia	NE	*	emilia	-	-	(PER*)	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	verdiene	VVFIN	*	verdienen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	diesen	PDS	(VP*	dieser	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	stummen	VVINF	*))	stumm	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Vorwurf	NN	*	vorwurf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Mein	PPOSAT	*	mein	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Betragen	NN	*	betrage	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	diesen	PDAT	*	dieser	pl	*	-	(23
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Morgen	NN	*	morgen	-	-	-	23)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	zu	PTKZU	*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	rechtfertigen	VVINF	*	rechtfertigen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	zu	PTKZU	*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	entschuldigen	VVINF	*	entschuldigen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	höchstens	ADV	*	höchstens	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Verzeihen	VVFIN	(VROOT(PSEUDO(S*	verzeihen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*	sie	pl	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	meiner	PPOSAT	(NP*	mein	sg	fem	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Schwachheit	NN	*))	schwachheit	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	hätte	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*	sie	pl	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mit	APPR	(S(VP(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	keinem	PIAT	*	kein	sg	masc	-	(263
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Geständnisse	NN	*)	geständnis	sg	masc	-	263)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	beunruhigen	VVINF	*)	beunruhigen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	sollen	VMFIN	*)	sollen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	von	APPR	(S(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	dem	PRELS	*)	der	sg	masc	-	(263)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	keinen	PIAT	(VP(NP*	kein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Vorteil	NN	*)	vorteil	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	erwarten	VVINF	*))	erwarten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	habe	VAFIN	*))	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Auch	ADV	(VROOT(PSEUDO(CS(S*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ward	VVFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	durch	APPR	(PP*	durch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	die	ART	*	der	sg	fem	-	(264
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	sprachlose	ADJA	*	sprachlos	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Bestürzung	NN	*))	bestürzung	sg	fem	-	264)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	mit	APPR	(CS(S(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	der	PRELS	*)	der	sg	fem	-	(264)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Sie	PPER	*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	es	PPER	*	es	sg	neut	-	(263)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	anhörten	VVFIN	*)	anhören	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	oder	KON	*	oder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	vielmehr	ADV	(S*	vielmehr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	anhörten	VVFIN	*))	anhören	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	genugsam	ADJD	(VP*	genugsam	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	bestraft	VVPP	*))	bestrafen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	könnt	VVFIN	*	können	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	schon	ADV	*	schon	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	diesen	PDAT	*	dieser	sg	masc	-	(265
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Zufall	NN	*	zufall	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	der	PRELS	*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	mir	PPER	*	sich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	nochmals	ADV	*	nochmals	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	ehe	KOUS	*	ehe	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	alle	PIS	*	aller	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	meine	PPOSAT	*	mein	sg	fem	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	Hoffnung	NN	*	hoffnung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	auf	APPR	*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	ewig	ADJD	*	ewig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	verschwindet	VVFIN	*	verschwinden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	–	VVIMP	*	–	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	mir	PPER	*	sich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	nochmals	ADV	*	nochmals	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	das	ART	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	Glück	NN	*	glück	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	Sie	PPER	*	sie	pl	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	zu	PTKZU	*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	28	sehen	VVINF	*	sehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	29	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	30	zu	PTKZU	*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	31	sprechen	VVINF	*	sprechen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	32	verschafft	VVPP	*	verschaffen	-	-	-	265)
Emilia.xml.rksp.0.CoNLL2012.conll	000	33	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	34	könnt	VVFIN	*	können	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	35	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	36	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	37	schon	ADV	*	schon	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	38	diesen	PDAT	*	dieser	sg	masc	-	(265
Emilia.xml.rksp.0.CoNLL2012.conll	000	39	Zufall	NN	*	zufall	sg	masc	-	265)
Emilia.xml.rksp.0.CoNLL2012.conll	000	40	für	APPR	*	für	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	41	den	ART	*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	42	Wink	NN	*	wink	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	43	eines	ART	*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	44	günstigen	ADJA	*	günstig	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	45	Glückes	NN	*	glück	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	46	erklären	VVINF	*	erklären	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	47	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	48	–	KON	*	–	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	49	für	APPR	*	für	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	50	den	ART	*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	51	wunderbarsten	ADJA	*	wunderbar	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	52	Aufschub	NN	*	aufschub	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	53	meiner	PPOSAT	*	mein	pl	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	54	endlichen	ADJA	*	endlich	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	55	Verurteilung	NN	*	verurteilung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	56	erklären	VVINF	*	erklären	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	57	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	58	um	KOUI	*	um	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	59	nochmals	ADV	*	nochmals	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	60	um	APPR	*	um	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	61	Gnade	NN	*	gnade	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	62	flehen	VVINF	*	flehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	63	zu	PTKZU	*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	64	dürfen	VMINF	*	dürfen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	65	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	66	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	67	will	VMFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	68	ich	PPER	*	ich	sg	fem	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	69	doch	ADV	*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	70	–	$(	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	71	Beben	VVFIN	*	beben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	72	Sie	PPER	*	sie	pl	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	73	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	74	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	75	mein	PPOSAT	*	mein	sg	masc	-	(8|(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	76	Fräulein	NN	*	fräulein	sg	masc	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	77	–	APPO	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	78	einzig	ADJD	*	einzig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	79	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	80	allein	ADV	*	allein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	81	von	APPR	*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	82	Ihrem	PPOSAT	*	ihr	sg	masc	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	83	Blicke	NN	*	blick	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	84	abhangen	VVINF	*	abhangen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	85	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Kein	PIAT	(VROOT(PSEUDO(S(NP*	kein	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Wort	NN	*	wort	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	kein	PIAT	(NP*	kein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Seufzer	NN	*))	seufzer	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	soll	VMFIN	*	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Sie	PPER	(VP*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	beleidigen	VVINF	*))	beleidigen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Nur	ADV	(S*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	kränke	VVFIN	*	kränken	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mich	PPER	*	mich	sg	-	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nicht	PTKNEG	*)	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Ihr	PPER	(NP*	ihr	pl	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Mißtrauen	NN	*)	mißtrauen	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nur	ADV	(VROOT(PSEUDO(S*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	zweifeln	VVFIN	*	zweifeln	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*	sie	pl	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	keinen	PIAT	(NP*	kein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Augenblick	NN	*	augenblick	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	an	APPR	(PP*	an	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	der	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	unumschränktesten	ADJA	*	unumschränktest	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Gewalt	NN	*)	gewalt	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	die	PRELS	(S*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Sie	PPER	*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	über	APPR	(PP*	über	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	mich	PPER	*)	mich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	haben	VAFIN	*)))	haben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nur	ADV	(VROOT(PSEUDO(S*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	falle	VVFIN	*	fallen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Ihnen	PPER	*	ihnen	pl	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nie	ADV	*	nie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	bei	PTKVZ	*	bei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Sie	PPER	*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	eines	PIS	(VP*	ein	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	andern	PIAT	(NP*	anderer	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Schutzes	NN	*)	schutz	sg	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	gegen	APPR	(PP*	gegen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	mich	PPER	*)	mich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	bedürfen	VVINF	*)))	bedürfen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Und	KON	(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	nun	ADV	*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	kommen	VVFIN	*	kommen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Sie	PPER	*	sie	pl	*	-	(8
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	mein	PPOSAT	(S(NP*	mein	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Fräulein	NN	(CNP*	fräulein	sg	masc	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	–	NN	*))	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	kommen	VVFIN	*	kommen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Sie	PPER	*	sie	pl	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	wo	PWAV	(S*	wo	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Entzückungen	NN	*	entzückung	pl	fem	-	(266)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	auf	APPR	(VP(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	Sie	PPER	*)	sie	pl	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	warten	VVINF	*))))	warten	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	die	ART	*	der	sg	fem	-	(266)
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	Sie	PPER	(VP*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	mehr	ADV	*	mehr	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	billigen	VVINF	*)	billigen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Er	PPER	(VROOT(PSEUDO(CS(S*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	führt	VVFIN	*	führen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sie	PPER	*)	sie	pl	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nicht	PTKNEG	(S*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ohne	APPR	(PP*	ohne	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Sträuben	NN	*)	sträube	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	ab	PTKVZ	*))	ab	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Folgen	VVFIN	(VROOT(PSEUDO(S*	folgen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*	sie	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	uns	PPER	(NP*	uns	pl	*	-	(0)|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Marinelli	NE	*))	marinelli	sg	*	(LOC*)	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Folgen	VVFIN	(VROOT(PSEUDO(S*	folgen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	uns	PPER	*	uns	pl	*	-	(8)|(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	–	KOUS	(S*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	das	PDS	(VP(S*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	mag	VMFIN	*	mögen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	heißen	VVINF	*)	heißen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	folgen	VVINF	*)	folgen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	uns	PPER	*	uns	pl	*	-	(8)|(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	nicht	PTKNEG	*))	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Was	PWS	(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	hätte	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	(VP*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ihnen	PPER	*	ihnen	pl	*	-	(0)|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	auch	ADV	*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	folgen	VVINF	*)))	folgen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Er	PPER	(VROOT(PSEUDO(S*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	mag	VMFIN	*	mögen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sehen	VVINF	(VP*	sehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	wie	PWAV	(S(AP*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	weit	ADJD	*)	weit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	er	PPER	*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	unter	APPR	(PP*	unter	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	vier	CARD	*	vier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Augen	NN	*)	auge	pl	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	ihr	PPER	*)	ihr	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	bringt	VVFIN	*)))	bringen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Alles	PIS	(NP*	alle	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	was	PRELS	(CS(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ich	PPER	*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	tun	VVINF	*)	tun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	habe	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	ist	VAFIN	(S*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	–	NN	(VP*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	verhindern	VVINF	*))))	verhindern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	sie	PPER	*	sie	pl	masc	-	(8)|(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	nicht	PTKNEG	(VP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	gestöret	VVPP	*)	störeen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	werden	VAINF	*)))	werden	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Von	APPR	(VROOT(PSEUDO(S(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	dem	ART	*	der	sg	masc	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Grafen	NN	*)	grafen	sg	masc	-	9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	zwar	ADV	*	zwar	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	hoffe	VVFIN	*	hoffen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ich	PPER	*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	nun	ADV	*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	wohl	ADV	*	wohl	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	nicht	PTKNEG	*)	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Aber	KON	(VROOT(PSEUDO(S*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	von	APPR	(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	der	ART	*	der	sg	fem	-	(53
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Mutter	NN	*)	mutter	sg	fem	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	von	APPR	(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	der	ART	*	der	sg	fem	-	(53
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Mutter	NN	*))	mutter	sg	fem	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Es	PPER	(VROOT(PSEUDO(S*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sollte	VMFIN	*	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mich	PPER	(VP*	mich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sehr	ADV	*	sehr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	wundern	VVINF	*	wundern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	wenn	KOUS	(CS(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	die	ART	(VP(AVP*	der	pl	masc	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	so	ADV	*)	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	ruhig	ADJD	*	ruhig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	abgezogen	VVPP	*)	abziehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	wäre	VAFIN	*)	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	ihre	PPOSAT	(S(VP(NP*	ihr	pl	masc	-	(8|(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	Tochter	NN	*)	tochter	sg	fem	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	im	APPRART	(PP*	in	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	Stiche	NN	*)	stich	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	gelassen	VVPP	*)	lassen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	hätte	VAFIN	*))))	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Nun	ADV	*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Battista	NE	*	battista	-	-	(PER*)	(10)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	was	PWS	*	was	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	gibts	ADV	*	gibt	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Battista	NE	(VROOT(PSEUDO*	battista	-	-	(PER*)	(10)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Marinelli	NE	(VROOT(PSEUDO*	marinelli	sg	masc	(PER*)	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	BATTISTA	NE	(VROOT(PSEUDO*))	battista	-	-	-	(10)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	eiligst	ADV	(VROOT(PSEUDO*	eiligsen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Die	ART	*	der	sg	fem	-	(53
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Mutter	NN	*	mutter	sg	fem	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Herr	NN	*	herr	sg	masc	-	(3
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Kammerherr	NN	*	kammerherr	sg	masc	-	3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	–	XY	*	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Dacht	NN	*	dacht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ichs	APPRART	*	ichs	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	doch	ADV	*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Wo	PWAV	*	wo	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sie	PPER	*	sie	sg	fem	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	BATTISTA	NE	(VROOT(PSEUDO*	battista	sg	neut	(LOC*)	(10|(10)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	10)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wann	PWAV	(VROOT(PSEUDO(S*	wann	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ihr	PPER	(VP*	ihr	sg	fem	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	zuvorkommen	VVIZU	*	zuvorkommen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	so	ADV	(S*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	wird	VAFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	sie	PPER	*	sie	sg	fem	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	den	ART	(NP*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Augenblick	NN	*	augenblick	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	hier	ADV	*)))	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	sein	VAINF	*)	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ich	PPER	(S*	ich	sg	masc	-	(10)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	war	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	gar	ADV	(AVP*	gar	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nicht	PTKNEG	*))	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Willens	NN	(NP*	wille	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	wie	KOKOM	(S(S*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	mir	PPER	*	sich	sg	*	-	(10)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	zum	APPRART	(VP(PP*	zu	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Schein	NN	*)	schein	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	geboten	VVPP	*)	bieten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	mich	PRF	(VP*	mich	sg	*	-	(10)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	nach	APPR	(PP*	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	ihr	PPER	*)	ihr	sg	fem	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	umzusehen	VVIZU	*))	umsehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	als	KOUS	*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	ich	PPER	*	ich	sg	*	-	(10)
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	ihr	PPOSAT	(NP*	ihr	sg	fem	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	Geschrei	NN	*)	geschrei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	von	APPR	(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	weitem	ADJA	*)	weit	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	hörte	VVFIN	*))	hören	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(CS(S*	sie	sg	fem	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	der	ART	(NP*	der	sg	masc	-	(8
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Tochter	NN	*	tochter	sg	masc	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	auf	APPR	(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	der	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Spur	NN	*)))	Spur	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	wo	PWAV	(S*	wo	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	nur	ADV	*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	nicht	PTKNEG	(AP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	–	ADJD	*)))	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	unserm	PPOSAT	(NP*	unser	sg	neut	-	(3)|(10)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	ganzen	ADJA	*	ganz	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	Anschlage	NN	*)	anschlage	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Alles	PIS	(VROOT(PSEUDO(CS(S(NP*	alle	sg	neut	-	(267
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	was	PRELS	(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	dieser	PDAT	*	dieser	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	einsamen	ADJA	*	einsam	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Gegend	NN	*)	gegend	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	von	APPR	(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Menschen	NN	*)	mensch	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	ist	VAFIN	*))	sein	sg	-	-	267)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	hat	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	sich	PRF	(VP*	sich	sg	-	-	(267)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	um	APPR	(PP*	um	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	sie	PPER	*)	sie	pl	*	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	versammelt	VVPP	*))	versammeln	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	jeder	PIS	(S*	jeder	sg	masc	-	(267)
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	will	VMFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	der	PDS	(VP*	der	sg	masc	-	(268)
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	sein	VAINF	*	sein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	der	PRELS	(S*	der	sg	masc	-	(268)
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	ihr	PPER	*	ihr	sg	masc	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	den	ART	(NP*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	Weg	NN	*)	weg	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	weiset	VVFIN	*))))	weisen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	28	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ob	KOUS	(VROOT(PSEUDO(S(S*	ob	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	man	PIS	*	man	sg	*	-	(267)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ihr	PPER	*	ihr	sg	fem	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	schon	ADV	(VP*	schon	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	gesagt	VVPP	*	sagen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	der	ART	(NP*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Prinz	NN	*)	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	hier	ADV	*	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	ist	VAFIN	*))	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	hier	ADV	*	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	sind	VAFIN	*))	sein	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	weiß	VVFIN	*	weiß	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	ich	PPER	*	ich	sg	masc	-	(10)
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	nicht	PTKNEG	*)	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Was	PWS	(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wollen	VMFIN	*	wollen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Sie	PPER	(VP*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	tun	VVINF	*))	tun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Laß	NN	(VROOT(PSEUDO(S*	lassen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sehen	VVFIN	*)	sehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Er	PPER	(VP*	er	sg	masc	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	überlegt	VVPP	*)	überlegen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(VP*	sie	pl	*	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	einlassen	VVINF	*	einlassen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	wenn	KOUS	(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	sie	PPER	*	sie	sg	fem	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	weiß	VVFIN	*	weiß	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	die	ART	(NP*	der	sg	fem	-	(8
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Tochter	NN	*)	tochter	sg	fem	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	hier	ADV	*	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	ist	VAFIN	*)))	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Das	PDS	(S*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	geht	VVFIN	*	gehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*)	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Freilich	ADV	(S(AVP*	freilich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sie	PPER	(S*	sie	sg	fem	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	wird	VAFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Augen	NN	(VP*	auge	pl	neut	-	(269)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	machen	VVINF	*)))	machen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	wenn	KOUS	(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	sie	PPER	*	sie	sg	fem	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	den	ART	(NP*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Wolf	NE	*)	wolf	sg	masc	(PER*)	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	bei	APPR	(PP*	bei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	dem	ART	*	der	sg	masc	-	(8
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Schäfchen	NN	*)))	schäfchen	sg	masc	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	sieht	VVFIN	*	sehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Augen	NN	*	auge	pl	neut	-	(269)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Das	PDS	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	möchte	VMFIN	*	möchten	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	noch	ADV	*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sein	VAINF	*	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Aber	KON	(VROOT(PSEUDO(S*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	der	ART	(NP*	der	sg	masc	-	(132
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Himmel	NN	*)	himmel	sg	masc	-	132)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sei	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	unsern	PPOSAT	(NP*	unsern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Ohren	NN	*)	ohr	pl	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	gnädig	ADJD	*)	gnädig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Nun	ADV	(NP*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	was	PIS	*)	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	die	ART	(VROOT(PSEUDO(CS(S(NP*	der	sg	fem	-	(270
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	beste	ADJA	*	gut	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Lunge	NN	*)	lunge	sg	fem	-	270)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	erschöpft	VVFIN	*	erschöpfen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	sich	PRF	*)	sich	sg	-	-	(270)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	auch	ADV	(S*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	gar	ADV	*	gar	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	eine	ART	(NP*	ein	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	weibliche	ADJA	*)))	weiblich	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(S*	sie	pl	*	-	(271)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	hören	VVFIN	*	hören	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	alle	PIS	*	alle	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	auf	PTKVZ	*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	zu	PTKZU	(VP(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	schreien	VVINF	*)	schreien	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	wenn	KOUS	(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	sie	PPER	*	sie	pl	*	-	(271)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	nicht	PTKNEG	(AVP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	mehr	ADV	*)))	mehr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	können	VMFIN	*)	können	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Dazu	PROAV	(S*	dazu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	es	PPER	(S*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	doch	ADV	(AVP*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	einmal	ADV	*)))	einmal	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	die	ART	(NP*	der	sg	fem	-	(53
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Mutter	NN	*	mutter	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	die	PRELS	(S*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	wir	PPER	*	wir	pl	*	-	(10)|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	auf	APPR	(VP(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	unserer	PPOSAT	*	unser	sg	fem	-	(3)|(10)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Seite	NN	*)	seite	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	haben	VAINF	*)	haben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	müssen	VMFIN	*))	müssen	-	-	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Wenn	KOUS	(S*	wenn	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	die	ART	(NP*	der	sg	fem	-	(272
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Mütter	NN	*)	mutter	sg	fem	-	272)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	recht	ADV	*	recht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	kenne	VVFIN	*)	kennen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	–	PPER	(S(VP*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	etwas	PIS	(NP*	etwas	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	von	APPR	(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	einer	ART	*	ein	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Schwiegermutter	NN	*	schwiegermutter	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	eines	ART	(NP*	ein	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	Prinzen	NN	*)))	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	sein	VAINF	*))	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	schmeichelt	VVFIN	*	schmeicheln	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	die	ART	(NP*	der	pl	masc	-	(272
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	meisten	PIS	*))	meister	pl	masc	-	272)
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Laß	NN	*	lassen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sie	PPER	(S*	sie	pl	*	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	kommen	VVFIN	*)	kommen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Battista	NE	(S*	battista	-	-	(PER*)	(10)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	laß	VVFIN	*	lassen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	sie	PPER	(VP*	sie	sg	fem	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	kommen	VVINF	*))	kommen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	BATTISTA	NE	(VROOT(PSEUDO*	battista	sg	neut	(LOC*)	(10|(10)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	10)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Hören	VVFIN	(VROOT(PSEUDO(S*	hören	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*)	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	hören	VVFIN	(VROOT(PSEUDO(S*	hören	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*)	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO(MPN*	claudia	-	-	-	(53|(7|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	GALOTTI	NE	*)))	galotti	-	-	-	53)|7)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	innerhalb	APPR	(VROOT(PSEUDO*	innerhalb	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Emilia	NE	(VROOT(PSEUDO(MPN*	emilia	-	-	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*)))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Emilia	NE	(VROOT(PSEUDO(MPN*	emilia	-	-	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*)))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Mein	PPOSAT	*	mein	sg	neut	-	(8|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Kind	NN	*	kind	sg	neut	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	wo	PWAV	*	wo	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	bist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	du	PPER	*	du	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Geh	XY	(VROOT(PSEUDO*	geh	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Battista	NE	*	battista	-	-	(PER*)	(10)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	suche	VVFIN	(S*	suchen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	nur	ADV	*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ihre	PPOSAT	(VP(NP*	ihr	pl	masc	-	(273|(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	neugierigen	ADJA	*	neugierig	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Begleiter	NN	*)	begleiter	pl	masc	-	273)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	entfernen	VVINF	*)))	entfernen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Claudia	NE	(VROOT(PSEUDO(MPN*	claudia	*	*	-	(53|(7|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Galotti	NE	*)	galotti	sg	*	-	53)|7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Battista	NE	(VROOT(PSEUDO*	battista	-	-	(PER*)	(10)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Marinelli	NE	(VROOT(PSEUDO*	marinelli	sg	masc	(PER*)	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO*))	claudia	-	-	-	(53|(7)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	die	ART	(VROOT(PSEUDO(S(S*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	die	ART	*	der	sg	fem	-	(245
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Türe	NN	*)	türe	sg	fem	-	245)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	tritt	VVFIN	*)	treten	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	indem	KOUS	(PP*	indem	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Battista	NE	*	battista	-	-	(PER*)	(10)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	heraus	APZR	*)	heraus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	gehen	VVINF	*	gehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	will	VMFIN	*)))	wollen	sg	-	-	53)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ha	XY	*	ha	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	der	PDS	(VROOT(PSEUDO(S*	der	sg	masc	-	(10)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	hob	VVFIN	*	heben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sie	PPER	*	sie	*	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	aus	APPR	(PP*	aus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	dem	ART	*	der	sg	neut	-	(141
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Wagen	NN	*))	wagen	sg	neut	-	141)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Der	PDS	(VROOT(PSEUDO(S*	der	sg	masc	-	(10)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	führte	VVFIN	*	führen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sie	PPER	*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	fort	PTKVZ	*)	fort	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	erkenne	VVFIN	*	erkennen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	dich	PRF	*)	dich	sg	-	-	(10)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wo	PWAV	*	wo	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sie	PPER	*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sprich	NE	(VROOT(PSEUDO*	sprich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Unglücklicher	NN	*	unglücklicher	-	-	-	(10)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	BATTISTA	NE	(VROOT(PSEUDO*	battista	sg	neut	(LOC*)	(10|(10)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	10)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Das	PDS	(VROOT(PSEUDO(S*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mein	PPOSAT	(NP*	mein	sg	masc	-	(10)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Dank	NN	*))	dank	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO*	claudia	sg	neut	(PER*)	(53|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	53)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	O	ITJ	(VROOT(PSEUDO(S*	O	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wenn	KOUS	*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	du	PPER	*	du	*	*	-	(10)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Dank	NN	*	dank	sg	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	verdienest	VVFIN	*	verdienest	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	In	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	einem	ART	*	ein	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	gelinden	ADJA	*	gelind	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Tone	NN	*))	tone	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	so	ADV	(S*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	verzeihe	VVFIN	*	verzeihen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mir	PPER	*)	sich	sg	*	-	(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ehrlicher	ADJA	(NP*	ehrlich	-	-	-	(10
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Mann	NN	*)	mann	*	masc	-	10)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Wo	PWAV	*	wo	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sie	PPER	*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Laßt	VVIMP	(S*	lassen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mich	PPER	*	mich	sg	*	-	(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sie	PPER	*	sie	pl	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nicht	PTKNEG	*)	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	länger	ADJD	(VP*	lang	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	entbehren	VVINF	*)	entbehren	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wo	PWAV	*	wo	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sie	PPER	*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	BATTISTA	NE	(VROOT(PSEUDO*	battista	sg	neut	(LOC*)	(10|(10)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	10)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	O	ITJ	(VROOT(PSEUDO(S(S*	O	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Ihre	PPOSAT	(NP*	ihr	pl	fem	-	(53|(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Gnaden	NN	*))	gnade	pl	fem	(LOC*)	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	sie	PPER	*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	könnte	VMFIN	*	können	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	in	APPR	(VP(AP(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	dem	ART	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Schoße	NN	*	schoße	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	der	ART	(NP*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Seligkeit	NN	*))	seligkeit	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	aufgehobner	ADJD	*)	aufgehobn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	sein	VAINF	*))	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Hier	ADV	(S*	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mein	PPOSAT	(NP*	mein	sg	masc	-	(3|(10)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Herr	NN	*))	herr	sg	masc	-	3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	wird	VAFIN	(S*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Ihre	PPOSAT	(NP*	ihr	pl	masc	-	(53|(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Gnaden	NN	*)	gnade	pl	masc	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	zu	APPR	(VP(PP*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	ihr	PPER	*)	ihr	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	führen	VVINF	*))	führen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Gegen	APPR	*	gegen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	einige	PIAT	*	einiger	pl	*	-	(273
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Leute	NN	*	leute	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	welche	PWAT	*	welcher	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	nachdringen	VVINF	*	nachdringen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	wollen	VMFIN	*	wollen	pl	-	-	273)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Zurück	ADJD	(VROOT(PSEUDO*	zurück	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	da	ADV	(S*)	da	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ihr	PPOSAT	*	ihr	sg	fem	-	(273)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Claudia	NE	(VROOT(PSEUDO(MPN*	claudia	*	*	-	(53|(7|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Galotti	NE	*)	galotti	sg	*	-	53)|7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Marinelli	NE	(VROOT(PSEUDO*	marinelli	sg	masc	(PER*)	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO*	claudia	sg	neut	(PER*)	(53|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	53)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Dein	PPOSAT	(VROOT(PSEUDO(NP*	dein	sg	masc	-	(3|(10)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Herr	NN	*)	herr	sg	masc	-	3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Erblickt	NN	*	erblicken	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	den	ART	(CS(S(NP*	der	sg	masc	-	(3
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Marinelli	NN	*))	marinelli	sg	masc	(LOC*)	3)|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	fährt	VVFIN	(S*	fahren	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	zurück	PTKVZ	*))	zurück	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ha	XY	*	ha	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Das	PDS	(NP(AP*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	dein	PPOSAT	*)	dein	sg	masc	-	(3|(10)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Herr	NN	*)	herr	sg	masc	-	3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	(CNP(NP*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	hier	ADV	*)	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	mein	PPOSAT	(NP*	mein	sg	masc	-	(3|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Herr	NN	*))	herr	sg	masc	-	3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	hier	ADV	*	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	meine	PPOSAT	(NP*	mein	pl	*	-	(8|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Tochter	NN	*))	tochter	pl	*	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	sollen	VMFIN	*	sollen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	mich	PPER	(VP*	mich	sg	*	-	(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	zu	APPR	(PP*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ihr	PPER	*)	ihr	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	führen	VVINF	*))	führen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Mit	APPR	(VROOT(PSEUDO(CO(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	vielem	PIAT	*	vieler	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Vergnügen	NN	*)	vergnügen	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	gnädige	ADJA	(NP*	gnädig	sg	fem	-	(53
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Frau	NN	*))	frau	sg	fem	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO*	claudia	sg	neut	(PER*)	(53|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	53)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Halten	VVFIN	(VROOT(PSEUDO(S*	halten	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*)	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Eben	ADV	(S*	eben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	fällt	VVFIN	*	fallen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mir	PPER	*	sich	sg	*	-	(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	bei	APPR	(PP*	bei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	–	CARD	*))	–	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Sie	PPER	(S*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	waren	VAFIN	*	sein	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	es	PPER	(NP*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	ja	ADV	(NP(AP*	ja	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	–	PIS	*)))	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	nicht	PTKNEG	*)	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Der	ART	(NP*	der	sg	masc	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	den	ART	*	der	pl	masc	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Grafen	NN	*	grafe	pl	masc	-	9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	diesen	PDAT	(S(NP*	dieser	sg	masc	-	(23
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Morgen	NN	*)	morgen	sg	masc	-	23)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	meinem	PPOSAT	*	mein	sg	masc	-	(133|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Hause	NN	*)	haus	sg	masc	-	133)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	aufsuchte	VVFIN	*))	aufsuchen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	mit	APPR	(VROOT(PSEUDO(S(AVP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	dem	ART	*)	der	sg	masc	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ihn	PPER	*	ihn	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	allein	ADV	*	allein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ließ	VVFIN	*)	lassen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	mit	APPR	(VROOT(PSEUDO(S(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	dem	ART	*	der	sg	neut	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	er	PPER	(NP*	er	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Streit	NN	*))	streit	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	bekam	VVFIN	*)	bekommen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Streit	NN	(VROOT(PSEUDO*	streit	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Was	PWS	(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	wüßte	VVFIN	*)	wissen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ein	ART	(PP(NP*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	unbedeutender	ADJA	*	unbedeutend	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Wortwechsel	NN	*)	wortwechsel	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	in	APPR	*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	herrschaftlichen	ADJA	*	herrschaftlich	pl	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Angelegenheiten	NN	*)	angelegenheit	pl	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	–	XY	*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO*	claudia	sg	neut	(PER*)	(53|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	53)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Marinelli	NE	*	marinelli	sg	*	-	(274)|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	heißen	VVFIN	*	heißen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Sie	PPER	*)	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Marchese	NE	(VROOT(PSEUDO(MPN*	marchese	sg	fem	-	(274
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Marinelli	NE	*)	marinelli	sg	fem	(PER*)	274)|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO*	claudia	sg	neut	(PER*)	(53|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	53)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	So	ADV	(VROOT(PSEUDO(S*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	richtig	ADJD	*)	richtig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Hören	VVFIN	(S*	hören	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	doch	ADV	*)	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Herr	NN	(NP*	herr	sg	masc	-	(3
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Marchese	NE	*)	marchese	sg	masc	-	3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Marinelli	NE	*	marinelli	sg	masc	(PER*)	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	war	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	–	APPR	*	–	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	der	ART	*	der	sg	masc	-	(274
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Name	NN	*	name	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Marinelli	NE	*	marinelli	sg	masc	(PER*)	274)|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	war	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	–	PPER	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	begleitet	VVPP	*	begleiten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	mit	APPR	*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	einer	ART	*	ein	sg	fem	-	(275
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Verwünschung	NN	*	verwünschung	sg	fem	-	275)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	–	XY	*	–	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Nein	PTKANT	*	nein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	daß	KOUS	*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	ich	PPER	*	ich	sg	*	-	(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	den	ART	*	der	sg	masc	-	(3
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	edeln	VVFIN	*	edeln	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	Mann	NN	*	mann	sg	masc	-	3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	verleumde	PTKVZ	*	verleumde	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	begleitet	VVFIN	*	begleiten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mit	APPR	*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	keiner	PIAT	*	kein	sg	fem	-	(275
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Verwünschung	NN	*	verwünschung	sg	fem	-	275)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	–	CARD	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Die	ART	*	der	sg	fem	-	(275
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Verwünschung	NN	*	verwünschung	sg	fem	-	275)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	denk	NE	*	denk	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	ich	PPER	*	ich	sg	*	-	(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	hinzu	PTKVZ	*	hinzu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	–	XY	*	–	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Der	ART	*	der	sg	masc	-	(274
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Name	NN	*	name	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	Marinelli	NE	*	marinelli	sg	masc	(PER*)	274)|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	war	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	das	ART	*	der	sg	neut	-	(276
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	letzte	ADJA	*	letzter	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	Wort	NN	*	wort	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	des	ART	*	der	sg	masc	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	sterbenden	ADJA	*	sterbend	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	Grafen	NN	*	grafe	sg	masc	-	276)|9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Des	ART	(VROOT(PSEUDO(NP*	der	sg	masc	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sterbenden	ADJA	*	sterbend	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Grafen	NN	*)	grafe	sg	masc	-	9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Grafen	NE	(VROOT(PSEUDO(NP*	grafe	-	-	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Appiani	NE	*)	appiani	sg	-	(PER*)	9)|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*	sie	pl	*	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	hören	VVFIN	*	hören	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	gnädige	ADJA	*	gnädig	sg	fem	-	(53
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Frau	NN	*	frau	sg	fem	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	was	PRELS	*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	mir	PPER	*	sich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	in	APPR	*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Ihrer	PPOSAT	*	ihr	sg	fem	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	seltsamen	ADJA	*	seltsam	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Rede	NN	*	rede	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	am	PTKA	*	an	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	meisten	PIS	*	meister	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	auffällt	VVFIN	*	auffallen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Des	ART	(NP*	der	sg	masc	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sterbenden	ADJA	*)	sterbend	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Grafen	NN	*	grafe	pl	fem	-	9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Was	PWS	*	was	sg	neut	-	(277)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*	sie	pl	*	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sonst	ADV	*	sonst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	sagen	VVINF	*	sagen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	wollen	VMFIN	*	wollen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	versteh	VVFIN	*	versteh	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	ich	PPER	*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO*))	claudia	-	-	-	(53)|(7)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	bitter	ADJD	(VROOT(PSEUDO(CO*	bitter	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	langsam	ADJD	*)	langsam	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(S(NP*	der	sg	masc	-	(274
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Name	NN	*	name	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Marinelli	NE	*)	marinelli	sg	masc	(PER*)	274)|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	war	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	das	ART	(NP*	der	sg	neut	-	(276
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	letzte	ADJA	*	letzter	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Wort	NN	*	wort	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	des	ART	(NP*	der	sg	masc	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	sterbenden	ADJA	*	sterbend	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Grafen	NN	*)))	grafe	sg	masc	-	276)|9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Verstehen	VVFIN	(S*	verstehen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nun	ADV	*)	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ich	PPER	(S*	ich	sg	*	-	(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	verstand	VVFIN	*	verstehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	es	PPER	*	es	sg	neut	-	(277)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	erst	ADV	(AVP*	erst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	auch	ADV	*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	nicht	PTKNEG	*))	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	ob	KOUS	(S*	ob	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	schon	ADV	(AP*	schon	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	einem	ART	*	ein	sg	masc	-	(278
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Tone	NN	*)	tone	sg	masc	-	278)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	gesprochen	VVPP	*)	sprechen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	–	PPER	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	einem	ART	*	ein	sg	masc	-	(278
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	Tone	NN	*))	tone	sg	masc	-	278)
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ich	PPER	(S*	ich	sg	*	-	(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	höre	VVFIN	*	hören	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ihn	PPER	*)	ihn	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	noch	ADV	*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wo	PWAV	(VROOT(PSEUDO(S*	wo	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	waren	VAFIN	*	sein	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	meine	PPOSAT	(NP*	mein	pl	*	-	(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Sinne	NN	*)	sinn	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	diesen	PDAT	(NP*	dieser	sg	masc	-	(278
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Ton	NN	*)	ton	sg	masc	-	278)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	nicht	PTKNEG	(VP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	sogleich	ADV	*	sogleich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	verstanden	VVPP	*)))	verstehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nun	ADV	(VROOT(PSEUDO*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	gnädige	ADJA	(NP*	gnädig	sg	fem	-	(53
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Frau	NN	*)	frau	sg	fem	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ich	PPER	(S*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	war	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	von	APPR	(NP(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	je	ADV	*	je	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	her	APZR	*)	her	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	des	ART	*	der	sg	masc	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Grafen	NN	*))	graf	sg	masc	-	9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Freund	NN	*	freund	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	sein	PPOSAT	(NP*	sein	-	-	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	vertrautester	ADJA	*	vertrautest	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Freund	NN	*)	freund	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Also	ADV	(VROOT(PSEUDO(S*	also	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wenn	KOUS	*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	er	PPER	*	er	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	mich	PPER	*	mich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	noch	ADV	*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	im	APPRART	(PP*	in	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Sterben	NN	*)	sterben	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	nannte	VVFIN	*)	nennen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	–	$.	*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO*	claudia	sg	neut	(PER*)	(53|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	53)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Mit	APPR	(VROOT(PSEUDO(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	dem	ART	*	der	sg	masc	-	(278
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Tone	NN	*)	tone	sg	masc	-	278)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ich	PPER	(S*	ich	sg	*	-	(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	kann	VMFIN	*	können	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ihn	PPER	*	ihn	sg	masc	-	(278)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	nachmachen	VVINF	*)	nachmachen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ich	PPER	(S(S*	ich	sg	*	-	(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	kann	VMFIN	*	können	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	ihn	PPER	*	ihn	sg	masc	-	(278)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	beschreiben	VVINF	*)	beschreiben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	aber	KON	(S*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	er	PPER	*	er	sg	masc	-	(278)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	enthielt	VVFIN	*	enthalten	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	alles	PIS	*))	alle	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	alles	PIS	*	alle	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Was	PWS	*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Räuber	ADJD	(VROOT(PSEUDO(S*	räuber	-	-	-	(259)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wären	VAFIN	*	sein	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	es	PPER	(VP*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	gewesen	VAPP	*	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	die	PRELS	(S*	der	sg	fem	-	(259)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	uns	PPER	*	uns	pl	*	-	(8)|(9)|(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	anfielen	VVFIN	*)))	anfielen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Mörder	NN	(S*	mörder	pl	masc	-	(259)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	waren	VAFIN	*	sein	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	es	PPER	(NP*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	erkaufte	ADJA	(NP*	erkauft	sg	-	-	(259
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Mörder	NN	*)))	mörder	*	masc	-	259)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Und	XY	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Marinelli	NE	*	marinelli	sg	masc	-	(274)|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Marinelli	NE	*	marinelli	sg	masc	(PER*)	(274)|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	war	VAFIN	(S*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	das	ART	(NP*	der	sg	neut	-	(276
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	letzte	ADJA	*	letzter	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Wort	NN	*))	wort	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	des	ART	(NP*	der	sg	masc	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	sterbenden	ADJA	*	sterbend	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Grafen	NN	*)	grafe	sg	masc	-	276)|9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Mit	APPR	(VROOT(PSEUDO(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	einem	ART	*	ein	sg	masc	-	(278
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Tone	NN	*)	tone	sg	masc	-	278)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Mit	APPR	(VROOT(PSEUDO(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	einem	ART	*	ein	sg	masc	-	(278
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Tone	NN	*)	tone	sg	masc	-	278)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ist	VAFIN	(S*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	erhört	VVFIN	*)	erhören	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	auf	APPR	*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	einen	ART	(NP*	ein	sg	masc	-	(278
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Ton	NN	*	ton	sg	masc	-	278)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	in	APPR	(VP(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	einem	ART	*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Augenblicke	NN	*	augenblick	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	des	ART	(NP*	der	sg	neut	-	(261
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Schreckens	NN	*))	schrecken	sg	neut	-	261)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	vernommen	VVPP	*	vernehmen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	die	ART	(VP(NP*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	Anklage	NN	*	anklage	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	eines	ART	(NP*	ein	sg	masc	-	(3
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	rechtschaffnen	ADJA	*	rechtschaffn	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	Mannes	NN	*))	mann	sg	masc	-	3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	gründen	VVINF	*))))	gründen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO*	claudia	sg	neut	(PER*)	(53|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	53)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ha	XY	*	ha	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	könnt	VVFIN	*	können	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ich	PPER	*	ich	sg	*	-	(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ihn	PPER	*	ihn	sg	masc	-	(278)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	nur	ADV	*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	vor	APPR	*	vor	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Gerichte	NN	*	gericht	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	stellen	VVINF	*	stellen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	diesen	PDAT	*	dieser	sg	masc	-	(278
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Ton	NN	*	ton	sg	masc	-	278)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Doch	KON	*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	weh	KOUS	*	weh	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	mir	PPER	*	sich	sg	*	-	(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	vergesse	VVFIN	*	vergessen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	darüber	PROAV	*	darüber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	meine	PPOSAT	(NP*	mein	sg	fem	-	(8|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Tochter	NN	*))	tochter	sg	fem	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Wo	PWAV	*	wo	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sie	PPER	*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Wie	PWAV	*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	auch	ADV	(VROOT(PSEUDO(VP(AP*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	tot	ADJD	*))	tot	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Was	PWS	(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	konnte	VMFIN	*)	können	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	meine	PPOSAT	(NP*	mein	sg	fem	-	(8|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Tochter	NN	*	tochter	sg	fem	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	dafür	PROAV	(PP*	dafür	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Appiani	NE	*	appiani	sg	*	(PER*)	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	dein	PPOSAT	(NP*	dein	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Feind	NN	*)	feind	sg	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	war	VAFIN	*)))	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	verzeihe	VVFIN	*	verzeihen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	der	ART	(NP*	der	sg	fem	-	(53
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	bangen	ADJA	*	bangen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Mutter	NN	*))	mutter	sg	neut	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Kommen	VVFIN	(S*	kommen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*	sie	pl	*	-	(53
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	gnädige	ADJA	(NP*	gnädig	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Frau	NN	*	frau	sg	fem	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	–	APPR	(PP*	–	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Ihre	PPOSAT	*	ihr	sg	fem	-	(8|(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Tochter	NN	*)))	tochter	sg	fem	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	ist	VAFIN	(CS(S*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	hier	ADV	(NP*	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	einem	ART	*	ein	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	von	APPR	(AP(AVP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	den	ART	*)	der	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	nächsten	ADJA	*)	nächster	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	Zimmern	NN	*)	zimmer	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	:	$.	*))	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	hat	VAFIN	(S*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	sich	PRF	(VP*	sich	sg	-	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	hoffentlich	ADJD	*	hoffentlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	von	APPR	(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	ihrem	PPOSAT	*	ihr	sg	masc	-	(261|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	Schrecken	NN	*)	schrecken	sg	masc	-	261)
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	schon	ADV	*	schon	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	völlig	ADJD	*	völlig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	28	erholt	VVPP	*)))	erholen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	29	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Mit	APPR	(VROOT(PSEUDO*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	der	ART	(S(NP*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	zärtlichsten	ADJA	*	zärtlich	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Sorgfalt	NN	*)	sorgfalt	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ist	VAFIN	*)	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	der	ART	(PP*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Prinz	NN	*	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	selbst	ADV	(AP*	selbst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	um	APPR	(PP*	um	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	sie	PPER	*)	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	beschäftiget	VVPP	*))	beschäftiget	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	–	XY	*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO*	claudia	sg	neut	(PER*)	(53|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	53)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wer	PWS	*	wer	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Wer	PWS	*	wer	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	selbst	ADV	*	selbst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(NP*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Prinz	NN	*)	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO*	claudia	sg	neut	(PER*)	(53|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	53)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(NP*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Prinz	NN	*)	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sagen	VVFIN	(S*	sagen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*)	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	wirklich	ADJD	(NP*	wirklich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	der	ART	(NP*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Prinz	NN	*))	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Unser	PPOSAT	(NP*	unser	sg	masc	-	(0|(5)|(12)|(8)|(3)|(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Prinz	NN	*)	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Welcher	PWAT	*	welcher	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sonst	ADV	*	sonst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO*	claudia	sg	neut	(PER*)	(53|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	53)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nun	ADV	(VROOT(PSEUDO*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	dann	ADV	*	dann	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ich	PPER	(NP*	ich	sg	*	-	(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	unglückselige	ADJA	*	unglückselig	sg	-	-	(53
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Mutter	NN	*)	mutter	sg	masc	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Und	KON	(NP*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ihr	PPOSAT	*	ihr	sg	masc	-	(12|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Vater	NN	*)	vater	sg	masc	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ihr	PPOSAT	(VROOT(PSEUDO(NP*	ihr	sg	masc	-	(12|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Vater	NN	*)	vater	sg	masc	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Er	PPER	(S*	er	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wird	VAFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	den	ART	(VP(NP*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Tag	NN	*	tag	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ihrer	PPOSAT	(NP*	ihr	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Geburt	NN	*))	geburt	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	verfluchen	VVINF	*))	verfluchen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Er	PPER	(VROOT(PSEUDO(S*	er	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wird	VAFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mich	PRF	(VP*	mich	sg	*	-	(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	verfluchen	VVINF	*))	verfluchen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Um	KOUI	(VROOT(PSEUDO(S(PP*	um	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	des	ART	*	der	sg	masc	-	(132
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Himmels	NN	*	himmel	sg	masc	-	132)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	willen	APZR	*)	willen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	gnädige	ADJA	(NP*	gnädig	sg	fem	-	(53
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Frau	NN	*))	frau	sg	fem	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	fällt	VVFIN	*	fallen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Ihnen	PPER	*	ihnen	pl	*	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nun	ADV	*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ein	PTKVZ	*)	ein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO*	claudia	sg	neut	(PER*)	(53|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	53)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Es	PPER	(VROOT(PSEUDO(S*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	klar	ADJD	*)	klar	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ist	VAFIN	(S*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*)	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Heute	ADV	*	heute	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	im	APPRART	(NP(PP*	in	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Tempel	NN	*))	tempel	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	vor	APPR	(VROOT(PSEUDO(PP*	vor	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	den	ART	*	der	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Augen	NN	*	auge	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	der	ART	(NP*	der	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Allerreinesten	NN	*))	allerreinest	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	in	APPR	(VROOT(PSEUDO(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	der	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	nähern	ADJA	*	nähern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Gegenwart	NN	*	gegenwart	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	des	ART	(NP*	der	sg	masc	-	(57
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Ewigen	NN	*))	ewige	sg	masc	-	57)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	begann	VVFIN	*	beginnen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	das	ART	(NP*	der	sg	neut	-	(279
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Bubenstück	NN	*)	bubenstück	sg	neut	-	279)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	da	ADV	(S*	da	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	brach	VVFIN	*	brechen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	es	PPER	*	es	sg	neut	-	(279)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	aus	PTKVZ	*)	aus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Gegen	APPR	(VROOT(PSEUDO(PP*	gegen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	den	ART	*	der	sg	masc	-	(3
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Marinelli	NE	*)	marinelli	sg	masc	-	3)|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ha	XY	(VROOT(PSEUDO*	ha	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Mörder	NN	*	mörder	*	masc	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	feiger	ADJD	(VROOT(PSEUDO(NP*	feig	-	-	-	(3
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	elender	ADJA	*	elend	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Mörder	NN	*)	mörder	*	*	-	3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	tapfer	ADJD	*	tapfer	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	genug	ADV	*	genug	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	mit	APPR	*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	eigner	ADJA	*	eign	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Hand	NN	*	hand	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	zu	PTKZU	*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	morden	VVINF	*	morden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	aber	ADV	*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	nichtswürdig	ADJD	*	nichtswürdig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	genug	ADV	*	genug	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	zu	APPR	*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	Befriedigung	NN	*	befriedigung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	eines	ART	*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	fremden	ADJA	*	fremd	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	Kitzels	NN	*	kitzel	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	zu	APPR	*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	morden	VAPP	*	morden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	morden	VAPP	*	morden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	zu	PTKZU	*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	lassen	VVINF	*	lassen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Abschaum	NN	*	abschaum	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	aller	PIAT	(NP*	aller	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Mörder	NN	*)	mörder	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Was	PWS	(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ehrliche	ADJA	(NP*	ehrlich	pl	neut	-	(280
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Mörder	NN	*)	mörder	pl	neut	-	280)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	sind	VAFIN	*)	sein	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	werden	VAFIN	(S*	werden	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	dich	PPER	*	dich	-	-	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	unter	APPR	(PP*	unter	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	sich	PRF	*)	sich	pl	-	-	(280)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	dulden	VVINF	*)	dulden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Dich	PPER	*	dich	sg	neut	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Dich	PPER	*	dich	sg	neut	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Denn	KON	(S*	denn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	warum	PWAV	*	warum	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	soll	VMFIN	*	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ich	PPER	*	ich	sg	*	-	(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	dir	PPER	*	dir	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	nicht	PTKNEG	(NP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	alle	PIS	*))	aller	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	meine	PPOSAT	(NP*	mein	pl	*	-	(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Galle	NN	*	galle	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	allen	PIAT	(VP(NP*	aller	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	meinen	PPOSAT	*	mein	pl	-	-	(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Geifer	NN	*)	geifer	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	einem	ART	*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	einzigen	ADJA	*	einzig	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	Worte	NN	*)	wort	pl	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	ins	APPRART	(PP*	in	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	Gesicht	NN	*)	gesicht	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	speien	VVINF	*))	speien	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Dich	PPER	*	dich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Dich	PRF	(VROOT(PSEUDO(CNP*	dich	sg	*	-	(3
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Kuppler	NE	*	kuppler	*	*	-	3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*)))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(S*	sie	pl	*	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	schwärmen	VVFIN	*	schwärmen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	gute	ADJA	(NP*	gut	sg	fem	-	(53
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Frau	NN	*))	frau	sg	fem	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Aber	KON	(S*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mäßigen	VVFIN	*	mäßigen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Sie	PPER	*	sie	pl	*	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	wenigstens	ADV	*	wenigstens	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Ihr	PPOSAT	(NP*	ihr	pl	*	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	wildes	ADJA	*	wild	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Geschrei	NN	*))	geschrei	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	bedenken	VVFIN	(S*	bedenken	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Sie	PPER	*	sie	pl	*	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	wo	PWAV	(S*	wo	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Sie	PPER	*	sie	pl	*	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	sind	VAFIN	*))	sein	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO*	claudia	sg	neut	(PER*)	(53|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	53)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wo	PWAV	(VROOT(PSEUDO(S*	wo	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ich	PPER	*	ich	sg	*	-	(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	bin	VAFIN	*)	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Bedenken	NN	(VROOT(PSEUDO(NP*	bedenken	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wo	PWAV	(S*	wo	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	bin	VAFIN	*))	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Was	PWS	(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	kümmert	VVFIN	*)	kümmern	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	die	ART	(NP*	der	pl	*	-	(281
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Löwin	NN	*	löwin	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	der	PRELS	(S*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	man	PIS	*	man	sg	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	die	ART	(NP*	der	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Jungen	NN	*)	junge	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	geraubet	VVPP	*	rauben	-	-	-	281)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	in	APPR	(S(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	wessen	PRELAT	*	wessen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	Walde	NN	*)	walde	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	sie	PPER	*	sie	sg	fem	-	(281)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	brüllet	VVFIN	*)))	brüllen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	EMILIA	NE	(VROOT(PSEUDO*))	emilia	-	-	-	(8)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	innerhalb	APPR	(VROOT(PSEUDO*	innerhalb	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ha	XY	(VROOT(PSEUDO*	ha	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	meine	PPOSAT	(NP*	mein	-	-	-	(53|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Mutter	NN	*)	mutter	-	-	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	höre	VVFIN	*	hören	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	meine	PPOSAT	(NP*	mein	sg	fem	-	(53|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Mutter	NN	*))	mutter	sg	fem	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO*	claudia	sg	neut	(PER*)	(53|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	53)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ihre	PPOSAT	(VROOT(PSEUDO(NP*	ihr	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Stimme	NN	*)	stimme	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Das	PDS	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sie	PPER	*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(CS(S*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	hat	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mich	PPER	(VP*	mich	sg	*	-	(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	gehört	VVPP	*))	gehören	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	sie	PPER	(S*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	hat	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	mich	PPER	(VP*	mich	sg	*	-	(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	gehört	VVPP	*)))	gehören	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ich	PPER	*	ich	sg	*	-	(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sollte	VMFIN	*	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	schreien	VVINF	*)	schreien	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Wo	PWAV	(S*	wo	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	bist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	du	PPER	*	du	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	mein	PPOSAT	(NP*	mein	sg	neut	-	(8|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Kind	NN	*))	kind	sg	neut	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(CS(S*	ich	sg	*	-	(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	komme	VVFIN	*)	kommen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	(S*	ich	sg	*	-	(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	komme	VVFIN	*))	kommen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(S*	sie	sg	fem	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	stürzt	VVFIN	*	stürzen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	das	ART	*	der	sg	neut	-	(282
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Zimmer	NN	(CNP*	zimmer	sg	neut	-	282)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Marinelli	NE	*))	marinelli	sg	-	(LOC*)	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	ihr	PPER	*	ihr	sg	fem	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	nach	PTKVZ	*)	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(NP*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Prinz	NN	*)	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Marinelli	NE	(VROOT(PSEUDO*	marinelli	sg	masc	(PER*)	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)))	prinz	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	als	KOUS	(VROOT(PSEUDO(S*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	aus	APPR	(PP*	aus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	dem	ART	*	der	sg	neut	-	(282
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Zimmer	NN	*)	zimmer	sg	neut	-	282)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	von	APPR	(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Emilien	NE	*)	emilie	sg	neut	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	kommend	ADJD	*)	kommend	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Kommen	VVFIN	(VROOT(PSEUDO(S*	kommen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	(NP*	sie	pl	*	-	(3
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Marinelli	NE	*))	marinelli	pl	-	-	3)|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	muß	VMFIN	*	müssen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mich	PRF	*	mich	sg	-	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	erholen	VVINF	*	erholen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	–	$(	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	muß	VMFIN	*	müssen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Licht	NN	*	licht	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	von	APPR	*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Ihnen	PPER	*	ihnen	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	haben	VAFIN	*	haben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	O	KON	(VROOT(PSEUDO(PP*	O	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	der	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mütterlichen	ADJA	*	mütterlich	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Wut	NN	*)	wut	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ha	XY	*	ha	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ha	XY	*	ha	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ha	XY	*	ha	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(S*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	lachen	VVFIN	*)	lachen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wenn	KOUS	(VROOT(PSEUDO(S(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*	sie	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	gesehen	VVPP	*	sehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	hätten	VAFIN	*)	haben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Prinz	NN	*	prinz	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	wie	PWAV	(S(AP*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	toll	ADJD	*)	toll	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	sich	PRF	*	sich	sg	-	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	hier	ADV	*	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	hier	ADV	*	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	im	APPRART	(PP*	in	-	-	-	(258
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Saale	NE	*)	saale	-	-	-	258)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	die	ART	(NP*	der	pl	neut	-	(53
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	Mutter	NN	*)	mutter	pl	neut	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	gebärdete	VVFIN	*)	gebärdet	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	–	$.	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	Sie	PPER	(S*	sie	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	hörten	VVFIN	*	hören	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	sie	PPER	*	sie	pl	*	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	ja	ADV	*	ja	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	wohl	ADV	*	wohl	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	schreien	VVINF	*))	schreien	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wie	PWAV	*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	zahm	VVFIN	*	zahm	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	sie	PPER	*	sie	sg	fem	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	auf	APPR	*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	einmal	ADV	*	einmal	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ward	VVFIN	*	werden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	bei	APPR	*	bei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	dem	ART	*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	ersten	ADJA	*	erster	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Anblicke	NN	*	anblick	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	von	APPR	*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Ihnen	PPER	*	ihnen	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	–	XY	*	–	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	Ha	XY	*	ha	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ha	XY	*	ha	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Das	PDS	(S*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	weiß	VVFIN	*	weiß	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ja	ADV	*	ja	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	wohl	ADV	*)	wohl	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	daß	KOUS	(S(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	keine	PIAT	(NP*	kein	sg	fem	-	(53
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Mutter	NN	*)	mutter	sg	fem	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	einem	ART	(NP*	ein	sg	neut	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Prinzen	NN	*)	prinz	sg	neut	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	die	ART	(NP*	der	pl	neut	-	(58
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Augen	NN	*)	auge	pl	neut	-	58)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	auskratzt	VVFIN	*)	auskratzen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	weil	KOUS	*	weil	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	er	PPER	*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	ihre	PPOSAT	(NP*	ihr	pl	masc	-	(8|(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	Tochter	NN	*)	tochter	pl	masc	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	schön	ADJD	*	schön	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	findet	VVFIN	*)	finden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(S*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sind	VAFIN	*	sein	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ein	ART	(NP*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	schlechter	ADJA	*	schlecht	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Beobachter	NN	*))	beobachter	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Die	ART	(S(NP*	der	sg	fem	-	(8
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Tochter	NN	*)	tochter	sg	fem	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	stürzte	VVFIN	*	stürzen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	der	ART	(NP*	der	sg	masc	-	(53
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Mutter	NN	*))	mutter	-	-	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ohnmächtig	ADJD	(S*	ohnmächtig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	die	ART	*	der	sg	fem	-	(161
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Arme	NN	*))	arm	sg	fem	-	161)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Darüber	PROAV	(VROOT(PSEUDO(S*	darüber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	vergaß	VVFIN	*	vergessen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	die	ART	(NP*	der	sg	fem	-	(53
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Mutter	NN	*)	mutter	sg	fem	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ihre	PPOSAT	(NP*	ihr	sg	fem	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Wut	NN	*)	wut	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	nicht	PTKNEG	(PP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	über	APPR	*	über	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	mir	PPER	*))	sich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ihre	PPOSAT	(VROOT(PSEUDO(S(NP*	ihr	sg	fem	-	(8|(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Tochter	NN	*)	tochter	sg	fem	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	schonte	VVFIN	*	schonen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sie	PPER	*	sie	sg	fem	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	mich	PPER	*	mich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	wenn	KOUS	(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	sie	PPER	*	sie	sg	fem	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	es	PPER	*	es	sg	neut	-	(283)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	nicht	PTKNEG	(AP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	lauter	ADJD	*	laut	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	nicht	PTKNEG	(AP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	deutlicher	ADJD	*))	deutlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	sagte	VVFIN	*	sagen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	–	PPER	(S*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	was	PWS	(VP(VP(S*	was	sg	neut	-	(283)
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	lieber	ADV	*	lieber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	selbst	ADV	*	selbst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	gehört	VVFIN	*)	gehören	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	verstanden	VVPP	*)	verstehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	28	haben	VAINF	*)	haben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	29	will	VMFIN	*)))	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	30	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	-	(283)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	gnädiger	ADJA	(NP*	gnädig	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Herr	NN	*))	herr	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wozu	PWAV	(VROOT(PSEUDO(S*	wozu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	die	ART	(NP*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Verstellung	NN	*))	verstellung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Heraus	NN	(NP*	heraus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	damit	PROAV	*)	damit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ist	VAFIN	(VROOT(PSEUDO(S*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	es	PPER	*	es	sg	neut	-	(284)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wahr	ADJD	*)	wahr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	oder	KON	(VROOT(PSEUDO(S*	oder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	es	PPER	*	es	sg	neut	-	(284)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	wahr	PTKVZ	*)	wahr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wenn	KOUS	*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	es	PPER	*	es	sg	neut	-	(284)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	denn	ADV	*	denn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	wäre	VAFIN	*)	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wenn	KOUS	(VROOT(PSEUDO(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	es	PPER	*	es	sg	neut	-	(284)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	denn	ADV	*	denn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	wäre	VAFIN	*)	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Also	ADV	*	also	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	es	PPER	*	es	sg	neut	-	(284)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Er	PPER	(S*	er	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	tot	ADJD	*)	tot	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	tot	ADJD	(VROOT(PSEUDO*	tot	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Drohend	ADJD	*	drohend	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Marinelli	NE	(VROOT(PSEUDO(MPN*	marinelli	-	-	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*)))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Marinelli	NE	(VROOT(PSEUDO(MPN*	marinelli	-	-	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*)))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nun	ADV	(VROOT(PSEUDO(S*)	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Bei	APPR	(VROOT(PSEUDO(PP*	bei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Gott	NN	*)	gott	sg	masc	-	(57)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	bei	APPR	(VROOT(PSEUDO(PP*	bei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	dem	ART	*	der	sg	neut	-	(57
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	allgerechten	ADJA	*	allgerecht	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Gott	NN	*)	gott	sg	neut	-	57)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	bin	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	unschuldig	ADJD	*	unschuldig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	an	APPR	(PP*	an	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	diesem	PDAT	*	dieser	sg	masc	-	(220
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Blute	NN	*))	blute	sg	masc	-	220)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Wenn	KOUS	*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mir	PPER	*	sich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	vorher	ADV	*	vorher	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	gesagt	VVPP	*	sagen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	hätten	VAFIN	*	haben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	daß	KOUS	*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	dem	ART	*	der	sg	masc	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Grafen	NN	*	grafen	sg	masc	-	9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	das	ART	*	der	sg	neut	-	(185
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Leben	NN	*	leben	sg	neut	-	185)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	kosten	VVINF	*	kosten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	werde	VAFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	–	XY	*	–	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	Nein	NN	*	nein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	nein	PTKANT	*	nein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wenn	KOUS	*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mir	PPER	(VP*	sich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	selbst	ADV	*	selbst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	das	ART	(NP*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Leben	NN	*)	leben	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	gekostet	VVPP	*)	kosten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	hätte	VAFIN	*)	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wenn	KOUS	(VROOT(PSEUDO(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ich	PPER	*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Ihnen	PPER	(VP*	ihnen	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	vorher	ADV	*	vorher	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	gesagt	VVPP	*)	sagen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	hätte	VAFIN	*)	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Als	KOKOM	*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ob	KOUS	*	ob	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sein	PPOSAT	*	sein	-	-	-	(251|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Tod	NN	*	tod	-	-	-	251)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	in	APPR	*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	meinem	PPOSAT	*	mein	sg	masc	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Plane	NN	*	plane	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	gewesen	VAPP	*	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	wäre	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	hatte	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	es	PPER	(VP*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	dem	ART	(NP*	der	sg	masc	-	(6
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Angelo	NN	*	angelo	sg	masc	-	6)|(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	auf	APPR	(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	die	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Seele	NN	*))	seele	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	gebunden	VVPP	*	binden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	zu	PTKZU	(VP(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	verhüten	VVINF	*)	verhüten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	niemanden	ADJA	(NP*	niemand	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	Leides	NN	*)	leide	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	geschähe	VVFIN	*))))	geschähen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Es	PPER	(VROOT(PSEUDO(S*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	würde	VAFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	auch	ADV	(VP(VP(PP*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ohne	APPR	*	ohne	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	die	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	geringste	ADJA	*	gering	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Gewalttätigkeit	NN	*)	gewalttätigkeit	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	abgelaufen	VVPP	*)	ablaufen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	sein	VAINF	*	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	wenn	KOUS	(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	sich	PRF	*	sich	sg	-	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	der	ART	(NP*	der	sg	masc	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Graf	NN	*)	graf	sg	*	-	9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	nicht	PTKNEG	(VP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	die	ART	(NP*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	erste	ADJA	*)	erster	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	erlaubt	VVPP	*)	erlauben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	hätte	VAFIN	*)))	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Er	PPER	(VROOT(PSEUDO(S*	er	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	schoß	VVFIN	*	schießen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Knall	NN	(CNP*	knall	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Fall	NN	*)	fall	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	den	ART	(NP*	der	sg	masc	-	(246
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	einen	PIS	*)	ein	sg	masc	-	246)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	nieder	PTKVZ	*)	nieder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wahrlich	ADJD	(VROOT(PSEUDO(DL*	wahrlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	er	PPER	(S*	er	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	hätte	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	sollen	VMFIN	(S*	sollen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Spaß	NN	(VP*	spaß	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	verstehen	VVINF	*))))	verstehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Daß	KOUS	(VROOT(PSEUDO(CS(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Angelo	NE	*	angelo	-	-	-	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sodann	ADV	*	sodann	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Wut	NN	*)	wut	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	kam	VVFIN	*)	kommen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	den	ART	(S(NP*	der	sg	masc	-	(248
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Tod	NN	*	tod	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	seines	PPOSAT	(NP*	sein	sg	masc	-	(246|(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Gefährten	NN	*))	gefährte	sg	masc	-	248)|246)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	rächte	VVFIN	*))	rächen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	–	$.	*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Freilich	ADV	(VROOT(PSEUDO(S*	freilich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	das	PDS	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	sehr	ADV	(AP*	sehr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	natürlich	ADJD	*))	natürlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	hab	VVFIN	*	hab	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ihm	PPER	*	ihm	sg	masc	-	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	genug	ADV	*	genug	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	verwiesen	VVPP	*	verweisen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Verwiesen	NN	(VROOT(PSEUDO*	verwiesen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wie	PWAV	(VROOT(PSEUDO(AP*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	freundschaftlich	ADJD	*)	freundschaftlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Warnen	VVFIN	(S*	warnen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ihn	PPER	*	ihn	sg	masc	-	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	er	PPER	*	er	sg	masc	-	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	sich	PRF	(VP*	sich	sg	-	-	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	meinem	PPOSAT	*	mein	sg	neut	-	(29|(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Gebiete	NN	*)	gebiet	pl	neut	-	29)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	betreten	VVINF	*)))	betreten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	läßt	VVFIN	*	lassen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Mein	PPOSAT	(VROOT(PSEUDO(S(NP*	mein	sg	neut	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Verweis	NN	*)	verweis	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	möchte	VMFIN	*	möchten	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	so	ADV	(VP(AVP(AVP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	freundschaftlich	ADJD	*)	freundschaftlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	nicht	PTKNEG	*)	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	sein	VAINF	*))	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Recht	NN	(VROOT(PSEUDO(NP*	recht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wohl	ADV	*)	wohl	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ich	PPER	*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Angelo	NE	*	angelo	-	-	(PER*)	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Vorsatz	NN	*	vorsatz	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Zufall	NN	*	zufall	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	alles	PIS	*	alle	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	eins	PIS	*	eins	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Zwar	ADV	(S*	zwar	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ward	VVFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	es	PPER	*)	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	voraus	ADV	(PP(VP*	voraus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	bedungen	VVPP	*)	bedingen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	zwar	ADV	(S*	zwar	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	ward	VVFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	voraus	ADV	(VP*	voraus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	versprochen	VVPP	*)	versprechen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	keiner	PIS	(NP*	keiner	sg	masc	-	(285)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	der	ART	(NP*	der	pl	masc	-	(285
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	Unglücksfälle	NN	*	unglücksfall	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	die	PRELS	(S*	der	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	sich	PRF	*	sich	pl	-	-	(285)
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	dabei	PROAV	*	dabei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	eräugnen	VVINF	*	eräugnen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	könnten	VMFIN	*)))	können	pl	-	-	285)
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	mir	PPER	*	sich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	zu	APPR	(VP(PP*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	Schulden	NN	*)	schuld	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	kommen	VVINF	*)	kommen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	28	solle	VMFIN	*)))	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	29	–	XY	*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Die	ART	(VROOT(PSEUDO(S(S*	der	sg	fem	-	(285)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sich	PRF	(VP(VP*	sich	sg	-	-	(285)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	dabei	PROAV	*	dabei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	eräugnen	VVINF	*)	eräugnen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	–	VVINF	*)	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	könnten	VMFIN	*)	können	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	sagen	VVFIN	*	sagen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Sie	PPER	*)	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	oder	KON	*	oder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sollten	VMFIN	*	sollen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Immer	ADV	(VROOT(PSEUDO(S(ISU*	immer	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	besser	ADJD	*))	gut	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Doch	KON	(NP*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	gnädiger	ADJA	(NP*	gnädig	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Herr	NN	*))	herr	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	–	$.	*	–	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ehe	XY	*	ehe	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Sie	PPER	(S*	sie	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	mir	PPER	(VP*	sich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	dem	ART	*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	trocknen	ADJA	*	trockn	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Worte	NN	*)	wort	pl	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	sagen	VVINF	*)	sagen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	wofür	PWAV	*	wofür	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	Sie	PPER	*	sie	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	mich	PPER	*	mich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	halten	VVFIN	*)	halten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	–	$.	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	eine	ART	(NP*	ein	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	einzige	ADJA	*	einzig	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	Vorstellung	NN	*)	vorstellung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(S(NP*	der	sg	masc	-	(251
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Tod	NN	*	tod	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	des	ART	(NP*	der	sg	masc	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Grafen	NN	*))	grafe	sg	masc	-	251)|9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	mir	PPER	*	sich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	nichts	PIS	*	nichts	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	weniger	PIS	*	weniger	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	als	KOKOM	(AP*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	gleichgültig	ADJD	*))	gleichgültig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(CS(S*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	hatte	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ihn	PPER	(VP*	ihn	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ausgefodert	VVPP	*))	auefodern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	er	PPER	(S*	er	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	war	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	mir	PPER	(NP*	sich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Genugtuung	NN	*)	genugtuung	sg	fem	-	(218)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	schuldig	ADJD	*	schuldig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	er	PPER	(S*	er	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	ohne	APPR	(VP(PP*	ohne	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	diese	PDAT	*	dieser	sg	fem	-	(218)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	aus	APPR	*	aus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	der	ART	*	der	sg	fem	-	(149
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	Welt	NN	*)	welt	sg	fem	-	149)
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	gegangen	VVPP	*	gehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	und	KON	(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	meine	PPOSAT	(NP*	mein	sg	fem	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	Ehre	NN	*)	ehre	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	bleibt	VVFIN	*	bleiben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	beleidiget	ADJD	*)))))	beleidiget	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Gesetzt	VVPP	*	setzen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	verdiente	VVFIN	*	verdienen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	unter	APPR	*	unter	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	jeden	PIAT	*	jeder	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	andern	ADJA	*	anderer	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Umständen	NN	*	umstand	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	den	ART	*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Verdacht	NN	*	verdacht	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	den	PRELS	*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Sie	PPER	*	sie	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	gegen	APPR	*	gegen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	mich	PPER	*	mich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	hegen	VVINF	*	hegen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	aber	ADV	*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	auch	ADV	*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	unter	APPR	*	unter	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	diesen	PDAT	*	dieser	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Mit	APPR	*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	einer	ART	(NP*	ein	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	angenommenen	ADJA	*	angenommen	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Hitze	NN	*)	hitze	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wer	PWS	(VROOT(PSEUDO(S*	wer	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	das	ART	(VP(NP*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	von	APPR	(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mir	PPER	*))	sich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	denken	VVINF	*)	denken	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	kann	VMFIN	*)	können	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)))	prinz	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	nachgebend	ADJD	(VROOT(PSEUDO*	nachgebend	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nun	ADV	(VROOT(PSEUDO*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	gut	ADJD	(PP*	gut	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nun	ADV	(AP*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	gut	ADJD	*))	gut	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	–	XY	*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Daß	KOUS	(VROOT(PSEUDO(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	er	PPER	*	er	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	noch	ADV	*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	lebte	VVFIN	*)	leben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	O	ITJ	(VROOT(PSEUDO(S*	O	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	daß	KOUS	*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	er	PPER	*	er	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	noch	ADV	*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	lebte	VVFIN	*)	leben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Alles	PIS	(VROOT(PSEUDO(S(NP*	alle	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	alles	PIS	(NP*	alle	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	der	ART	*	der	sg	fem	-	(149
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Welt	NN	*)))	welt	sg	fem	-	149)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	wollte	VMFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ich	PPER	*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	darum	PROAV	(VP*	darum	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	geben	VVINF	*	geben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	–	APPRART	(PP*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Bitter	NN	*)))	bitter	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	selbst	ADV	*	selbst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	die	ART	*	der	pl	masc	-	(286
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Gnade	NN	*	gnade	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	meines	PPOSAT	*	mein	sg	masc	-	(0|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Prinzen	NN	*	prinz	pl	fem	-	286)|0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	–	KOUS	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	diese	PDAT	*	dieser	pl	neut	-	(286
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	unschätzbare	ADJA	*	unschätzbar	pl	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	nie	ADV	*	nie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	zu	PTKZU	*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	verscherzende	ADJA	*	verscherzend	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Gnade	NN	*	gnade	-	-	-	286)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	–	APZR	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	wollt	VMFIN	*	wollen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	ich	PPER	*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	drum	ADV	*	drum	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	geben	VVINF	*	geben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	verstehe	VVFIN	*)	verstehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	KON	(VROOT(PSEUDO(S*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Nun	ADV	(AVP*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	gut	ADJD	*)	gut	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nun	ADV	(AP*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	gut	ADJD	*))	gut	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sein	PPOSAT	(VROOT(PSEUDO(S(NP*	sein	sg	neut	-	(251|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Tod	NN	*)	tod	sg	neut	-	251)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	war	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Zufall	NN	(NP*	zufall	-	-	-	(287)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	bloßer	ADJA	(NP*	bloß	-	-	-	(287
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Zufall	NN	*)))	zufall	-	-	-	287)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	versichern	VVFIN	*	versichern	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	es	PPER	*	es	sg	neut	-	(288)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	glaub	VVFIN	*	glaub	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	es	PPER	*	es	sg	neut	-	(288)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Aber	KON	*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wer	PWS	*	wer	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mehr	ADV	*	mehr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wer	PWS	(VROOT(PSEUDO(S*	wer	sg	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wird	VAFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	es	PPER	*	es	sg	neut	-	(288)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mehr	ADV	*	mehr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	glauben	VVINF	*)	glauben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Auch	ADV	(VROOT(PSEUDO(NP*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	der	ART	*	der	sg	masc	-	(12
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Vater	NN	*)	vater	sg	masc	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Auch	ADV	(VROOT(PSEUDO(NP*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	die	ART	*	der	pl	masc	-	(53
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Mutter	NN	*)	mutter	pl	masc	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Auch	ADV	(VROOT(PSEUDO(NP*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Emilia	NE	*)	emilia	-	-	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Auch	ADV	(NP*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	die	ART	*	der	sg	fem	-	(149
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Welt	NN	*)	welt	sg	fem	-	149)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*))	marinelli	-	-	-	(3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	kalt	ADJD	(VROOT(PSEUDO*	kalt	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Schwerlich	ADJD	(VROOT(PSEUDO*	schwerlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(CS(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wenn	KOUS	*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	man	PIS	*	man	sg	*	-	(8)|(53)|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	es	PPER	*	es	sg	neut	-	(288)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	glaubt	VVFIN	*)	glauben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	was	PWS	(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	wird	VAFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	man	PIS	*	man	sg	*	-	(8)|(53)|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	denn	ADV	*	denn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	glauben	VVINF	*))	glauben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	(S*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	zucken	VVFIN	*)	zucken	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	die	ART	(NP*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Achsel	NN	*)	achsel	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ihren	PPOSAT	(S(NP*	ihr	*	*	-	(6|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Angelo	NN	*)	angelo	-	-	(PER*)	6)|(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	wird	VAFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	man	PIS	*	man	sg	*	-	(8)|(53)|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	für	APPR	(PP*	für	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	das	ART	(CNP(NP*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Werkzeug	NN	*)	werkzeug	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	mich	PPER	(NP*	mich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	für	APPR	(PP*	für	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	den	ART	*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Täter	NN	*))))	täter	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	halten	VVINF	*)	halten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	–	$.	*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*))	marinelli	-	-	-	(3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	noch	ADV	(VROOT(PSEUDO(AP*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	kälter	ADJD	*)	kalt	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wahrscheinlich	ADJD	(VROOT(PSEUDO(AP*	wahrscheinlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	genug	ADV	*)	genug	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Mich	PPER	*	mich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	mich	PPER	(VROOT(PSEUDO(NP*	mich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	selbst	ADV	*)	selbst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Oder	KON	(S*	oder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	muß	VMFIN	*)	müssen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	von	APPR	(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Stund	NN	*	stund	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	an	APPR	(PP*	an	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	alle	PIAT	(NP*	aller	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Absicht	NN	*	absicht	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	auf	APPR	(VP(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Emilien	NN	*)	emilie	pl	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	aufgeben	VVINF	*))))	aufgeben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	–	XY	*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*))	marinelli	-	-	-	(3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	höchst	ADV	(VROOT(PSEUDO(AP*	höchst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	gleichgültig	ADJD	*)	gleichgültig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(CS(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*	sie	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	auch	ADV	*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	gemußt	ADJD	*	mußen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	hätten	VAFIN	*)	haben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	–	KOKOM	(S*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	wenn	KOUS	*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	der	ART	(NP*	der	sg	masc	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Graf	NN	*)	graf	sg	masc	-	9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	noch	ADV	*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	lebte	VVFIN	*))	leben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)))	prinz	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	heftig	ADJD	(VROOT(PSEUDO(CO*	heftig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	aber	KON	*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sich	PRF	(AP*	sich	sg	-	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	gleich	ADV	*	gleich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	wieder	ADV	*	wieder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	fassend	ADJD	*))	fassend	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Marinelli	NE	(VROOT(PSEUDO(MPN*	marinelli	-	-	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*)))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Doch	KON	(S*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	sollen	VMFIN	*	sollen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	mich	PPER	*	mich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	nicht	PTKNEG	*)	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	wild	ADJD	(VP*	wild	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	machen	VVINF	*)	machen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Es	PPER	(S*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sei	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	so	ADV	(AP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	–	ADJD	*))	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Es	PPER	(S*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	so	ADV	*)	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	das	PDS	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wollen	VMFIN	*	wollen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	doch	ADV	*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	nur	ADV	*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	sagen	VVINF	(VP*	sagen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	der	ART	(S(S(S(NP*	der	sg	masc	-	(251
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Tod	NN	*	tod	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	des	ART	(NP*	der	sg	*	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Grafen	NN	*))	grafe	-	-	-	251)|9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	für	APPR	(NP(PP*	für	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	mich	PPER	*)	mich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	ein	ART	*	ein	sg	masc	-	(289
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	Glück	NN	*))	glück	sg	neut	-	289)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	–	VVFIN	*	–	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	das	ART	(NP*	der	sg	neut	-	(289
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	größte	ADJA	*	groß	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	Glück	NN	*	glück	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	was	PRELS	(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	mir	PPER	*	sich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	begegnen	VVFIN	*)))	begegnen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	konnte	VMFIN	*	können	sg	-	-	289)
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	–	NN	*	–	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	28	das	ART	(NP*	der	sg	neut	-	(289
Emilia.xml.rksp.0.CoNLL2012.conll	000	29	einzige	ADJA	*	einzig	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	30	Glück	NN	*)	glück	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	31	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	32	was	PWS	(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	33	meiner	PPOSAT	(VP(VP(NP*	mein	sg	fem	-	(109|(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	34	Liebe	NN	*)	liebe	sg	fem	-	109)
Emilia.xml.rksp.0.CoNLL2012.conll	000	35	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	36	statten	VVINF	*))	statten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	37	kommen	VVINF	*)	kommen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	38	konnte	VMFIN	*))))	können	sg	-	-	289)
Emilia.xml.rksp.0.CoNLL2012.conll	000	39	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	als	KOKOM	(S*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	dieses	PDS	*	dieser	sg	neut	-	(289)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	–	XY	(S*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	mag	VMFIN	*	mögen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	er	PPER	(VP(VP*	er	sg	masc	-	(251)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	doch	ADV	*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	geschehen	VVPP	*)	geschehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	sein	VAINF	*))	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	wie	PWAV	*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	er	PPER	*	er	sg	masc	-	(251)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	will	VMFIN	*)	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ein	ART	(NP*	ein	sg	masc	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Graf	NN	*	graf	sg	*	-	9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mehr	ADV	(PP*	mehr	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	in	APPR	*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	der	ART	*	der	sg	fem	-	(149
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Welt	NN	*))	welt	sg	fem	-	149)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	oder	KON	*	oder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	weniger	ADV	*	weniger	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Denke	VVFIN	(VROOT(PSEUDO(S*	denken	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Ihnen	PPER	*	ihnen	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	recht	NN	*)	recht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Topp	NE	*	topp	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	auch	ADV	(VROOT(PSEUDO(S(NP*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ich	PPER	*)	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	erschrecke	VVFIN	*	erschrecken	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	vor	APPR	(PP*	vor	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	einem	ART	*	ein	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	kleinen	ADJA	*	klein	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Verbrechen	NN	*)	verbrechen	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	nicht	PTKNEG	*)	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nur	ADV	(VROOT(PSEUDO(S*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	guter	ADJA	(NP*	gut	sg	masc	-	(3
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Freund	NN	*)	freund	sg	masc	-	3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	muß	VMFIN	*	müssen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ein	ART	(VP(CNP(NP*	ein	sg	neut	-	(290
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	kleines	ADJA	*	klein	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	stilles	ADJA	*	still	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Verbrechen	NN	*)	verbrechen	sg	neut	-	290)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	ein	ART	(NP*	ein	sg	neut	-	(290
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	kleines	ADJA	*	klein	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	heilsames	ADJA	*	heilsam	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	Verbrechen	NN	*))	verbrechen	sg	neut	-	290)
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	sein	VAINF	*))	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sehen	VVFIN	*	sehen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	(NP*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	unseres	PPOSAT	*	unser	sg	neut	-	(291)|(0)|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	da	ADV	*	da	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	wäre	VAFIN	(CO(S*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	nun	ADV	*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	gerade	ADV	*)	gerade	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	weder	KON	*	weder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	stille	ADV	(AP(AVP*	stille	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	noch	ADV	*)	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	heilsam	ADJD	*))))	heilsam	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Es	PPER	(VROOT(PSEUDO(S*	es	sg	neut	-	(291)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	hätte	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	den	ART	(CVP(VP(NP*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Weg	NN	*)	weg	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	zwar	ADV	*	zwar	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	gereiniget	VVPP	*)	gereiniget	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	aber	KON	*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	zugleich	ADV	(VP*	zugleich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	gesperrt	VVPP	*)))	sperren	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Jedermann	PIS	*	jedermann	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	würde	VAFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	es	PPER	*	es	sg	neut	-	(291)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	uns	PPER	*	uns	pl	*	-	(0)|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	auf	APPR	*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	den	ART	*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Kopf	NN	*	kopf	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	zusagen	VVINF	*	zusagen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	–	$(	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	leider	ADV	*	leider	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	hätten	VAFIN	*	haben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	wir	PPER	*	wir	pl	*	-	(3)|(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	es	PPER	*	es	sg	neut	-	(291)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	gar	ADV	*	gar	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	einmal	ADV	*	einmal	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	begangen	VVPP	*	begehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Das	PDS	(S*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	liegt	VVFIN	*	liegen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	doch	ADV	*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	wohl	ADV	*	wohl	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	nur	ADV	*)	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	bloß	ADV	(S(AVP*	bloß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	an	APPR	(PP*	an	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Ihren	NN	*))	ihr	pl	neut	-	(292|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	weisen	VVFIN	*	weisen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	wunderbaren	ADJA	(NP*	wunderbar	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Anstalten	NN	*))	anstalten	pl	masc	-	292)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wenn	KOUS	*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*	sie	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	befehlen	VVFIN	*	befehlen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	–	XY	*	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Woran	PWAV	*	woran	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sonst	ADV	*	sonst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	will	VMFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Rede	NN	*	rede	sg	fem	-	(293)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Es	PPER	(VROOT(PSEUDO(S*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	kömmt	VVFIN	*	kömmen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mehr	ADV	*	mehr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	auf	APPR	(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	meine	PPOSAT	*	mein	sg	fem	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Rechnung	NN	*)	rechnung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	was	PWS	(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	darauf	PROAV	*	darauf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	gehört	VVFIN	*))	gehören	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Rede	NN	*	rede	-	-	-	(293)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	will	VMFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nun	ADV	(VROOT(PSEUDO*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	dann	ADV	*	dann	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	läge	VVFIN	*	liegen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	an	APPR	(PP*	an	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	meinen	PPOSAT	*	mein	pl	neut	-	(292|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Anstalten	NN	*))	anstalt	pl	neut	-	292)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	daß	KOUS	(VROOT(PSEUDO(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	den	ART	(NP*	der	pl	*	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Prinzen	NN	*)	prinz	pl	*	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	bei	APPR	(PP*	bei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	diesem	PDAT	*	dieser	sg	neut	-	(294
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Unfalle	NN	*)	unfalle	sg	neut	-	294)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ein	ART	(NP*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	so	ADV	(AP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	sichtbarer	ADJA	*)	sichtbar	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Verdacht	NN	*)	verdacht	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	trifft	VVFIN	*)	treffen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	An	APPR	*	an	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	dem	ART	*	der	sg	neut	-	(295
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Meisterstreiche	NN	*	meisterstreiche	sg	neut	-	295)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	liegt	VVFIN	*	liegen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	das	PDS	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	den	PRELS	*	der	sg	masc	-	(295)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	er	PPER	*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	selbst	ADV	*	selbst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	meinen	VVFIN	*	mein	*	*	-	(292
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Anstalten	NN	*	anstalten	sg	-	-	292)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	mit	APPR	*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	einzumengen	VVIZU	*	einmengen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	die	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	Gnade	NN	*	gnade	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	hatte	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Er	PPER	*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	erlaube	VVFIN	*	erlauben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mir	PPER	*	sich	sg	-	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ihm	PPER	*	ihm	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	zu	PTKZU	*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	sagen	VVINF	*	sagen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	daß	KOUS	*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	der	ART	*	der	sg	masc	-	(296
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Schritt	NN	*	schritt	sg	masc	-	296)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	den	PRELS	*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	er	PPER	*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	heute	ADV	*	heute	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	Morgen	NN	*	morgen	pl	fem	-	(23)
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	in	APPR	*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	der	ART	*	der	sg	fem	-	(100
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	Kirche	NN	*	kirche	sg	fem	-	100)
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	getan	VVPP	*	tun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	–	NN	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	mit	APPR	*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	vielem	PIAT	*	vieler	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	Anstande	NN	*	anstande	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	er	PPER	*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	ihn	PPER	*	ihn	sg	masc	-	(296)
Emilia.xml.rksp.0.CoNLL2012.conll	000	28	auch	ADV	*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	29	getan	VVPP	*	tun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	30	–	$(	*	–	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	31	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	32	unvermeidlich	ADJD	*	unvermeidlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	33	er	PPER	*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	34	ihn	PPER	*	ihn	sg	masc	-	(296)
Emilia.xml.rksp.0.CoNLL2012.conll	000	35	auch	ADV	*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	36	tun	VVINF	*	tun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	37	mußte	VMFIN	*	müssen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	38	–	PPER	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	39	daß	KOUS	*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	40	dieser	PDAT	*	dieser	sg	masc	-	(296
Emilia.xml.rksp.0.CoNLL2012.conll	000	41	Schritt	NN	*	schritt	sg	masc	-	296)
Emilia.xml.rksp.0.CoNLL2012.conll	000	42	dennoch	ADV	*	dennoch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	43	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	44	in	APPR	*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	45	den	ART	*	der	sg	masc	-	(297
Emilia.xml.rksp.0.CoNLL2012.conll	000	46	Tanz	NN	*	tanz	sg	masc	-	297)
Emilia.xml.rksp.0.CoNLL2012.conll	000	47	gehörte	VVFIN	*	gehören	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	48	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	verdarb	VVFIN	*	verderben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	er	PPER	*	er	sg	masc	-	(296)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	denn	ADV	*	denn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	auch	ADV	*)	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Freilich	ADV	(VROOT(PSEUDO*	freilich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	nicht	PTKNEG	(S(NP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	den	ART	*	der	sg	masc	-	(297
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ganzen	ADJA	*	ganz	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Tanz	NN	*)	tanz	sg	masc	-	297)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	aber	ADV	*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	doch	ADV	*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	voritzo	ADV	*	voritzo	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	den	ART	(NP*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Takt	NN	*))	takt	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Hm	XY	*	hm	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Versteh	NE	*	versteh	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Sie	PPER	*	sie	sg	-	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Also	ADV	(VROOT(PSEUDO(CO*	also	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	kurz	ADJD	*	kurz	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	einfältig	ADJD	*)	einfältig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Da	KOUS	(VROOT(PSEUDO(S(AVP(CS(S*	da	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ich	PPER	*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	die	ART	(NP*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Sache	NN	*)	sache	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	übernahm	VVFIN	*)	übernehmen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	nicht	PTKNEG	(AP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	wahr	ADJD	*))	wahr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	da	ADV	*)	da	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	wußte	VVFIN	*	wissen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Emilia	NE	*	emilia	sg	fem	(PER*)	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	von	APPR	(NP(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	der	ART	*	der	sg	fem	-	(109
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Liebe	NN	*	liebe	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	des	ART	(NP*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	Prinzen	NN	*))	prinz	sg	masc	-	109)|0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	noch	ADV	*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	nichts	PIS	*))	nichts	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Emiliens	NE	(VROOT(PSEUDO(NP*	emilien	sg	neut	-	(53|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Mutter	NE	*)	mutter	sg	fem	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	noch	ADV	(AP*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	weniger	ADV	*)	weniger	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wenn	KOUS	(VROOT(PSEUDO(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ich	PPER	*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	nun	ADV	*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	auf	APPR	(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	diesen	PDAT	*	dieser	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Umstand	NN	*)	umstand	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	baute	VVFIN	*)	bauen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	der	ART	(NP*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Prinz	NN	*	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	indes	ADV	(NP*	indes	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	den	ART	*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Grund	NN	*	grund	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	meines	PPOSAT	(NP*	mein	sg	masc	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Gebäudes	NN	*	gebäude	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	untergrub	NE	*))))	untergraben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)))	prinz	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	sich	PRF	(VROOT(PSEUDO(AP*	sich	sg	-	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	vor	APPR	(PP*	vor	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	die	ART	*	der	sg	fem	-	(52
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Stirne	NN	*)	stirne	sg	fem	-	52)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	schlagend	ADJD	*)	schlagend	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Verwünscht	VVPP	*	verwünscht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wenn	KOUS	(VROOT(PSEUDO(S(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	er	PPER	*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	es	PPER	*	es	sg	neut	-	(298)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nun	ADV	*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	selbst	ADV	*	selbst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	verriet	VVFIN	*)	verraten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	was	PWS	*	was	sg	neut	-	(298)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	er	PPER	*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	im	APPRART	(PP*	in	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Schilde	NN	*)	schilde	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	führe	VVFIN	*)	führen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Verdammter	ADJA	(VROOT(PSEUDO(NP*	verdammt	-	-	-	(298
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Einfall	NN	*)	einfall	-	-	-	298)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wenn	KOUS	*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	er	PPER	*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	es	PPER	*	es	sg	neut	-	(298)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nicht	PTKNEG	(VP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	selbst	ADV	*	selbst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	verraten	VVPP	*)	verraten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	hätte	VAFIN	*)	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Traun	NE	*	traun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	möchte	VMFIN	*	möchten	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	doch	ADV	*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	wissen	VVINF	(VP*	wissen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	aus	APPR	(S(PP*	aus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	welcher	PRELS	*)	welcher	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	meiner	PPOSAT	(CNP(NP*	mein	sg	fem	-	(292|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Anstalten	NN	*)	anstalten	pl	masc	-	292)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Mutter	NN	*	mutter	*	*	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	oder	KON	*	oder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Tochter	NN	*)	tochter	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	den	ART	(VP(NP*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	geringsten	ADJA	*	gering	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	Argwohn	NN	*)	argwohn	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	gegen	APPR	(PP*	gegen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	ihn	PPER	*)	ihn	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	schöpfen	VVINF	*)	schöpfen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	könnte	VMFIN	*)))	können	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Daß	KOUS	(VROOT(PSEUDO(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*	sie	sg	fem	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Recht	NN	(VP*	recht	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	haben	VAINF	*))	haben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Daran	PROAV	*	daran	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	tu	PPER	*	tu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	freilich	ADV	*	freilich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	sehr	ADV	*	sehr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Unrecht	NN	*	unrecht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	–	$(	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Sie	PPER	*	sie	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	werden	VAFIN	*	werden	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	verzeihen	VVINF	*	verzeihen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	gnädiger	ADJA	*	gnädig	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Herr	NN	*	herr	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	–	XY	*	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Battista	NE	(VROOT(PSEUDO*	battista	-	-	(PER*)	(10)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(NP*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Prinz	NN	*)	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Marinelli	NE	(VROOT(PSEUDO*	marinelli	sg	masc	(PER*)	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	BATTISTA	NE	(VROOT(PSEUDO*))	battista	-	-	-	(10)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	eiligst	ADV	(VROOT(PSEUDO*	eiligsen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Eben	ADV	(VROOT(PSEUDO(S*	eben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	kömmt	VVFIN	*	kömmen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	die	ART	(NP*	der	sg	fem	-	(11
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Gräfin	NN	*)	gräfin	sg	fem	-	11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	an	PTKVZ	*)	an	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Die	ART	(VROOT(PSEUDO(NP*	der	sg	fem	-	(11
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Gräfin	NN	*)	gräfin	sg	fem	-	11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S(NP(AP*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	für	APPR	*	für	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	eine	ART	*)	ein	sg	fem	-	(11
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Gräfin	NN	*))	gräfin	sg	fem	-	11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	BATTISTA	NE	(VROOT(PSEUDO*	battista	sg	neut	(LOC*)	(10|(10)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	10)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Orsina	NE	(VROOT(PSEUDO*	orsina	-	-	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Orsina	NE	(VROOT(PSEUDO(MPN*	orsina	-	-	(LOC*)	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*)))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Marinelli	NE	*	marinelli	-	-	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Orsina	NE	*	orsina	-	-	(LOC*)	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Marinelli	NE	*	marinelli	-	-	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	erstaune	VVFIN	*	erstaunen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	darüber	PROAV	*	darüber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	weniger	ADV	(PP*	weniger	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	als	APPR	*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Sie	PPER	*)	sie	sg	fem	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	selbst	ADV	*)	selbst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Geh	XY	(VROOT(PSEUDO*	geh	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	lauf	VVFIN	*	lauf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Battista	NE	*	battista	-	-	(PER*)	(10)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	sie	PPER	(S*	sie	sg	fem	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	soll	VMFIN	*	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	aussteigen	VVINF	*)	aussteigen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	bin	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	nicht	PTKNEG	(AVP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	hier	ADV	*))	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	bin	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	für	APPR	(PP*	für	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sie	PPER	*)	sie	pl	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	hier	ADV	*)	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(S*	sie	sg	fem	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	soll	VMFIN	*	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	augenblicklich	ADJD	(VP*	augenblicklich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	wieder	ADV	*	wieder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	umkehren	VVINF	*))	umkehren	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Geh	XY	(VROOT(PSEUDO*	geh	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	lauf	FM	*	lauf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Battista	NE	*	battista	sg	fem	(PER*)	(10)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	geht	VVFIN	(S*	gehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ab	PTKVZ	*)	ab	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	will	VMFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	die	ART	(NP*	der	sg	fem	-	(11
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Närrin	NN	*))	närrin	sg	fem	-	11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Was	PWS	*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	untersteht	VVFIN	*	unterstehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sie	PPER	*	sie	sg	fem	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sich	PRF	*	sich	sg	-	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wie	PWAV	(VROOT(PSEUDO(S*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	weiß	VVFIN	*	weiß	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sie	PPER	*	sie	sg	fem	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	wir	PPER	*	wir	pl	*	-	(3)|(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	hier	ADV	*	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	sind	VAFIN	*))	sein	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sollte	VMFIN	(VROOT(PSEUDO(S*	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sie	PPER	*	sie	sg	fem	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wohl	ADV	*	wohl	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	auf	APPR	(VP(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Kundschaft	NN	*)	kundschaft	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	kommen	VVINF	*))	kommen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sollte	VMFIN	(VROOT(PSEUDO(S*	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sie	PPER	*	sie	sg	fem	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wohl	ADV	*	wohl	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	schon	ADV	(NP*	schon	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	etwas	PIS	*)	etwas	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	vernommen	VVPP	*	vernehmen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	haben	VAFIN	*)	haben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ah	NE	*	ah	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Marinelli	NE	*	marinelli	sg	neut	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	So	ADV	(VROOT(PSEUDO(S*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	reden	VVFIN	*	reden	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	so	ADV	(S*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	antworten	VVFIN	*	antworten	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	doch	ADV	*))	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ist	VAFIN	(S*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	er	PPER	*	er	sg	masc	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	beleidiget	VVFIN	*)	beleidigen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	der	ART	(NP*	der	sg	masc	-	(3
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Mann	NN	*	mann	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	der	PRELS	(S*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	mein	PPOSAT	(VP(NP*	mein	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Freund	NN	*)	freund	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	sein	VAINF	*)	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	will	VMFIN	*))	wollen	sg	-	-	3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(VP*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	durch	APPR	(PP*	durch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	einen	ART	*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	elenden	ADJA	*	elend	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Wortwechsel	NN	*)	wortwechsel	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	beleidiget	VVPP	*)	beleidigen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Soll	VMFIN	(VROOT(PSEUDO(S*	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ihn	PPER	(VP*	ihn	sg	masc	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	um	APPR	(PP*	um	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Verzeihung	NN	*)	verzeihung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	bitten	VVINF	*))	bitten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ah	XY	(VROOT(PSEUDO*	ah	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mein	PPOSAT	(NP*	mein	sg	masc	-	(0|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Prinz	NN	*	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	so	ADV	(S*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	bald	ADV	(NP*	bald	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Sie	PPER	*)	sie	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	wieder	ADV	*	wieder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Sie	PPER	*	sie	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	sind	VAFIN	*	sein	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	bin	VAFIN	(S*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	ich	PPER	*	ich	sg	masc	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	ganzer	ADJA	*	ganz	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	Seele	NN	*)	seele	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	wieder	ADV	*	wieder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	der	ART	(NP*	der	sg	masc	-	(3
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	Ihrige	ADJA	*))))	ihrige	sg	masc	-	3)|(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Die	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Ankunft	NN	*	ankunft	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	der	ART	*	der	sg	fem	-	(11
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Orsina	NE	*	orsina	sg	fem	-	11)|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	mir	PPER	*	sich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ein	ART	*	ein	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Rätsel	NN	*	rätsel	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	wie	PWAV	*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Ihnen	PPER	*	ihnen	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Doch	KON	(VROOT(PSEUDO(S*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	abweisen	VVINF	*	abweisen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wird	VAFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sie	PPER	*	sie	sg	fem	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	schwerlich	ADJD	*	schwerlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	sich	PRF	(VP*	sich	pl	-	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	lassen	VVINF	*))	lassen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wollen	VMFIN	*	wollen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	(VP*	sie	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	tun	VVINF	*))	tun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(S*	sie	pl	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	durchaus	ADV	(VP*	durchaus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sprechen	VVINF	*)	sprechen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	mich	PPER	(CNP*	mich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	entfernen	VVINF	*	entfernen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	–	$.	*))))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wohl	ADV	(VROOT(PSEUDO(S*)	wohl	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	nur	ADV	*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	geschwind	ADJD	*)	geschwind	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	will	VMFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sie	PPER	*	sie	pl	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	empfangen	VVINF	*	empfangen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	–	XY	*	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Aber	KON	(VROOT(PSEUDO(S*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	bloß	ADV	*	bloß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	um	KOUI	(VP*	um	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	sie	PPER	*	sie	pl	fem	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	gehen	VVINF	*	gehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	heißen	VVINF	*)))	heißen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Weiter	ADV	(S*	weiter	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	geben	VVFIN	*	geben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ihr	PPER	*)	ihr	sg	fem	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	sich	PRF	*	sich	sg	-	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	ab	PTKVZ	*)	ab	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wir	PPER	(VROOT(PSEUDO(S*	wir	pl	*	-	(0)|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	haben	VAFIN	*	haben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	andere	ADJA	(VP(NP*	anderer	pl	neut	-	(299
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Dinge	NN	*)	ding	pl	neut	-	299)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	hier	ADV	*	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	tun	VVINF	*)))	tun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	–	$.	*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nicht	PTKNEG	(VROOT(PSEUDO(S(NP(AVP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	doch	ADV	*)	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Prinz	NN	*))	prinz	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Diese	PDAT	(VROOT(PSEUDO(S(NP*	dieser	pl	masc	-	(299
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	andern	ADJA	*	anderer	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Dinge	NN	*)	ding	pl	neut	-	299)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sind	VAFIN	*	sein	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	getan	VVPP	*)	tun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Fassen	VVFIN	(VROOT(PSEUDO(S*	fassen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*	sie	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	doch	ADV	*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Mut	NN	*)	mut	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	noch	ADV	*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	fehlt	VVFIN	*)	fehlen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	kömmt	VVFIN	*	kömmen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	sicherlich	ADV	*	sicherlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	von	APPR	(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	selbst	ADV	*))	selbst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Aber	KON	*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	hör	XY	*	hör	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ich	PPER	*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	sie	PPER	*	sie	sg	fem	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	schon	ADV	*	schon	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Eilen	VVFIN	(S*	eilen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*)	sie	pl	*	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Prinz	NN	*	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Da	KOUS	(S*	da	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Auf	APPR	(S(AP(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ein	ART	*	ein	sg	neut	-	(300
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Kabinett	NN	*)	kabinett	sg	neut	-	300)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	zeigend	ADJD	*)	zeigend	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	in	APPR	(S(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	welches	PRELS	*)	welcher	sg	neut	-	(300)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	sich	PRF	*	sich	sg	-	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	der	ART	(NP*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Prinz	NN	*))))	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	begibt	VVFIN	*	begeben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	wenn	KOUS	(VROOT(PSEUDO(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*	sie	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wollen	VMFIN	*	wollen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	werden	VAFIN	(S*	werden	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Sie	PPER	*	sie	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	uns	PPER	*	uns	pl	*	-	(11)|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	hören	VVINF	*	hören	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	können	VMFIN	*))	können	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ich	PPER	(S*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	fürchte	VVFIN	*	fürchten	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ich	PPER	(S*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	fürchte	VVFIN	*	fürchten	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	sie	PPER	(S*	sie	sg	fem	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	nicht	PTKNEG	(VP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	zu	APPR	(PP*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	ihrer	PPOSAT	*	ihr	sg	fem	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	besten	ADJA	*	gut	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Stunde	NN	*)	stunde	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	ausgefahren	VVPP	*))))	ausfahren	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Die	ART	(VROOT(PSEUDO(NP*	der	sg	fem	-	(11
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Gräfin	NN	*	gräfin	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Orsina	NE	*)	orsina	sg	-	-	11)|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Marinelli	NE	(VROOT(PSEUDO*	marinelli	sg	masc	(PER*)	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ORSINA	NE	(VROOT(PSEUDO*))	orsina	-	-	-	(11)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ohne	APPR	(VROOT(PSEUDO(VP(PP*	ohne	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	den	ART	*	der	sg	masc	-	(3
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Marinelli	NE	*)	marinelli	sg	masc	-	3)|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	anfangs	ADV	*	anfangs	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	erblicken	VVINF	*))	erblicken	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Was	PWS	*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	das	PDS	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Niemand	PIS	(S*	niemand	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	kömmt	VVFIN	*	kömmen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mir	PPER	*	sich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	entgegen	PTKVZ	*)	entgegen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	außer	APPR	(NP(PP*	außer	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ein	ART	*	ein	sg	masc	-	(10
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Unverschämter	NN	*)	unverschämte	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	der	PRELS	(S*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	mir	PPER	(VP*	sich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	lieber	ADV	*	lieber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	gar	ADV	*	gar	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	den	ART	(NP*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	Eintritt	NN	*)	eintritt	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	verweigert	VVPP	*)	verweigern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	hätte	VAFIN	*))	haben	sg	-	-	10)
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ich	PPER	(S*	ich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	bin	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	doch	ADV	(AVP*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	zu	APPR	*))	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Dosalo	NE	*	dosalo	-	-	-	(118)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Zu	APPR	(VROOT(PSEUDO(S(PP*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	dem	ART	*	der	sg	neut	-	(118
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Dosalo	NE	*	dosalo	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	wo	PWAV	(S*	wo	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	mir	PPER	*	sich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	sonst	ADV	*	sonst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ein	ART	(NP*	ein	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	ganzes	ADJA	*	ganz	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Heer	NN	*	heer	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	geschäftiger	ADJA	(NP*	geschäftig	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Augendiener	NN	*))	augendiener	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	entgegen	PTKVZ	*))	entgegen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	stürzte	VVFIN	*)	stürzen	sg	-	-	118)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	wo	PWAV	(VROOT(PSEUDO(S*	wo	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	mich	PPER	*	mich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sonst	ADV	*	sonst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Liebe	NN	(CNP*	liebe	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Entzücken	NN	*)	entzücke	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	erwarteten	VVFIN	*)	erwarten	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO(CS(S*	–	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Der	ART	(NP*	der	sg	masc	-	(118
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Ort	NN	*)	ort	sg	masc	-	118)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	aber	ADV	(S*))	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	aber	KON	*)	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sieh	NE	*	sieh	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	da	ADV	*	da	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Marinelli	NE	*	marinelli	sg	neut	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Recht	NN	*	recht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	gut	ADJD	(S*	gut	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	der	ART	(VP(NP*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Prinz	NN	*)	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	mitgenommen	VVPP	*)))	mitnehmen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Nein	PTKANT	(S*	nein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nicht	PTKNEG	(AP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	gut	ADJD	*))	gut	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ich	PPER	(VP*	ich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ihm	PPER	*)	ihm	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	auszumachen	VVIZU	*)	ausmachen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	hätte	VAFIN	*)	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	hätte	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	ich	PPER	*	ich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	nur	ADV	(VP*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	ihm	PPER	*)	ihm	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	auszumachen	VVIZU	*))	ausmachen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Wo	PWAV	*	wo	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	er	PPER	*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(CNP(NP*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Prinz	NN	*)	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	meine	PPOSAT	(NP*	mein	sg	fem	-	(11|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	gnädige	ADJA	*	gnädig	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Gräfin	NN	*))	gräfin	sg	fem	-	11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ORSINA	NE	(VROOT(PSEUDO*	orsina	sg	neut	(LOC*)	(11|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	11)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wer	PWS	*	wer	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sonst	ADV	*	sonst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(S*	sie	pl	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	vermuten	VVFIN	*	vermuten	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ihn	PPER	*	ihn	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	also	ADV	(AVP*	also	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	hier	ADV	*))	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	wissen	VVFIN	(VROOT(PSEUDO(S*	wissen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ihn	PPER	*	ihn	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	hier	ADV	*)	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Er	PPER	(AP(S*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wenigstens	ADV	*	wenigstens	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	der	ART	(NP*	der	sg	fem	-	(11
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Gräfin	NN	*	gräfin	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Orsina	NE	*))	orsina	sg	-	(LOC*)	11)|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	hier	ADV	(AVP*	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	nicht	PTKNEG	*)	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	vermutend	ADJD	*)	vermutend	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ORSINA	NE	(VROOT(PSEUDO*	orsina	sg	neut	(LOC*)	(11|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	11)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	So	ADV	(VROOT(PSEUDO(S*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	hat	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	er	PPER	*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	meinen	PPOSAT	(VP(NP*	mein	sg	masc	-	(24|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Brief	NN	*)	brief	sg	masc	-	24)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	heute	ADV	*	heute	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Morgen	NN	*	morgen	sg	masc	-	(23)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	erhalten	VVINF	*))	erhalten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ihren	PPOSAT	(VROOT(PSEUDO(NP*	ihr	sg	masc	-	(24|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Brief	NN	*)	brief	sg	masc	-	24)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Doch	KON	(VROOT(PSEUDO(S*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ja	ADV	*	ja	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	erinnere	VVFIN	*	erinneren	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	mich	PPER	*	mich	sg	-	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	er	PPER	*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	eines	ART	(NP*	ein	sg	masc	-	(24
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Briefes	NN	*	brief	sg	masc	-	24)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	von	APPR	(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Ihnen	PPER	*))	ihnen	pl	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	erwähnte	VVFIN	*))	erwähnen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ORSINA	NE	(VROOT(PSEUDO*	orsina	sg	neut	(LOC*)	(11|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	11)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nun	ADV	(VROOT(PSEUDO(S*)	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	habe	VAFIN	(VROOT(PSEUDO(S*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ich	PPER	*	ich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ihn	PPER	*	ihn	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	in	APPR	(VP(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	diesem	PDAT	*	dieser	sg	neut	-	(24
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Briefe	NN	*	brief	sg	neut	-	24)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	auf	APPR	(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	heute	ADV	*	heute	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	um	APPR	*	um	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	eine	ART	*	ein	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Zusammenkunft	NN	*))	zusammenkunft	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	hier	ADV	*	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	auf	APPR	(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Dosalo	NE	*)	dosalo	-	-	-	(118)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	gebeten	VVPP	*))	bitten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Es	PPER	(NP(CS(S*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	wahr	ADJD	*)	wahr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	es	PPER	(S*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	hat	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ihm	PPER	(VP*	ihm	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	beliebet	VVPP	*)))	belieben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	mir	PPER	(VP*	sich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	schriftlich	ADJD	*	schriftlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	antworten	VVINF	*)))	antworten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Aber	KON	(VROOT(PSEUDO(S*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ich	PPER	*	ich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	erfuhr	VVFIN	*	erfahren	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	er	PPER	*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	eine	ART	(NP*	ein	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Stunde	NN	*	stunde	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	darauf	PROAV	*)	darauf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	wirklich	ADJD	(VP*	wirklich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	nach	APPR	(PP*	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Dosalo	NE	*)	dosalo	sg	neut	-	(118)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	abgefahren	VVPP	*)))	abfahren	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	glaubte	VVFIN	*	glauben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	das	PDS	(S*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	sei	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Antworts	NN	*))	antwort	sg	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	genug	PIAT	*	genug	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	und	KON	(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	ich	PPER	*	ich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	komme	VVFIN	*)	kommen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ein	ART	(VROOT(PSEUDO(NP*	ein	sg	masc	-	(301
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sonderbarer	ADJA	*	sonderbar	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Zufall	NN	*)	zufall	sg	masc	-	301)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ORSINA	NE	(VROOT(PSEUDO*	orsina	sg	neut	(LOC*)	(11|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	11)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Zufall	NN	(VROOT(PSEUDO*	zufall	-	-	-	(301)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	(S*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	hören	VVFIN	*)	hören	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ja	PTKANT	(S*	ja	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	verabredet	VVPP	(VP*	verabreden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	worden	VAPP	*)))	werden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	So	ADV	(VROOT(PSEUDO(AP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	gut	ADJD	(CAP*	gut	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	als	KOKOM	(VP*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	verabredet	VVPP	*)))	verabreden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Von	APPR	(VROOT(PSEUDO(CS(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	meiner	PPOSAT	*	mein	sg	fem	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Seite	NN	*)	seite	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	der	ART	(S(NP*	der	sg	masc	-	(24
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Brief	NN	*)	brief	sg	masc	-	24)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	von	APPR	(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	seiner	PIS	*)	sein	sg	fem	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	die	ART	(NP*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Tat	NN	*)))	tat	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Wie	PWAV	(S*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	er	PPER	*	er	sg	masc	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	da	ADV	*	da	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	steht	VVFIN	*)	stehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	der	ART	(NP*	der	sg	masc	-	(3
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Herr	NN	*	herr	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Marchese	NE	*)	marchese	sg	neut	-	3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	er	PPER	*	er	sg	masc	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	für	APPR	(PP*	für	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Augen	NN	*)	auge	pl	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	macht	VVFIN	*)	machen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wundert	VVFIN	(VROOT(PSEUDO(S*	wundert	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sich	PRF	*	sich	sg	-	-	(302)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	das	ART	(NP*	der	sg	neut	-	(302
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Gehirnchen	NN	*))	gehirnchen	sg	neut	-	302)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	worüber	PWAV	*	worüber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	denn	ADV	*	denn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(S*	sie	pl	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	schienen	VVFIN	*	schienen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	gestern	ADV	*	gestern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	so	ADV	(AP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	weit	ADJD	*)	weit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	entfernt	ADJD	*	entfernt	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	dem	ART	(VP(NP*	der	sg	neut	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Prinzen	NN	*)	prinz	sg	neut	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	jemals	ADV	(AVP*	jemals	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	wieder	ADV	*)	wieder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	vor	APPR	(PP*	vor	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	die	ART	*	der	pl	neut	-	(58
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Augen	NN	*)	auge	pl	neut	-	58)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	kommen	VVINF	*)))	kommen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ORSINA	NE	(VROOT(PSEUDO*	orsina	sg	neut	(LOC*)	(11|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	11)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Beßrer	ADJA	(VROOT(PSEUDO(S(NP*	beßrer	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Rat	NN	*)	Rat	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	kömmt	VVFIN	*	kömmen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	über	APPR	(PP*	über	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Nacht	NN	*))	nacht	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Wo	PWAV	*	wo	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	er	PPER	*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	wo	PWAV	*	wo	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	er	PPER	*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Was	PWS	(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	gilts	ADV	*	gilt	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	er	PPER	*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ist	VAFIN	*)	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	in	APPR	(NP(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	dem	ART	*	der	sg	neut	-	(282
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Zimmer	NN	*	zimmer	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	wo	PWAV	(S*	wo	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	ich	PPER	*	ich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	das	ART	(NP*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Gequicke	NN	*)	gequicke	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	das	ART	(NP*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	Gekreusche	NN	*)	gekreusche	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	hörte	VVFIN	*)))	hören	sg	-	-	282)
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ich	PPER	(S*	ich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wollte	VMFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	herein	PTKVZ	*	herein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	der	ART	(S(NP*	der	sg	masc	-	(10
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Schurke	NN	*	schurke	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	vom	APPRART	(PP*	von	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Bedienten	NN	*))	bedient	sg	masc	-	10)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	trat	VVFIN	*	treten	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	vor	PTKVZ	*))	vor	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Meine	PPOSAT	*	mein	-	-	-	(11|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	liebste	ADJA	*	liebsen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	beste	ADJA	*	gut	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Gräfin	NN	*	gräfin	sg	fem	-	11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	–	XY	*	–	sg	fem	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ORSINA	NE	(VROOT(PSEUDO*	orsina	sg	neut	(LOC*)	(11|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	11)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Es	PPER	(VROOT(PSEUDO(S*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	war	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ein	ART	(NP*	ein	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	weibliches	ADJA	*	weiblich	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Gekreusche	NN	*))	gekreusche	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Was	PWS	*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	gilts	ADV	*	gilt	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Marinelli	NE	*	marinelli	*	*	(LOC*)	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	O	ITJ	(S*)	O	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sagen	VVFIN	(S(S*	sagen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	mir	PPER	*	sich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	doch	ADV	*)	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	sagen	VVFIN	*	sagen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	mir	PPER	*	sich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	–	CARD	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	wenn	KOUS	(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	ich	PPER	*	ich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	anders	ADV	*	anders	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Ihre	PPOSAT	(NP*	ihr	sg	-	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	liebste	ADJA	*	liebsen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	beste	ADJA	*	gut	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	Gräfin	NN	*)	gräfin	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	bin	VAFIN	*)	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	–	ART	(NP*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	Verdammt	NN	*)	verdammen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	über	APPR	(PP*	über	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	das	ART	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	Hofgeschmeiß	NN	*))	hofgeschmeiß	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	So	ADV	(VROOT(PSEUDO(CS(S*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	viel	PIAT	(NP*	viel	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Worte	NN	*))	wort	pl	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	so	ADV	(S*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	viel	PIAT	(NP*	viel	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Lügen	NN	*)))	lüge	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO(CS(S(S*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Nun	ADV	(NP*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	was	PIS	*)	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	liegt	VVFIN	*)	liegen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	daran	PROAV	(PP*	daran	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ob	KOUS	(S*	ob	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	mir	PPER	*	sich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	es	PPER	(VP*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	voraus	ADV	*	voraus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	sagen	VVINF	*)))	sagen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	,	$,	*)	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	oder	KON	*	oder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	nicht	PTKNEG	*)	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	*	ich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	werd	VVFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ja	ADV	*	ja	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	wohl	ADV	*	wohl	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	sehen	VVINF	*	sehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Will	VMFIN	*	wollen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	gehen	VVINF	*	gehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*))	marinelli	-	-	-	(3|(3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	der	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sie	PPER	*	sie	pl	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	zurück	ADV	*	zurück	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	hält	VVFIN	*	halten	sg	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wohin	PWAV	(VROOT(PSEUDO*	wohin	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ORSINA	NE	(VROOT(PSEUDO*	orsina	sg	neut	(LOC*)	(11|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	11)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wo	PWAV	(VROOT(PSEUDO(S*	wo	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ich	PPER	(VP*	ich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	längst	ADV	*	längst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sein	VAINF	*)	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	sollte	VMFIN	*)	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Denken	VVFIN	(S*	denken	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	schicklich	ADJD	*	schicklich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Ihnen	PPER	*)	ihnen	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	hier	ADV	*	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	dem	ART	*	der	sg	neut	-	(258
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Vorgemache	NN	*)))	vorgemache	sg	neut	-	258)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	einen	ART	(NP*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	elenden	ADJA	*	elend	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	Schnickschnack	NN	*	schnickschnack	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	halten	VVINF	*)	halten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	indes	ADV	(S(NP(AP*	indes	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	der	ART	*)	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	Prinz	NN	*	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	dem	ART	*	der	sg	neut	-	(282
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	Gemache	NN	*))	gemache	sg	neut	-	282)
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	auf	APPR	(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	28	mich	PPER	*)	mich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	29	wartet	VVFIN	*))	warten	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	30	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(S(S*	sie	pl	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	irren	VVFIN	*	irren	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sich	PRF	*)	sich	pl	-	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	gnädige	ADJA	(NP*	gnädig	sg	fem	-	(11
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Gräfin	NN	*))	gräfin	sg	fem	-	11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(S(NP*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Prinz	NN	*)	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	erwartet	VVFIN	*	erwarten	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Sie	PPER	*	sie	*	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nicht	PTKNEG	*)	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(CS(S(NP*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Prinz	NN	*)	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	kann	VMFIN	*	können	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Sie	PPER	*	sie	*	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	hier	ADV	(VP*	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	sprechen	VVINF	*))	sprechen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	–	PWAV	(S*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	will	VMFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Sie	PPER	*	sie	sg	fem	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	sprechen	VVINF	*))	sprechen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ORSINA	NE	(VROOT(PSEUDO*	orsina	sg	neut	(LOC*)	(11|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	11)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wäre	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	doch	ADV	*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	hier	ADV	*)	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wäre	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	doch	ADV	*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	auf	APPR	(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	meinen	PPOSAT	*	mein	sg	masc	-	(24|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Brief	NN	*)	brief	sg	masc	-	24)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	hier	ADV	*)	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	auf	APPR	*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Ihren	PPOSAT	*	ihr	sg	masc	-	(24|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Brief	NN	*	brief	sg	masc	-	24)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	–	XY	*	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ORSINA	NE	(VROOT(PSEUDO*	orsina	sg	neut	(LOC*)	(11|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	11)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Den	NE	*	der	sg	masc	-	(24)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	er	PPER	*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ja	ADV	*	ja	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	erhalten	VVPP	*	erhalten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	sagen	VVFIN	*	sagen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	–	XY	*	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Erhalten	VVPP	(VROOT(PSEUDO(S(CVP*	erhalten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	aber	ADV	(VP*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	gelesen	VVPP	*)))	lesen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ORSINA	NE	(VROOT(PSEUDO*))	orsina	-	-	-	(11)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	heftig	ADJD	(VROOT(PSEUDO*	heftig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	gelesen	VVPP	*	lesen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	CARD	(VROOT(PSEUDO(AP(NP*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Minder	NN	*)	minder	pl	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	heftig	ADJD	*)	heftig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	gelesen	VVPP	*	lesen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Wehmütig	ADJD	(AP(AP*	wehmütig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	und	KON	(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	eine	ART	(NP*	ein	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Träne	NN	*)	träne	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	aus	APPR	(PP*	aus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	dem	ART	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Auge	NN	*)))	auge	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	wischend	ADJD	*)	wischend	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nicht	PTKNEG	(VROOT(PSEUDO(VP(AVP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	einmal	ADV	*)	einmal	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	gelesen	VVPP	*)	lesen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Aus	APPR	(VROOT(PSEUDO(S(PP*	aus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Zerstreuung	NN	*)	zerstreuung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	weiß	VVFIN	*	weiß	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ich	PPER	*)	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	aus	APPR	*	aus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Verachtung	NN	*	verachtung	sg	fem	-	(303)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ORSINA	NE	(VROOT(PSEUDO*))	orsina	-	-	-	(11)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	stolz	ADJD	(VROOT(PSEUDO*	stolz	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Verachtung	NN	(VROOT(PSEUDO*	verachtung	sg	fem	-	(303)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Wer	PWS	*	wer	sg	masc	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	denkt	VVFIN	*	denken	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	daran	PROAV	*	daran	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Wem	PWS	(S*	wem	sg	neut	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	brauchen	VVFIN	*	brauchen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	das	PDS	(VP*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	sagen	VVINF	*)))	sagen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	(S*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sind	VAFIN	*	sein	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ein	ART	(NP*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	unverschämter	ADJA	*))	unverschämt	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Tröster	NN	(NP*	tröster	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Marinelli	NE	*)	marinelli	sg	masc	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Verachtung	NN	*	verachtung	sg	fem	-	(303)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Verachtung	NN	(VROOT(PSEUDO*	verachtung	sg	fem	-	(303)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Mich	PPER	(VROOT(PSEUDO(S*	mich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	verachtet	VVFIN	*	verachten	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	man	PIS	(NP*	man	sg	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	auch	ADV	*))	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	mich	PPER	*	mich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Gelinder	NN	(NP*	gelind	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	bis	APPR	(PP*	bis	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	zum	APPRART	*	zu	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Tone	NN	*))	tone	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	der	ART	(NP*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Schwermut	NN	*)	schwermut	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Freilich	ADV	(VROOT(PSEUDO(S*	freilich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	liebt	VVFIN	*	lieben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	er	PPER	*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mich	PPER	*	mich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nicht	PTKNEG	(AVP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	mehr	ADV	*))	mehr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Das	PDS	(VROOT(PSEUDO(S*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ausgemacht	VVPP	*)	ausmachen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	an	APPR	(PP*	an	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	die	ART	*	der	sg	fem	-	(304
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Stelle	NN	*	stelle	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	der	ART	(NP*	der	sg	masc	-	(305
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Liebe	NN	*))	liebe	sg	masc	-	304)|305)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	trat	VVFIN	*	treten	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	seiner	PPOSAT	*	sein	sg	fem	-	(64|(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Seele	NN	*)	seele	sg	fem	-	64)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	etwas	ADV	(AVP*	etwas	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	anders	ADV	*))	anders	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Das	PDS	(VROOT(PSEUDO(S*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	natürlich	ADV	*)	natürlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Aber	KON	(VROOT(PSEUDO*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	warum	PWAV	*	warum	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	denn	KON	(NP*	denn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	eben	ADV	*	eben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Verachtung	NN	*)	verachtung	sg	fem	-	(303)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Es	PPER	(VROOT(PSEUDO(S*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	braucht	VVFIN	*	brauchen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ja	ADV	*	ja	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nur	ADV	(VP(NP*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Gleichgültigkeit	NN	*)	gleichgültigkeit	-	-	-	(306)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	sein	VAINF	*)))	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nicht	PTKNEG	(VROOT(PSEUDO(S(NP(AP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wahr	ADJD	*)	wahr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Marinelli	NE	*))	marinelli	sg	*	(LOC*)	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Allerdings	ADV	(VROOT(PSEUDO(NP*	allerdings	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	allerdings	ADV	*)	allerdings	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ORSINA	NE	(VROOT(PSEUDO*))	orsina	-	-	-	(11)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	höhnisch	ADJD	(VROOT(PSEUDO*	höhnisch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Allerdings	ADV	(VROOT(PSEUDO(S*)	allerdings	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	O	NN	*	O	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	des	ART	*	der	sg	masc	-	(3
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	weisen	ADJA	*	weise	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Mannes	NN	*	mann	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	den	PRELS	*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	man	PIS	*	man	sg	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	sagen	VVINF	*	sagen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	lassen	VVINF	*	lassen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	kann	VMFIN	*	können	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	was	PWS	*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	man	PIS	*	man	sg	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	will	VMFIN	*	wollen	sg	-	-	3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Gleichgültigkeit	NN	*	gleichgültigkeit	sg	fem	-	(306)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Gleichgültigkeit	NN	(VROOT(PSEUDO(NP*	gleichgültigkeit	sg	fem	-	(306)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	an	APPR	(PP*	an	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	die	ART	*	der	sg	fem	-	(304
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Stelle	NN	*	stelle	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	der	ART	(NP*	der	sg	fem	-	(305
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Liebe	NN	*)))	liebe	sg	fem	-	304)|305)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Das	PDS	(S*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	heißt	VVFIN	*	heißen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Nichts	NN	(NP*	nichts	*	neut	-	(306)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	an	APPR	(PP*	an	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	die	ART	*	der	sg	fem	-	(304
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Stelle	NN	*	stelle	sg	fem	-	304)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	von	APPR	(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Etwas	ADV	*))))	etwas	-	-	-	(305)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Denn	KON	(VROOT(PSEUDO(S*	denn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	lernen	VVFIN	*	lernen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*	sie	pl	*	-	(3
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nachplauderndes	ADJA	(S(NP*	nachplaudernd	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Hofmännchen	NN	*)	hofmännchen	sg	neut	-	3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	lernen	VVFIN	*	lernen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	von	APPR	(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	einem	ART	*	ein	sg	masc	-	(11
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Weibe	NN	*)	weibe	sg	masc	-	11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	daß	KOUS	(CS(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Gleichgültigkeit	NN	*	gleichgültigkeit	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	ein	ART	(NP*	ein	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	leeres	ADJA	*	leer	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	Wort	NN	*)	wort	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	ein	ART	(NP*	ein	sg	masc	-	(307
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	bloßer	ADJA	*	bloß	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	Schall	NN	*)	schall	sg	masc	-	307)
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	ist	VAFIN	*)	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	dem	PDS	(S*	der	sg	masc	-	(307)
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	nichts	PIS	(NP*	nichts	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	gar	ADV	(NP*	gar	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	28	nichts	PIS	*))	nichts	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	29	entspricht	VVFIN	*))))	entsprechen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	30	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Gleichgültig	ADJD	(VROOT(PSEUDO(S*	gleichgültig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	die	ART	(NP*	der	sg	fem	-	(308
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Seele	NN	*)	seele	sg	fem	-	308)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nur	ADV	(PP*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	gegen	APPR	*	gegen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	das	PDS	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	woran	PWAV	(S*	woran	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	sie	PPER	*	sie	pl	*	-	(308)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	denkt	VVFIN	*))	denken	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	nur	ADV	(PP*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	gegen	APPR	*	gegen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	ein	ART	*	ein	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	Ding	NN	*	ding	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	das	PRELS	(S*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	für	APPR	(NP(PP*	für	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	sie	PPER	*)	sie	pl	fem	-	(308)
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	kein	PIAT	*	kein	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	Ding	NN	*)	ding	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	ist	VAFIN	*)))	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(CS(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	nur	ADV	*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	gleichgültig	ADJD	*	gleichgültig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	für	APPR	(PP*	für	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ein	ART	*	ein	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Ding	NN	*	ding	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	das	PRELS	(S*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	kein	PIAT	(NP*	kein	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Ding	NN	*)	ding	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	ist	VAFIN	*)))	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	–	KON	*	–	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	das	PDS	(S*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	so	ADV	(NP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	viel	PIS	*)	viel	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	als	KOKOM	(AVP*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	gar	ADV	*	gar	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	nicht	PTKNEG	*)	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	gleichgültig	ADJD	*))	gleichgültig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ist	VAFIN	(S*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	dir	PPER	*	dir	sg	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	das	PDS	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	zu	PTKA	(AP*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	hoch	ADJD	*))	hoch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Mensch	NN	*	mensch	sg	masc	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*))	marinelli	-	-	-	(3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	vor	APPR	(VROOT(PSEUDO(PP*	vor	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sich	PRF	*)	sich	sg	-	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	O	XY	*	O	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	weh	XY	*	weh	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	wie	PWAV	(VROOT(PSEUDO(S(AP*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wahr	ADJD	*)	wahr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	was	PWS	(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ich	PPER	*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	fürchtete	VVFIN	*))	fürchten	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ORSINA	NE	(VROOT(PSEUDO*	orsina	sg	neut	(LOC*)	(11|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	11)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	murmeln	VVFIN	*	murmeln	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	da	PTKVZ	*)	da	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Lauter	ADJA	(VROOT(PSEUDO(NP*	laut	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Bewunderung	NN	*)	bewunderung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Und	KON	(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wem	PWS	*	wem	sg	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	nicht	PTKNEG	(AP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	bekannt	ADJD	*))	bekannt	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	gnädige	ADJA	(NP*	gnädig	sg	fem	-	(11
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Gräfin	NN	*	gräfin	sg	fem	-	11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Sie	PPER	*	sie	sg	fem	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	eine	ART	(NP*	ein	sg	fem	-	(309
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Philosophin	NN	*)	philosophin	sg	fem	-	309)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	sind	VAFIN	*))	sein	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ORSINA	NE	(VROOT(PSEUDO*	orsina	sg	neut	(LOC*)	(11|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	11)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wahr	PTKVZ	*	wahr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ja	PTKANT	*	ja	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ja	ADV	*	ja	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ich	PPER	*	ich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	bin	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	eine	PIS	*	ein	sg	fem	-	(309)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Aber	KON	(S*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	habe	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	mir	PRF	(VP*	sich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	es	PPER	(VP*	es	sg	neut	-	(310)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	itzt	ADJD	*	itzt	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	merken	VVINF	*)	merken	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	lassen	VVINF	*))	lassen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	ich	PPER	(NP*	ich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	eine	PIS	*)	ein	sg	fem	-	(309)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	bin	VAFIN	*)	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	O	XY	*	O	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	pfui	XY	*	pfui	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	wenn	KOUS	(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ich	PPER	*	ich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	mir	PRF	*	sich	sg	-	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	es	PPER	*	es	sg	neut	-	(310)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	habe	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	merken	VVINF	(VP(VP(VP*	merken	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	lassen	VVINF	*	lassen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	und	KON	(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	wenn	KOUS	*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	ich	PPER	*	ich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	mir	PRF	*	sich	sg	-	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	es	PPER	*	es	sg	neut	-	(310)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	öftrer	ADJD	*	öftr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	habe	VAFIN	*))	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	merken	VVINF	*)	merken	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	lassen	VVINF	*))	lassen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ist	VAFIN	(VROOT(PSEUDO(S*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wohl	ADV	*	wohl	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	noch	ADV	*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Wunder	NN	(NP*	wunder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	mich	PPER	*	mich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	der	ART	(NP*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Prinz	NN	*)	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	verachtet	VVFIN	*)))	verachten	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wie	PWAV	(VROOT(PSEUDO(S*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	kann	VMFIN	*	können	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ein	ART	(NP*	ein	sg	masc	-	(311|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Mann	NN	*)	mann	sg	masc	-	311)|0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ein	ART	(NP*	ein	sg	masc	-	(312|(11
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Ding	NN	*)	ding	-	-	-	312)|11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	lieben	VVFIN	*	lieben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	das	PDS	*	der	sg	neut	-	(312)|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	ihm	PPER	(VP*	ihm	sg	masc	-	(311)|(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	zum	APPRART	(PP*	zu	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Trotze	NN	*)	trotze	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	auch	ADV	*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	denken	VVINF	*)	denken	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	will	VMFIN	*)	wollen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ein	ART	(VROOT(PSEUDO(CS(S(NP(NP*	ein	sg	masc	-	(313|(11
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Frauenzimmer	NN	*)	frauenzimmer	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	das	PDS	*)	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	denket	VVFIN	*)	denket	sg	-	-	313)|11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ist	VAFIN	(S*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	eben	ADV	(AP(AVP*	eben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	so	ADV	*)	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	ekel	ADJD	*	ekel	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	als	KOKOM	(NP*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	ein	ART	*	ein	sg	masc	-	(314
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Mann	NN	*	mann	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	der	PRELS	(S*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	sich	PRF	*	sich	sg	-	-	(314)
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	schminket	VVFIN	*)))))	schminken	sg	-	-	314)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Lachen	NN	(VROOT(PSEUDO(S*	lachen	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	soll	VMFIN	*	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	es	PPER	*	es	sg	neut	-	(313)|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nichts	PIS	*	nichts	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	als	KOKOM	(VP(NP*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	lachen	VVINF	(CNP*	lachen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	um	KOUI	(AVP*	um	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	immerdar	ADV	*)	immerdar	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	den	ART	(NP*	der	sg	masc	-	(0|(314
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	gestrengen	ADJA	*	gestreng	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Herrn	NN	*)))	herr	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	der	ART	(NP*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Schöpfung	NN	*)	schöpfung	sg	fem	-	0)|314)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	bei	APPR	(PP*	bei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	guter	ADJA	*	gut	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	Laune	NN	*)	laune	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	erhalten	VVINF	*)))	erhalten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Nun	ADV	*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	worüber	PWAV	*	worüber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	lach	VVIMP	*	lach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ich	PPER	*	ich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	denn	ADV	*	denn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	gleich	ADV	*	gleich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Marinelli	NE	*	marinelli	sg	*	(LOC*)	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ach	ITJ	(S*)	ach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ja	ADV	(CO(AVP*	ja	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	wohl	ADV	*))	wohl	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Über	APPR	(VROOT(PSEUDO(PP*	über	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	den	ART	*	der	sg	masc	-	(301
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Zufall	NN	*)	zufall	sg	masc	-	301)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	daß	KOUS	(VROOT(PSEUDO(CS(S(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ich	PPER	*	ich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	dem	ART	(NP*	der	sg	neut	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Prinzen	NN	*)	prinz	sg	neut	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	schreibe	VVFIN	*	schreiben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	er	PPER	(S*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	soll	VMFIN	*	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	nach	APPR	(VP(PP*	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Dosalo	NE	*)	dosalo	-	-	(LOC*)	(118)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	kommen	VVINF	*)))	kommen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	daß	KOUS	(PP*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	der	ART	*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Prinz	NN	*)	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	meinen	VVFIN	*	mein	pl	-	-	(24
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	Brief	NN	*	brief	sg	masc	-	24)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	lieset	VVFIN	*)	liesen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	er	PPER	*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	doch	ADV	*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	nach	APPR	(PP*	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	Dosalo	NE	*)	dosalo	sg	neut	(LOC*)	(118)
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	kömmt	VVFIN	*))	kömmen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ha	XY	*	ha	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ha	XY	*	ha	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ha	XY	*	ha	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wahrlich	ADJD	(VROOT(PSEUDO(S*	wahrlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ein	ART	(NP*	ein	sg	masc	-	(301
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sonderbarer	ADJA	*	sonderbar	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Zufall	NN	*))	zufall	sg	masc	-	301)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sehr	ADV	(VROOT(PSEUDO(CS(AP*	sehr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	lustig	ADJD	*)	lustig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sehr	ADV	(AP*	sehr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	närrisch	ADJD	*))	närrisch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Und	KON	(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	lachen	VVFIN	*	lachen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	mit	PTKVZ	*)	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Marinelli	NE	*	marinelli	sg	masc	(LOC*)	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Mitlachen	NN	*	mitlachen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	kann	VMFIN	*	können	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ja	ADV	(NP*	ja	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	wohl	ADV	*	wohl	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	der	ART	*	der	sg	masc	-	(3|(314
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	gestrenge	ADJA	*	gestreng	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Herr	NN	*	herr	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	der	ART	(NP*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Schöpfung	NN	*)	schöpfung	sg	fem	-	3)|314)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	ob	KOUS	(S*	ob	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	wir	PPER	*	wir	pl	*	-	(11|(313
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	arme	ADJA	(VP(VP(NP*	arm	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Geschöpfe	NN	*)	geschöpf	pl	masc	-	11)|313)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	gleich	ADV	(AVP*	gleich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	nicht	PTKNEG	*)	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	mitdenken	VVINF	*)	mitdenken	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	dürfen	VMINF	*)))	dürfen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ernsthaft	ADJD	(CO*	ernsthaft	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	befehlend	ADJD	*)	befehlend	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	So	ADV	(VROOT(PSEUDO(S*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	lachen	VVFIN	*	lachen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	doch	ADV	*)	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Gleich	ADV	(VROOT(PSEUDO(NP*	gleich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	gnädige	ADJA	(NP*	gnädig	sg	fem	-	(11
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Gräfin	NN	*	gräfin	sg	fem	-	11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*))	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	gleich	ADV	*	gleich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ORSINA	NE	(VROOT(PSEUDO*	orsina	sg	neut	(LOC*)	(11|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	11)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Stock	NE	(VROOT(PSEUDO(MPN*	stock	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*)))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	darüber	PROAV	*	darüber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	geht	VVFIN	*	gehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	der	ART	(NP*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Augenblick	NN	*)	augenblick	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	vorbei	PTKVZ	*)	vorbei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nein	PTKANT	(VROOT(PSEUDO(S*	nein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	nein	PTKANT	(S*	nein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	lachen	VVFIN	*)	lachen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	nur	ADV	*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	nicht	PTKNEG	*)	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Denn	KON	(S*	denn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sehen	VVFIN	*	sehen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Sie	PPER	*)	sie	pl	*	-	(3
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Marinelli	NE	(NP*	marinelli	sg	masc	(LOC*)	3)|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Nachdenkend	ADJD	(AP*	nachdenkend	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	bis	APPR	(PP*	bis	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	zur	APPRART	*	zu	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Rührung	NN	*)))	rührung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	was	PWS	(VROOT(PSEUDO(S(NP(S*	was	sg	neut	-	(315)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	mich	PPER	(VP*	mich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	so	ADV	(AP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	herzlich	ADJD	*)	herzlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	lachen	VVINF	*))	lachen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	macht	VVFIN	*)	machen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	das	PDS	*)	der	sg	neut	-	(315)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	hat	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	auch	ADV	(NP*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	seine	PPOSAT	*	sein	sg	fem	-	(315)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	ernsthafte	ADJA	*	ernsthaft	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	–	NN	*	–	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	sehr	ADV	(NP(AP*	sehr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	ernsthafte	ADJA	*)	ernsthaft	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	Seite	NN	*)))	seite	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wie	PWAV	(VROOT(PSEUDO(S*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	alles	PIS	*	alle	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	der	ART	*	der	sg	fem	-	(149
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Welt	NN	*))	welt	sg	fem	-	149)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Zufall	NN	*	zufall	-	-	-	(301)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ein	ART	*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Zufall	NN	*	zufall	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wär	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	daß	KOUS	*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	der	ART	*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Prinz	NN	*	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	daran	PROAV	*	daran	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	gedacht	VVPP	*	denken	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	mich	PRF	*	mich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	hier	ADV	*	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	zu	PTKZU	*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	sprechen	VVINF	*	sprechen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	mich	PPER	*	mich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	doch	ADV	*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	hier	ADV	*	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	sprechen	VVINF	*	sprechen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	muß	VMFIN	*	müssen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ein	ART	(VROOT(PSEUDO(NP*	ein	sg	masc	-	(301
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Zufall	NN	*)	zufall	sg	masc	-	301)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Glauben	VVFIN	(S*	glauben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mir	PPER	*	sich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Marinelli	NE	(S*	marinelli	sg	*	(PER*)	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	das	ART	(NP*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Wort	NN	*)	wort	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Zufall	NN	*	zufall	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	ist	VAFIN	*))	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Gotteslästerung	NN	*	gotteslästerung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nichts	PIS	(VROOT(PSEUDO(S*	nichts	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	unter	APPR	(PP*	unter	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	der	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Sonne	NN	*)	sonne	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Zufall	NN	*)	zufall	sg	masc	-	(301)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	am	PTKA	(AP*	an	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	wenigsten	PIS	(AP*	wenig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	das	PDS	(NP*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	wovon	PWAV	(S*	wovon	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	die	ART	(NP*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Absicht	NN	*)	absicht	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	so	ADV	*)))	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	klar	ADJD	*	klar	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	in	APPR	(S(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	die	ART	*	der	pl	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	Augen	NN	*)	auge	pl	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	leuchtet	VVFIN	*))	leuchten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Allmächtige	ADJA	(NP*	allmächtige	pl	*	-	(316
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	allgütige	ADJA	*	allgütig	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Vorsicht	NN	*	vorsicht	sg	fem	-	316)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	vergib	VVFIN	(S*	vergib	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	mir	PPER	*	sich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	daß	KOUS	(CS(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	ich	PPER	*	ich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	mit	APPR	(VP(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	diesem	PDAT	*	dieser	sg	masc	-	(3
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	albernen	ADJA	*	albern	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Sünder	NN	*)	sünder	sg	masc	-	3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	einen	ART	(NP*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	Zufall	NN	*)	zufall	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	genennet	VVPP	*)	nennen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	habe	VAFIN	*)	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	was	PWS	(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	so	ADV	(AVP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	offenbar	ADJD	*)	offenbar	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	dein	PIAT	(NP*	dein	sg	masc	-	(317|(316)
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	Werk	NN	*)))))	werk	sg	masc	-	317)
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	wohl	ADV	(AVP*	wohl	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	gar	ADV	*)	gar	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	28	dein	ADJD	(S(NP(AP*	dein	sg	neut	-	(317|(316)
Emilia.xml.rksp.0.CoNLL2012.conll	000	29	unmittelbares	ADJA	*)	unmittelbar	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	30	Werk	NN	*)	werk	sg	neut	-	317)
Emilia.xml.rksp.0.CoNLL2012.conll	000	31	ist	VAFIN	*)	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	32	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Hastig	ADJD	(AP*	hastig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	gegen	APPR	(PP*	gegen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Marinelli	NE	*))	marinelli	sg	*	(PER*)	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Kommen	VVFIN	(VROOT(PSEUDO(S*	kommen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mir	PPER	*	sich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	und	KON	(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	verleiten	VVFIN	*	verleiten	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	mich	PPER	*	mich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	noch	ADV	(AVP*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	einmal	ADV	*)	einmal	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	zu	APPR	(PP*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	so	ADV	*)	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	einem	ART	(NP*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Frevel	NE	*)))	frevel	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*))	marinelli	-	-	-	(3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	vor	APPR	(VROOT(PSEUDO(PP*	vor	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sich	PRF	*)	sich	sg	-	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Das	PDS	(VROOT(PSEUDO(S*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	geht	VVFIN	*	gehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	weit	ADJD	*)	weit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Aber	KON	(PP*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	gnädige	ADJA	*	gnädig	sg	fem	-	(11
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Gräfin	NN	*)	gräfin	sg	fem	-	11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	–	XY	*))	–	sg	fem	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ORSINA	NE	(VROOT(PSEUDO*	orsina	sg	neut	(LOC*)	(11|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	11)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Still	ADJD	(VROOT(PSEUDO(PP*	still	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	mit	APPR	*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	dem	ART	*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Aber	NN	*)	aber	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Die	ART	(VROOT(PSEUDO(S(NP*	der	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Aber	NN	*)	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	kosten	VVFIN	*	kosten	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Überlegung	NN	(NP*	überlegung	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	–	TRUNC	(CNP*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	mein	PPOSAT	(NP*	mein	sg	masc	-	(318|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Kopf	NN	*))))	kopf	sg	masc	-	318)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	mein	PPOSAT	(VROOT(PSEUDO(NP*	mein	sg	masc	-	(318|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Kopf	NN	*)	kopf	sg	masc	-	318)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sich	PRF	(VROOT(PSEUDO(AP*	sich	sg	-	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	der	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Hand	NN	*)	hand	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	die	ART	(NP*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Stirne	NN	*)	stirne	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	haltend	ADJD	*)	haltend	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Machen	VVFIN	*	machen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	(S*	sie	pl	*	-	(3
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Marinelli	NE	*	marinelli	sg	masc	(LOC*)	3)|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	machen	VVFIN	*	machen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	ich	PPER	*	ich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	ihn	PPER	*	ihn	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	bald	ADV	*	bald	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	spreche	VVFIN	*	sprechen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	den	ART	(NP*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	Prinzen	NN	*)	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	sonst	ADV	(S*	sonst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	bin	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	ich	PPER	*	ich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	wohl	ADV	(AVP*	wohl	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	gar	ADV	*	gar	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	nicht	PTKNEG	*)	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	im	APPRART	(PP*	in	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	Stande	NN	*))))	stande	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sehen	VVINF	*	sehen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	wir	PPER	*	wir	pl	*	-	(0)|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	sollen	VMFIN	*	sollen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	uns	PPER	*	uns	pl	-	-	(0)|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	sprechen	VVINF	*	sprechen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	wir	PPER	*	wir	pl	*	-	(11)|(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	müssen	VMFIN	*	müssen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	uns	PPER	*	uns	pl	-	-	(0)|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	sprechen	VVINF	*	sprechen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	–	XY	*	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(NP*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Prinz	NN	*)	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Orsina	NE	(VROOT(PSEUDO*	orsina	-	-	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Marinelli	NE	(VROOT(PSEUDO*	marinelli	sg	masc	(PER*)	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)))	prinz	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	indem	KOUS	(VROOT(PSEUDO(S*	indem	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	er	PPER	*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	aus	APPR	(PP*	aus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	dem	ART	*	der	sg	masc	-	(300
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Kabinette	NN	*)	kabinette	sg	masc	-	300)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	tritt	VVFIN	*	treten	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	vor	APPR	(PP*	vor	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	sich	PRF	*))	sich	sg	-	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	muß	VMFIN	*	müssen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ihm	PPER	*	ihm	sg	masc	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	zu	APPR	*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Hülfe	NN	*	hülfe	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	kommen	VVINF	*	kommen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	–	XY	*	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ORSINA	NE	(VROOT(PSEUDO*))	orsina	-	-	-	(11|(11)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	die	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ihn	PPER	*	ihn	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	erblickt	VVFIN	*	erblicken	sg	-	-	11)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ha	XY	*	ha	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	da	ADV	*	da	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	er	PPER	*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)))	prinz	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	geht	VVFIN	(VROOT(PSEUDO(S(S*	gehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	quer	ADJD	*	quer	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	über	APPR	(PP*	über	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	den	ART	*	der	sg	masc	-	(258
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Saal	NN	*))	saal	sg	masc	-	258)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	bei	APPR	(PP*	bei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ihr	PPER	*)	ihr	sg	fem	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	vorbei	ADV	*	vorbei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	nach	APPR	(PP*	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	den	ART	*	der	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	andern	ADJA	*	anderer	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Zimmern	NN	*)	zimmer	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	ohne	KOUI	(VP*	ohne	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	sich	PRF	*	sich	pl	-	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	im	APPRART	(PP*	in	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	Reden	NN	*)	rede	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	aufzuhalten	VVIZU	*))	aufhalten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sieh	NE	*	sieh	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	da	PTKVZ	*	da	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	unsere	PPOSAT	(VROOT(PSEUDO(NP*	unser	sg	fem	-	(11|(3)|(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	schöne	ADJA	*	schön	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Gräfin	NN	*)	gräfin	sg	fem	-	11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Wie	PWAV	(S*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sehr	ADV	*	sehr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	betaure	VVFIN	*)	betauren	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ich	PPER	(NP*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Madame	FM	(VP*	--	-	-	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	mir	PRF	*	sich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	die	ART	(NP*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Ehre	NN	*)	ehre	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Ihres	PPOSAT	(VP(NP*	ihr	sg	masc	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Besuchs	NN	*)	besuch	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	für	APPR	(PP*	für	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	heute	ADV	*)	heute	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	so	ADV	(AP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	wenig	PIS	*)	wenig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	zu	APPR	(PP*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	Nutze	NN	*)	nutze	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	machen	VVINF	*)	machen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	kann	VMFIN	*)))	können	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	bin	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	beschäftiget	VVPP	*)	beschäftiget	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	bin	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	allein	ADV	*)	allein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ein	ART	(AVP*	ein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	andermal	ADV	*)	andermal	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	meine	PPOSAT	(NP*	mein	sg	fem	-	(11|(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	liebe	ADJA	*	lieb	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Gräfin	NN	*)	gräfin	-	-	-	11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ein	ART	(VROOT(PSEUDO(CO(AVP*	ein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	andermal	ADV	*))	andermal	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Itzt	CARD	*	itzt	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	halten	VVFIN	(S*	halten	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Sie	PPER	*	sie	pl	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	länger	ADJD	*	lang	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	sich	PRF	*	sich	pl	-	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	auf	PTKVZ	*)	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ja	PTKANT	*	ja	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	länger	ADJD	*	lang	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Und	KON	(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	(NP*	sie	pl	*	-	(3
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Marinelli	NE	*)	marinelli	sg	masc	(LOC*)	3)|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	erwarte	VVFIN	*	erwarten	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Sie	PPER	*)	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Orsina	NE	(VROOT(PSEUDO*	orsina	-	-	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Marinelli	NE	(VROOT(PSEUDO*	marinelli	sg	masc	(PER*)	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Haben	VAFIN	(VROOT(PSEUDO(S*	haben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*	sie	pl	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	es	PPER	(VP(VP(NP*	es	sg	neut	-	(319)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	gnädige	ADJA	(CS(S(NP*	gnädig	sg	fem	-	(11
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Gräfin	NN	*)	gräfin	sg	fem	-	11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	nun	ADV	*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	von	APPR	(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	ihm	PPER	*)	ihm	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	selbst	ADV	*	selbst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	gehört	VVFIN	*)	gehören	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	was	PWS	(S*	was	sg	neut	-	(319)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Sie	PPER	*	sie	sg	fem	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	mir	PPER	*	sich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	nicht	PTKNEG	*)))	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	glauben	VVINF	*)	glauben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	wollen	VMINF	*))	wollen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ORSINA	NE	(VROOT(PSEUDO*))	orsina	-	-	-	(11)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	wie	PWAV	(VROOT(PSEUDO(VP*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	betäubt	VVPP	*)	betäuben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Hab	XY	*	hab	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	hab	XY	*	hab	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	wirklich	ADJD	*	wirklich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wirklich	ADJD	(VROOT(PSEUDO*	wirklich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ORSINA	NE	(VROOT(PSEUDO*))	orsina	-	-	-	(11)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	mit	APPR	(VROOT(PSEUDO(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Rührung	NN	*)	rührung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	»	XY	(VROOT(PSEUDO*	»	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ich	PPER	(S*	ich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	bin	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	beschäftiget	VVPP	*)	beschäftiget	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	*	ich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	bin	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	allein	ADV	*	allein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	«	XY	*	«	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ist	VAFIN	(VROOT(PSEUDO(S*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	das	PDS	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	die	ART	(NP*	der	sg	fem	-	(320
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Entschuldigung	NN	*	entschuldigung	sg	fem	-	320)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ganz	ADV	*	ganz	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	die	PRELS	(S*	der	sg	fem	-	(320)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ich	PPER	*	ich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	wert	ADJD	*	wert	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	bin	VAFIN	*)))	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wen	PWS	(VROOT(PSEUDO(S*	wen	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	weiset	VVFIN	*	weisen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	man	PIS	*	man	sg	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	damit	PROAV	*	damit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ab	PTKVZ	*)	ab	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Jeden	PIAT	(VROOT(PSEUDO(CNP(NP*	jeder	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Überlästigen	NN	*)	überlästige	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	jeden	PIAT	(NP*	jeder	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Bettler	NN	*))	bettler	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Für	APPR	(VROOT(PSEUDO(NP(PP*	für	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	mich	PPER	*)	mich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	keine	PIAT	*	kein	sg	fem	-	(321
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	einzige	ADJA	*	einzig	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Lüge	NN	*	lüge	sg	fem	-	321)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	mehr	ADV	*)	mehr	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Keine	PIAT	(VROOT(PSEUDO(S(NP*	kein	sg	fem	-	(321
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	einzige	ADJA	*	einzig	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	kleine	ADJA	*	klein	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Lüge	NN	*)	lüge	sg	-	-	321)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	mehr	ADV	*	mehr	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	für	APPR	(PP*	für	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	mich	PPER	*))	mich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Beschäftiget	NN	*	beschäftiget	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	womit	PWAV	*	womit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	denn	ADV	*	denn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nicht	PTKNEG	(VROOT(PSEUDO(CO(AVP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	allein	ADV	*))	allein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	wer	PWS	(VROOT(PSEUDO(S*	wer	sg	masc	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wäre	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	denn	ADV	*	denn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	bei	APPR	(PP*	bei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ihm	PPER	*))	ihm	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Kommen	VVFIN	(S*	kommen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*)	sie	pl	*	-	(3
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Marinelli	NE	*	marinelli	sg	masc	(LOC*)	3)|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	aus	APPR	(PP*	aus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Barmherzigkeit	NN	*	barmherzigkeit	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	lieber	ADJA	(NP*	lieber	-	-	-	(3
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Marinelli	NE	*))	marinelli	pl	-	-	3)|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Lügen	VVFIN	(VROOT(PSEUDO(S*	lügen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mir	PPER	*	sich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	eines	PIS	(NP*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	auf	APPR	(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	eigene	ADJA	*	eigen	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Rechnung	NN	*))	rechnung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	vor	PTKVZ	*)	vor	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	kostet	VVFIN	*	kosten	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Ihnen	PPER	*	ihnen	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	denn	ADV	*	denn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	eine	ART	(NP*	ein	sg	fem	-	(321
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Lüge	NN	*))	lüge	sg	fem	-	321)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Was	PWS	(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	hat	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	er	PPER	(VP*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	tun	VVINF	*)))	tun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wer	PWS	(VROOT(PSEUDO(S*	wer	sg	masc	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	bei	APPR	(PP*	bei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ihm	PPER	*))	ihm	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sagen	VVFIN	*	sagen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mir	PPER	*	sich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	sagen	VVFIN	*	sagen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	mir	PPER	*	sich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	was	PWS	*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Ihnen	PPER	*	ihnen	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	zuerst	ADV	*	zuerst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	in	APPR	*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	den	ART	*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Mund	NN	*	mund	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	kömmt	VVFIN	*	kömmen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	–	$(	*	–	sg	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	ich	PPER	*	ich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	gehe	VVFIN	*	gehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*))	marinelli	-	-	-	(3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	vor	APPR	(VROOT(PSEUDO(PP*	vor	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sich	PRF	*)	sich	sg	-	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Mit	APPR	(VROOT(PSEUDO(S(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	dieser	PDAT	*	dieser	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Bedingung	NN	*)	bedingung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	kann	VMFIN	*	können	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ich	PPER	(NP(AP*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ihr	PPOSAT	*)	ihr	sg	neut	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ja	ADV	(NP*	ja	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	wohl	ADV	*	wohl	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	einen	ART	*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Teil	NN	*	teil	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	der	ART	(NP*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Wahrheit	NN	*)))	wahrheit	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	sagen	VVINF	*)	sagen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ORSINA	NE	(VROOT(PSEUDO*	orsina	sg	neut	(LOC*)	(11|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	11)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nun	ADV	(VROOT(PSEUDO(S*)	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Geschwind	NN	(VROOT(PSEUDO(CO(NP*	geschwind	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Marinelli	NE	(MPN*	marinelli	sg	neut	(LOC*)	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	;	$.	*))	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ich	PPER	(S*	ich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	gehe	VVFIN	*))	gehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Er	PPER	(S*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sagte	VVFIN	*	sagen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ohnedem	PIS	(CNP*	ohnedem	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	der	ART	(NP*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Prinz	NN	*)))	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	»	$.	*	»	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Ein	ART	(PP(AVP*	ein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	andermal	ADV	*)	andermal	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	meine	PPOSAT	(NP*	mein	sg	fem	-	(11|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	liebe	ADJA	*	lieb	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Gräfin	NN	*	gräfin	-	-	-	11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	!	$.	*))	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	«	XY	*))	«	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sagte	VVFIN	(VROOT(PSEUDO(S*	sagen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	er	PPER	*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	nicht	PTKNEG	(AVP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	so	ADV	*))	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Damit	PROAV	(S*	damit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	er	PPER	*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mir	PPER	*	sich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Wort	NN	*	wort	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	hält	VVFIN	*	halten	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	damit	PROAV	(S*	damit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	er	PPER	*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	keinen	PIAT	(NP*	kein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Vorwand	NN	*)	vorwand	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	hat	VAFIN	*)	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	mir	PPER	(VP*	sich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	Wort	NN	*	wort	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	halten	VVINF	*)))	halten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	geschwind	ADJD	(NP*	geschwind	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	Marinelli	NE	(S(CNP(NP*	marinelli	sg	masc	(LOC*)	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	Ihre	PPOSAT	(NP*	ihr	pl	masc	-	(321|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	Lüge	NN	*	lüge	pl	masc	-	321)
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	;	$.	*))	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	ich	PPER	*)	ich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	28	gehe	VVFIN	*))	gehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	29	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(S(NP*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Prinz	NN	*	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	liebe	ADJA	(NP*	lieb	sg	fem	-	(11
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Gräfin	NN	*))	gräfin	sg	fem	-	11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	wahrlich	ADV	*	wahrlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	allein	ADV	*)	allein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Es	PPER	(VROOT(PSEUDO(S*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sind	VAFIN	*	sein	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Personen	NN	(CNP(NP*	person	pl	fem	-	(53)|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	bei	APPR	(PP*	bei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ihm	PPER	*)	ihm	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	von	APPR	(S(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	denen	PRELS	*)	der	pl	fem	-	(53)|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	er	PPER	*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	sich	PRF	*	sich	sg	-	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	keinen	PIAT	(VP(NP*	kein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Augenblick	NN	*)	augenblick	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	abmüßigen	VVINF	*)	abmüßigen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	kann	VMFIN	*))	können	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	Personen	NN	(NP*	person	pl	fem	-	(53|(8
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	die	PRELS	(S*	der	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	eben	ADV	*	eben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	einer	ART	(NP*	ein	sg	fem	-	(260
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	großen	ADJA	*	groß	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	Gefahr	NN	*)	gefahr	sg	fem	-	260)
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	entgangen	VVPP	*	entgehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	sind	VAFIN	*))))	sein	pl	-	-	53)|8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(NP*	der	sg	masc	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Graf	NN	*	graf	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Appiani	NE	(MPN*	appiani	sg	-	-	9)|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	–	NE	*))))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ORSINA	NE	(VROOT(PSEUDO*	orsina	sg	neut	(LOC*)	(11|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	11)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wäre	VAFIN	(VROOT(PSEUDO(S*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	bei	APPR	(NP(PP*	bei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ihm	PPER	*)))	ihm	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Schade	NN	(NP*	schade	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ich	PPER	*	ich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	über	APPR	(PP*	über	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	diese	PDAT	*	dieser	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Lüge	NN	*)	lüge	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	ertappen	VVINF	*	ertappen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	muß	VMFIN	*))	müssen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Geschwind	NN	(VROOT(PSEUDO(NP*	geschwind	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	eine	ART	(NP*	ein	sg	fem	-	(321
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	andere	PIS	*))	anderer	sg	fem	-	321)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Denn	KON	(NP*	denn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Graf	NN	*	graf	sg	*	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Appiani	NE	*	appiani	sg	*	-	9)|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	wenn	KOUS	(S(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	noch	ADV	(AVP*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	nicht	PTKNEG	*)	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	wissen	VVFIN	*)	wissen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	eben	ADV	(VP(VP*	eben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	von	APPR	(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	Räubern	NN	*)	räuber	pl	masc	-	(259)
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	erschossen	VVPP	*)	erschießen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	worden	VAPP	*)))	werden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(S(NP*	der	sg	masc	-	(141
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Wagen	NN	*	wagen	sg	masc	-	141)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	seinem	PPOSAT	*	sein	sg	neut	-	(9|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Leichname	NN	*))	leichname	sg	neut	-	9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	begegnete	VVFIN	*	begegnen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	mir	PPER	*	sich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	kurz	ADJD	(PP*	kurz	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	vor	APPR	*	vor	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	der	ART	*	der	sg	fem	-	(26
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Stadt	NN	*))	stadt	sg	fem	-	26)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Oder	NE	(S*	oder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	er	PPER	*	er	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nicht	PTKNEG	*)	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Hätte	VVFIN	(VROOT(PSEUDO(S*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mir	PPER	(VP*	sich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	bloß	ADV	*	bloß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	geträumet	VVPP	*))	träumen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Leider	ADV	(VROOT(PSEUDO(VP(AVP*	leider	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	bloß	ADV	*)	bloß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	geträumet	VVPP	*)	träumen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Aber	KON	(NP*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	die	ART	*	der	pl	*	-	(53|(8
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	andern	PIS	*	anderer	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	die	PRELS	(CS(S*	der	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	dem	ART	*	der	sg	neut	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Grafen	NN	*)	grafe	sg	neut	-	9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	waren	VAFIN	*)	sein	pl	-	-	53)|8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	haben	VAFIN	(S*	haben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	sich	PRF	(VP*	sich	pl	-	-	(8)|(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	glücklich	ADJD	(AP*	glücklich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	hierher	PROAV	*)	hierher	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	nach	APPR	(PP*	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	dem	ART	*	der	sg	neut	-	(117
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	Schlosse	NN	*)	schloß	sg	neut	-	117)
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	gerettet	VVPP	*))))	retten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	seine	PPOSAT	(NP(CNP(NP*	sein	pl	neut	-	(8|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	Braut	NN	*	braut	sg	-	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	nämlich	ADV	*)	nämlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	die	ART	(NP*	der	pl	masc	-	(53
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	Mutter	NN	*	mutter	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	der	ART	(NP*	der	sg	fem	-	(8
Emilia.xml.rksp.0.CoNLL2012.conll	000	28	Braut	NN	*)))	braut	sg	fem	-	53)|8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	29	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	30	mit	APPR	(S(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	31	welchen	PRELS	*)	welcher	sg	fem	-	(8)|(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	32	er	PPER	*	er	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	33	nach	APPR	(PP*	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	34	Sabionetta	NE	*)	sabionetta	sg	fem	(LOC*)	(56)
Emilia.xml.rksp.0.CoNLL2012.conll	000	35	zu	APPR	(VP(PP*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	36	seiner	PPOSAT	*	sein	sg	fem	-	(102|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	37	feierlichen	ADJA	*	feierlich	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	38	Verbindung	NN	*)	verbindung	sg	fem	-	102)
Emilia.xml.rksp.0.CoNLL2012.conll	000	39	fahren	VVINF	*)	fahren	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	40	wollte	VMFIN	*))	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	41	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ORSINA	NE	(VROOT(PSEUDO*	orsina	sg	neut	(LOC*)	(11|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	11)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Also	ADV	(VROOT(PSEUDO(NP(AP*	also	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	die	ART	*))	der	sg	fem	-	(8)|(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Die	PDS	(VROOT(PSEUDO(S*	der	pl	*	-	(53)|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sind	VAFIN	*	sein	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	bei	APPR	(PP*	bei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	dem	ART	*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Prinzen	NN	*))	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	die	ART	(VROOT(PSEUDO(NP*	der	sg	fem	-	(8
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Braut	NN	*)	braut	sg	-	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	die	ART	(NP*	der	pl	masc	-	(53
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Mutter	NN	*	mutter	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	der	ART	(NP*	der	sg	fem	-	(8
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Braut	NN	*)))	braut	sg	fem	-	53)|8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ist	VAFIN	(S*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	die	ART	(NP*	der	sg	fem	-	(8
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Braut	NN	*)	braut	sg	fem	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	schön	ADJD	*)	schön	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Dem	ART	(VROOT(PSEUDO(S(NP*	der	sg	neut	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Prinzen	NN	*)	prinz	sg	neut	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	geht	VVFIN	*	gehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ihr	PPOSAT	(NP*	ihr	sg	fem	-	(294|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Unfall	NN	*)	unfall	sg	masc	-	294)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ungemein	ADJD	*	ungemein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	nahe	PTKVZ	*)	nahe	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ORSINA	NE	(VROOT(PSEUDO*	orsina	sg	neut	(LOC*)	(11|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	11)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(CS(S*	ich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	will	VMFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	hoffen	VVINF	*)	hoffen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	auch	ADV	(S*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	wenn	KOUS	*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	sie	PPER	*	sie	pl	masc	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	häßlich	ADJD	*	häßlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	wäre	VAFIN	*))	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Denn	KON	(VROOT(PSEUDO(S*	denn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ihr	PPOSAT	(NP*	ihr	sg	neut	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Schicksal	NN	*)	schicksal	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	schrecklich	ADJD	*)	schrecklich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Armes	NE	*	armes	pl	-	-	(8
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	gutes	ADJA	(NP*	gut	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Mädchen	NN	*	mädchen	sg	neut	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	eben	ADV	(CS(S(AP*	eben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	da	ADV	*)	da	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	er	PPER	*	er	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	dein	ADJD	(VP(AP*	dein	sg	neut	-	(8)|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	auf	APPR	(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	immer	ADV	*))	immer	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	werden	VAINF	*)	werden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	sollte	VMFIN	*)	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	wird	VAFIN	(S*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	er	PPER	*	er	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	dir	PPER	(VP*	dir	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	auf	APPR	(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	immer	ADV	*)	immer	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	entrissen	VVPP	*))))	entreißen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Wer	PWS	(S*	wer	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sie	PPER	*	sie	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	denn	ADV	*)	denn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	diese	PDAT	(NP*	dieser	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Braut	NN	*)	braut	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Kenn	KON	*	kenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sie	PPER	*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	gar	ADV	*	gar	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ich	PPER	(S*	ich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	bin	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	so	ADV	(AVP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	lange	ADV	*))	lange	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	aus	APPR	(NP(PP*	aus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	der	ART	*	der	sg	fem	-	(26
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Stadt	NN	*)	stadt	sg	fem	-	26)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	ich	PPER	*	ich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	von	APPR	(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	nichts	PIS	*)	nichts	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	weiß	VVFIN	*))	weiß	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Es	PPER	(VROOT(PSEUDO(S*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Emilia	NE	(NP*	emilia	*	*	-	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Galotti	NE	*))	galotti	sg	*	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ORSINA	NE	(VROOT(PSEUDO*	orsina	sg	neut	(LOC*)	(11|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	11)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wer	PWS	*	wer	sg	masc	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Emilia	NE	(NP*	emilia	*	*	-	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Galotti	NE	*)	galotti	sg	*	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Emilia	NE	(VROOT(PSEUDO(NP*	emilia	*	*	-	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Galotti	NE	*)	galotti	sg	*	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Marinelli	NE	*	marinelli	-	-	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	daß	KOUS	(VROOT(PSEUDO(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ich	PPER	*	ich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	diese	PDAT	(NP*	dieser	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Lüge	NN	*)	lüge	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nicht	PTKNEG	(PP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	für	APPR	*	für	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Wahrheit	NN	*)	wahrheit	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	nehme	VVFIN	*)	nehmen	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wie	PWAV	*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ORSINA	NE	(VROOT(PSEUDO*	orsina	sg	neut	(LOC*)	(11|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	11)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Emilia	NE	(VROOT(PSEUDO(NP*	emilia	*	*	-	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Galotti	NE	*)	galotti	sg	*	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Die	ART	*	der	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*	sie	sg	fem	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	schwerlich	ADJD	*	schwerlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	kennen	VVINF	*	kennen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	werden	VAFIN	*	werden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	–	XY	*	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ORSINA	NE	(VROOT(PSEUDO*	orsina	sg	neut	(LOC*)	(11|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	11)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Doch	KON	*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	doch	ADV	(VROOT(PSEUDO(S*)	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wenn	KOUS	(VROOT(PSEUDO(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	auch	ADV	(AVP*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nur	ADV	*)	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	von	APPR	(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	heute	ADV	*)	heute	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	wäre	VAFIN	*)	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Im	APPRART	(NP(PP*	in	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Ernst	NN	*)	ernst	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Marinelli	NE	*)	marinelli	sg	masc	(LOC*)	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Emilia	NE	(VROOT(PSEUDO(NP*	emilia	*	*	-	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Galotti	NE	*)	galotti	sg	*	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Emilia	NE	*	emilia	*	*	-	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Galotti	NE	(S*	galotti	sg	*	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	wäre	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	die	ART	(NP*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	unglückliche	ADJA	*	unglücklich	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Braut	NN	*))	braut	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	die	PRELS	(S*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	der	ART	(NP*	der	sg	fem	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Prinz	NN	*)	prinz	sg	fem	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	tröstet	VVFIN	*)	trösten	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*))	marinelli	-	-	-	(3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	vor	APPR	(VROOT(PSEUDO(PP*	vor	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sich	PRF	*)	sich	sg	-	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sollte	VMFIN	(VROOT(PSEUDO(S*	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ich	PPER	(VP(NP(AP*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ihr	PPOSAT	*))	ihr	sg	neut	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	schon	ADV	*	schon	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	zu	PTKA	(AP*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	viel	PIS	*)	viel	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	gesagt	VVPP	*)	sagen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	haben	VAFIN	*)	haben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ORSINA	NE	(VROOT(PSEUDO*	orsina	sg	neut	(LOC*)	(11|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	11)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Graf	NE	(MPN*	graf	sg	*	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Appiani	NE	*)	appiani	sg	*	-	9)|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	war	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	der	ART	(NP*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Bräutigam	NN	*	bräutigam	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	dieser	PDAT	(NP*	dieser	sg	masc	-	(8
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Braut	NN	*)))	braut	sg	-	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	der	ART	(VROOT(PSEUDO(NP*	der	sg	masc	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	eben	ADV	(AP*	eben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	erschossene	ADJA	*)	erschossen	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Appiani	NN	*)	appiani	sg	masc	-	9)|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nicht	PTKNEG	(VROOT(PSEUDO(CO(AVP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	anders	ADV	*))	anders	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ORSINA	NE	(VROOT(PSEUDO*	orsina	sg	neut	(LOC*)	(11|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	11)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Bravo	ITJ	(VROOT(PSEUDO(S*)	bravo	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	o	XY	(VROOT(PSEUDO*	O	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	bravo	XY	*	bravo	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	bravo	ITJ	(VROOT(PSEUDO(S*)	bravo	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	In	APPR	(VROOT(PSEUDO(AP(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	die	ART	*	der	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Hände	NN	*)	hand	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	schlagend	ADJD	*)	schlagend	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wie	PWAV	*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	das	PDS	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ORSINA	NE	(VROOT(PSEUDO*	orsina	sg	neut	(LOC*)	(11|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	11)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Küssen	NN	*	kuß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	möcht	VMFIN	*	möchen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	den	ART	*	der	sg	masc	-	(322
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Teufel	NN	*	teufel	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	der	PRELS	*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	ihn	PPER	*	ihn	sg	masc	-	(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	dazu	PROAV	*	dazu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	verleitet	VVPP	*	verleiten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	hat	VAFIN	*	haben	sg	-	-	322)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wen	PWS	*	wen	sg	*	-	(322)|(6)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	verleitet	VVPP	*	verleiten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	wozu	PWAV	(VROOT(PSEUDO*	wozu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ORSINA	NE	(VROOT(PSEUDO*	orsina	sg	neut	(LOC*)	(11|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	11)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ja	PTKANT	*	ja	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	küssen	VVFIN	*	küssen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	küssen	VMFIN	*	küssen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	möcht	VMFIN	*	möchen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ich	PPER	*	ich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	ihn	PPER	*	ihn	sg	masc	-	(322)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	–	XY	*	–	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	wenn	KOUS	*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Sie	PPER	*	sie	sg	fem	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	selbst	ADV	*	selbst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	dieser	PDAT	*	dieser	sg	fem	-	(322
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	Teufel	NN	*	teufel	sg	fem	-	322)
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	wären	VAFIN	*	sein	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	Marinelli	NE	*	marinelli	sg	*	(LOC*)	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Gräfin	NE	(VROOT(PSEUDO(MPN*	gräfin	-	-	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*)))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ORSINA	NE	(VROOT(PSEUDO*	orsina	sg	neut	(LOC*)	(11|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	11)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Kommen	VVFIN	(VROOT(PSEUDO(S*	kommen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	her	PTKVZ	*)	her	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sehen	VVFIN	(VROOT(PSEUDO(S*	sehen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mich	PPER	*	mich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	an	PTKVZ	*)	an	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	steif	ADJD	*	steif	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	an	PTKVZ	*	an	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Aug	NN	*	aug	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	in	APPR	*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Auge	NN	*	auge	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nun	ADV	(VROOT(PSEUDO(S*)	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ORSINA	NE	(VROOT(PSEUDO*	orsina	sg	neut	(LOC*)	(11|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	11)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wissen	VVFIN	(VROOT(PSEUDO(S*	wissen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	was	PWS	(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ich	PPER	*	ich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	denke	VVFIN	*))	denken	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wie	PWAV	*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	kann	VMFIN	*	können	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	das	PDS	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ORSINA	NE	(VROOT(PSEUDO*	orsina	sg	neut	(LOC*)	(11|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	11)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Haben	VAFIN	(VROOT(PSEUDO(S*	haben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	keinen	PIAT	(NP*	kein	sg	masc	-	(323
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Anteil	NN	*	anteil	sg	masc	-	323)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	daran	PROAV	*))	daran	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Woran	PWAV	(VROOT(PSEUDO*	woran	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ORSINA	NE	(VROOT(PSEUDO*	orsina	sg	neut	(LOC*)	(11|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	11)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Schwören	VVFIN	(VROOT(PSEUDO(S*	schwören	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*)	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Nein	PTKANT	(S*	nein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	schwören	VVFIN	*	schwören	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	nicht	PTKNEG	*)	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(S*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	möchten	VMFIN	*	möchten	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	eine	ART	(VP(NP*	ein	sg	fem	-	(324
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Sünde	NN	*)	sünde	sg	fem	-	324)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	mehr	ADV	*	mehr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	begehen	VVINF	*))	begehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	–	CARD	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Oder	KON	(S*	oder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	ja	ADV	*	ja	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	schwören	VVFIN	*	schwören	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	nur	ADV	*)	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Eine	ART	(VROOT(PSEUDO(S(NP*	ein	sg	fem	-	(324
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sünde	NN	*)	sünde	sg	fem	-	324)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mehr	ADV	*	mehr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	oder	KON	(AVP*	oder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	weniger	ADV	*)	weniger	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	für	APPR	(PP*	für	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	einen	PIS	*	ein	sg	masc	-	(3
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	der	PRELS	(S*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	doch	ADV	(VP*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	verdammt	VVPP	*)	verdammen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	ist	VAFIN	*)))	sein	sg	-	-	3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Haben	VAFIN	(S*	haben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	keinen	PIAT	(NP*	kein	sg	masc	-	(323
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Anteil	NN	*	anteil	sg	masc	-	323)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	daran	PROAV	*))	daran	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(S*	sie	pl	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	erschrecken	VVFIN	*	erschrecken	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mich	PPER	(NP*	mich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Gräfin	NE	*))	gräfin	-	-	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ORSINA	NE	(VROOT(PSEUDO*	orsina	sg	neut	(LOC*)	(11|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	11)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Gewiß	ADV	(VROOT(PSEUDO(S*)	gewiß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Nun	ADV	(S(NP*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Marinelli	NE	*)	marinelli	sg	masc	(LOC*)	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	argwohnet	VVFIN	*	argwohnen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Ihr	PPOSAT	(NP*	ihr	sg	neut	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	gutes	ADJA	*	gut	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Herz	NN	*))	herz	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	auch	ADV	(NP*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	nichts	PIS	*)	nichts	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Was	PWS	*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	worüber	PWAV	(VROOT(PSEUDO*	worüber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ORSINA	NE	(VROOT(PSEUDO*	orsina	sg	neut	(LOC*)	(11|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	11)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wohl	ADV	(VROOT(PSEUDO(S*	wohl	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	–	PPER	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	will	VMFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ich	PPER	*	ich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Ihnen	PPER	*	ihnen	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	etwas	PIS	(VP*	etwas	-	-	-	(325)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	vertrauen	VVINF	*))	vertrauen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	etwas	PIS	(NP*	etwas	-	-	-	(325
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	das	PRELS	(S*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Ihnen	PPER	(VP*	ihnen	*	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	jedes	PIAT	(NP*	jeder	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	Haar	NN	*	haar	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	auf	APPR	(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	dem	ART	*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	Kopfe	NN	*))	kopfe	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	zu	APPR	(PP*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	Berge	NN	*)	berg	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	sträuben	VVINF	*)	sträuben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	soll	VMFIN	*))	sollen	sg	-	-	325)
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Aber	NN	(NP*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	hier	ADV	*	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	so	ADV	(AP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	nahe	ADJD	*))	nahe	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	an	APPR	*	an	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	der	ART	(NP*	der	sg	fem	-	(245
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Türe	NN	*	türe	sg	fem	-	245)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	möchte	VMFIN	(S*	möchten	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	uns	PPER	*	uns	pl	*	-	(3)|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	jemand	PIS	(VP*	jemand	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	hören	VVINF	*)))	hören	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Kommen	VVFIN	(VROOT(PSEUDO(S*	kommen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	hieher	ADV	*)	hieher	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Indem	KOUS	(VROOT(PSEUDO(S*	indem	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sie	PPER	*	sie	pl	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	den	ART	(NP*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Finger	NN	*)	finger	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	auf	APPR	(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	den	ART	*	der	sg	masc	-	(326
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Mund	NN	*)	mund	sg	masc	-	326)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	legt	VVFIN	*)	legen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Hören	VVFIN	(VROOT(PSEUDO(S*	hören	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*)	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ganz	ADV	(VROOT(PSEUDO(S*	ganz	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	geheim	ADJD	*))	geheim	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ganz	ADV	(VROOT(PSEUDO(S*	ganz	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	geheim	ADJD	*))	geheim	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ihren	PPOSAT	(NP*	ihr	sg	masc	-	(326|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Mund	NN	*	mund	sg	masc	-	326)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	seinem	PPOSAT	(NP*	sein	sg	masc	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Ohre	NN	*))	ohre	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	nähert	VVFIN	*	nähern	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	als	KOKOM	(S*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	ob	KOUS	*	ob	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	sie	PPER	*	sie	pl	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	ihm	PPER	*	ihm	sg	masc	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	zuflüstern	VVINF	*	zuflüstern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	wollte	VMFIN	*)	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	was	PWS	(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	sie	PPER	*	sie	sg	fem	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	aber	ADV	*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	sehr	ADV	(AP*	sehr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	laut	ADJD	*)	laut	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	ihm	PPER	*	ihm	sg	masc	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	zuschreiet	VVFIN	*))	zuschreiet	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(S(NP*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Prinz	NN	*)	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ein	ART	(NP*	ein	sg	masc	-	(327
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Mörder	NN	*))	mörder	sg	masc	-	327)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Gräfin	NE	*	gräfin	-	-	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	–	$.	*	–	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Gräfin	NN	*	gräfin	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	–	$(	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	sind	VAFIN	*	sein	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Sie	PPER	*	sie	pl	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ganz	ADV	*	ganz	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	von	APPR	*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Sinnen	NN	*	sinnen	pl	fem	-	(328)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ORSINA	NE	(VROOT(PSEUDO*	orsina	sg	neut	(LOC*)	(11|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	11)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Von	APPR	(VROOT(PSEUDO(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sinnen	NN	*)	sinnen	pl	fem	-	(328)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ha	XY	*	ha	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ha	XY	*	ha	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ha	XY	*	ha	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Aus	APPR	(VROOT(PSEUDO(AP(PP*	aus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	vollem	ADJA	*	voll	-	-	-	(329
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Halse	NN	*)	hals	-	-	-	329)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	lachend	ADJD	*)	lachend	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	bin	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	selten	ADJD	(VP(AVP(CAVP*	selten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	oder	KON	*	oder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	nie	ADV	*)	nie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	meinem	PPOSAT	*	mein	sg	masc	-	(90|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Verstande	NN	*)	verstande	sg	masc	-	90)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	wohl	ADV	*)	wohl	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	zufrieden	ADJD	*	zufrieden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	gewesen	VAPP	*)	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	als	KOKOM	(S*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	eben	ADV	*	eben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	itzt	VVFIN	*))	itzen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Zuverlässig	ADJD	(NP*	zuverlässig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Marinelli	NE	*	marinelli	sg	masc	(PER*)	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	;	$.	*)	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	aber	KON	*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	es	PPER	(S*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	bleibt	VVFIN	*	bleiben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	unter	APPR	(PP*	unter	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	uns	PPER	*)	uns	pl	*	-	(3)|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	–	CARD	(NP*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Leise	NN	*))	leise	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	der	ART	(VROOT(PSEUDO(S(NP*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Prinz	NN	*)	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ein	ART	(NP*	ein	sg	masc	-	(327
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Mörder	NN	*))	mörder	sg	masc	-	327)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	des	ART	(VROOT(PSEUDO(NP*	der	sg	masc	-	(327|(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Grafen	NN	*	grafe	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Appiani	NE	(MPN*	appiani	sg	masc	(PER*)	9)|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Mörder	NE	*))	mörder	sg	masc	-	327)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Den	NE	*	der	-	-	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	haben	VAFIN	(S*	haben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Räuber	NN	*	räuber	pl	masc	-	(259)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	den	PDS	(S*	der	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	haben	VAFIN	*	haben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Helfershelfer	NN	*))	helfershelfer	pl	masc	-	(259
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	des	ART	(NP*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Prinzen	NN	*	prinz	-	-	-	259)|0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	den	PDS	(S*	der	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	hat	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	der	ART	(VP(NP*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	Prinz	NN	*)	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	umgebracht	VVPP	*)))	umbringen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wie	PWAV	(VROOT(PSEUDO(S*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	kann	VMFIN	*	können	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Ihnen	PPER	*	ihnen	pl	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	eine	ART	(NP*	ein	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Abscheuligkeit	NN	*	abscheuligkeit	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	den	ART	*	der	sg	masc	-	(326
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Mund	NN	*))	mund	sg	masc	-	326)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	in	APPR	(VP(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	die	ART	*	der	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Gedanken	NN	*)	gedanke	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	kommen	VVINF	*))	kommen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ORSINA	NE	(VROOT(PSEUDO*	orsina	sg	neut	(LOC*)	(11|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	11)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wie	PWAV	(VROOT(PSEUDO*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ganz	ADV	(AP*	ganz	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	natürlich	ADV	*)	natürlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Mit	APPR	(NP(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	dieser	PDAT	*	dieser	sg	fem	-	(8
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Emilia	NE	(MPN*	emilia	*	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Galotti	NE	*)	galotti	sg	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	die	PRELS	(CS(S*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	hier	ADV	*	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	bei	APPR	(PP*	bei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	ihm	PPER	*)	ihm	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	ist	VAFIN	*)	sein	sg	-	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	–	KON	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	deren	PRELAT	(S(NP*	der	sg	fem	-	(9|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Bräutigam	NN	*)	bräutigam	sg	masc	-	9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	über	APPR	(PP*	über	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	Hals	NN	*	hals	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	über	APPR	(PP*	über	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	Kopf	NN	*))	kopf	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	sich	PRF	(VP*	sich	sg	-	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	aus	APPR	(PP*	aus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	der	ART	*	der	sg	fem	-	(149
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	Welt	NN	*)	welt	sg	fem	-	149)
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	trollen	VVINF	*)	trollen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	müssen	VMFIN	*)))	müssen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	–	NN	(NP*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	28	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	29	dieser	PDAT	*	dieser	sg	fem	-	(8
Emilia.xml.rksp.0.CoNLL2012.conll	000	30	Emilia	NE	(S(MPN*	emilia	*	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	31	Galotti	NE	*)	galotti	sg	*	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	32	hat	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	33	der	ART	(NP*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	34	Prinz	NN	*)	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	35	heute	ADV	*)	heute	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	36	Morgen	NN	*	morgen	-	-	-	(23)
Emilia.xml.rksp.0.CoNLL2012.conll	000	37	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	38	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	39	der	PRELS	*))))	der	sg	fem	-	(170
Emilia.xml.rksp.0.CoNLL2012.conll	000	40	Halle	NE	*	halle	sg	fem	-	170)
Emilia.xml.rksp.0.CoNLL2012.conll	000	41	bei	APPR	*	bei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	42	den	ART	(NP*	der	pl	masc	-	(121
Emilia.xml.rksp.0.CoNLL2012.conll	000	43	Dominikanern	NN	*	dominikaner	pl	masc	-	121)
Emilia.xml.rksp.0.CoNLL2012.conll	000	44	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	45	ein	ART	(VP(NP*	ein	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	46	langes	ADJA	(CAP*	lang	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	47	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	48	breites	ADJA	*))	breit	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	49	gesprochen	VVPP	*))	sprechen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	50	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Das	PDS	(VROOT(PSEUDO(CS(S*	der	sg	neut	-	(330)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	weiß	VVFIN	*	weiß	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ich	PPER	*)	ich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	das	PDS	(S*	der	sg	neut	-	(330)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	haben	VAFIN	*	haben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	meine	PPOSAT	(VP(NP*	mein	sg	neut	-	(331|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Kundschafter	NN	*)	kundschafter	-	-	-	331)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	gesehen	VVPP	*)))	sehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(S*	sie	pl	*	-	(331)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	haben	VAFIN	*	haben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	auch	ADV	(VP*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	gehört	VVPP	*	gehören	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	was	PWS	(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	er	PPER	*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	mit	APPR	(VP(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	ihr	PPER	*)	ihr	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	gesprochen	VVPP	*))))	sprechen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Nun	ADV	*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	guter	ADJA	(NP*	gut	sg	masc	-	(3
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Herr	NN	*)	herr	sg	masc	-	3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Bin	VAFIN	(VROOT(PSEUDO(S*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ich	PPER	*	ich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	von	APPR	(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Sinnen	NN	*))	sinnen	pl	fem	-	(328)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	*	ich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	reime	VVFIN	*	reimen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	dächt	VVFIN	*	dächen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ich	PPER	*	ich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	doch	ADV	*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	noch	ADV	*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	ziemlich	ADV	*	ziemlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	zusammen	PTKVZ	*	zusammen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	was	PIS	*	was	sg	neut	-	(332)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	zusammen	ADV	*	zusammen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	gehört	VVFIN	*	gehören	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Oder	NE	*	oder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	trifft	VVFIN	(S*	treffen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	auch	ADV	(NP*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	das	PDS	*))	der	sg	neut	-	(332)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	nur	ADV	*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	so	ADV	(S*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	von	APPR	(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	ungefähr	ADJD	*)	ungefähr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	zu	PTKVZ	*)	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ist	VAFIN	(VROOT(PSEUDO(S*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ihnen	PPER	*	ihnen	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	auch	ADV	(NP*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	das	ART	*	der	sg	neut	-	(332)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Zufall	NN	*))	zufall	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	O	ITJ	(VROOT(PSEUDO(S*	O	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Marinelli	NE	*	marinelli	sg	masc	(LOC*)	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	verstehen	VVFIN	*	verstehen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	auf	APPR	(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	die	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Bosheit	NN	*	bosheit	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	der	ART	(NP*	der	pl	masc	-	(158
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Menschen	NN	*))	mensch	pl	masc	-	158)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	sich	PRF	*	sich	pl	-	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	eben	ADV	*	eben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	so	ADV	(AP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	schlecht	ADJD	*)	schlecht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	als	KOKOM	(PP*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	auf	APPR	*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	die	ART	*	der	sg	fem	-	(316
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	Vorsicht	NN	*))	vorsicht	sg	fem	-	316)
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Gräfin	NE	(VROOT(PSEUDO(S*	gräfin	-	-	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*	sie	pl	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	würden	VAFIN	*	werden	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	sich	PRF	(VP*	sich	pl	-	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	um	APPR	(PP*	um	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	den	ART	*	der	sg	masc	-	(329
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Hals	NN	*)	hals	sg	masc	-	329)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	reden	VVINF	*))	reden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	–	$.	*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ORSINA	NE	(VROOT(PSEUDO*	orsina	sg	neut	(LOC*)	(11|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	11)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wenn	KOUS	*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ich	PPER	*	ich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	das	PDS	*	der	sg	neut	-	(332)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mehrern	VVFIN	*	mehrern	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	sagte	VVFIN	*	sagen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Desto	NE	(NP*	desto	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	besser	ADJD	(PP*	gut	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	desto	ADV	(AP*	desto	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	besser	ADJD	*)))	gut	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Morgen	NN	*	morgen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	will	VMFIN	(S*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	es	PPER	(VP*	es	sg	neut	-	(332)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	auf	APPR	(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	dem	ART	*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Markte	NN	*)	markte	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	ausrufen	VVINF	*))	ausrufen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Und	KON	(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wer	PWS	*	wer	sg	masc	-	(333)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mir	PPER	*	sich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	widerspricht	VVFIN	*)	widersprechen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	–	CARD	*	–	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	wer	PWS	(S*	wer	sg	masc	-	(333)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	mir	PPER	*	sich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	widerspricht	VVFIN	*	widersprechen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	der	PDS	(S*	der	sg	masc	-	(333)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	war	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	des	ART	(NP*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Mörders	NN	*)))	mörder	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Spießgeselle	NN	*	spießgeselle	sg	-	-	(259)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Leben	NN	*	leben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	(NP*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	wohl	ADV	*)	wohl	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Indem	KOUS	(VROOT(PSEUDO(S(S*	indem	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sie	PPER	*	sie	pl	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	fortgehen	VVINF	*	fortgehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	will	VMFIN	*)	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	begegnet	VVFIN	*	begegnen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	sie	PPER	*	sie	sg	fem	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	an	APPR	(PP*	an	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	der	ART	*	der	sg	fem	-	(245
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Türe	NN	*)	türe	sg	fem	-	245)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	dem	ART	(NP*	der	sg	neut	-	(12
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	alten	ADJA	*	alt	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Galotti	NE	*	galotti	sg	neut	(PER*)	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	der	PRELS	(S*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	eiligst	ADV	*	eiligst	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	hereintritt	VVFIN	*)))	hereintreten	sg	-	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Odoardo	NE	(VROOT(PSEUDO(MPN*	odoardo	*	*	-	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Galotti	NE	*)	galotti	sg	*	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Die	ART	(VROOT(PSEUDO(NP*	der	sg	fem	-	(11
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Gräfin	NN	*)	gräfin	sg	fem	-	11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Marinelli	NE	(VROOT(PSEUDO*	marinelli	sg	masc	(PER*)	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO(MPN*	odoardo	-	-	-	(12|(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	GALOTTI	NE	*)	galotti	-	-	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Verzeihen	VVFIN	*	verzeihen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*	sie	pl	*	-	(11
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	gnädige	ADJA	*	gnädig	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Frau	NN	*	frau	sg	fem	-	11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	–	XY	*	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ORSINA	NE	(VROOT(PSEUDO*	orsina	sg	neut	(LOC*)	(11|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	11)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	habe	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	hier	ADV	(VP*	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nichts	PIS	*	nichts	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	verzeihen	VVINF	*)))	verzeihen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Denn	KON	*	denn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ich	PPER	*	ich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	habe	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	hier	ADV	*	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nichts	PIS	*	nichts	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	übel	ADV	*	übel	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	zu	PTKZU	*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	nehmen	VVINF	*	nehmen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	–	$.	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	An	APPR	*	an	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	diesen	PDAT	*	dieser	pl	masc	-	(3
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Herrn	NN	*	herr	sg	masc	-	3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	wenden	VVFIN	*	wenden	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Sie	PPER	*	sie	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	sich	PRF	*	sich	pl	-	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ihn	PPER	(VROOT(PSEUDO(AP*	ihn	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	nach	APPR	(PP*	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	dem	ART	*	der	sg	masc	-	(3
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Marinelli	NN	*)	marinelli	sg	masc	(LOC*)	3)|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	weisend	ADJD	*)	weisend	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*))	marinelli	-	-	-	(3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	indem	KOUS	(VROOT(PSEUDO(CS(S*	indem	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	er	PPER	*	er	sg	masc	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ihn	PPER	*	ihn	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	erblicket	VVFIN	*)	erblicket	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	vor	APPR	(S(PP*	vor	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	sich	PRF	*)))	sich	sg	-	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nun	ADV	(VROOT(PSEUDO*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	vollends	ADV	*	vollends	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	der	ART	(VROOT(PSEUDO(NP*	der	sg	masc	-	(12
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Alte	ADJA	*)	alte	sg	masc	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Vergeben	VVFIN	(VROOT(PSEUDO(CS(S*	vergeben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*	sie	pl	*	-	(3
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mein	PPOSAT	(NP*	mein	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Herr	NN	*	herr	sg	masc	-	3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	einem	ART	(NP*	ein	sg	masc	-	(12
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Vater	NN	*	vater	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	der	PRELS	(S*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	der	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	äußersten	ADJA	*	äußerer	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Bestürzung	NN	*)	bestürzung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	ist	VAFIN	*))))	sein	sg	-	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	–	KON	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	er	PPER	*	er	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	unangemeldet	ADJD	*	unangemeldet	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	hereintritt	VVFIN	*))	hereintreten	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ORSINA	NE	(VROOT(PSEUDO*	orsina	sg	neut	(LOC*)	(11|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	11)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Vater	NN	(VROOT(PSEUDO*	vater	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Kehrt	ADJD	(VROOT(PSEUDO(S*	kehrt	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wieder	ADV	*	wieder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	um	PTKVZ	*)	um	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(NP*	der	sg	masc	-	(8
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Emilia	NE	*	emilia	sg	masc	(PER*)	8)|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ohne	APPR	(PP*	ohne	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Zweifel	NN	*))	zweifel	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ha	XY	*	ha	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	willkommen	ADJD	*	willkommen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ein	ART	(VROOT(PSEUDO(S(NP*	ein	sg	masc	-	(10
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Bedienter	NN	*)	bedienter	sg	masc	-	10)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	kam	VVFIN	*	kommen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mir	PPER	*	sich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	entgegen	APPR	(PP*	entgegen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	gesprengt	ADJD	*)	sprengen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	der	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Nachricht	NN	*	nachricht	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	hierherum	ADV	*	hierherum	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	die	ART	(NP*	der	pl	fem	-	(53|(8
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Meinigen	NN	*)	meinige	pl	fem	-	53)|8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	Gefahr	NN	*)	gefahr	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	wären	VAFIN	*)))	sein	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(CS(S*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	fliege	VVFIN	*	fliegen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	herzu	PTKVZ	*)	herzu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	höre	VVFIN	(S*	hören	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	der	ART	(NP*	der	sg	masc	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Graf	NN	*	graf	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Appiani	NE	*)	appiani	sg	neut	-	9)|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	verwundet	VVPP	(VP*	verwunden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	worden	VAPP	*)	werden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	er	PPER	*	er	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	nach	APPR	(PP*	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	der	ART	*	der	sg	fem	-	(26
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	Stadt	NN	*)	stadt	sg	fem	-	26)
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	zurückgekehret	VVPP	*	zurückgekehret	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	meine	PPOSAT	(NP*	mein	sg	fem	-	(53|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	Frau	NN	(CNP*	frau	sg	fem	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	Tochter	NN	*))	tochter	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	sich	PRF	(VP*	sich	sg	-	-	(53)|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	28	das	ART	*	der	sg	neut	-	(117
Emilia.xml.rksp.0.CoNLL2012.conll	000	29	Schloß	NN	*)	schloß	sg	neut	-	117)
Emilia.xml.rksp.0.CoNLL2012.conll	000	30	gerettet	VVPP	*))))))	retten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	31	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Wo	PWAV	(S*	wo	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sind	VAFIN	*	sein	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sie	PPER	*	sie	pl	*	-	(53)|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	mein	PPOSAT	(NP*	mein	sg	masc	-	(3|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Herr	NN	*))	herr	sg	masc	-	3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	wo	PWAV	*	wo	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sind	VAFIN	*	sein	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sie	PPER	*	sie	pl	*	-	(8)|(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sein	PPOSAT	(VROOT(PSEUDO(NP*	sein	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	(AP(AP*	sie	sg	fem	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ruhig	ADJD	*)	ruhig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Herr	NN	(S*))	herr	sg	masc	-	(12
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Oberster	NN	*)	oberster	sg	masc	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ihrer	PPOSAT	(VROOT(PSEUDO(S(CNP(NP*	ihr	sg	*	-	(53|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Gemahlin	NN	*)	gemahlin	sg	*	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Ihrer	PPOSAT	(NP*	ihr	sg	-	-	(8|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Tochter	NN	*))	tochter	sg	fem	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	nichts	PIS	*	nichts	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Übles	NE	(VP*	übles	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	widerfahren	VVINF	*	widerfahren	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	den	ART	(S(NP*	der	sg	masc	-	(261
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Schreck	NN	*)	schreck	sg	masc	-	261)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	ausgenommen	VVPP	*)))	ausnehmen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(S*	sie	pl	*	-	(8)|(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	befinden	VVFIN	*	befinden	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sich	PRF	*	sich	pl	-	-	(8)|(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	beide	PIS	(NP*	beide	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	wohl	ADV	*))	wohl	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(S(NP*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Prinz	NN	*)	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	bei	APPR	(PP*	bei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ihnen	PPER	*))	ihnen	pl	*	-	(8)|(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	gehe	VVFIN	*	gehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sogleich	ADV	*	sogleich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Sie	PPER	(VP*	sie	sg	-	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	melden	VVINF	*)))	melden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Warum	PWAV	*	warum	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	melden	VVINF	*	melden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	erst	ADV	(VROOT(PSEUDO(VP*	erst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	melden	VVINF	*)	melden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Aus	APPR	(VROOT(PSEUDO(S(PP*	aus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ursachen	NN	*)	ursache	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	–	VAFIN	*	–	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	von	APPR	(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	wegen	APPR	*	wegen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	–	CARD	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Von	APPR	(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	wegen	APPR	*	wegen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	des	ART	*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Prinzen	NN	*)))	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(S*	sie	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wissen	VVFIN	*	wissen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Herr	NN	(NP*	herr	sg	masc	-	(12
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Oberster	NN	*	oberster	sg	masc	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	wie	KOKOM	(NP*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Sie	PPER	*	sie	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	dem	ART	*	der	sg	neut	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Prinzen	NN	*)))	prinz	sg	neut	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	stehen	VVINF	*)	stehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nicht	PTKNEG	(VROOT(PSEUDO(PP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	auf	APPR	*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	dem	ART	*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	freundschaftlichsten	ADJA	*	freundschaftlich	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Fuße	NN	*)	fuß	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	So	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	gnädig	ADJD	*	gnädig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	er	PPER	*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sich	PRF	*	sich	sg	-	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	gegen	APPR	*	gegen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Ihre	PPOSAT	*	ihr	pl	masc	-	(53|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Gemahlin	NN	*	gemahlin	pl	masc	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Tochter	NN	*	tochter	pl	masc	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	bezeiget	VVFIN	*	bezeigen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	es	PPER	*	es	sg	neut	-	(8)|(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	sind	VAFIN	*	sein	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Damen	NN	*	dame	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	–	$(	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	Wird	VAFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	darum	PROAV	*	darum	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	auch	ADV	*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	Ihr	PPOSAT	*	ihr	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	unvermuteter	ADJA	*	unvermutet	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	Anblick	NN	*	anblick	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	ihm	PPER	*	ihm	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	gelegen	VVPP	*	liegen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	sein	VAINF	*	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(CS(S*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	haben	VAFIN	*	haben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Recht	NN	*)	recht	sg	neut	-	(334)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	mein	PPOSAT	(S(NP*	mein	sg	masc	-	(3|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Herr	NN	*)	herr	sg	masc	-	3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Sie	PPER	(S*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	haben	VAFIN	*	haben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Recht	NN	*)))	recht	sg	neut	-	(334)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Aber	KON	(VROOT(PSEUDO(S(S*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	gnädige	VVFIN	*	gnädig	sg	fem	-	(11
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Gräfin	NE	*)	gräfin	sg	fem	-	11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	–	$.	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	kann	VMFIN	*	können	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ich	PPER	*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	vorher	ADV	*	vorher	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	die	ART	(NP*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Ehre	NN	*)	ehre	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	haben	VAFIN	*	haben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Sie	PPER	(VP*	sie	sg	fem	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	nach	APPR	(PP*	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	Ihrem	PPOSAT	*	ihr	sg	neut	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	Wagen	NN	*)	wagen	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	begleiten	VVINF	*)))	begleiten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ORSINA	NE	(VROOT(PSEUDO*	orsina	sg	neut	(LOC*)	(11|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	11)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nicht	PTKNEG	(VROOT(PSEUDO(AVP(AVP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	doch	ADV	*)	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nicht	PTKNEG	(AVP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	doch	ADV	*))	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*))	marinelli	-	-	-	(3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	sie	PPER	(VROOT(PSEUDO(AP*	sie	*	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	bei	APPR	(PP*	bei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	der	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Hand	NN	*)	hand	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nicht	PTKNEG	(AVP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	unsanft	ADJD	*)	unsanft	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ergreifend	ADJD	*)	ergreifend	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Erlauben	VVFIN	(VROOT(PSEUDO(S*	erlauben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*	sie	pl	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ich	PPER	*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	meine	PPOSAT	(NP*	mein	sg	fem	-	(335|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Schuldigkeit	NN	*)	schuldigkeit	sg	fem	-	335)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	beobachte	VVFIN	*))	beobachten	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ORSINA	NE	(VROOT(PSEUDO*	orsina	sg	neut	(LOC*)	(11|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	11)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nur	ADV	(VROOT(PSEUDO(S(ISU*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	gemach	ADJD	*))	gemach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ich	PPER	(S*	ich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	erlasse	VVFIN	*	erlassen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Sie	PPER	*)	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	deren	PDS	(NP*	der	sg	fem	-	(335)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	mein	PPOSAT	(NP*	mein	sg	masc	-	(3|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Herr	NN	*))	herr	sg	masc	-	3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	doch	ADV	*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	immer	ADV	*	immer	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Ihres	PPOSAT	(NP*	ihr	sg	neut	-	(336|(3
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	gleichen	ADJA	*	gleich	-	-	-	336)|3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Höflichkeit	NN	*)	höflichkeit	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	zur	APPRART	(VP(PP*	zu	sg	fem	-	(335
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Schuldigkeit	NN	*)	schuldigkeit	sg	fem	-	335)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	machen	VVINF	*))	machen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	um	APPR	(S(PP*	um	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	was	PRELS	*)	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	eigentlich	ADV	*	eigentlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	ihre	PPOSAT	(NP*	ihr	sg	fem	-	(335|(336)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	Schuldigkeit	NN	*)	schuldigkeit	sg	fem	-	335)
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	wäre	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	als	KOKOM	(VP(VP(NP*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	die	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	Nebensache	NN	*)	nebensache	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	betreiben	VVINF	*)	betreiben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	dürfen	VMINF	*)))	dürfen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Diesen	PDAT	(NP*	dieser	pl	masc	-	(12
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	würdigen	ADJA	*	würdig	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Mann	NN	*)	mann	*	masc	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	je	ADV	(AVP*	je	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	eher	ADV	*)	eher	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	je	ADV	(S(NP(VP*	je	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	lieber	ADV	*	lieber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	melden	VVINF	*))	melden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	das	PDS	*)	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Ihre	PPOSAT	(NP*	ihr	sg	fem	-	(335|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Schuldigkeit	NN	*))	schuldigkeit	sg	fem	-	335)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Vergessen	VVPP	(VROOT(PSEUDO(VP*	vergessen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	(S*	sie	pl	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	was	PWS	*	was	sg	neut	-	(337)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Ihnen	PPER	*	ihnen	pl	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	der	ART	(NP*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Prinz	NN	*)	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	selbst	ADV	(VP*	selbst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	befohlen	VVINF	*)))	befehlen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ORSINA	NE	(VROOT(PSEUDO*	orsina	sg	neut	(LOC*)	(11|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	11)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Er	PPER	(VROOT(PSEUDO(CS(S*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	komme	VVFIN	*)	kommen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	befehle	VVFIN	(S*	befehlen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	es	PPER	*	es	sg	neut	-	(337)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	mir	PPER	*	sich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	noch	ADV	(AVP*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	einmal	ADV	*)))	einmal	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	erwarte	VVFIN	*	erwarten	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ihn	PPER	*)	ihn	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*))	marinelli	-	-	-	(3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	leise	ADJD	(VROOT(PSEUDO(PP*	leise	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	zu	APPR	*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	dem	ART	*	der	sg	neut	-	(12
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Obersten	NN	*	oberer	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	den	PRELS	(S*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	er	PPER	*	er	sg	masc	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	bei	APPR	(PP*	bei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Seite	NN	*)	seite	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	ziehet	VVFIN	*))	ziehen	-	-	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Mein	PPOSAT	(VROOT(PSEUDO(CS(S(NP*	mein	sg	masc	-	(12|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Herr	NN	*)	herr	sg	masc	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	muß	VMFIN	*	müssen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Sie	PPER	*	sie	sg	fem	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	hier	ADV	*	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	mit	APPR	(VP(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	einer	ART	*	ein	sg	fem	-	(11
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Dame	NN	*)	--	-	-	-	11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	lassen	VVINF	*	lassen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	die	PRELS	(S*	der	sg	fem	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	–	APPR	(PP*	–	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	der	ART	*	der	sg	fem	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	–	NN	*)	–	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	deren	PDS	*	der	pl	masc	-	(90|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	Verstande	NN	*	verstande	-	-	-	90)
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	–	CARD	*))))	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	Sie	PPER	(S*	sie	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	verstehen	VVFIN	*	verstehen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	mich	PPER	*))	mich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(CS(S*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sage	VVFIN	*	sagen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Ihnen	PPER	*	ihnen	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	dieses	PDS	(NP*	dieser	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	damit	KOUS	(S*	damit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Sie	PPER	*	sie	pl	fem	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	wissen	VVFIN	*	wissen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	was	PWS	(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Sie	PPER	(VP*	sie	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	auf	APPR	(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	ihre	PPOSAT	*	ihr	pl	fem	-	(338|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Reden	NN	*)	rede	pl	fem	-	338)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	geben	VVINF	*))	geben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	haben	VAFIN	*))))	haben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	–	KON	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	deren	PDS	(S*	der	sg	fem	-	(338)
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	sie	PPER	*	sie	sg	fem	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	oft	ADV	*	oft	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	sehr	ADV	(AP*	sehr	-	-	-	(338
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	seltsame	ADJD	*)	seltsam	-	-	-	338)
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	führet	VVFIN	*))	führet	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Am	PTKA	(VROOT(PSEUDO(CO(AP*	an	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	besten	ADJD	*)	gut	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Sie	PPER	(S*	sie	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	lassen	VVFIN	*	lassen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	sich	PRF	*	sich	pl	-	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ihr	PPER	*)	ihr	sg	fem	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	ins	APPRART	(PP*	in	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Wort	NN	*)))	wort	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Recht	NN	(VROOT(PSEUDO(NP*	recht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wohl	ADV	*)	wohl	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Eilen	VVFIN	(S*	eilen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nur	ADV	*)	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	mein	PPOSAT	(NP*	mein	sg	masc	-	(3|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Herr	NN	*)	herr	sg	masc	-	3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Die	ART	(VROOT(PSEUDO(NP*	der	sg	fem	-	(11
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Gräfin	NN	*	gräfin	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Orsina	NE	*)	orsina	sg	-	-	11)|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Odoardo	NE	(VROOT(PSEUDO(MPN*	odoardo	*	*	-	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Galotti	NE	*)	galotti	sg	*	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ORSINA	NE	(VROOT(PSEUDO*))	orsina	-	-	-	(11)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	nach	APPR	(VROOT(PSEUDO(VP(PP*	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	einigem	PIAT	*	einig	sg	neut	-	(339
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Stillschweigen	NN	*	stillschweigen	sg	neut	-	339)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	unter	APPR	(S(PP*	unter	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	welchem	PRELS	*)	welcher	sg	neut	-	(339)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	sie	PPER	*	sie	sg	fem	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	den	ART	(NP*	der	sg	masc	-	(12
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Obersten	NN	*)	oberer	sg	masc	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Mitleid	NN	*)))	mitleid	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	betrachtet	VVPP	*	betrachten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	so	ADV	(AVP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	wie	KOKOM	(S*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	er	PPER	*	er	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	sie	PPER	*	sie	pl	masc	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	einer	ART	*	ein	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	flüchtigen	ADJA	*	flüchtig	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	Neugierde	NN	*))))	neugierde	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S(S*	was	sg	neut	-	(340)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	er	PPER	*	er	sg	masc	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Ihnen	PPER	(VP*	ihnen	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	auch	ADV	(AVP*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	da	ADV	*)	da	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	gesagt	VVPP	*)	sagen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	hat	VAFIN	*)	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	unglücklicher	ADJA	(NP*	unglücklich	sg	masc	-	(12
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Mann	NN	*))	mann	sg	masc	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*))	odoardo	-	-	-	(12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	halb	ADJD	(VROOT(PSEUDO(AP*	halb	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	vor	APPR	(PP*	vor	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sich	PRF	*)	sich	sg	-	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	halb	ADJD	*	halb	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	gegen	APPR	(PP*	gegen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	sie	PPER	*))	sie	*	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Unglücklicher	NN	(VROOT(PSEUDO*	unglücklich	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ORSINA	NE	(VROOT(PSEUDO*	orsina	sg	neut	(LOC*)	(11|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	11)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Eine	ART	(VROOT(PSEUDO(S(NP*	ein	sg	fem	-	(341
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Wahrheit	NN	*)	wahrheit	sg	fem	-	341)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	war	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	es	PPER	*	es	sg	neut	-	(340)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	gewiß	ADV	*	gewiß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	nicht	PTKNEG	*)	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	am	PTKA	(NP(AP*	an	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	wenigsten	ADJD	*)	wenig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	eine	ART	*	ein	sg	fem	-	(341)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	von	APPR	(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	denen	PDS	*	der	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	die	PRELS	(S*	der	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	auf	APPR	(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	Sie	PPER	*)	sie	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	warten	VVFIN	*)))	warten	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Auf	APPR	(VROOT(PSEUDO(VP(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	mich	PPER	*)	mich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	warten	VVINF	*)	warten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Weiß	NN	(S*	weiße	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*)	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	schon	ADV	(NP*	schon	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	genug	PIS	*)	genug	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Madame	FM	*	--	-	-	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Aber	KON	(S*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	reden	VVFIN	*	reden	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Sie	PPER	*)	sie	pl	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	nur	ADV	(NP*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	reden	VVFIN	(S*	reden	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Sie	PPER	*	sie	pl	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	nur	ADV	*))	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ORSINA	NE	(VROOT(PSEUDO*	orsina	sg	neut	(LOC*)	(11|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	11)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(S*	sie	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wissen	VVFIN	*	wissen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	nichts	PIS	*)	nichts	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nichts	PIS	*	nichts	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ORSINA	NE	(VROOT(PSEUDO*	orsina	sg	neut	(LOC*)	(11|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	11)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Guter	NN	(VROOT(PSEUDO(CNP*	gute	sg	masc	-	(12
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	lieber	ADJA	(NP*	lieber	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Vater	NN	*))	vater	sg	masc	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Was	PWS	(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	gäbe	VVFIN	*)	geben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	darum	PROAV	(NP*	darum	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	wann	PWAV	(S*	wann	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Sie	PPER	*	sie	sg	-	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	auch	ADV	*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	mein	PPOSAT	(VP(NP*	mein	sg	masc	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Vater	NN	*)	vater	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	wären	VVINF	*)))	sein	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Verzeihen	VVFIN	(S*	verzeihen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*)	sie	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	die	ART	(VROOT(PSEUDO(S(NP*	der	pl	*	-	(12|(11|(342
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Unglücklichen	NN	*)	unglückliche	pl	*	-	12)|11)|342)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ketten	VVFIN	*	ketten	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sich	PRF	*	sich	pl	-	-	(12)|(11)|(342)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	so	ADV	(AVP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	gern	ADV	*)	gern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	an	APPR	(PP*	an	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	einander	PRF	*))	einander	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ich	PPER	(S*	ich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wollte	VMFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	treulich	ADJD	(VP*	treulich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Schmerz	NN	(NP(CNP*	schmerz	sg	*	-	(343)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Wut	NN	*)	wut	sg	*	-	(344)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Ihnen	PPER	*))	ihnen	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	teilen	VVINF	*))	teilen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Schmerz	NN	(VROOT(PSEUDO(CNP*	schmerz	sg	*	-	(343)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Wut	NN	*)	wut	sg	*	-	(344)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Madame	FM	*	--	-	-	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Aber	KON	(S*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	vergesse	VVFIN	*	vergessen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	–	CARD	*	–	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Reden	NN	*	reden	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Sie	PPER	*	sie	pl	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	nur	ADV	*)	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ORSINA	NE	(VROOT(PSEUDO*	orsina	sg	neut	(LOC*)	(11|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	11)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wenn	KOUS	(VROOT(PSEUDO(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	gar	ADV	*	gar	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Ihre	PPOSAT	(NP*	ihr	pl	masc	-	(8|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	einzige	ADJA	*	einzig	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Tochter	NN	*)	tochter	sg	fem	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	–	CARD	*	–	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Ihr	PPOSAT	(NP*	ihr	pl	*	-	(8|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	einziges	ADJA	*	einzig	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Kind	NN	*)	kind	sg	neut	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	wäre	VAFIN	*)	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Zwar	ADV	*	zwar	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	einzig	ADJD	*	einzig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	oder	KON	*	oder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Das	ART	(VROOT(PSEUDO(S(NP*	der	sg	neut	-	(8
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	unglückliche	ADJA	*	unglücklich	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Kind	NN	*)	kind	sg	neut	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	immer	ADV	(NP*	immer	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	das	ART	*	der	sg	neut	-	(8
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	einzige	ADJA	*))	einzig	sg	neut	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Das	ART	(VROOT(PSEUDO(NP*	der	sg	neut	-	(8
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	unglückliche	ADJA	*)	unglücklich	sg	neut	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Madame	FM	*	--	-	-	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Was	PWS	(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	will	VMFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	von	APPR	(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ihr	PPER	*))	ihr	sg	fem	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Doch	KON	(S*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	bei	APPR	(PP*	bei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Gott	NN	*))	gott	sg	masc	(PER*)	(57)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	so	ADV	(S*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	spricht	VVFIN	*	sprechen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	keine	PIAT	(NP*	kein	sg	fem	-	(11
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Wahnwitzige	NN	*))	wahnwitzig	sg	fem	-	11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ORSINA	NE	(VROOT(PSEUDO*	orsina	sg	neut	(LOC*)	(11|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	11)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wahnwitzige	NN	(VROOT(PSEUDO*	wahnwitzig	pl	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Das	PDS	(VROOT(PSEUDO(S*	der	sg	neut	-	(340)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	war	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	also	ADV	*	also	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	was	PWS	(S*	was	sg	neut	-	(340)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	er	PPER	*	er	sg	masc	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Ihnen	PPER	*	ihnen	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	von	APPR	(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	mir	PPER	*)	sich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	vertraute	VVFIN	*))	vertrauen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Nun	ADV	(NP*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nun	ADV	(S*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	es	PPER	(S*	es	sg	neut	-	(340)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	mag	VMFIN	*	mögen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	leicht	ADJD	*	leicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	keine	PIS	(VP(NP*	kein	sg	fem	-	(345)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	von	APPR	(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	seinen	PPOSAT	*	sein	pl	neut	-	(345|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	gröbsten	ADJA	*	grob	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Lügen	NN	*))	lüge	pl	fem	-	345)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	sein	VAINF	*))))	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ich	PPER	(S*	ich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	fühle	VVFIN	*)	fühlen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	so	ADV	(NP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	was	PIS	*)	was	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Und	KON	(S(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	glauben	VVFIN	*	glauben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Sie	PPER	*)	sie	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	glauben	VVFIN	*	glauben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Sie	PPER	*	sie	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	mir	PPER	*	sich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	wer	PWS	(S*	wer	sg	masc	-	(346)|(11)|(347)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	über	APPR	(PP*	über	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	gewisse	ADJA	*	gewiß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Dinge	NN	*)	ding	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	den	ART	(NP*	der	sg	masc	-	(348|(90
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Verstand	NN	*)	verstand	sg	masc	-	348)|90)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	verlieret	VVPP	*	verlieren	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	der	PDS	(S*	der	sg	masc	-	(346)|(11)|(347)
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	hat	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	keinen	PIS	(VP*	kein	sg	masc	-	(348)|(90)
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	verlieren	VVINF	*)))))	verlieren	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	soll	VMFIN	*	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ich	PPER	(VP*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	denken	VVINF	*))	denken	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ORSINA	NE	(VROOT(PSEUDO*	orsina	sg	neut	(LOC*)	(11|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	11)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Daß	KOUS	(VROOT(PSEUDO(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*	sie	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mich	PPER	*	mich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	also	ADV	*	also	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ja	ADV	*	ja	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	verachten	VVINF	*)	verachten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Denn	KON	(S*	denn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	auch	ADV	(NP*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Sie	PPER	*)	sie	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	haben	VAFIN	*	haben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Verstand	NN	(NP*	verstand	sg	masc	-	(349)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	guter	ADJA	(NP*	gut	sg	masc	-	(12
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Alter	NN	*	alter	sg	masc	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	;	$.	*)))	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	auch	ADV	(NP*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Sie	PPER	*)	sie	sg	fem	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ich	PPER	*	ich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	seh	XY	*	seh	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	an	APPR	*	an	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	dieser	PDAT	*	dieser	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	entschlossenen	ADJA	*	entschlossen	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	ehrwürdigen	ADJA	*	ehrwürdig	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Miene	NN	*	miene	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Auch	ADV	(VROOT(PSEUDO(CS(S*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*	sie	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	haben	VAFIN	*	haben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Verstand	NN	*	verstand	sg	masc	-	(349)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	und	KON	(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	kostet	VVFIN	*	kosten	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	mich	PPER	*	mich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	ein	ART	(NP*	ein	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Wort	NN	*)))	wort	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	–	KON	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	so	ADV	(S*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	haben	VAFIN	*	haben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	Sie	PPER	(VP*	sie	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	keinen	VVINF	*)))	kein	sg	masc	-	(349)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Madame	FM	*	--	-	-	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Madame	FM	*	--	-	-	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ich	PPER	(NP(S*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	habe	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	schon	ADV	*	schon	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	keinen	PIAT	(NP*	kein	sg	masc	-	(349)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	mehr	PIS	*)	mehr	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	noch	ADV	(S*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	ehe	KOUS	*	ehe	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Sie	PPER	*	sie	pl	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	mir	PPER	(VP*	sich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	dieses	PDAT	(NP*	dieser	sg	neut	-	(350
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Wort	NN	*)	wort	sg	neut	-	350)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	sagen	VVINF	*)))	sagen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	wenn	KOUS	(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	Sie	PPER	*	sie	pl	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	mir	PPER	*	sich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	es	PPER	*	es	sg	neut	-	(350)
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	bald	ADV	*	bald	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	sagen	VVINF	*))	sagen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sagen	VVFIN	*	sagen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*	sie	pl	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	es	PPER	*	es	sg	neut	-	(350)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	sagen	VVFIN	*	sagen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*	sie	pl	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	es	PPER	*	es	sg	neut	-	(350)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Oder	KON	(S*	oder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	es	PPER	*	es	sg	neut	-	(351)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nicht	PTKNEG	(CO(AP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	wahr	ADJD	*)	wahr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	–	PWS	(S*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	es	PPER	*	es	sg	neut	-	(351)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	nicht	PTKNEG	(AP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	wahr	ADJD	*)))	wahr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Sie	PPER	*	sie	pl	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	von	APPR	(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	jener	PDAT	*	jener	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	guten	ADJA	*	gut	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	unsres	ADJA	*	unsr	sg	neut	-	(158)
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	Mitleids	NN	(CNP*	mitleids	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	unsrer	ADJA	(NP*	unsrer	sg	fem	-	(158)
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	Hochachtung	NN	*)))	hochachtung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	so	ADV	(NP(AP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	würdigen	ADJA	*)	würdig	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	Gattung	NN	*	gattung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	der	ART	(NP*	der	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	28	Wahnwitzigen	NN	*))	wahnwitzige	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	29	sind	VAFIN	*	sein	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	30	–	PPER	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	31	Sie	PPER	*	sie	pl	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	32	sind	VAFIN	*))	sein	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	33	eine	ART	(NP*	ein	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	34	gemeine	ADJA	*	gemein	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	35	Törin	NN	*)	törin	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	36	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(S*	sie	pl	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	haben	VAFIN	*	haben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	nicht	PTKNEG	(PP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	was	PWS	(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Sie	PPER	*	sie	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	nie	ADV	*))	nie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	hatten	VAFIN	*)	haben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ORSINA	NE	(VROOT(PSEUDO*	orsina	sg	neut	(LOC*)	(11|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	11)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	So	ADV	(VROOT(PSEUDO(S*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	merken	VVFIN	*	merken	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*	sie	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	auf	PTKVZ	*)	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Was	PWS	(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wissen	VVFIN	*)	wissen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Sie	PPER	(NP*	sie	pl	*	-	(12
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	der	ART	(S*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Sie	PPER	*	sie	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	schon	ADV	(VP(VP*	schon	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	genug	ADV	*	genug	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	wissen	VVINF	*)	wissen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	wollen	VMINF	*)))	wollen	-	-	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Daß	KOUS	(VROOT(PSEUDO(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Appiani	NE	*	appiani	sg	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	verwundet	VVPP	(VP*	verwunden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	worden	VAPP	*))	werden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nur	ADV	*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	verwundet	VVFIN	*	verwunden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Appiani	NE	(S*	appiani	sg	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	tot	ADJD	*)	tot	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Tot	NN	(VROOT(PSEUDO*	tot	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	tot	ADJD	(VROOT(PSEUDO*	tot	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ha	NE	*	ha	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Frau	NN	(NP*	frau	sg	fem	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	das	PDS	(S*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	wider	APPR	(PP*	wider	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	die	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Abrede	NN	*)))	abrede	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(CS(S*	sie	pl	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wollten	VMFIN	*	wollen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mich	PPER	(VP*	mich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	um	APPR	(PP*	um	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	den	ART	*	der	sg	masc	-	(349
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Verstand	NN	*)	verstand	sg	masc	-	349)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	bringen	VVINF	*))	bringen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Sie	PPER	(S*	sie	pl	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	brechen	VVFIN	*	brechen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	mir	PPER	*	sich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	das	ART	(NP*	der	sg	neut	-	(352
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Herz	NN	*)))	herz	sg	neut	-	352)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ORSINA	NE	(VROOT(PSEUDO*	orsina	sg	neut	(LOC*)	(11|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	11)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Das	PDS	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	beiher	PTKVZ	*	beiher	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Nur	ADV	(AP*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	weiter	ADV	*)	weiter	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Der	ART	(S(NP*	der	sg	masc	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Bräutigam	NN	*)	bräutigam	sg	masc	-	9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	tot	ADJD	*)	tot	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	und	KON	(S(NP*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	die	ART	*	der	sg	fem	-	(8
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Braut	NN	*	braut	sg	fem	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	–	APPR	(PP*	–	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Ihre	PPOSAT	*	ihr	pl	masc	-	(8|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Tochter	NN	*	tochter	pl	masc	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	–	CARD	*))	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	schlimmer	ADJD	*	schlimm	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	als	APPR	(PP*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	tot	ADJD	*))	tot	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Schlimmer	NN	(VROOT(PSEUDO*	schlimm	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	schlimmer	ADJD	(VROOT(PSEUDO(S*	schlimm	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	als	APPR	(PP*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	tot	ADJD	*))	tot	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Aber	KON	(S*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	doch	ADV	*)	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	zugleich	ADV	(NP*	zugleich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	auch	ADV	(AP*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	tot	ADJD	*))	tot	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Denn	KON	(S*	denn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	kenne	VVFIN	*)	kennen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nur	ADV	(PP*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Ein	ART	*	ein	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Schlimmeres	NN	*)	schlimme	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	–	XY	*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ORSINA	NE	(VROOT(PSEUDO*	orsina	sg	neut	(LOC*)	(11|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	11)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nicht	PTKNEG	(VROOT(PSEUDO(AP(AVP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	zugleich	ADV	*)	zugleich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	auch	ADV	*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	tot	ADJD	*)	tot	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nein	PTKANT	*	nein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	guter	ADJA	*	gut	sg	masc	-	(12
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Vater	NN	*	vater	sg	masc	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	nein	PTKANT	*	nein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	(S*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	lebt	VVFIN	*	leben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	sie	PPER	(S*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	lebt	VVFIN	*))	leben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(S*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wird	VAFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	nun	ADV	(VP*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	erst	ADV	(VP*	erst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	recht	ADV	*	recht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	anfangen	VVINF	*)	anfangen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	leben	VVINF	*)))	leben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ein	ART	(NP*	ein	sg	neut	-	(353
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Leben	NN	*	leben	sg	neut	-	353)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	voll	APPR	(PP*	voll	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Wonne	NN	*))	wonne	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Das	PDS	*	der	sg	neut	-	(353
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	schönste	VVFIN	*	schön	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	lustigste	ADJA	*	lustig	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Schlaraffenleben	NN	*	schlaraffenleben	pl	fem	-	353)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	–	KON	*	–	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	lang	ADJD	*	lang	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	es	PPER	*	es	sg	neut	-	(353)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	dauert	VVFIN	*	dauern	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Das	ART	(VROOT(PSEUDO(S(NP*	der	sg	neut	-	(350
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Wort	NN	(MPN*	wort	sg	neut	-	350)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Madame	FM	*))	--	-	-	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	das	ART	(NP*	der	sg	neut	-	(350
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	einzige	ADJA	*	einzig	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Wort	NN	*	wort	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	das	PRELS	(S*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	mich	PPER	(VP*	mich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	um	APPR	(PP*	um	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	den	ART	*	der	sg	masc	-	(349
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Verstand	NN	*)	verstand	sg	masc	-	349)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	bringen	VVINF	*)	bringen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	soll	VMFIN	*)))	sollen	sg	-	-	350)
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	heraus	ADV	(VROOT(PSEUDO(CO(AVP*	heraus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	damit	PROAV	*))	damit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Schütten	VVFIN	(S*	schütten	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*	sie	pl	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*)	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Ihren	PPOSAT	(NP*	ihr	sg	masc	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Tropfen	NN	*	tropfen	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Gift	NN	*	gift	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	einen	ART	*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Eimer	NN	*))	eimer	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Das	ART	(NP*	der	sg	neut	-	(350
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	einzige	ADJA	*)	einzig	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Wort	NN	*	wort	sg	neut	-	350)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	geschwind	ADJD	(VROOT(PSEUDO*	geschwind	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ORSINA	NE	(VROOT(PSEUDO*	orsina	sg	neut	(LOC*)	(11|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	11)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nun	ADV	(VROOT(PSEUDO*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	da	PTKVZ	(S*	da	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	buchstabieren	VVFIN	*	buchstabieren	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Sie	PPER	*	sie	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	es	PPER	*	es	sg	neut	-	(350)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	zusammen	PTKVZ	*)	zusammen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Des	ART	(NP*	der	-	-	-	(23
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Morgens	NN	*	morgens	-	-	-	23)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	sprach	VVFIN	(S*	sprechen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	der	ART	(NP*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Prinz	NN	*)	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Ihre	PPOSAT	(NP*	ihr	pl	masc	-	(8|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Tochter	NN	*)	tochter	pl	masc	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	der	ART	*	der	sg	fem	-	(122
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Messe	NN	*)))	messe	sg	fem	-	122)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	des	ART	(S(NP*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Nachmittags	NN	*)	nachmittag	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	hat	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	er	PPER	*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	sie	PPER	*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	auf	APPR	(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	seinem	PPOSAT	*	sein	sg	masc	-	(117|(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	Lust	NN	*)	lust	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	–	PIAT	(NP*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	Lustschlosse	NN	*))	lustschlosse	sg	-	-	117)
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sprach	VVFIN	(VROOT(PSEUDO(S*	sprach	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sie	PPER	*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	der	ART	*	der	sg	fem	-	(122
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Messe	NN	*))	messe	sg	fem	(LOC*)	122)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(NP*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Prinz	NN	*	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	meine	PPOSAT	(NP*	mein	sg	-	-	(8|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Tochter	NN	*))	tochter	*	*	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ORSINA	NE	(VROOT(PSEUDO*	orsina	sg	neut	(LOC*)	(11|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	11)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Mit	APPR	(VROOT(PSEUDO(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	einer	ART	*	ein	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Vertraulichkeit	NN	*)	vertraulichkeit	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	mit	APPR	(VROOT(PSEUDO(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	einer	ART	*	ein	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Inbrunst	NN	*)	inbrunst	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	(S*	sie	pl	*	-	(8)|(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	hatten	VAFIN	*	haben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nichts	PIS	(VP*	nichts	*	neut	-	(354
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Kleines	NN	*	kleine	sg	neut	-	354)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	abzureden	VVIZU	*))	abreden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	recht	ADV	(AP*	recht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	gut	ADJD	*)	gut	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	wenn	KOUS	(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	es	PPER	*	es	sg	neut	-	(354)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	abgeredet	VVPP	(VP*	abreden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	worden	VAPP	*)	werden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	recht	ADV	(S(AP*	recht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	gut	ADJD	*)	gut	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	wenn	KOUS	(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Ihre	PPOSAT	(NP*	ihr	pl	masc	-	(8|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Tochter	NN	*)	tochter	pl	masc	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	freiwillig	ADJD	(AP*	freiwillig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	sich	PRF	(VP*	sich	pl	-	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	hierher	PROAV	*	hierher	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	gerettet	VVPP	*))))))	retten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sehen	VVFIN	(VROOT(PSEUDO(S*	sehen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*	sie	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	so	ADV	(S*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	es	PPER	*	es	sg	neut	-	(355)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	doch	ADV	*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	keine	PIAT	(CNP(NP*	kein	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	gewaltsame	ADJA	*	gewaltsam	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Entführung	NN	*)	entführung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	sondern	KON	*	sondern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	bloß	ADV	(NP*	bloß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	ein	ART	*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	kleiner	ADJA	*	klein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	–	NN	*	–	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	kleiner	ADJA	(NP*	klein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	Meuchelmord	NN	*)))))	meuchelmord	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Verleumdung	NN	(VROOT(PSEUDO*	verleumdung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	verdammte	ADJA	(VROOT(PSEUDO(NP*	verdammt	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Verleumdung	NN	*)	verleumdung	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	kenne	VVFIN	*	kennen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	meine	PPOSAT	(NP*	mein	pl	masc	-	(8|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Tochter	NN	*))	tochter	pl	masc	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ist	VAFIN	(VROOT(PSEUDO(S*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	es	PPER	*	es	sg	neut	-	(355)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Meuchelmord	NE	*	meuchelmord	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	so	ADV	(S*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	es	PPER	*	es	sg	neut	-	(355)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	auch	ADV	(NP*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Entführung	NN	*)))	entführung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Blickt	NN	*	blickt	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wild	ADJD	(CS(S*	wild	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	um	APPR	(PP*	um	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	sich	PRF	*)	sich	sg	-	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*)	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	stampft	VVFIN	*	stampfen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	schäumet	VVFIN	*)	schäumen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nun	ADV	(VROOT(PSEUDO*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Claudia	NE	*	claudia	sg	fem	-	(53)|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nun	ADV	(VROOT(PSEUDO*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Mütterchen	NN	*	mütterchen	pl	fem	(LOC*)	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Haben	VAFIN	(S*	haben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wir	PPER	*	wir	pl	*	-	(12)|(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*)	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Freude	NN	(S*	freude	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	erlebt	VVPP	*)	erleben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	O	KON	(VROOT(PSEUDO(PP*	O	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	des	ART	*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	gnädigen	ADJA	*	gnädig	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Prinzen	NN	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	O	KON	(VROOT(PSEUDO(PP*	O	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	der	ART	*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ganz	ADV	(AP*	ganz	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	besondern	ADJA	*)	besondern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Ehre	NN	*)	ehre	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ORSINA	NE	(VROOT(PSEUDO*	orsina	sg	neut	(LOC*)	(11|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	11)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wirkt	VVFIN	(VROOT(PSEUDO(S*	wirken	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Alter	NN	*)	alter	pl	-	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	wirkt	VVFIN	(VROOT(PSEUDO(S*	wirken	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	es	PPER	*)	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Da	KOUS	*	da	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	steh	FM	*	steh	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nun	ADV	*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	vor	APPR	*	vor	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	der	ART	*	der	sg	fem	-	(282
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Höhle	NN	*	höhle	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	des	ART	*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Räubers	NN	*	räuber	sg	masc	-	282)|0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	–	NE	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Indem	NE	*	indem	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	er	PPER	*	er	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	den	ART	*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Rock	NN	*	Rock	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	von	APPR	*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	beiden	PIAT	*	beide	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	Seiten	NN	*	seite	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	aus	APPR	*	aus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	einander	PPER	*	einander	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	schlägt	VVFIN	*	schlagen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	sich	PRF	*	sich	sg	-	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	ohne	APPR	*	ohne	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	Gewehr	NN	*	gewehr	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	sieht	VVFIN	*	sehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wunder	NN	(VROOT(PSEUDO(S*	wunder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	aus	APPR	(PP*	aus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Eilfertigkeit	NN	*)	eilfertigkeit	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	auch	ADV	(VP(NP*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	die	ART	*	der	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Hände	NN	*)	hand	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	zurück	ADV	*	zurück	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	gelassen	VVPP	*)))	lassen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	An	APPR	*	an	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	alle	PIAT	(NP*	aller	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Schubsäcke	NN	*)	schubsäcke	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	fühlend	ADJD	(AP(CO*	fühlend	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	als	KOKOM	(NP*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	etwas	PIS	*))	etwas	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	suchend	ADJD	*)	suchend	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nichts	PIS	*	nichts	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	gar	ADV	(VROOT(PSEUDO(NP*	gar	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	nichts	PIS	*)	nichts	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	nirgends	ADV	(VROOT(PSEUDO(S*)	nirgends	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ORSINA	NE	(VROOT(PSEUDO*	orsina	sg	neut	(LOC*)	(11|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	11)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ha	XY	(VROOT(PSEUDO*	ha	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ich	PPER	(S*	ich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	verstehe	VVFIN	*)	verstehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Damit	PROAV	(S*	damit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	kann	VMFIN	*	können	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	(VP*	ich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	aushelfen	VVINF	*))	aushelfen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ich	PPER	*	ich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	hab	VAFIN	*	hab	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	einen	PIS	*	ein	sg	masc	-	(356)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	mitgebracht	VVPP	*	mitbringen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Einen	ART	(VROOT(PSEUDO(AP(NP*	ein	sg	masc	-	(356
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Dolch	NN	*)	dolch	sg	masc	-	356)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	hervorziehend	ADJD	*)	hervorziehend	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Da	ADV	(VROOT(PSEUDO(S*	da	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	nehmen	VVFIN	*	nehmen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*)	sie	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nehmen	VVFIN	(VROOT(PSEUDO(S*	nehmen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*	sie	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	geschwind	ADJD	*	geschwind	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	eh	ADV	*	eh	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	uns	PPER	(NP*	uns	pl	*	-	(12)|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	jemand	PIS	*)	jemand	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	sieht	VVFIN	*)	sehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Auch	ADV	(S*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	hätte	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	noch	ADV	(NP*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	etwas	PIS	*))	etwas	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	–	XY	*	–	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Gift	NN	*	gift	sg	neut	-	(357)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Aber	KON	(VROOT(PSEUDO(S*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Gift	NN	*	gift	sg	neut	-	(357)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nur	ADV	(PP*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	für	APPR	*	für	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	uns	PPER	*))	uns	pl	*	-	(11
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Weiber	NN	*	weiber	sg	masc	-	11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	nicht	PTKNEG	(PP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	für	APPR	*	für	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Männer	NN	*)	mann	pl	masc	-	(358)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Nehmen	VVFIN	*	nehmen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*	sie	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ihn	PPER	*	ihn	sg	masc	-	(356)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ihm	PPER	(VROOT(PSEUDO(S(NP*	ihm	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	den	ART	(NP*	der	sg	masc	-	(356
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Dolch	NN	*))	dolch	sg	masc	-	356)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	aufdringend	ADJD	*)	aufdringend	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nehmen	VVFIN	(VROOT(PSEUDO(S*	nehmen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*)	sie	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	danke	VVFIN	*	danken	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	danke	VVFIN	*)	danken	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Liebes	NN	*	liebe	sg	neut	-	(11
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Kind	NN	(NP*	kind	sg	neut	-	11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	wer	PWS	(S*	wer	sg	masc	-	(359)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	wieder	ADV	*	wieder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	sagt	VVFIN	*	sagen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	du	PPER	*	du	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	eine	ART	(NP*	ein	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Närrin	NN	*)	närrin	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	bist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	der	PDS	(S*	der	sg	masc	-	(359)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	hat	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	es	PPER	(VP*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	mir	PPER	*)	sich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	tun	VVINF	*))))))	tun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ORSINA	NE	(VROOT(PSEUDO*	orsina	sg	neut	(LOC*)	(11|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	11)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Stecken	VVFIN	(VROOT(PSEUDO(S*	stecken	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*	sie	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	bei	APPR	(PP*	bei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Seite	NN	*))	seite	sg	fem	-	(360)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	geschwind	ADJD	(VROOT(PSEUDO(PP*	geschwind	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	bei	APPR	*	bei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Seite	NN	*)	seite	sg	fem	-	(360)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Mir	PPER	(S*	sich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wird	VAFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	die	ART	(VP(NP*	der	sg	fem	-	(361
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Gelegenheit	NN	*)	gelegenheit	sg	fem	-	361)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	versagt	VVPP	*))	versagen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Gebrauch	NN	*	gebrauch	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	davon	PROAV	(VP*	davon	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	machen	VVINF	*))	machen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ihnen	PPER	(VROOT(PSEUDO(CS(S*	ihnen	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wird	VAFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sie	PPER	(VP*	sie	sg	fem	-	(361)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	fehlen	VVINF	*))	fehlen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	diese	PDAT	(S(NP*	dieser	sg	fem	-	(361
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Gelegenheit	NN	*)	gelegenheit	sg	fem	-	361)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	und	KON	(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Sie	PPER	*	sie	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	werden	VAFIN	*	werden	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	sie	PPER	(VP*	sie	pl	*	-	(361)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	ergreifen	VVINF	*	ergreifen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	die	ART	(NP*	der	sg	fem	-	(361
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	erste	ADJA	*	erster	sg	fem	-	361)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	die	ART	(NP*	der	sg	fem	-	(361
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	beste	ADJA	*)))))	gut	sg	fem	-	361)
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	–	KON	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	wenn	KOUS	(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	Sie	PPER	*	sie	sg	fem	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	ein	ART	(NP*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	Mann	NN	*)	mann	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	sind	VAFIN	*))	sein	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ich	PPER	(NP*	ich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	(S*	ich	sg	masc	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	bin	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	nur	ADV	(NP*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ein	ART	*	ein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Weib	NN	*)))	weib	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	aber	ADV	(S(AVP*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	so	ADV	*)	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	kam	VVFIN	*	kommen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	ich	PPER	*	ich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	her	PTKVZ	*)	her	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	fest	ADJD	(VROOT(PSEUDO(VP*	fest	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	entschlossen	VVPP	*)	entschließen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Wir	PPER	(NP*	wir	pl	*	-	(12)|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Alter	NN	*	alter	pl	-	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	wir	PPER	(S*	wir	pl	*	-	(12)|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	können	VMFIN	*	können	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	uns	PPER	*	uns	pl	*	-	(12)|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	alles	PIS	(VP*	alle	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	vertrauen	VVINF	*)))	vertrauen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Denn	KON	(VROOT(PSEUDO(S*	denn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wir	PPER	*	wir	pl	*	-	(12)|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sind	VAFIN	*	sein	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	beide	PIS	*	beide	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	beleidiget	VVPP	*	beleidiget	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	von	APPR	(VP(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	dem	ART	*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	nämlichen	ADJA	*	nämlich	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Verführer	NN	*)	verführer	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	beleidiget	VVPP	*))	beleidiget	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ah	NE	*	ah	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	wenn	KOUS	*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Sie	PPER	*	sie	pl	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	wüßten	VVFIN	*	wissen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	–	$(	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	wenn	KOUS	*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Sie	PPER	*	sie	pl	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	wüßten	VVFIN	*	wissen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	wie	KOKOM	*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	überschwenglich	ADJD	*	überschwenglich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	wie	KOKOM	*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	unaussprechlich	ADJD	*	unaussprechlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	wie	PWAV	*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	unbegreiflich	ADJD	*	unbegreiflich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	ich	PPER	*	ich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	von	APPR	*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	ihm	PPER	*	ihm	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	beleidiget	VVPP	*	beleidigen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	worden	VAPP	*	werden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	noch	ADV	*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	28	werde	VAFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	29	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	30	–	$(	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	31	Sie	PPER	*	sie	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	32	könnten	VMFIN	*	können	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	33	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	34	Sie	PPER	*	sie	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	35	würden	VAFIN	*	werden	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	36	Ihre	PPOSAT	*	ihr	sg	fem	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	37	eigene	ADJA	*	eigen	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	38	Beleidigung	NN	*	beleidigung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	39	darüber	PROAV	*	darüber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	40	vergessen	VVPP	*	vergessen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	41	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Kennen	VVFIN	*	kennen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*	sie	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mich	PPER	*	mich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	bin	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Orsina	NE	(NP*	orsina	*	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	die	ART	(CNP(NP*	der	sg	fem	-	(11
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	betrogene	ADJA	*)	betrogen	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	verlassene	ADJA	(NP*	verlassen	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Orsina	NE	*))))	orsina	sg	fem	-	11)|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Zwar	ADV	(S*	zwar	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	vielleicht	ADV	*)	vielleicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nur	ADV	(VP*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	um	APPR	(PP*	um	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Ihre	PPOSAT	*	ihr	pl	masc	-	(8|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Tochter	NN	*)	tochter	pl	masc	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	verlassen	VVINF	*)	verlassen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Doch	KON	*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	was	PWS	(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	kann	VMFIN	*	können	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Ihre	PPOSAT	(VP(NP*	ihr	sg	fem	-	(8|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Tochter	NN	*	tochter	sg	fem	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	dafür	PROAV	*)))	dafür	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Bald	ADV	(S*	bald	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wird	VAFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	auch	ADV	(VP(VP(NP*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	sie	PPER	*)	sie	pl	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	verlassen	VVPP	*)	verlassen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	sein	VAINF	*))	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Und	KON	(NP*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	dann	ADV	*	dann	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	wieder	ADV	*	wieder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	eine	PIS	*)	ein	sg	fem	-	(362)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Und	KON	(NP*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wieder	ADV	*	wieder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	eine	PIS	*)	ein	sg	fem	-	(363)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ha	NE	*	ha	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wie	PWAV	(VROOT(PSEUDO(S*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	in	APPR	(NP(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	der	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Entzückung	NN	*)))	entzückung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	welch	PWAT	(VROOT(PSEUDO(NP*	welcher	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	eine	ART	(AP*	ein	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	himmlische	ADJA	*)	himmlisch	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Phantasie	NN	*	phantasie	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*)))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wann	PWAV	(VROOT(PSEUDO(S(S*	wann	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wir	PPER	*	wir	pl	*	-	(362)|(363)|(364)|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	einmal	ADV	(CO(NP*	einmal	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	alle	PIS	*)	alle	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	–	VVIMP	(S*	–	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	wir	PPER	*	wir	pl	*	-	(363)|(362)|(364)|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	das	ART	(NP*	der	sg	neut	-	(363|(362|(11|(364
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	ganze	ADJA	*	ganz	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Heer	NN	*	heer	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	der	ART	(NP*	der	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Verlassenen	NN	*))	verlassener	pl	*	-	363)|362)|11)|364)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	–	$.	*	–	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	wir	PPER	(NP*	wir	pl	*	-	(363|(362|(364|(11
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	alle	PIS	*)))	alle	pl	*	-	363)|362)|364)|11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	Bacchantinnen	NN	*)	bacchantin	pl	fem	(LOC*)	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	Furien	NE	*)	furien	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	verwandelt	VVFIN	*	verwandeln	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	wenn	KOUS	(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	wir	PPER	(NP*	wir	pl	*	-	(362|(363|(364|(11
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	alle	PIS	*)	aller	pl	*	-	362)|363)|364)|11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	ihn	PPER	*	ihn	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	28	unter	APPR	(PP*	unter	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	29	uns	PPER	*)	uns	pl	*	-	(363)|(362)|(364)|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	30	hätten	VAFIN	*	haben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	31	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	32	ihn	PPER	(VP*	ihn	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	33	unter	APPR	(PP*	unter	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	34	uns	PPER	*)	uns	pl	*	-	(363)|(362)|(364)|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	35	zerrissen	VVPP	*)))	zerreißen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	36	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	37	zerfleischten	NN	*	zerfleischen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	38	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	39	sein	PPOSAT	(NP*	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	40	Eingeweide	NN	*)	eingeweide	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	41	durchwühlten	VVFIN	*	durchwühlen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	42	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	43	–	PPER	(CS(VP*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	44	um	KOUI	*	um	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	45	das	ART	(NP*	der	sg	neut	-	(35
Emilia.xml.rksp.0.CoNLL2012.conll	000	46	Herz	NN	*)	herz	sg	neut	-	35)
Emilia.xml.rksp.0.CoNLL2012.conll	000	47	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	48	finden	VVINF	*))	finden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	49	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	50	das	PDS	(S(NP*	der	sg	neut	-	(35)
Emilia.xml.rksp.0.CoNLL2012.conll	000	51	der	ART	(NP*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	52	Verräter	NN	*))	verräter	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	53	einer	PIS	*	ein	sg	fem	-	(362|(363|(364|(11
Emilia.xml.rksp.0.CoNLL2012.conll	000	54	jeden	PIS	*	jeder	sg	masc	-	362)|363)|364)|11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	55	versprach	VVFIN	*	versprechen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	56	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	57	und	KON	(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	58	keiner	PIS	*	keiner	sg	masc	-	(362)|(363)|(364)|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	59	gab	VVFIN	*))))	geben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	60	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ha	XY	*	ha	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	das	PDS	(VROOT(PSEUDO(S*	der	sg	neut	-	(365)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sollte	VMFIN	*	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ein	ART	(VP(NP*	ein	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Tanz	NN	*)	tanz	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	werden	VAINF	*))	werden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	das	PDS	*	der	sg	neut	-	(365)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sollte	VMFIN	*	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Claudia	NE	(VROOT(PSEUDO(MPN*	claudia	*	*	-	(53|(7|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Galotti	NE	*)	galotti	sg	*	-	53)|7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Die	ART	(VROOT(PSEUDO(NP*	der	pl	*	-	(11|(12
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Vorigen	NN	*)	vorige	pl	*	-	11)|12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO*))	claudia	-	-	-	(53|(7)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	die	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	im	APPRART	*	in	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Hereintreten	NN	*	hereintreten	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sich	PRF	*	sich	sg	-	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	umsiehet	VVFIN	*	umsiehet	-	-	-	53)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Erraten	NN	(VROOT(PSEUDO*	erraten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ah	NE	*	ah	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	unser	PPOSAT	(CNP(NP*	unser	pl	masc	-	(12|(8)|(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Beschützer	NN	*)	beschützer	pl	masc	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	unser	PPOSAT	(NP*	unser	pl	masc	-	(12|(53)|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Retter	NN	*))	retter	pl	masc	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Bist	VAFIN	(VROOT(PSEUDO(S*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	du	PPER	*	du	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	da	ADV	(NP*	da	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Odoardo	NE	*))	odoardo	-	-	(LOC*)	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Bist	VAFIN	(VROOT(PSEUDO(S*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	du	PPER	*	du	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	da	ADV	*)	da	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Aus	APPR	*	aus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ihren	PPOSAT	*	ihr	pl	masc	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Wispern	NN	*	wisper	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	aus	APPR	*	aus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ihren	PPOSAT	*	ihr	pl	masc	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Mienen	NN	*	miene	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	schloß	VVFIN	*	schließen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	ich	PPER	*	ich	sg	*	-	(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Was	PWS	(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	soll	VMFIN	*	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	dir	PPER	(VP*	dir	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	sagen	VVINF	*))	sagen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	wenn	KOUS	(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	du	PPER	*	du	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	noch	ADV	(NP*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	nichts	PIS	*)	nichts	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	weißt	VVFIN	*)	weißen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Was	PWS	(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	soll	VMFIN	*	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	dir	PPER	(VP*	dir	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	sagen	VVINF	*))	sagen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	wenn	KOUS	(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	du	PPER	*	du	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	schon	ADV	*	schon	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	alles	PIS	*	alle	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	weißt	VVFIN	*)	weißen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Aber	KON	(S*	aber	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wir	PPER	*	wir	pl	*	-	(8)|(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sind	VAFIN	*	sein	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	unschuldig	ADJD	*)	unschuldig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	bin	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	unschuldig	ADJD	*)	unschuldig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Deine	PPOSAT	(VROOT(PSEUDO(S(NP*	dein	sg	fem	-	(8|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Tochter	NN	*)	tochter	sg	fem	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	unschuldig	ADJD	*)	unschuldig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Unschuldig	ADJD	(VROOT(PSEUDO(S*	unschuldig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	allem	PIS	*)	alle	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	unschuldig	ADJD	*)	unschuldig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*))	odoardo	-	-	-	(12|(12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	der	PRELS	(VROOT(PSEUDO(VP(S*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sich	PRF	*	sich	sg	-	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	bei	APPR	(PP*	bei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Erblickung	NN	*))	erblickung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	seiner	PPOSAT	(VP(NP*	sein	sg	fem	-	(53|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Gemahlin	NN	*)	gemahlin	sg	fem	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	fassen	VVINF	*))	fassen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	gesucht	VVPP	*)))	suchen	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Gut	ADJD	(VROOT(PSEUDO(AP*	gut	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	gut	ADJD	*)	gut	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sei	VAIMP	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	nur	ADV	*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ruhig	ADJD	*	ruhig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nur	ADV	*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ruhig	ADJD	*	ruhig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	–	NN	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	antworte	VVFIN	*	antwort	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	mir	PPER	*	sich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Gegen	APPR	(VROOT(PSEUDO(PP*	gegen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	die	ART	*	der	sg	fem	-	(11
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Orsina	NE	*)	orsina	sg	fem	-	11)|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Madame	FM	*	--	-	-	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	als	KOKOM	*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ob	KOUS	*	ob	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ich	PPER	*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	noch	ADV	*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	zweifelte	VVFIN	*	zweifeln	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	–	$(	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Ist	NN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	der	ART	*	der	sg	masc	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Graf	NN	*	graf	sg	*	-	9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	tot	ADJD	*	tot	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO*	claudia	sg	neut	(PER*)	(53|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	53)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Tot	NN	(VROOT(PSEUDO*	tot	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ist	VAFIN	(VROOT(PSEUDO(S*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wahr	ADJD	*	wahr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	der	ART	(NP*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Prinz	NN	*)	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	heute	ADV	*	heute	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Morgen	NN	(NP*	morgen	pl	fem	-	(23)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Emilien	NE	*)	emilie	pl	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	in	APPR	(VP(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	der	ART	*	der	sg	fem	-	(122
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Messe	NN	*)	messe	sg	fem	(LOC*)	122)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	gesprochen	VVPP	*)))	sprechen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO*	claudia	sg	neut	(PER*)	(53|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	53)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wahr	NN	(VROOT(PSEUDO*	wahr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Aber	KON	(VROOT(PSEUDO(CS(S*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wenn	KOUS	*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	du	PPER	*	du	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	wüßtest	VVFIN	*)	wüßtest	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	welchen	PWAT	(S(NP*	welcher	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Schreck	NN	*)	schreck	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	es	PPER	(VP*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	ihr	PPER	*	ihr	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	verursacht	VVPP	*)))	verursachen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	welcher	PWAT	*	welcher	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Bestürzung	NN	*	bestürzung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	sie	PPER	(S(NP*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	nach	APPR	(PP*	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	Hause	NN	*))	haus	sg	neut	-	(133)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	kam	VVFIN	*))	kommen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	–	XY	*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ORSINA	NE	(VROOT(PSEUDO*	orsina	sg	neut	(LOC*)	(11|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	11)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nun	ADV	*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	hab	VAFIN	*	hab	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ich	PPER	*	ich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	gelogen	VVPP	*	gelogen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*))	odoardo	-	-	-	(12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	mit	APPR	(VROOT(PSEUDO(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	einem	ART	*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	bittern	ADV	(NP*	bittern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Lachen	NN	*))	lachen	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wollt	VMFIN	*	wollen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	auch	ADV	*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Sie	PPER	*	sie	pl	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	hätten	VAFIN	*	haben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Um	KOUI	*	um	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wie	KOKOM	*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	vieles	PIS	*	viele	pl	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ORSINA	NE	(VROOT(PSEUDO*	orsina	sg	neut	(LOC*)	(11|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	11)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Bin	VAFIN	(VROOT(PSEUDO(S*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ich	PPER	*	ich	sg	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wahnwitzig	ADJD	*)	wahnwitzig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*))	odoardo	-	-	-	(12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	wild	ADJD	(VROOT(PSEUDO(CO*	wild	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	hin	ADV	*	hin	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	her	ADV	(AP*	her	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	gehend	ADJD	*))	gehend	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	O	ITJ	(VROOT(PSEUDO(S*)	O	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	noch	ADV	(S*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	bin	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ich	PPER	*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	auch	ADV	(AVP*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	nicht	PTKNEG	*))	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO*	claudia	sg	neut	(PER*)	(53|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	53)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Du	PPER	(VROOT(PSEUDO(CS(S*	du	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	gebotest	VVFIN	*	gebotest	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mir	PPER	*	sich	sg	*	-	(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ruhig	ADJD	(VP*	ruhig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	sein	VAINF	*)))	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	ich	PPER	(S*	ich	sg	*	-	(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	bin	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	ruhig	ADJD	*))	ruhig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Bester	NN	*	bester	sg	masc	-	(12
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Mann	NN	*	mann	sg	masc	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	darf	VMFIN	*	dürfen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	auch	ADV	*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ich	PPER	*	ich	sg	*	-	(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	–	$(	*	–	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	ich	PPER	*	ich	sg	*	-	(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	dich	PRF	*	dich	sg	-	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	bitten	ADV	*	bitten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	–	XY	*	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Was	PWS	*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	willst	VMFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	du	PPER	*	du	sg	*	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Bin	VAFIN	(VROOT(PSEUDO(S*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ich	PPER	*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	nicht	PTKNEG	(AP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ruhig	ADJD	*))	ruhig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Kann	VMFIN	(VROOT(PSEUDO(S*	können	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	man	PIS	*	man	sg	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ruhiger	ADJD	(VP*	ruhig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sein	VAINF	*)	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	als	KOKOM	(S*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ich	PPER	*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	bin	VAFIN	*))	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sich	PRF	*	sich	sg	-	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	zwingend	ADJD	*	zwingend	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Weiß	VVFIN	(VROOT(PSEUDO(S*	weiß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	es	PPER	*	es	sg	neut	-	(366)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Emilia	NE	*	emilia	sg	-	(PER*)	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Appiani	NE	*	appiani	sg	*	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	tot	ADJD	*	tot	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ist	VAFIN	*))	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO*	claudia	sg	neut	(PER*)	(53|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	53)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wissen	VVINF	(VROOT(PSEUDO(S*	wissen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	kann	VMFIN	*	können	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sie	PPER	*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	es	PPER	*	es	sg	neut	-	(366)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nicht	PTKNEG	*)	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Aber	KON	(VROOT(PSEUDO(S*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ich	PPER	(S*	ich	sg	*	-	(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	fürchte	VVFIN	*	fürchen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	sie	PPER	*	sie	pl	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	es	PPER	*	es	sg	neut	-	(366)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	argwohnet	VVFIN	*))	argwohnen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	weil	KOUS	*	weil	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	er	PPER	*	er	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	erscheinet	VVFIN	*)	erscheinen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(CS(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sie	PPER	*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	jammert	VVFIN	*)	jammern	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	winselt	VVFIN	(S*	winseln	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	–	PPER	*))))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO*	claudia	sg	neut	(PER*)	(53|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	53)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nicht	PTKNEG	(VROOT(PSEUDO(AVP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	mehr	ADV	*)	mehr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Das	PDS	(S*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	vorbei	ADV	(NP*	vorbei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	nach	APPR	(PP*	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Ihrer	PPOSAT	*	ihr	-	-	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Art	NN	*)	Art	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	die	PRELS	(S*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	du	PPER	*	du	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	kennest	VVFIN	*)))	kennest	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(S*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	die	ART	(NP*	der	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Furchtsamste	NN	(CNP*	furchtsamst	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Entschlossenste	NN	*)	entschlossenst	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	unsers	PPOSAT	(NP*	unsers	pl	masc	-	(12)|(8)|(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Geschlechts	NN	*)))	geschlecht	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ihrer	PPOSAT	(VROOT(PSEUDO(S(NP*	ihr	pl	masc	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ersten	ADJA	*	erster	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Eindrücke	NN	*	eindruck	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nie	ADV	(AP*	nie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	mächtig	ADJD	*))	mächtig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	aber	ADV	*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	nach	APPR	(PP*	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	der	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	geringsten	ADJA	*	gering	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Überlegung	NN	*	überlegung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	in	APPR	(VP(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	alles	PIS	*)	alle	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	sich	PRF	(AP*	sich	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	findend	ADJD	*	findend	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	auf	APPR	(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	alles	PIS	*))	alle	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	gefaßt	VVPP	*)))	fassen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(CS(S*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	hält	VVFIN	*	halten	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	den	ART	(NP*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Prinzen	NN	*)	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	einer	ART	*	ein	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Entfernung	NN	*))	entfernung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	sie	PPER	(S*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	spricht	VVFIN	*	sprechen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	ihm	PPER	*)	ihm	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	einem	ART	*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Tone	NN	*	tone	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	–	ADJA	(NP*	–	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	Mache	NN	*))	mache	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	nur	ADV	*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	Odoardo	NE	*	odoardo	pl	-	(LOC*)	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	wir	PPER	*	wir	pl	*	-	(8)|(53)|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	wegkommen	VVFIN	*)))	wegkommen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	bin	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	zu	APPR	(PP*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Pferde	NN	*))	pferd	sg	fem	-	(154)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Was	PWS	*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	zu	PTKZU	*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	tun	VVINF	*	tun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Doch	KON	(NP*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Madame	FM	(VP*	--	-	-	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Sie	PPER	(S*	sie	pl	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	fahren	VVFIN	*	fahren	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ja	ADV	*	ja	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	nach	APPR	(PP*	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	der	ART	*	der	sg	fem	-	(26
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Stadt	NN	*)	stadt	sg	fem	-	26)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	zurück	PTKVZ	*)))	zurück	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ORSINA	NE	(VROOT(PSEUDO*	orsina	sg	neut	(LOC*)	(11|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	11)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nicht	PTKNEG	(VROOT(PSEUDO(CO(AVP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	anders	ADV	*))	anders	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Hätten	VAFIN	(VROOT(PSEUDO(S*	haben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*	sie	pl	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wohl	ADV	*	wohl	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	die	ART	(NP*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Gewogenheit	NN	*	gewogenheit	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	meine	PPOSAT	(VP(NP*	mein	sg	fem	-	(53|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Frau	NN	*)	frau	sg	fem	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	mit	APPR	(PP*	mit	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	sich	PRF	*)	sich	sg	-	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	nehmen	VVINF	*))))	nehmen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ORSINA	NE	(VROOT(PSEUDO*	orsina	sg	neut	(LOC*)	(11|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	11)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Warum	PWAV	*	warum	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sehr	ADV	(VROOT(PSEUDO(AVP*	sehr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	gern	ADV	*)	gern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Claudia	NE	(VROOT(PSEUDO*	claudia	sg	fem	(PER*)	(53)|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Ihr	PPER	(NP*	ihr	pl	*	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	die	ART	*	der	sg	fem	-	(11
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Gräfin	NN	*)	gräfin	sg	fem	-	11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	bekannt	ADJD	(AP*	bekannt	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	machend	ADJD	*)	machend	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Die	ART	(VROOT(PSEUDO(S(NP*	der	sg	fem	-	(11
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Gräfin	NN	*	gräfin	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Orsina	NE	*)	orsina	sg	-	-	11)|(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	eine	ART	(CNP(NP*	ein	sg	fem	-	(11
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Dame	NN	*	--	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	von	APPR	(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	großem	ADJA	*	groß	-	-	-	(90
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Verstande	NN	*))	verstande	-	-	-	11)|90)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	meine	PPOSAT	(NP*	mein	sg	fem	-	(11|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Freundin	NN	*)	freundin	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	meine	PPOSAT	(NP*	mein	sg	fem	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Wohltäterin	NN	*)))	wohltäterin	sg	fem	-	11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Du	PPER	(S*	du	sg	*	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mußt	VMFIN	*	mussen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ihr	PPER	*)	ihr	sg	fem	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	herein	PTKVZ	*	herein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	um	APPR	(PP*	um	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	uns	PPER	*))	uns	pl	*	-	(8)|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	sogleich	ADV	(VP*	sogleich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	den	ART	(NP*	der	sg	masc	-	(367
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Wagen	NN	*	wagen	sg	masc	-	367)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	heraus	ADV	*)	heraus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	schicken	VVINF	*))	schicken	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Emilia	NE	(VROOT(PSEUDO(S*	emilia	-	-	(PER*)	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	darf	VMFIN	*	dürfen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	wieder	ADV	*	wieder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nach	APPR	(PP*	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Guastalla	NE	*))	guastalla	sg	neut	(PER*)	(99)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(S*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	soll	VMFIN	*	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mir	PPER	*))	sich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	CLAUDIA	NE	(VROOT(PSEUDO*	claudia	sg	neut	(PER*)	(53|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	53)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Aber	KON	*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	–	$(	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wenn	KOUS	*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nur	ADV	*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	–	$(	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Ich	PPER	*	ich	sg	*	-	(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	trenne	VVFIN	*	trennen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	mich	PPER	*	mich	sg	-	-	(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	ungern	ADV	*	ungern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	von	APPR	*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	dem	ART	*	der	sg	neut	-	(8
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Kinde	NN	*	kind	sg	neut	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Bleibt	VVFIN	(VROOT(PSEUDO(S*	bleiben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	der	ART	(NP*	der	sg	masc	-	(12
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Vater	NN	*)	vater	sg	masc	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	der	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Nähe	NN	*))	nähe	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Man	PIS	(VROOT(PSEUDO(S*	man	sg	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wird	VAFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ihn	PPER	(VP*	ihn	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	endlich	ADV	*	endlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	doch	ADV	*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	vorlassen	VVINF	*))	vorlassen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Keine	PIAT	(VROOT(PSEUDO(NP*	kein	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Einwendung	NN	*)	einwendung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Kommen	VVFIN	(S*	kommen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*)	sie	pl	*	-	(11
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	gnädige	ADJA	(NP*	gnädig	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Frau	NN	*)	frau	sg	fem	-	11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Leise	NN	(VROOT(PSEUDO(NP*	leise	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	zu	APPR	(PP*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ihr	PPER	*))	ihr	-	-	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(S*	sie	pl	*	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	werden	VAFIN	*	werden	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	von	APPR	(VP(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mir	PPER	*)	sich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	hören	VVINF	*))	hören	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Komm	NN	*	komm	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Claudia	NE	*	claudia	sg	fem	(PER*)	(53)|(7)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Er	PPER	(VROOT(PSEUDO(S*	er	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	führt	VVFIN	*	führen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sie	PPER	*	sie	*	*	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ab	PTKVZ	*)	ab	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Marinelli	NE	(VROOT(PSEUDO*	marinelli	sg	masc	(PER*)	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(NP*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Prinz	NN	*)	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Hier	ADV	(VROOT(PSEUDO(S*	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	gnädiger	ADJA	(NP*	gnädig	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Herr	NN	*	herr	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	aus	APPR	(PP*	aus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	diesem	PDAT	*	dieser	sg	masc	-	(242
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Fenster	NN	*))	fenster	sg	masc	-	242)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	können	VMFIN	*	können	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Sie	PPER	*	sie	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	ihn	PPER	(VP*	ihn	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	sehen	VVINF	*))	sehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Er	PPER	*	er	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	geht	VVFIN	*	gehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	die	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Arkade	NN	*	arkade	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	auf	PTKVZ	*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	nieder	PTKVZ	*	nieder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Eben	NN	*	eben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	biegt	VVFIN	(S*	biegen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	er	PPER	*	er	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ein	PTKVZ	*	ein	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	er	PPER	*	er	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	kömmt	VVFIN	*)	kömmen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Nein	PTKANT	(S*	nein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	er	PPER	*	er	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	kehrt	VVFIN	*	kehren	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	wieder	ADV	*	wieder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	um	PTKVZ	*)	um	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ganz	ADV	*	ganz	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	einig	ADJD	*	einig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ist	VAFIN	(S*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	er	PPER	*	er	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	sich	PRF	*)	sich	sg	-	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	noch	ADV	*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	nicht	PTKNEG	*)	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Aber	KON	(VROOT(PSEUDO(S*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	um	APPR	(NP(AP(PP*	um	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ein	ART	*	ein	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	großes	ADJA	*)	groß	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ruhiger	ADJA	*))	ruhig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ist	VAFIN	*)	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	er	PPER	*	er	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	oder	KON	(S*	oder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	scheinet	VVFIN	*	scheinen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	er	PPER	*)	er	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Für	APPR	(VROOT(PSEUDO(NP(PP*	für	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	uns	PPER	*)	uns	pl	*	-	(0)|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	gleich	ADV	*	gleich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	viel	PIS	*)	viel	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Natürlich	ADV	(S*)	natürlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S(S*	was	sg	neut	-	(368)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ihm	PPER	(VP*	ihm	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	auch	ADV	*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	beide	PIAT	(NP*	beide	pl	neut	-	(11|(53
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Weiber	NN	*)	weiber	pl	neut	-	11)|53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	den	ART	*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Kopf	NN	*)	kopf	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	gesetzt	VVPP	*)	setzen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	haben	VAFIN	*)	haben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	wird	VAFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	er	PPER	(VP*	er	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	es	PPER	(VP*	es	sg	neut	-	(368)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	wagen	VVINF	*)	wagen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	äußern	VVINF	*)))	äußern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Wie	KOKOM	(S*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Battista	NE	*	battista	sg	fem	(PER*)	(10)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	gehört	VVFIN	*	gehören	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	soll	VMFIN	(S*	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ihm	PPER	*	ihm	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	seine	PPOSAT	(NP*	sein	sg	fem	-	(53|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Frau	NN	*)))	frau	sg	fem	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	den	ART	(VP(NP*	der	pl	fem	-	(367
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Wagen	NN	*)	wagen	pl	fem	-	367)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	sogleich	ADV	*	sogleich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	heraus	ADV	*	heraus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	senden	VVINF	*)	senden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Denn	KON	(VROOT(PSEUDO(S*	denn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	er	PPER	*	er	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	kam	VVFIN	*	kommen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	zu	APPR	(PP*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Pferde	NN	*))	pferd	sg	fem	-	(154)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Geben	VVFIN	*	geben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*	sie	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Acht	CARD	*	acht	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	wenn	KOUS	*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	er	PPER	*	er	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	nun	ADV	*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	vor	APPR	*	vor	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Ihnen	PPER	*	ihnen	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	erscheinet	VVFIN	*	erscheinen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	wird	VAFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	er	PPER	*	er	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	ganz	ADV	*	ganz	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	untertänigst	ADV	*	untertänigst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	Eurer	PPOSAT	*	eurer	*	*	-	(0|(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	Durchlaucht	NN	*	durchlaucht	sg	fem	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	für	APPR	*	für	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	den	ART	*	der	sg	masc	-	(369
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	gnädigen	ADJA	*	gnädig	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	Schutz	NN	*	schutz	sg	masc	-	369)
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	danken	VVFIN	*	danken	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	den	PRELS	*	der	sg	masc	-	(369)
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	seine	PPOSAT	*	sein	sg	fem	-	(53|(8|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	Familie	NN	*	familie	sg	fem	-	53)|8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	bei	APPR	*	bei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	28	diesem	PDAT	*	dieser	sg	masc	-	(287
Emilia.xml.rksp.0.CoNLL2012.conll	000	29	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	30	traurigen	ADJA	*	traurig	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	31	Zufalle	NN	*	zufalle	pl	masc	-	287)
Emilia.xml.rksp.0.CoNLL2012.conll	000	32	hier	ADV	*	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	33	gefunden	VVPP	*	finden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	34	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	35	wird	VAFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	36	sich	PRF	*	sich	sg	-	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	37	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	38	mit	APPR	*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	39	samt	APPR	*	samt	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	40	seiner	PPOSAT	*	sein	sg	fem	-	(8|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	41	Tochter	NN	*	tochter	sg	fem	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	42	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	43	zu	APPR	*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	44	fernerer	ADJA	*	fernerer	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	45	Gnade	NN	*	gnade	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	46	empfehlen	VVINF	*	empfehlen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	47	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	48	wird	VAFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	49	sie	PPER	*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	50	ruhig	ADJD	*	ruhig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	51	nach	APPR	*	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	52	der	ART	*	der	sg	fem	-	(26
Emilia.xml.rksp.0.CoNLL2012.conll	000	53	Stadt	NN	*	stadt	sg	fem	-	26)
Emilia.xml.rksp.0.CoNLL2012.conll	000	54	bringen	VVINF	*	bringen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	55	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	56	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	57	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	58	in	APPR	*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	59	tiefster	ADJA	*	tief	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	60	Unterwerfung	NN	*	unterwerfung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	61	erwarten	VVFIN	*	erwarten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	62	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	63	welchen	PWAT	*	welcher	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	64	weitern	VVINF	*	weitern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	65	Anteil	NN	*	anteil	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	66	Euer	PPOSAT	*	euer	sg	masc	-	(0|(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	67	Durchlaucht	NN	*	durchlaucht	sg	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	68	an	APPR	*	an	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	69	seinem	PPOSAT	*	sein	sg	masc	-	(8|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	70	unglücklichen	ADJA	*	unglücklich	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	71	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	72	lieben	ADJA	*	lieb	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	73	Mädchen	NN	*	mädchen	pl	neut	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	74	zu	PTKZU	*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	75	nehmen	VVINF	*	nehmen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	76	geruhen	VVINF	*	geruhen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	77	wollen	VMFIN	*	wollen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	78	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wenn	KOUS	(VROOT(PSEUDO(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	er	PPER	*	er	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	nun	ADV	(AVP*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	aber	ADV	(S(AVP*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	so	ADV	*)	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	zahm	VVFIN	*	zahm	sg	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	nicht	PTKNEG	*))	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ist	VAFIN	*)	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	schwerlich	ADJD	*	schwerlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	schwerlich	ADJD	*	schwerlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	wird	VAFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	er	PPER	*	er	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	sein	VAINF	*	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	kenne	VVFIN	*	kennen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ihn	PPER	*	ihn	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	zu	PTKA	(AP*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	gut	ADJD	*))	gut	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Wenn	KOUS	(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	er	PPER	*	er	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	höchstens	ADV	(VP*	höchstens	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	seinen	PPOSAT	(NP*	sein	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Argwohn	NN	*)	argwohn	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	erstickt	VVPP	*)	ersticken	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	seine	PPOSAT	(NP*	sein	sg	fem	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Wut	NN	*)	wut	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	verbeißt	VVFIN	*)	verbeißen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	aber	ADV	(NP*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Emilien	NN	*	emilien	pl	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	anstatt	KOUI	(S(VP*	anstatt	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	sie	PPER	*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	nach	APPR	(PP*	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	der	ART	*	der	sg	fem	-	(26
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	Stadt	NN	*)	stadt	sg	fem	-	26)
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	fahren	VVINF	*))	fahren	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	sich	PRF	*)	sich	sg	-	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	nimmt	VVFIN	*))	nehmen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	bei	APPR	(VROOT(PSEUDO(S(NP(PP*	bei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sich	PRF	*))	sich	sg	-	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	behält	VVFIN	*)	behalten	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	oder	KON	(VROOT(PSEUDO(S*	oder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wohl	ADV	(PP*	wohl	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	gar	ADV	*	gar	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	in	APPR	(CPP(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ein	ART	*	ein	sg	neut	-	(67
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Kloster	NN	*)	kloster	sg	neut	-	67)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	außer	APPR	(PP*	außer	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	meinem	PPOSAT	*	mein	sg	neut	-	(29|(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Gebiete	NN	*)))	gebiet	pl	neut	-	29)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	verschließt	VVFIN	*)	verschließen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wie	PWAV	*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	dann	ADV	*	dann	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Die	ART	(VROOT(PSEUDO(S(NP*	der	sg	fem	-	(109
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	fürchtende	ADJA	*	fürchtend	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Liebe	NN	*)	liebe	sg	fem	-	109)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sieht	VVFIN	*	sehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	weit	ADJD	*)	weit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wahrlich	ADJD	(VROOT(PSEUDO*	wahrlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Aber	KON	*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	er	PPER	*	er	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	wird	VAFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ja	ADV	*	ja	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	–	XY	*	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wenn	KOUS	(VROOT(PSEUDO(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	er	PPER	*	er	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	nun	ADV	(AVP*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	aber	ADV	*))	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wie	PWAV	*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	dann	ADV	*	dann	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wird	VAFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	uns	PPER	(VP*	uns	pl	*	-	(3)|(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	dann	ADV	*	dann	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	helfen	VVINF	*	helfen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	der	ART	(NP*	der	sg	masc	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	unglückliche	ADJA	*	unglücklich	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Graf	NN	*)	graf	sg	masc	(PER*)	9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	sein	PPOSAT	(NP*	sein	sg	neut	-	(185|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Leben	NN	*)	leben	sg	neut	-	185)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	darüber	PROAV	(VP*	darüber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	verloren	VVPP	*))))	verlieren	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wozu	PWAV	(VROOT(PSEUDO(S*	wozu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	dieser	PDAT	(NP*	dieser	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	traurige	ADJA	*	traurig	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Seitenblick	NN	*))	seitenblick	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Vorwärts	ADV	(VROOT(PSEUDO(S*)	vorwärts	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	denkt	VVFIN	(VROOT(PSEUDO(CS(S*	denken	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	der	ART	(NP*	der	sg	masc	-	(370
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sieger	NN	*))	sieger	sg	masc	-	370)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	es	PPER	(S*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	falle	VVFIN	*	fallen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	neben	APPR	(NP(PP*	neben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ihm	PPER	*)	ihm	sg	masc	-	(370)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Feind	NN	(CNP*	feind	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	oder	KON	*	oder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Freund	NN	*))))	freund	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Und	KON	(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wenn	ADV	*)	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	auch	ADV	*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wenn	KOUS	*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	er	PPER	*	er	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	auch	ADV	*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	wollte	VMFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	der	ART	*	der	sg	masc	-	(12
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	alte	ADJA	*	alt	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Neidhart	NN	*	neidhart	sg	masc	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	was	PWS	*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Sie	PPER	*	sie	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	von	APPR	*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	ihm	PPER	*	ihm	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	fürchten	VVFIN	*	fürchten	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	Prinz	NN	*	prinz	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	Überlegend	ADJD	*	überlegend	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Das	PDS	(VROOT(PSEUDO(S*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	geht	VVFIN	*)	gehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	hab	VVFIN	*	hab	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Weiter	ADV	*	weiter	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	als	KOKOM	(NP*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	zum	APPRART	(PP*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Wollen	NN	*)	wolle	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	soll	VMFIN	(S*	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	er	PPER	*	er	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	es	PPER	(VP*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	gewiß	ADV	*	gewiß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	bringen	VVINF	*)))	bringen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Gewiß	ADV	(VROOT(PSEUDO(CO(AVP*	gewiß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	nicht	PTKNEG	*))	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Aber	KON	(S*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	daß	KOUS	*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	wir	PPER	*	wir	pl	*	-	(0)|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ihn	PPER	*	ihn	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	nicht	PTKNEG	*)	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	aus	APPR	(VP(PP*	aus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	dem	ART	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Gesichte	NN	*)	gesicht	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	verlieren	VVINF	*)	verlieren	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Tritt	NN	(NP*	tritt	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wieder	ADV	(PP*	wieder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ans	APPRART	*	an	sg	neut	-	(242
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Fenster	NN	*))	fenster	sg	neut	-	242)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Bald	ADV	*	bald	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	hätt	VAFIN	*	hätt	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	er	PPER	*	er	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	uns	PPER	*	uns	pl	*	-	(0)|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	überrascht	VVPP	*	überraschen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Er	PPER	(VROOT(PSEUDO(S*	er	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	kömmt	VVFIN	*)	kömmen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Lassen	VVFIN	(S*	lassen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*	sie	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	uns	PPER	*	uns	pl	*	-	(3)|(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ihm	PPER	*	ihm	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	noch	ADV	(VP*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ausweichen	VVINF	*))	ausweichen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	und	KON	(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	hören	VVFIN	*	hören	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Sie	PPER	*	sie	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	erst	ADV	*	erst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Prinz	NN	(NP*	prinz	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	was	PRELS	(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	wir	PPER	*	wir	pl	*	-	(3)|(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	auf	APPR	(VP(VP(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	den	ART	*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	befürchtenden	ADJA	*)	befürchtend	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	Fall	NN	*)	fall	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	tun	VVINF	*)	tun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	müssen	VMINF	*))))	müssen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)))	prinz	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	drohend	ADJD	(VROOT(PSEUDO*	drohend	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nur	ADV	(VROOT(PSEUDO*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Marinelli	NE	*	marinelli	sg	neut	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Das	ART	(VROOT(PSEUDO(NP*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Unschuldigste	NN	*	unschuldige	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	von	APPR	(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	der	ART	*	der	sg	fem	-	(149
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Welt	NN	*))	welt	sg	fem	-	149)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO(MPN*	odoardo	-	-	-	(12|(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	GALOTTI	NE	*)	galotti	-	-	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Noch	ADV	(VROOT(PSEUDO(NP*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	niemand	PIS	*	niemand	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	hier	ADV	*)	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Gut	NN	*	gut	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	(S*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	soll	VMFIN	*	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	noch	ADV	(VP(AP*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	kälter	ADJD	*)	kalt	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	werden	VAINF	*))	werden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Es	PPER	(VROOT(PSEUDO(S*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mein	PPOSAT	(NP*	mein	sg	neut	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Glück	NN	*))	glück	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Nichts	PIS	*	nichts	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	verächtlicher	ADJD	*	verächtlich	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	als	KOKOM	(NP*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ein	ART	*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	brausender	ADJA	*	brausend	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Jünglingskopf	NN	*	jünglingskopf	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	grauen	ADJA	*	grau	pl	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Haaren	NN	*))	haar	pl	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	hab	VVFIN	*	hab	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	mir	PPER	*	sich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	oft	ADV	*	oft	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	gesagt	VVPP	*	sagen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	doch	ADV	*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ließ	VVFIN	*	lassen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	mich	PRF	*	mich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	fortreißen	VVINF	*	fortreißen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	von	APPR	*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	wem	PWS	*	wem	sg	masc	-	(11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Von	APPR	(VROOT(PSEUDO(S(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	einer	ART	*	ein	sg	fem	-	(11
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Eifersüchtigen	NN	*)	eifersüchtig	sg	fem	-	11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	von	APPR	(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	einer	PIS	*)	ein	sg	fem	-	(11
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	für	APPR	(PP*	für	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Eifersucht	NN	*	eifersucht	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Wahnwitzigen	NN	*))	wahnwitzige	sg	fem	-	11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Was	PWS	(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	hat	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	die	ART	(NP*	der	sg	fem	-	(371
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	gekränkte	ADJA	*	gekränkt	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Tugend	NN	*))	tugend	-	-	-	371)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	mit	APPR	(S(VP(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	der	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Rache	NN	*)	rache	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	des	ART	(NP*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Lasters	NN	*)	laster	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	schaffen	VVINF	*)))	schaffen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Jene	PDS	*	jener	sg	fem	-	(371)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	allein	ADV	*	allein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	hab	VAFIN	*	hab	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ich	PPER	*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	zu	PTKZU	*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	retten	VVINF	*	retten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Und	KON	(NP*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	deine	PPOSAT	*	dein	sg	fem	-	(372|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Sache	NN	*)	sache	sg	fem	-	372)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	–	NN	(NP*	–	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	mein	PPOSAT	(NP*	mein	sg	neut	-	(9|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Sohn	NN	*))	sohn	sg	neut	-	9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	mein	PPOSAT	(VROOT(PSEUDO(NP*	mein	sg	masc	-	(9|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sohn	NN	*)	sohn	sg	masc	-	9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Weinen	PPOSS	*	weinen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	konnt	ADJD	*	konnen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ich	PPER	*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	nie	ADV	*	nie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	–	$(	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	will	VMFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	nun	ADV	*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	erst	ADV	*	erst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	lernen	VVINF	*	lernen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	–	$(	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	Deine	PPOSAT	*	dein	sg	fem	-	(372|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	Sache	NN	*	sache	sg	fem	-	372)
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	wird	VAFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	ein	ART	*	ein	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	ganz	ADV	*	ganz	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	anderer	PIS	*	anderer	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	zu	APPR	*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	seiner	PPOSAT	*	sein	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	machen	VVINF	*	machen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Genug	NN	(VROOT(PSEUDO(S*	genug	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	für	APPR	(PP*	für	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mich	PPER	*)	mich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	wenn	KOUS	(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	dein	PPOSAT	(NP*	dein	sg	masc	-	(0|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Mörder	NN	*)	mörder	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	die	ART	(NP*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Frucht	NN	*	frucht	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	seines	PPOSAT	(NP*	sein	sg	neut	-	(373|(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Verbrechens	NN	*))	verbrechen	sg	neut	-	373)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	genießt	VVFIN	*))	genießen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Dies	PDS	(S*	dieser	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	martere	VVFIN	*	mart	pl	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ihn	PPER	*	ihn	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	mehr	PIS	*)	mehr	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	als	KOKOM	(NP*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	das	ART	*	der	sg	neut	-	(373
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Verbrechen	NN	*)	verbrechen	sg	neut	-	373)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wenn	KOUS	(VROOT(PSEUDO(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	nun	ADV	*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	bald	ADV	*	bald	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ihn	PPER	*	ihn	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Sättigung	NN	(NP(CNP*	sättigung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Ekel	NN	*)	ekel	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	von	APPR	(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Lüsten	NN	*)	lüste	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	zu	APPR	(PP*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Lüsten	NN	*))	lüste	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	treiben	VVINF	*	treiben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	so	ADV	(S*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	vergälle	VVFIN	*	vergällen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	die	ART	(NP*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	Erinnerung	NN	*	erinnerung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	diese	PDAT	(VP(VP(NP*	dieser	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	eine	ART	*	ein	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	Lust	NN	*)	lust	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	gebüßet	VVPP	*)	gebüßet	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	haben	VAINF	*)))	haben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	ihm	PPER	*	ihm	sg	neut	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	den	ART	(AP(NP*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	28	Genuß	NN	*)	genuß	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	29	aller	PIAT	*)))	aller	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	30	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	In	APPR	(VROOT(PSEUDO(CS(CS(S(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	jedem	PIAT	*	jeder	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Traume	NN	*)	traume	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	führe	VVFIN	*	führen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	der	ART	(NP*	der	sg	masc	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	blutige	ADJA	*	blutig	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Bräutigam	NE	*)	bräutigam	sg	masc	-	9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ihm	PPER	*	ihm	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	die	ART	(NP*	der	sg	fem	-	(8
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Braut	NN	*	braut	sg	fem	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	vor	APPR	(PP*	vor	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	das	ART	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Bette	NN	*))	bette	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	;	$.	*)	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	wann	VVFIN	(S*	wann	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	er	PPER	*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	dennoch	ADV	*	dennoch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	den	ART	(NP*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	wollüstigen	ADJA	*	wollüstig	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	Arm	NN	*)	arm	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	nach	APPR	(PP*	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	ihr	PPER	*)	ihr	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	ausstreckt	VVFIN	*)	ausstrecken	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	so	ADV	(S*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	höre	VVFIN	*	hören	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	er	PPER	*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	28	plötzlich	ADJD	*	plötzlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	29	das	ART	(NP*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	30	Hohngelächter	NN	*	hohngelächter	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	31	der	ART	(NP*	der	sg	masc	-	(217
Emilia.xml.rksp.0.CoNLL2012.conll	000	32	Hölle	NN	*))))	hölle	sg	masc	-	217)
Emilia.xml.rksp.0.CoNLL2012.conll	000	33	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	34	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	35	erwache	VVFIN	*)	erwachen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	36	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Marinelli	NE	(VROOT(PSEUDO*	marinelli	sg	masc	(PER*)	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Odoardo	NE	(VROOT(PSEUDO(MPN*	odoardo	*	*	-	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Galotti	NE	*)	galotti	sg	*	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wo	PWAV	(VROOT(PSEUDO(S*	wo	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	blieben	VVFIN	*	bleiben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*	sie	pl	*	-	(12
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	mein	PPOSAT	(NP*	mein	sg	masc	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Herr	NN	*))	herr	sg	masc	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	wo	PWAV	(VROOT(PSEUDO(S*	wo	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	blieben	VVFIN	*	bleiben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*)	sie	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	War	VAFIN	(VROOT(PSEUDO(S*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	meine	PPOSAT	(NP*	mein	sg	fem	-	(8|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Tochter	NN	*)	tochter	sg	fem	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	hier	ADV	*)	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nicht	PTKNEG	(VROOT(PSEUDO(S*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sie	PPER	*	sie	-	-	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	aber	ADV	(NP*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	der	ART	*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Prinz	NN	*))	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Er	PPER	(VROOT(PSEUDO(S*	er	sg	masc	-	(0)|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	verzeihe	VVFIN	*)	verzeihen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ich	PPER	(S*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	habe	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	die	ART	(VP(NP*	der	sg	fem	-	(11
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Gräfin	NE	*)	gräfin	sg	fem	-	11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	begleitet	VVPP	*))	begleiten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nun	ADV	(VROOT(PSEUDO(S*)	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Die	ART	(VROOT(PSEUDO(NP*	der	sg	fem	-	(11
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	gute	ADJA	*	gut	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Dame	NN	*)	--	sg	fem	-	11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ihre	PPOSAT	(NP*	ihr	sg	fem	-	(53|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Gemahlin	NN	*))	gemahlin	sg	fem	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ist	VAFIN	(VROOT(PSEUDO(S*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	der	ART	*	der	sg	fem	-	(11
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Gräfin	NN	*	gräfin	sg	fem	-	11)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	;	$.	*)	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	–	$.	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	um	APPR	(VP(PP*	um	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	uns	PPER	*)	uns	pl	*	-	(8)|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	den	ART	(NP*	der	sg	masc	-	(367
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Wagen	NN	*)	wagen	sg	masc	-	367)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	sogleich	ADV	*	sogleich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	heraus	ADV	*	heraus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	senden	VVINF	*)))	senden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(S(NP*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Prinz	NN	*)	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	vergönne	VVFIN	*	vergönnen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nur	ADV	*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ich	PPER	*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	mich	PRF	*	mich	sg	-	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	so	ADV	(AVP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	lange	ADV	*)	lange	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	meiner	PPOSAT	*	mein	sg	fem	-	(8|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Tochter	NN	*)	tochter	sg	fem	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	noch	ADV	*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	hier	ADV	*	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	verweile	VVFIN	*))	verweilen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wozu	PWAV	(VROOT(PSEUDO(S*	wozu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	diese	PDAT	(NP*	dieser	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Umstände	NN	*))	umstand	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Würde	VAFIN	(VROOT(PSEUDO(S*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sich	PRF	*	sich	sg	-	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	der	ART	(NP*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Prinz	NN	*)	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ein	ART	(VP(VP(NP*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Vergnügen	NN	*)	vergnügen	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	daraus	PROAV	*	daraus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	gemacht	VVPP	*)	machen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	haben	VAINF	*	haben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	sie	PPER	(NP(CNP(NP*	sie	sg	fem	-	(53|(8
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	beide	PIS	*)	beide	pl	*	-	53)|8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Mutter	NN	*	mutter	*	*	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	Tochter	NN	*)	tochter	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	selbst	ADV	(VP*	selbst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	nach	APPR	(PP*	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	der	ART	*	der	sg	fem	-	(26
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	Stadt	NN	*)	stadt	sg	fem	-	26)
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	bringen	VVINF	*)))))	bringen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Die	ART	(VROOT(PSEUDO(S(NP*	der	sg	fem	-	(8
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Tochter	NN	*)	tochter	sg	fem	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wenigstens	ADV	*	wenigstens	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	würde	VAFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	diese	PDAT	(NP*	dieser	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Ehre	NN	*)	ehre	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	haben	VAFIN	*	haben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	verbitten	VVINF	(VP*	verbitten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	müssen	VMINF	*))	müssen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wie	PWAV	*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(S*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	soll	VMFIN	*	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	nicht	PTKNEG	(AVP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mehr	ADV	*)	mehr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nach	APPR	(PP*	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Guastalla	NE	*))	guastalla	sg	neut	(PER*)	(99)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	warum	PWAV	*	warum	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(S(NP*	der	sg	masc	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Graf	NN	*)	graf	sg	masc	-	9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	tot	ADJD	*)	tot	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Um	KOUI	*	um	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	viel	ADV	*	viel	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mehr	PIS	*	mehr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	–	KOKOM	*	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(S*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	soll	VMFIN	*	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mir	PPER	*))	sich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Mit	APPR	(VROOT(PSEUDO(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ihnen	PPER	*)	ihnen	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Mit	APPR	(VROOT(PSEUDO(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	mir	PPER	*)	sich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sage	VVFIN	*	sagen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Ihnen	PPER	*	ihnen	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ja	ADV	*	ja	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	der	ART	(S(NP*	der	sg	masc	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Graf	NN	*)	graf	sg	*	-	9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	tot	ADJD	*))	tot	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Wenn	KOUS	(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	es	PPER	(VP*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	noch	ADV	(AVP*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	nicht	PTKNEG	*)	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	wissen	VVINF	*)	wissen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	–	VAFIN	*)	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Was	PWS	(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	hat	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	sie	PPER	(VP*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	nun	ADV	*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	weiter	ADV	*	weiter	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Guastalla	NE	*)	guastalla	sg	neut	(LOC*)	(99)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	tun	VVINF	*)))	tun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	(S*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	soll	VMFIN	*	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	mir	PPER	*))	sich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Allerdings	ADV	(VROOT(PSEUDO(S*	allerdings	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wird	VAFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	der	ART	(NP*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	künftige	ADJA	*	künftig	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Aufenthalt	NN	*	aufenthalt	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	der	ART	(NP*	der	sg	masc	-	(8
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Tochter	NN	*))	tochter	sg	masc	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	einzig	ADJD	(AP*	einzig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	von	APPR	(VP(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	dem	ART	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Willen	NN	*	wille	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	des	ART	(NP*	der	sg	masc	-	(12
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Vaters	NN	*))	vater	sg	masc	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	abhangen	VVINF	*)))	abhangen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nur	ADV	(VROOT(PSEUDO(S*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	vors	APPRART	(PP*	vor	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	erste	ADJA	*	erster	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	–	NN	*))))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(NP(AP*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	vors	APPRART	(PP*)	vor	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	erste	ADJA	*))	erster	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Werden	VAFIN	(VROOT(PSEUDO(S(S*	werden	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*	sie	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wohl	ADV	(VP*	wohl	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	erlauben	VVINF	*))	erlauben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	müssen	VMFIN	*	müssen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Herr	NN	*	herr	sg	masc	-	(12
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Oberster	NN	*	oberster	sg	masc	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	sie	PPER	*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	nach	APPR	(VP(PP*	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Guastalla	NE	*)	guastalla	sg	neut	(PER*)	(99)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	gebracht	VVPP	*)	bringen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	wird	VAFIN	*))	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Meine	PPOSAT	(VROOT(PSEUDO(NP*	mein	sg	fem	-	(8|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Tochter	NN	*)	tochter	sg	fem	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	nach	APPR	(VROOT(PSEUDO(S(VP(PP*	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Guastalla	NE	*)	guastalla	sg	neut	-	(99)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	gebracht	VVPP	*)	bringen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	wird	VAFIN	*)	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	warum	PWAV	*	warum	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Warum	PWAV	(VROOT(PSEUDO*	warum	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Erwägen	VVFIN	(VROOT(PSEUDO(S*	erwägen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*	sie	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	doch	ADV	*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nur	ADV	(NP*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	–	CARD	*))))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*))	odoardo	-	-	-	(12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	hitzig	ADJD	(VROOT(PSEUDO*	hitzig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Erwägen	NN	(VROOT(PSEUDO*	erwag	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	erwägen	VVFIN	*	erwägen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	erwäge	VVFIN	*	erwägen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	hier	ADV	*	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	nichts	PIS	(NP*	nichts	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	erwägen	VVINF	*))	erwägen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	ist	VAFIN	*))	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	(S*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	soll	VMFIN	*	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	sie	PPER	(S*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	muß	VMFIN	*	müssen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	mir	PPER	*)))	sich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	O	ITJ	(VROOT(PSEUDO(CS(S*)	O	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	mein	PPOSAT	(S(NP*	mein	sg	masc	-	(12|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Herr	NN	*	herr	sg	masc	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	–	NN	*)	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	was	PIS	*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	brauchen	VVFIN	*	brauchen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	wir	PPER	*	wir	pl	*	-	(12)|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	uns	PPER	(VP*	uns	pl	-	-	(12)|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	hierüber	PROAV	*	hierüber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	ereifern	VVINF	*))))	ereifern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	kann	VMFIN	*	können	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sein	VAINF	*	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	daß	KOUS	*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ich	PPER	*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	mich	PRF	*	mich	sg	-	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	irre	VVFIN	*	irre	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	daß	KOUS	*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	es	PPER	*	es	sg	neut	-	(374)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	nötig	ADJD	*	nötig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	was	PWS	*	was	sg	neut	-	(374)
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	ich	PPER	*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	für	APPR	*	für	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	nötig	ADJD	*	nötig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	halte	VVFIN	*	halten	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Der	ART	(S(NP*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Prinz	NN	*)	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	wird	VAFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	es	PPER	(VP(VP*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	am	PTKA	(AA*	an	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	besten	ADJD	*)	gut	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	beurteilen	VVINF	*))	beurteilen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	wissen	VVINF	*))	wissen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(S(NP*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Prinz	NN	*)	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	entscheide	VVFIN	*)	entscheiden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ich	PPER	*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	geh	XY	*	geh	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	hole	VVFIN	*	hoel	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ihn	PPER	*	ihn	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO(MPN*	odoardo	-	-	-	(12|(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	GALOTTI	NE	*)	galotti	-	-	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wie	PWAV	(VROOT(PSEUDO*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Nimmermehr	NN	*	nimmermehr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO(S*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Mir	PPER	(VP*	sich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	vorschreiben	VVINF	*	vorschreiben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	wo	PWAV	(S*	wo	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	sie	PPER	*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	hin	ADV	*))	hin	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	soll	VMFIN	*)	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO(S*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Mir	NE	*	sich	sg	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sie	PPER	*	sie	pl	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	vorenthalten	VVFIN	*)	vorenthalten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Wer	PWS	*	wer	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	will	VMFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	das	PDS	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wer	PWS	*	wer	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	darf	VMFIN	*	dürfen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	das	PDS	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Der	ART	(AVP*	der	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	hier	ADV	*)	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	alles	PIS	(S*	alle	sg	neut	-	(375)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	darf	VMFIN	*	dürfen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	was	PWS	(S*	was	sg	neut	-	(375)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	er	PPER	*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	will	VMFIN	*))	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Gut	ADJD	(VROOT(PSEUDO(DL*	gut	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	gut	ADJD	(CS*	gut	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	so	ADV	(S*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	soll	VMFIN	*	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	er	PPER	*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	sehen	VVINF	(VP*	sehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	wie	PWAV	(CS(S*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	viel	ADV	*	viel	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	auch	ADV	*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	ich	PPER	*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	darf	VMFIN	*)	dürfen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	ob	KOUS	(S*	ob	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	ich	PPER	*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	schon	ADV	(AVP*	schon	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	nicht	PTKNEG	*))))	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	dürfte	VMFIN	*)))	dürfen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Kurzsichtiger	NN	(VROOT(PSEUDO(NP*	kurzsichtig	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Wüterich	NE	*)	wüterich	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Mit	APPR	(VROOT(PSEUDO(S(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	dir	PPER	*)	dir	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	will	VMFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	es	PPER	(VP*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	wohl	ADV	*	wohl	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	aufnehmen	VVINF	*))	aufnehmen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wer	PWS	(VROOT(PSEUDO(CS(S(S*	wer	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	kein	PIAT	(NP*	kein	sg	neut	-	(376
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Gesetz	NN	*)	gesetz	sg	neut	-	376)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	achtet	VVFIN	*)	achten	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	eben	ADV	(AP*	eben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	mächtig	ADJD	*))	mächtig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	als	KOKOM	(S*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	wer	PWS	*	wer	sg	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	kein	PIAT	(NP*	kein	sg	neut	-	(376
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Gesetz	NN	*)	gesetz	sg	neut	-	376)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	hat	VAFIN	*))	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Das	PDS	(VROOT(PSEUDO(S*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	weißt	VVFIN	*	weißen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	du	PPER	*	du	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*)	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Komm	NN	(VROOT(PSEUDO(S*	komm	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	an	PTKVZ	*)	an	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	komm	VVIMP	*	komm	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	an	PTKVZ	*	an	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Aber	KON	(S*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sieh	VVFIN	*)	sieh	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	da	ADV	*	da	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Schon	ADV	(VROOT(PSEUDO(S(AVP*	schon	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wieder	ADV	*)	wieder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	schon	ADV	(AVP*	schon	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	wieder	ADV	*)	wieder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	rennet	VVFIN	*	rennen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	der	ART	(NP*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Zorn	NN	*)	zorn	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	dem	ART	*	der	sg	neut	-	(349
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Verstande	NN	*)	verstande	sg	neut	-	349)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	davon	PTKVZ	*)	davon	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Was	PWS	*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	will	VMFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Erst	ADV	*	erst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	müßt	VMFIN	*	müssen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	doch	ADV	*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	geschehen	VVPP	*	geschehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	sein	VAINF	*	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	worüber	PWAV	*	worüber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	ich	PPER	*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	tobe	VVFIN	*	toben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	plaudert	VVFIN	*	plaudern	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	eine	ART	(NP*	ein	sg	fem	-	(3
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Hofschranze	NN	*))	hofschranze	sg	fem	-	3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	hätte	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ihn	PPER	(VP(VP*	ihn	sg	masc	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	doch	ADV	*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	nur	ADV	*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	plaudern	VVINF	*)	plaudern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	lassen	VVINF	*))	lassen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Hätte	VVFIN	(VROOT(PSEUDO(S*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ich	PPER	*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	seinen	PPOSAT	(NP*	sein	sg	masc	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Vorwand	NN	*	vorwand	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	warum	PWAV	(S*	warum	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	sie	PPER	*	sie	pl	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	wieder	ADV	*	wieder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	nach	APPR	(VP(PP*	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Guastalla	NE	*))	guastalla	sg	neut	(PER*)	(99)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	soll	VMFIN	*))	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	doch	ADV	(VP*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	nur	ADV	*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	angehört	VVPP	*))	angehören	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	So	ADV	(S*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	könnte	VMFIN	*	können	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	mich	PRF	*	mich	sg	-	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	itzt	ADV	*	itzt	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	auf	APPR	(VP(VP(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	eine	ART	*	ein	sg	fem	-	(377
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Antwort	NN	*)	antwort	sg	fem	-	377)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	gefaßt	VVPP	*)	gefaßt	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	machen	VVINF	*))	machen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Zwar	ADV	*	zwar	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	auf	APPR	*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	welchen	PWAT	*	welcher	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	kann	VMFIN	*	können	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	mir	PPER	*	sich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	eine	ART	*	ein	sg	fem	-	(377)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	fehlen	VVINF	*	fehlen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sollte	VMFIN	(S*	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sie	PPER	*	sie	sg	fem	-	(377)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mir	PRF	*	sich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	aber	ADV	*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	fehlen	VVFIN	*)	fehlen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	sollte	VMFIN	(S*	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	sie	PPER	*	sie	sg	fem	-	(377)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	–	CARD	*	–	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Man	PIS	*	man	sg	*	-	(0)|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	kömmt	VVFIN	*)	kömmen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ruhig	ADJD	(VROOT(PSEUDO(S*	ruhig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	alter	ADJA	(AP(NP*	alt	pl	masc	-	(12
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Knabe	NN	*)	knabe	pl	masc	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ruhig	ADJD	*))	ruhig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(NP*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Prinz	NN	*)	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Marinelli	NE	(VROOT(PSEUDO*	marinelli	sg	masc	(PER*)	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Odoardo	NE	(VROOT(PSEUDO(MPN*	odoardo	*	*	-	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Galotti	NE	*)	galotti	sg	*	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ah	XY	(VROOT(PSEUDO*	ah	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mein	PPOSAT	(NP*	mein	sg	masc	-	(12|(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	lieber	ADJA	*	lieber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	rechtschaffner	ADJA	*	rechtschaffn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Galotti	NE	*)	galotti	sg	*	(PER*)	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	–	KON	*	–	sg	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	so	ADV	(S(NP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	etwas	PIS	*)	etwas	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	muß	VMFIN	*	müssen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	auch	ADV	(VP*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	geschehen	VVINF	*	geschehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	wenn	KOUS	(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	Sie	PPER	*	sie	sg	-	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	bei	APPR	(VP(PP*	bei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	mir	PPER	*)	sich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	sehen	VVINF	*)	sehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	soll	VMFIN	*)))	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Um	KOUI	(VROOT(PSEUDO(S(PP*	um	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ein	ART	*	ein	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	geringeres	ADJA	*)	gering	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	tun	VVFIN	*	tun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Sie	PPER	*	sie	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	nicht	PTKNEG	*)	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Doch	KON	(VROOT(PSEUDO(S*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	keine	PIAT	(NP*	kein	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Vorwürfe	NN	*))	vorwurf	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Gnädiger	ADJA	(VROOT(PSEUDO(S(NP*	gnädig	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Herr	NN	*)	herr	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	halte	VVFIN	*	halten	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	allen	PIAT	*	aller	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Fällen	NN	*)	fall	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	für	APPR	(PP*	für	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	unanständig	ADJD	(AP*	unanständig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	sich	PRF	(VP*	sich	sg	-	-	(378)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	zu	APPR	(PP*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	seinem	PPOSAT	*	sein	sg	neut	-	(0|(379|(378)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	Fürsten	NN	*)	fürst	sg	neut	-	0)|379)
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	drängen	VVINF	*)))))	drängen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wen	PWS	(VROOT(PSEUDO(S(NP(S*	wen	pl	-	-	(380)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	er	PPER	*	er	sg	masc	-	(0)|(379)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	kennt	VVFIN	*)	kennen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	den	PDS	*)	der	sg	masc	-	(380)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	wird	VAFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	er	PPER	(VP*	er	sg	masc	-	(0)|(379)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	fodern	VVINF	*	fodern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	lassen	VVINF	*	lassen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	wenn	KOUS	(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	er	PPER	(NP(AP*	er	sg	masc	-	(0)|(379)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	seiner	PPOSAT	*))	sein	sg	fem	-	(380)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	bedarf	VVFIN	*)))	bedürfen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Selbst	ADV	(VROOT(PSEUDO*	selbst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	itzt	ADJD	(PP*	itzen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	bitte	ADV	(NP*	bitte	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	*)	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	um	APPR	(PP*	um	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Verzeihung	NN	*))	verzeihung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	–	XY	*))	–	sg	fem	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wie	PWAV	*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	manchem	PIAT	*	mancher	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	andern	VVINF	*	andern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	wollte	VMFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	diese	PDAT	*	dieser	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	stolze	ADJA	*	stolz	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Bescheidenheit	NN	*	bescheidenheit	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	wünschen	VVINF	*	wünschen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Doch	KON	(S*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	zur	APPRART	(PP*	zu	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Sache	NN	*))	sache	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(S*	sie	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	werden	VAFIN	*	werden	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	begierig	ADJD	(VP*	begierig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sein	VAINF	*)	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Ihre	PPOSAT	(VP(NP*	ihr	pl	masc	-	(8|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Tochter	NN	*)	tochter	pl	masc	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	sehen	VVINF	*)))	sehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(S*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	neuer	ADJA	*	neu	pl	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Unruhe	NN	*)	unruhe	pl	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	wegen	APPR	(PP*	wegen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	der	ART	*	der	pl	fem	-	(381
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	plötzlichen	ADJA	*	plötzlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Entfernung	NN	*	entfernung	sg	fem	-	381)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	einer	ART	(NP*	ein	sg	fem	-	(53
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	so	ADV	(AP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	zärtlichen	ADJA	*)	zärtlich	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Mutter	NN	*)))	mutter	pl	masc	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Wozu	NE	*	wozu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	auch	ADV	(NP(AP*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	diese	PDAT	*)	dieser	sg	fem	-	(381
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Entfernung	NN	*)	entfernung	sg	fem	-	381)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wartete	VVFIN	*	warten	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	nur	ADV	*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	die	ART	(NP*	der	sg	fem	-	(8
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	liebenswürdige	ADJA	*	liebenswürdig	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Emilie	NN	*)	emilie	sg	fem	(PER*)	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	sich	PRF	(VP*	sich	sg	-	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	völlig	ADJD	*	völlig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	erholet	VVPP	*)	erholeen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	hätte	VAFIN	*)	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	um	KOUI	(VP*	um	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	beide	PIS	(NP*	beide	pl	*	-	(53)|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	im	APPRART	(PP*	in	sg	neut	-	(382
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	Triumphe	NN	*	triumph	sg	neut	-	382)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	nach	APPR	(PP*	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	der	ART	*	der	sg	fem	-	(26
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	Stadt	NN	*)))	stadt	sg	fem	-	26)
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	bringen	VVINF	*)))	bringen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(CS(S*	sie	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	haben	VAFIN	*	haben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mir	PPER	(VP*	sich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	diesen	PDAT	(NP*	dieser	sg	masc	-	(382
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Triumph	NN	*)	triumph	sg	masc	-	382)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	um	APPR	(PP*	um	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	die	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Hälfte	NN	*)	hälfte	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	verkümmert	VVPP	*))	verkümmern	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	aber	KON	*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	ganz	ADV	(S*	ganz	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	werde	VAFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	mir	PRF	(VP*	sich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	ihn	PPER	(VP*	ihn	sg	masc	-	(382)
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	nehmen	VVINF	*)	nehmen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	lassen	VVINF	*)))	lassen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Zu	APPR	(VROOT(PSEUDO(PP*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	viel	PIAT	(NP*	viel	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Gnade	NN	*))	gnade	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Erlauben	VVFIN	*	erlauben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	(VP(NP*	sie	pl	*	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Prinz	NN	(CNP(NP*	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ich	PPER	*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	meinem	PPOSAT	(NP*	mein	sg	masc	-	(8|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	unglücklichen	ADJA	*	unglücklich	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Kinde	NN	*)	kind	sg	-	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	alle	PIS	*	alle	pl	*	-	(383
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	die	ART	(NP*	der	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	mannichfaltigen	ADJA	*	mannichfaltig	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Kränkungen	NN	*)	kränkung	pl	fem	-	383)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	erspare	VVFIN	*))	ersparen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	die	ART	(NP*	der	pl	*	-	(383)
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	Freund	NN	*)	freund	-	-	-	(384)
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	Feind	NN	(NP(CNP*	feind	-	-	-	(385)
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	Mitleid	NN	*	mitleid	-	-	-	(386)
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	Schadenfreude	NN	*)	schadenfreude	-	-	-	(387)
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	Guastalla	NE	*)	guastalla	sg	fem	(LOC*)	(99)
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	für	APPR	(PP*	für	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	28	sie	PPER	*))))	sie	pl	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	29	bereit	ADJD	*	bereit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	30	halten	VVINF	*)	halten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	31	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Um	KOUI	(VROOT(PSEUDO(S(PP*	um	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	die	ART	*	der	pl	fem	-	(383
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	süßen	ADJA	*	süß	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Kränkungen	NN	*	kränkung	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	des	ART	(CNP(NP*	der	sg	masc	-	(384
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Freundes	NN	*)	freund	sg	masc	-	384)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	des	ART	(NP*	der	sg	masc	-	(386
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Mitleids	NN	*)))	mitleid	sg	masc	-	383)|386)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	würde	VAFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	es	PPER	(VP*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Grausamkeit	NN	*	grausamkeit	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	sein	VAINF	*)	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	sie	PPER	(VP*	sie	pl	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	bringen	VVINF	*)))	bringen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Daß	KOUS	(VROOT(PSEUDO(S(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	aber	ADV	*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	die	ART	(NP*	der	pl	fem	-	(383
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Kränkungen	NN	*	kränkung	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	des	ART	(CNP(NP*	der	sg	masc	-	(385
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Feindes	NN	*)	feind	sg	masc	-	385)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	der	ART	(NP*	der	sg	masc	-	(387
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Schadenfreude	NN	*)))	schadenfreude	sg	fem	-	383)|387)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	sie	PPER	(VP*	sie	*	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	erreichen	VVINF	*)	erreichen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	sollen	VMFIN	*)	sollen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	dafür	PROAV	(S*	dafür	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	lieber	ADV	*	lieber	-	-	-	(12
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	Galotti	NE	*	galotti	sg	*	(PER*)	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	lassen	VVFIN	*	lassen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	Sie	PPER	*	sie	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	mich	PPER	(VP*	mich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	sorgen	VVINF	*)))	sorgen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Prinz	NN	(VROOT(PSEUDO(S(CNP*	prinz	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	die	ART	(NP*	der	sg	fem	-	(388
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	väterliche	ADJA	*	väterlich	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Liebe	NN	*))	liebe	sg	fem	-	388)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	teilet	VVFIN	*	teilen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ihre	PPOSAT	(NP*	ihr	pl	masc	-	(388)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Sorgen	NN	*)	sorge	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	gern	ADV	*)	gern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ich	PPER	(S*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	denke	VVFIN	*	denken	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ich	PPER	(S*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	weiß	VVFIN	*	weißn	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	was	PWS	(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	meiner	PPOSAT	(NP*	mein	pl	masc	-	(8|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Tochter	NN	*)	tochter	pl	masc	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	ihren	PPOSAT	*	ihr	sg	masc	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	itzigen	ADJA	*	itzig	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Umständen	NN	*)	umstand	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	einzig	ADJD	*	einzig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	ziemet	VVFIN	*)))	ziemen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Entfernung	NN	(NP*	entfernung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	aus	APPR	(PP*	aus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	der	ART	*	der	sg	fem	-	(149
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Welt	NN	*))	welt	sg	fem	-	149)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	–	$.	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ein	ART	(S(NP*	ein	sg	masc	-	(67
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Kloster	NN	*)	kloster	sg	masc	-	67)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	–	$.	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	sobald	ADV	*	sobald	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	als	APPR	(PP*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	möglich	ADJD	*))	möglich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ein	ART	(VROOT(PSEUDO(NP*	ein	sg	masc	-	(67
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Kloster	NN	*)	kloster	sg	masc	-	67)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Bis	APPR	(VROOT(PSEUDO(S(PP*	bis	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	dahin	PROAV	*)	dahin	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	weine	VVFIN	*	wein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sie	PPER	*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	unter	APPR	(PP*	unter	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	den	ART	*	der	pl	masc	-	(389
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Augen	NN	*	auge	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ihres	PPOSAT	(NP*	ihr	sg	masc	-	(12|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Vaters	NN	*)))	vater	sg	masc	-	389)|12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	So	ADV	(VROOT(PSEUDO(S(NP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	viel	PIAT	*	viel	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Schönheit	NN	*)	schönheit	sg	*	-	(157)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	soll	VMFIN	*	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	in	APPR	(VP(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	einem	ART	*	ein	sg	neut	-	(67
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Kloster	NN	*)	kloster	sg	neut	-	67)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	verblühen	VVINF	*))	verblühen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Darf	VMFIN	*	dürfen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	eine	ART	(NP*	ein	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	einzige	ADJA	*)	einzig	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	fehlgeschlagene	ADJA	(S(NP*	fehlgeschlagen	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Hoffnung	NN	*)	hoffnung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	uns	PPER	(VP*	uns	pl	*	-	(158)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	gegen	APPR	(AP(PP*	gegen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	die	ART	*	der	sg	fem	-	(149
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Welt	NN	*)	welt	sg	fem	-	149)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	unversöhnlich	ADJD	*)	unversöhnlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	machen	VVINF	*))	machen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Doch	KON	(VP(S*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	allerdings	ADV	*	allerdings	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	dem	ART	(NP*	der	sg	masc	-	(12
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Vater	NN	*)	vater	sg	masc	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	hat	VAFIN	*)	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	niemand	PIS	*	niemand	sg	masc	-	(158)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	einzureden	VVIZU	*)	einreden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Bringen	VVFIN	(VROOT(PSEUDO(CS(S*	bringen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*	sie	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Ihre	PPOSAT	(NP*	ihr	pl	masc	-	(8|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Tochter	NN	*	tochter	pl	masc	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Galotti	NE	*))	galotti	pl	masc	(PER*)	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	wohin	PWAV	(S*	wohin	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Sie	PPER	*	sie	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	wollen	VMFIN	*))	wollen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*))	odoardo	-	-	-	(12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	gegen	APPR	(VROOT(PSEUDO(MPN*	gegen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Marinelli	NE	*)	marinelli	sg	*	(PER*)	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nun	ADV	(VROOT(PSEUDO(S*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mein	PPOSAT	(NP*	mein	sg	masc	-	(3|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Herr	NN	*))	herr	sg	masc	-	3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wenn	KOUS	(VROOT(PSEUDO(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*	sie	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mich	PPER	(NP*	mich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	so	ADV	*)	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	gar	ADV	*	gar	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	auffodern	VVINF	*)	auffodern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	O	ITJ	(VROOT(PSEUDO(S*)	O	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	mit	APPR	(S(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	nichten	ADJA	*)	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	nichten	ADJA	*))	nichen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	haben	VAFIN	*	haben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*	sie	pl	*	-	(3|(12
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	beide	PIS	*)	beide	pl	*	-	3)|12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nichts	PIS	*	nichts	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	gnädiger	ADJA	*	gnädig	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Herr	NN	*	herr	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	nichts	PIS	*	nichts	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Wir	PPER	*	wir	pl	*	-	(3)|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	erwägen	VVFIN	*	erwägen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	bloß	PTKVZ	*	bloß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	welcher	PWAT	*	welcher	sg	masc	-	(3)|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	von	APPR	*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	uns	PPER	*	uns	pl	*	-	(3)|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	sich	PRF	*	sich	sg	-	-	(3)|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	in	APPR	*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Ihnen	PPER	*	ihnen	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	geirret	VVPP	*	irren	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	hat	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wie	PWAV	*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Reden	NN	(NP*	reden	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	(NP*	sie	pl	*	-	(3
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Marinelli	NE	*))	marinelli	sg	*	(LOC*)	3)|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Es	PPER	(VROOT(PSEUDO(S*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	geht	VVFIN	*	gehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mir	PPER	*	sich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nahe	PTKVZ	*	nahe	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	der	ART	(VP(NP*	der	sg	masc	-	(286
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Gnade	NN	*	gnade	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	meines	PPOSAT	(NP*	mein	sg	masc	-	(0|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Fürsten	NN	*))	fürst	sg	masc	-	286)|0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	den	ART	*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Weg	NN	*)	weg	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	treten	VVINF	*)))	treten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Doch	KON	(VROOT(PSEUDO(S*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wenn	KOUS	*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	die	ART	(NP*	der	sg	fem	-	(390
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Freundschaft	NN	*)	freundschaft	sg	fem	-	390)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	gebietet	VVFIN	*	gebieten	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	vor	APPR	(VP(PP*	vor	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	allem	PIS	*)	alle	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	ihm	PPER	*)	ihm	sg	neut	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	den	ART	(NP*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Richter	NN	*)	richter	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	aufzufodern	VVIZU	*))	auufodern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	–	$.	*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Welche	PWAT	(VROOT(PSEUDO(NP*	welcher	sg	fem	-	(390
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Freundschaft	NN	*)	freundschaft	sg	fem	-	390)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(S*	sie	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wissen	VVFIN	*	wissen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	gnädiger	ADJA	(NP*	gnädig	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Herr	NN	*)	herr	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	wie	PWAV	(S(AVP*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	sehr	ADV	*)	sehr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	ich	PPER	*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	den	ART	(NP*	der	sg	masc	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Grafen	NN	*	graf	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Appiani	NE	*)	appiani	sg	*	(PER*)	9)|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	liebte	VVFIN	*	lieben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	wie	PWAV	(S*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	sehr	ADV	(NP*	sehr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	unser	PPOSAT	*	unser	-	-	-	(189|(9|(3
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	beider	PIAT	(AP(AP(NP*	beide	pl	fem	-	9)|3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	Seelen	NN	*)	seele	pl	fem	-	189)
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	einander	PRF	*)	einander	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	verwebt	VVPP	*)	verweben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	schienen	ADJA	*)	scheinen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	–	NN	*))))))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Das	PDS	(VROOT(PSEUDO(S*	der	sg	neut	-	(391)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wissen	VVFIN	*	wissen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	(NP*	sie	pl	*	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Prinz	NN	*))	prinz	*	*	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	So	ADV	(VROOT(PSEUDO(S*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wissen	VVFIN	*	wissen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*	sie	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	es	PPER	*	es	sg	neut	-	(391)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	wahrlich	ADV	(AVP*	wahrlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	allein	ADV	*))	allein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Von	APPR	(VROOT(PSEUDO(S(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ihm	PPER	*)	ihm	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	selbst	ADV	(PP*	selbst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	zu	APPR	*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	seinem	PPOSAT	*	sein	sg	masc	-	(3|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Rächer	NN	*))	rächer	sg	masc	-	3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	bestellet	VVFIN	*	bestellen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	–	$.	*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Fragen	VVFIN	(VROOT(PSEUDO(S*	frage	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*	sie	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	nur	ADV	*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Ihre	PPOSAT	(NP*	ihr	*	*	-	(53|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Gemahlin	NN	*))	gemahlin	sg	neut	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Marinelli	NE	(VROOT(PSEUDO(S(NP*	marinelli	sg	masc	(PER*)	(274)|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	der	ART	(S(NP*	der	sg	masc	-	(274
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Name	NN	*	name	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Marinelli	NE	*)	marinelli	sg	masc	(PER*)	274)|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	war	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	das	ART	(NP*	der	sg	neut	-	(276
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	letzte	ADJA	*	letzter	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Wort	NN	*	wort	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	des	ART	(NP*	der	sg	masc	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	sterbenden	ADJA	*	sterbend	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Grafen	NN	*))))	grafe	sg	masc	-	276)|9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	und	KON	(PP*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	in	APPR	*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	einem	ART	*	ein	sg	neut	-	(278
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	Tone	NN	*))	tone	sg	neut	-	278)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	in	APPR	(VROOT(PSEUDO(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	einem	ART	*	ein	sg	neut	-	(278
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Tone	NN	*)	tone	sg	neut	-	278)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	er	PPER	*	er	sg	masc	-	(278)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mir	PPER	*	sich	sg	*	-	(53)|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nie	ADV	*	nie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	aus	APPR	(PP*	aus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	dem	ART	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Gehöre	NN	*)	gehör	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	komme	VVFIN	*)	kommen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	dieser	PDAT	(NP*	dieser	sg	masc	-	(278
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	schreckliche	ADJA	*	schrecklich	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Ton	NN	*	ton	sg	masc	-	278)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	wenn	KOUS	(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	ich	PPER	*	ich	sg	*	-	(53)|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	nicht	PTKNEG	(NP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	alles	PIS	*)	alle	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	anwende	VVFIN	*	anwenden	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	seine	PPOSAT	(NP*	sein	pl	masc	-	(259|(0|(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	Mörder	NN	*)	mörder	pl	masc	-	259)|0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	entdeckt	VVPP	(VP(CVP*	entdecken	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	bestraft	VVPP	*)	bestrafen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	werden	VAINF	*))))	werden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Rechnen	VVFIN	(VROOT(PSEUDO(S*	rechnen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	auf	APPR	(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	meine	PPOSAT	*	mein	sg	fem	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	kräftigste	ADJA	*	kräftig	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Mitwirkung	NN	*))	mitwirkung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	meine	PPOSAT	(NP*	mein	sg	-	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	heißesten	ADJA	*	heiß	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Wünsche	NN	*))	wunsch	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Gut	ADJD	(AP*	gut	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	gut	ADJD	*)	gut	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Aber	KON	*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	was	PWS	*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	weiter	PTKVZ	*	weiter	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Das	PDS	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	frag	VVFIN	*	frag	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Marinelli	NE	*	marinelli	sg	-	(LOC*)	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Man	PIS	(VROOT(PSEUDO(S*	man	sg	*	-	(11)|(12)|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	hat	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Verdacht	NN	(NP*	verdacht	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	nicht	PTKNEG	(VP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Räuber	NN	*	räuber	pl	masc	-	(259)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	gewesen	VAPP	*)	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	welche	PRELS	(S*	welcher	pl	masc	-	(259)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	den	ART	(NP*	der	sg	masc	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Grafen	NN	*)	grafe	sg	masc	-	9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	angefallen	VVPP	*))))	anfallen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*))	odoardo	-	-	-	(12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	höhnisch	ADJD	(VROOT(PSEUDO*	höhnisch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	wirklich	ADJD	*	wirklich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Daß	KOUS	(VROOT(PSEUDO(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ein	ART	(NP*	ein	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Nebenbuhler	NN	*)	nebenbuhler	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ihn	PPER	(VP(VP*	ihn	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	aus	APPR	(PP*	aus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	dem	ART	*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Wege	NN	*)	weg	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	räumen	VVINF	*)	räumen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	lassen	VVINF	*))	lassen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*))	odoardo	-	-	-	(12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	bitter	ADJD	(VROOT(PSEUDO*	bitter	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ei	XY	*	ei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ein	ART	(VROOT(PSEUDO(NP*	ein	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Nebenbuhler	NN	*)	nebenbuhler	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nicht	PTKNEG	(VROOT(PSEUDO(CO(AVP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	anders	ADV	*))	anders	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nun	ADV	*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	dann	ADV	*	dann	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	–	$(	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Gott	NN	*	gott	-	-	(PER*)	(57)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	verdamm	ADJD	*	verdamm	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ihn	PPER	*	ihn	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	den	ART	*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	meuchelmörderschen	ADJA	*	meuchelmördersch	sg	masc	(MISC*)	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Buben	NN	*	bube	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ein	ART	(VROOT(PSEUDO(NP*	ein	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Nebenbuhler	NN	*	nebenbuhler	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*)	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	und	KON	(PP*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ein	ART	*	ein	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	begünstigter	ADJA	*	begünstigt	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Nebenbuhler	NN	*)	nebenbuhler	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	–	XY	*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Was	PWS	*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ein	ART	(VROOT(PSEUDO(NP*	ein	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	begünstigter	ADJA	*)	begünstigt	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Was	PWS	(S*	was	sg	neut	-	(392)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sagen	VVFIN	*	sagen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Sie	PPER	*)	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nichts	PIS	*	nichts	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	als	KOKOM	*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	was	PWS	*	was	sg	neut	-	(392)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	das	ART	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Gerüchte	NN	*	gerücht	pl	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	verbreitet	VVFIN	*	verbreiten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ein	ART	(VROOT(PSEUDO(NP*	ein	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	begünstigter	ADJA	*)	begünstigt	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	von	APPR	(VROOT(PSEUDO(S(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	meiner	PPOSAT	*	mein	sg	fem	-	(8|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Tochter	NN	*)	tochter	sg	fem	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	begünstiget	VVFIN	*)	begünstigen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Das	PDS	(VROOT(PSEUDO(S*	der	sg	neut	-	(393)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	gewiß	ADV	*	gewiß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*)	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Das	PDS	*	der	sg	neut	-	(393)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	kann	VMFIN	*	können	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sein	VAINF	*	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Dem	ART	*	der	sg	neut	-	(393)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	widersprech	NN	*	widersprech	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	trotz	APPR	*	trotz	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Ihnen	PPER	*	ihnen	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Aber	KON	(S*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	bei	APPR	(PP*	bei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	dem	ART	*	der	sg	neut	-	(394
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	allen	PIS	*)	aller	sg	neut	-	394)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	gnädiger	ADJA	(NP*	gnädig	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Herr	NN	*)	herr	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	–	$.	*	–	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Denn	KON	(S*	denn	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	das	ART	(NP*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	gegründetste	ADJA	*	gegründetst	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Vorurteil	NN	*)	vorurteil	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	wieget	VVFIN	*	wieget	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	auf	APPR	(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	der	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	Waage	NN	*	waage	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	der	ART	(NP*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	Gerechtigkeit	NN	*	gerechtigkeit	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	so	ADV	(NP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	viel	PIS	*)))))	viel	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	als	KOKOM	(NP*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	nichts	PIS	*	nichts	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	–	KOKOM	(S(PP*	–	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	bei	APPR	*	bei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	dem	ART	*	der	sg	neut	-	(394
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	allen	PIS	*)	aller	sg	neut	-	394)
Emilia.xml.rksp.0.CoNLL2012.conll	000	28	wird	VAFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	29	man	PIS	*	man	sg	*	-	(3)|(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	30	doch	ADV	*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	31	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	32	umhin	VVINF	*	umhin	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	33	können	VMFIN	*)	können	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	34	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	35	die	ART	(VP(NP*	der	sg	fem	-	(8
Emilia.xml.rksp.0.CoNLL2012.conll	000	36	schöne	ADJA	*	schön	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	37	Unglückliche	NN	*)	unglücklich	pl	masc	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	38	darüber	PROAV	*	darüber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	39	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	40	vernehmen	VVINF	*)))	vernehmen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	41	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ja	PTKANT	(VROOT(PSEUDO(S*	ja	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wohl	ADV	*	wohl	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	allerdings	ADV	*)	allerdings	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wo	PWAV	*	wo	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	anders	ADV	*	anders	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	wo	PWAV	(VROOT(PSEUDO(S*	wo	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	kann	VMFIN	*	können	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	das	PDS	(VP*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	anders	ADV	*	anders	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	geschehen	VVINF	*)	geschehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	als	KOKOM	(PP*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	in	APPR	*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Guastalla	NE	*))	guastalla	sg	neut	(LOC*)	(99)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Da	ADV	(VROOT(PSEUDO(CS(S*	da	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	haben	VAFIN	*	haben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Recht	NN	*)	recht	sg	neut	-	(395)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Marinelli	NE	(S*	marinelli	sg	masc	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	da	ADV	(S*	da	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	haben	VAFIN	*	haben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Recht	NN	*)))	recht	sg	neut	-	(395)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ja	PTKANT	(S*	ja	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	das	PDS	(AVP(S*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	verändert	VVFIN	*	verändern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	die	ART	(NP*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Sache	NN	*))	sache	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	lieber	ADV	*)	lieber	-	-	-	(12
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Galotti	NE	*)	galotti	sg	*	(PER*)	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wahr	PTKVZ	*	wahr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	*	sie	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sehen	VVFIN	*	sehen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	selbst	ADV	*	selbst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	–	XY	*	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	O	ITJ	(VROOT(PSEUDO(S*	O	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ja	ADV	*	ja	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	(S*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	sehe	VVFIN	*))	sehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	–	XY	*	–	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Ich	PPER	(S*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	sehe	VVFIN	*	sehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	was	PWS	(S*	was	sg	neut	-	(396)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	ich	PPER	*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	sehe	VVFIN	*))	sehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Gott	NN	*	gott	-	-	-	(57)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Gott	NN	(VROOT(PSEUDO*	gott	-	-	-	(57)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Was	PWS	*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Ihnen	PPER	*	ihnen	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	was	PIS	(VROOT(PSEUDO(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	haben	VAFIN	*	haben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*	sie	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	sich	PRF	*))	sich	pl	-	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Daß	KOUS	(VROOT(PSEUDO(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ich	PPER	*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	es	PPER	*	es	sg	neut	-	(396)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	vorausgesehen	VVPP	*	voraussehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	was	PWS	(S*	was	sg	neut	-	(396)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ich	PPER	*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	da	ADV	*	da	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	sehe	VVFIN	*))	sehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Das	PDS	(VROOT(PSEUDO(S*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ärgert	VVFIN	*	ärgern	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mich	PPER	*	mich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	weiter	ADV	(NP*	weiter	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	nichts	PIS	*))	nichts	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Nun	ADV	(S*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ja	ADV	*)	ja	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	sie	PPER	(S*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	soll	VMFIN	*	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	wieder	ADV	(PP*	wieder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	nach	APPR	*	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Guastalla	NE	*))	guastalla	sg	neut	(PER*)	(99)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(CS(S*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	will	VMFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sie	PPER	(VP*	sie	pl	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	wieder	ADV	*	wieder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	zu	APPR	(PP*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ihrer	PPOSAT	*	ihr	sg	fem	-	(53|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Mutter	NN	*)	mutter	sg	fem	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	bringen	VVINF	*))	bringen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	bis	KOUS	(S*	bis	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	die	ART	(NP*	der	sg	fem	-	(397
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	strengste	ADJA	*	streng	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Untersuchung	NN	*)	untersuchung	sg	fem	-	397)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	sie	PPER	*	sie	-	-	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	frei	ADJD	(VP*	frei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	gesprochen	VVPP	*)	sprechen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	will	VMFIN	(S*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	ich	PPER	*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	selbst	ADV	(PP*	selbst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	aus	APPR	*	aus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	Guastalla	NE	*)	guastalla	sg	fem	(PER*)	(99)
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	weichen	VVINF	*)))	weichen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Denn	KON	(VROOT(PSEUDO(S*	denn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wer	PWS	*	wer	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	weiß	VVFIN	*	weiß	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	–	CARD	(CPP*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	einem	ART	*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	bittern	ADV	(NP*	bittern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Lachen	NN	*))))	lachen	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	wer	PWS	(VROOT(PSEUDO(S(S*	wer	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	weiß	VVFIN	*)	weiß	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ob	KOUS	(S*	ob	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	die	ART	(NP*	der	sg	fem	-	(398
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Gerechtigkeit	NN	*)	gerechtigkeit	sg	fem	-	398)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	nicht	PTKNEG	(AP(AVP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	auch	ADV	*)	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	nötig	ADJD	*)	nötig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	findet	VVFIN	*	finden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	mich	PPER	(VP*	mich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	vernehmen	VVINF	*))))	vernehmen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sehr	ADV	(VROOT(PSEUDO(S(ISU*	sehr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	möglich	ADJD	*))	möglich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	In	APPR	(VROOT(PSEUDO(CS(S(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	solchen	PIAT	*	solcher	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Fällen	NN	*)	fall	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	tut	VVFIN	*	tun	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	die	ART	(NP*	der	sg	fem	-	(398
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Gerechtigkeit	NN	*)	gerechtigkeit	sg	fem	-	398)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	lieber	ADV	*	lieber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	zu	PTKA	(AP*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	viel	PIS	*))	viel	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	als	KOKOM	(AP*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	zu	PTKA	*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	wenig	PIS	*))	wenig	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Daher	PROAV	*	daher	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	fürchte	VVFIN	*	fürchen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	sogar	ADV	*	sogar	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	–	XY	*	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Was	PWS	*	was	sg	neut	-	(399)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	was	PIS	(VROOT(PSEUDO(S*	was	sg	neut	-	(399)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	fürchten	VVFIN	*	fürchten	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*)	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Man	PIS	(VROOT(PSEUDO(S*	man	sg	*	-	(17)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	werde	VAFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	vor	APPR	(VP(PP*	vor	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	der	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Hand	NN	*)	hand	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	verstatten	VVINF	*	verstatten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	können	VMINF	*	können	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Mutter	NN	(CNP*	mutter	sg	fem	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Tochter	NN	*)	tochter	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	sich	PRF	(VP*	sich	sg	-	-	(53)|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	sprechen	VVINF	*))))	sprechen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sich	PRF	(VROOT(PSEUDO(VP*	sich	sg	-	-	(53)|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sprechen	VVINF	*)	sprechen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Man	PIS	(VROOT(PSEUDO(S*	man	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	werde	VAFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	genötiget	VVPP	(VP*	genötiget	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sein	VAINF	*	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Mutter	NN	(VP(CNP*	mutter	pl	neut	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Tochter	NN	*)	tochter	pl	neut	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	trennen	VVINF	*))))	trennen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Mutter	NN	(VROOT(PSEUDO(VP(CNP*	mutter	sg	fem	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Tochter	NN	*)	tochter	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	trennen	VVINF	*))	trennen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Mutter	NN	(VROOT(PSEUDO(CNP*	mutter	sg	fem	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Tochter	NN	*	tochter	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Vater	NN	*)	vater	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Die	ART	(VROOT(PSEUDO(S(NP*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Form	NN	*	form	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	des	ART	(NP*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Verhörs	NN	*))	verhör	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	erfodert	VVFIN	*	erfodern	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	diese	PDAT	(NP*	dieser	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Vorsichtigkeit	NN	*)	vorsichtigkeit	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	schlechterdings	ADJD	*)	schlechterdings	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	tut	VVFIN	*	tun	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mir	PPER	*	sich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	leid	ADJD	*	leid	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	gnädiger	ADJA	(VP(NP*	gnädig	sg	masc	-	(12
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Herr	NN	*	herr	sg	masc	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	ich	PPER	*	ich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	mich	PPER	(VP*	mich	sg	-	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	gezwungen	VVPP	*)	zwingen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	sehe	VVFIN	*))	sehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	ausdrücklich	ADJD	(AP*	ausdrücklich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	darauf	PROAV	*)	darauf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	anzutragen	VVIZU	*	antragen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	wenigstens	ADV	(VP(NP*	wenigstens	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	Emilien	NE	*)	emilien	pl	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	eine	ART	*	ein	sg	fem	-	(400
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	besondere	ADJA	*	besonderer	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	Verwahrung	NN	*)	verwahrung	sg	fem	-	400)
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	bringen	VVINF	*))))	bringen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Besondere	ADJA	(VROOT(PSEUDO(NP*	besonderer	sg	fem	-	(400
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Verwahrung	NN	*)	verwahrung	sg	fem	-	400)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Prinz	NN	*	prinz	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Prinz	NN	(VROOT(PSEUDO*	prinz	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Doch	KON	(S*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ja	ADV	*	ja	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	freilich	ADV	(S*))	freilich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	freilich	ADV	*	freilich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ganz	ADV	(VROOT(PSEUDO(NP*	ganz	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	recht	NN	*	recht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	eine	ART	*	ein	sg	fem	-	(400
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	besondere	ADJA	*	besonderer	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Verwahrung	NN	*))	verwahrung	sg	fem	-	400)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nicht	PTKNEG	(VROOT(PSEUDO(NP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Prinz	NN	*)	prinz	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	O	ITJ	(S*)	O	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wie	KOKOM	(S(AP*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	fein	ADJD	*)	fein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	die	ART	(NP*	der	sg	fem	-	(398
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Gerechtigkeit	NN	*)	gerechtigkeit	sg	fem	-	398)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ist	VAFIN	*)	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Vortrefflich	ADJD	(VROOT(PSEUDO*	vortrefflich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Fährt	NN	(VROOT(PSEUDO(S*	fährt	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	schnell	ADJD	*	schnell	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	nach	APPR	(PP*	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	dem	ART	*	der	sg	neut	-	(401
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Schubsacke	NN	*	schubsacke	sg	neut	-	401)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	in	APPR	(S(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	welchem	PRELS	*)	welcher	sg	neut	-	(401)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	er	PPER	*	er	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	den	ART	(NP*	der	sg	masc	-	(356
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Dolch	NN	*)	dolch	sg	masc	-	356)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	hat	VAFIN	*)))	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)))	prinz	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	schmeichelhaft	ADJD	(VROOT(PSEUDO(AP*	schmeichelhaft	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	auf	APPR	(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ihn	PPER	*)	ihn	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	zutretend	ADJD	*)	zutretend	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Fassen	VVFIN	(VROOT(PSEUDO(S*	fassen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*	sie	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sich	PRF	*	sich	pl	-	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	lieber	ADV	*	lieber	-	-	-	(12
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Galotti	NE	(NP*	galotti	sg	*	(PER*)	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	–	NE	*))))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*))	odoardo	-	-	-	(12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	bei	APPR	(VROOT(PSEUDO(S(PP*	bei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Seite	NN	*)	seite	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	indem	KOUS	*	indem	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	er	PPER	*	er	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	die	ART	(NP*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Hand	NN	*)	hand	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	leer	ADJD	*	leer	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	wieder	ADV	*	wieder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	heraus	ADV	*	heraus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	zieht	VVFIN	*)	ziehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Das	PDS	(VROOT(PSEUDO(S*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sprach	VVFIN	*	sprechen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sein	PPOSAT	(NP*	sein	-	-	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Engel	NN	*))	engel	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(CS(S*	sie	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sind	VAFIN	*	sein	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	irrig	ADJD	*)	irrig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Sie	PPER	(S*	sie	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	verstehen	VVFIN	*	verstehen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ihn	PPER	*	ihn	sg	masc	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	nicht	PTKNEG	*))	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(CS(S*	sie	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	denken	VVFIN	*	denken	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	bei	APPR	(PP*	bei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	dem	ART	*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Worte	NN	*	wort	pl	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Verwahrung	NN	*))	verwahrung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	wohl	ADV	(S*	wohl	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	gar	ADV	*	gar	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	an	APPR	(PP*	an	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Gefängnis	NN	(CNP*	gefängnis	sg	neut	-	(402)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Kerker	NN	*))))	kerker	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Lassen	VVFIN	(VROOT(PSEUDO(S*	lassen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*	sie	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mich	PPER	*	mich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	daran	PROAV	*	daran	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	denken	VVFIN	*	denken	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	und	KON	(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ich	PPER	*	ich	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	bin	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	ruhig	ADJD	*))	ruhig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Kein	PIAT	(VROOT(PSEUDO(NP*	kein	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Wort	NN	*	wort	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	von	APPR	(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Gefängnis	NN	*)	gefängnis	sg	neut	-	(402)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Marinelli	NE	*)	marinelli	sg	neut	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Hier	ADV	(VROOT(PSEUDO(S*	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	die	ART	(NP*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Strenge	NN	*	strenge	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	der	ART	(NP*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Gesetze	NN	*))	gesetz	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	mit	APPR	(VP(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	der	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Achtung	NN	*	achtung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	gegen	APPR	(PP*	gegen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	unbescholtene	ADJA	*	unbescholten	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Tugend	NN	*))	tugend	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	leicht	ADJD	*	leicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	vereinigen	VVINF	*)))	vereinigen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wenn	KOUS	(VROOT(PSEUDO(S(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Emilia	NE	*	emilia	-	-	(PER*)	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	in	APPR	(VP(VP(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	besondere	ADJA	*	besonderer	sg	fem	-	(400
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Verwahrung	NN	*)	verwahrung	sg	fem	-	400)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	gebracht	VVPP	*)	bringen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	werden	VAINF	*)	werden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	muß	VMFIN	*)	müssen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	so	ADV	(S*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	weiß	VVFIN	*	weiß	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	schon	ADV	(AP*	schon	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	–	ADJD	*)	–	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	die	ART	(NP*	der	sg	fem	-	(400
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	alleranständigste	NN	*)))	alleranständig	sg	fem	-	400)
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Das	ART	(VROOT(PSEUDO(NP*	der	sg	neut	-	(403
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Haus	NN	*	haus	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	meines	PPOSAT	(NP*	mein	sg	masc	-	(156|(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Kanzlers	NN	*	kanzler	sg	masc	-	403)|156)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	–	CARD	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Keinen	NN	(MPN*	kein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Widerspruch	NN	*)	widerspruch	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Marinelli	NE	*))	marinelli	sg	masc	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Da	ADV	(NP(S*	da	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	will	VMFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	sie	PPER	*	sie	pl	masc	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	selbst	ADV	(VP*	selbst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	hinbringen	VVINF	*))	hinbringen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	da	ADV	(S*	da	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	will	VMFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	sie	PPER	*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	der	ART	(VP(NP*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Aufsicht	NN	*	aufsicht	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	einer	PIS	(NP*	einer	sg	fem	-	(404
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	der	ART	(NP*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	würdigsten	ADJA	*	würdig	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	Damen	NN	*)))	dame	pl	fem	-	404)
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	übergeben	VVINF	*)))	übergeben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Die	PDS	(VROOT(PSEUDO(S*	der	sg	fem	-	(404)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	soll	VMFIN	*	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mir	PPER	(CVP(VP*	sich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	für	APPR	(PP*	für	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	sie	PPER	*)	sie	pl	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	bürgen	VVINF	*)	bürgen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	haften	VVINF	*))	haften	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	(S*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	gehen	VVFIN	*	gehen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	zu	PTKA	(AP*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	weit	ADJD	*))	weit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Marinelli	NE	(NP*	marinelli	sg	masc	(LOC*)	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	wirklich	ADJD	(VP(AP*	wirklich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	zu	PTKA	*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	weit	ADJD	*)	weit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	wenn	KOUS	(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	mehr	PIS	*	mehr	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	verlangen	VVFIN	*)))	verlangen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	(S*	sie	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	kennen	VVFIN	*	kennen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	doch	ADV	*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Galotti	NE	(S*	galotti	sg	*	(PER*)	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	meinen	VVFIN	*	mein	pl	-	-	(156
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Kanzler	NN	(NP*	kanzler	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Grimaldi	NE	*)))	grimaldi	*	*	(PER*)	156)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	seine	PPOSAT	(NP*	sein	pl	neut	-	(405|(156)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Gemahlin	NN	*)	gemahlin	pl	neut	-	405)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Was	PWS	*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sollt	VMFIN	*	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sogar	ADV	*	sogar	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	die	ART	*	der	pl	*	-	(406
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	liebenswürdigen	ADJA	*	liebenswürdig	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Töchter	NN	*	tochter	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	dieses	PDAT	*	dieser	sg	neut	-	(156|(405
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	edeln	FM	*	edeln	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Paares	FM	*	paare	-	-	-	406)|156)|405)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	kenn	FM	*	kenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	ich	PPER	*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wer	PWS	(VROOT(PSEUDO(S*	wer	sg	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	kennt	VVFIN	*	kennen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sie	PPER	*	sie	*	*	-	(405)|(156)|(406)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*)	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Zu	APPR	(MPN*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Marinelli	NE	*)	marinelli	-	-	(LOC*)	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nein	PTKANT	(VROOT(PSEUDO(S*	nein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mein	PPOSAT	(NP*	mein	sg	masc	-	(3|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Herr	NN	*)	herr	sg	masc	-	3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	geben	VVFIN	*	geben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	das	PDS	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	zu	PTKVZ	*)	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wenn	KOUS	(VROOT(PSEUDO(S(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Emilia	NE	*	emilia	pl	-	(PER*)	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	verwahret	VVPP	(VP*	verwahren	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	werden	VAINF	*)	werden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	muß	VMFIN	*)	müssen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	so	ADV	(S*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	müsse	VMFIN	*	müssen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	sie	PPER	*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	in	APPR	(VP(VP(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	dem	ART	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	tiefsten	ADJA	*	tief	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Kerker	NN	*)	kerker	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	verwahret	VVPP	*)	verwahren	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	werden	VAINF	*)))	werden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Dringen	VVFIN	(VROOT(PSEUDO(S*	dringen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*	sie	pl	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	darauf	PROAV	*	darauf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ich	PPER	*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	bitte	ADV	(NP*	bitte	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Sie	PPER	*))	sie	sg	-	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ich	PPER	(NP*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Tor	NN	*	tor	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*)	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	mit	APPR	*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	meiner	PPOSAT	(NP*	mein	sg	fem	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Bitte	NN	*)	bitte	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ich	PPER	(VROOT(PSEUDO(S(NP(AP*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	alter	ADJA	*)	alt	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Geck	NN	*))	geck	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ja	XY	*	ja	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wohl	ADV	(S*	wohl	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	hat	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	sie	PPER	*	sie	sg	fem	-	(407)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Recht	NN	(NP*	recht	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	die	ART	(NP*	der	sg	fem	-	(407
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	gute	ADJA	*	gut	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Sibylle	NN	*)))	sibylle	sg	fem	(PER*)	407)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Wer	PWS	(S*	wer	sg	masc	-	(346)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	über	APPR	(VP(PP*	über	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	gewisse	ADJA	*	gewiß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Dinge	NN	*)	ding	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	seinen	PPOSAT	(NP*	sein	sg	masc	-	(348|(346)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	Verstand	NN	*)	verstand	sg	masc	-	348)
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	verlieret	VVPP	*)	verlieren	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	der	PDS	(S*	der	sg	masc	-	(346)
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	hat	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	keinen	PIS	(VP*	kein	sg	masc	-	(348)
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	verlieren	VVINF	*))))	verlieren	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	verstehe	VVFIN	*	verstehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*	sie	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*)	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Lieber	NN	*	lieb	-	-	-	(12
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Galotti	NE	(NP*	galotti	-	-	(PER*)	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	was	PWS	(VP(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	kann	VMFIN	*)	können	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ich	PPER	(NP*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	mehr	ADV	*)	mehr	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	tun	VVINF	*))	tun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Lassen	VVFIN	*	lassen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*	sie	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	es	PPER	(S*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	dabei	PROAV	*	dabei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	bitte	ADV	(NP*	bitte	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Sie	PPER	*))	sie	sg	-	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ja	PTKANT	*	ja	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ja	PTKANT	*	ja	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	in	APPR	*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	das	ART	*	der	sg	neut	-	(403
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Haus	NN	*	haus	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	meines	PPOSAT	*	mein	sg	masc	-	(156|(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Kanzlers	NN	*	kanzler	sg	masc	-	403)|156)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	da	ADV	*	da	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	soll	VMFIN	*	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sie	PPER	*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	hin	PTKVZ	*	hin	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	da	ADV	*	da	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	bring	VVFIN	*	bring	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	sie	PPER	*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	selbst	ADV	*	selbst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	hin	PTKVZ	*	hin	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	wenn	KOUS	*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	ihr	PPER	*	ihr	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	da	ADV	*	da	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	mit	APPR	*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	der	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	äußersten	ADJA	*	äußerer	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	Achtung	NN	*	achtung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	begegnet	VVPP	*	begegnen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	wird	VAFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	hat	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	mein	PPOSAT	*	mein	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	28	Wort	NN	*	wort	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	29	nichts	PIS	*	nichts	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	30	gegolten	VVPP	*	gelten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	31	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Aber	KON	(VROOT(PSEUDO(S*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sorgen	VVFIN	*	sorgen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*	sie	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*)	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Dabei	PROAV	(S*	dabei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	bleibt	VVFIN	*	bleiben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	es	PPER	*)	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	dabei	PROAV	(VROOT(PSEUDO(S*	dabei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	bleibt	VVFIN	*	bleiben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	es	PPER	*)	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	(NP*	sie	sg	fem	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	selbst	ADV	*	selbst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Galotti	NE	*	galotti	sg	*	(PER*)	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	sich	PRF	*)	sich	sg	-	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	können	VMFIN	(S*	können	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	halten	VVINF	(VP*	halten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	wie	KOKOM	(NP*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Sie	PPER	*))	sie	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	wollen	VMFIN	*))	wollen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(S*	sie	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	können	VMFIN	*	können	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	uns	PPER	*	uns	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nach	APPR	(VP(PP*	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Guastalla	NE	*)	guastalla	sg	fem	(PER*)	(99)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	folgen	VVINF	*)	folgen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Sie	PPER	(S*	sie	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	können	VMFIN	*	können	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	nach	APPR	(VP(PP*	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Sabionetta	NE	*)	sabionetta	-	-	(LOC*)	(56)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	zurückkehren	VVINF	*	zurückkehren	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	wie	KOKOM	(NP*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Sie	PPER	*))	sie	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	wollen	VMFIN	*))	wollen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Es	PPER	(VROOT(PSEUDO(S*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wäre	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	lächerlich	ADJD	*	lächerlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Ihnen	PPER	(VP*	ihnen	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	vorzuschreiben	VVIZU	*))	vorschreiben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Und	KON	(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	nun	ADV	*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	auf	APPR	(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Wiedersehen	NN	*)	wiedersehen	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*)	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	lieber	ADV	*	lieber	-	-	-	(12
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Galotti	NE	*	galotti	pl	-	(PER*)	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Kommen	VVFIN	(S*	kommen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*)	sie	pl	*	-	(3
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Marinelli	NE	*	marinelli	sg	*	(PER*)	3)|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	es	PPER	(S*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	wird	VAFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	spät	ADJD	*)	spät	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*))	odoardo	-	-	-	(12|(12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	der	ART	(VROOT(PSEUDO(S(NP(CAP*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	in	APPR	*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	tiefen	ADJA	*)	tief	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Gedanken	NN	*)	gedanke	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	gestanden	VVPP	*)))	gestehen	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wie	PWAV	(VROOT(PSEUDO*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	so	ADV	(VROOT(PSEUDO(S*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	soll	VMFIN	*	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sie	PPER	(VP*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	gar	ADV	(AVP*	gar	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	nicht	PTKNEG	*)	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	sprechen	VVINF	*))	sprechen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	meine	PPOSAT	(NP*	mein	pl	*	-	(8|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Tochter	NN	*)	tochter	pl	*	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Auch	ADV	(VROOT(PSEUDO(S*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	hier	ADV	*	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	nicht	PTKNEG	*)	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ich	PPER	(S*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	lasse	VVFIN	*	lassen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mir	PPER	*	sich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ja	ADV	*	ja	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	alles	PIS	*)	alle	sg	neut	-	(408)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	gefallen	VVPP	(S*	fallen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	ich	PPER	*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	finde	VVFIN	*	finden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	ja	ADV	*	ja	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	alles	PIS	*	alle	sg	neut	-	(408)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	ganz	ADV	(AP*	ganz	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	vortrefflich	ADJD	*))	vortrefflich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Das	ART	(VROOT(PSEUDO(S(NP*	der	sg	neut	-	(403
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Haus	NN	*	haus	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	eines	ART	(NP*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Kanzlers	NN	*))	kanzler	sg	masc	-	403)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	natürlicher	ADJA	(NP*	natürlich	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Weise	NN	*	weise	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	eine	ART	(NP*	ein	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Freistatt	NN	*	freistatt	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	der	ART	(NP*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Tugend	NN	*))))	tugend	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	O	ITJ	(VROOT(PSEUDO(CS(S*	O	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	gnädiger	ADJA	(NP*	gnädig	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Herr	NN	*)	herr	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	bringen	VVFIN	*	bringen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Sie	PPER	*	sie	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ja	ADV	*	ja	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	meine	PPOSAT	(NP*	mein	sg	fem	-	(8|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Tochter	NN	*)	tochter	sg	fem	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	dahin	PTKVZ	*)	dahin	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	nirgends	ADV	(S*	nirgends	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	anders	ADV	*	anders	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	als	KOKOM	(AVP*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	dahin	PROAV	*)))	dahin	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Aber	KON	*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sprechen	VVINF	*	sprechen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	wollt	VMFIN	*	wollen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ich	PPER	*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	sie	PPER	*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	doch	ADV	*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	gern	ADV	*	gern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	vorher	ADV	*	vorher	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(S(NP*	der	sg	masc	-	(251
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Tod	NN	*	tod	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	des	ART	(NP*	der	sg	masc	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Grafen	NN	*))	grafe	sg	masc	-	251)|9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ihr	PPER	(AP*	ihr	sg	masc	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	noch	ADV	*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	unbekannt	ADJD	*))	unbekannt	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(S*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wird	VAFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	nicht	PTKNEG	(VP(VP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	begreifen	VVINF	*)	begreifen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	können	VMINF	*	können	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	warum	PWAV	(S*	warum	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	man	PIS	*	man	sg	*	-	(3)|(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	sie	PPER	*	sie	*	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	von	APPR	(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	ihren	PPOSAT	*	ihr	pl	masc	-	(53|(12|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Eltern	NN	*)	eltern	pl	masc	-	53)|12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	trennet	VVFIN	*)))	trennen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ihr	PPER	(VROOT(PSEUDO(S(VP(NP*	ihr	pl	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	jenen	PDS	(NP*	jener	pl	-	-	(251)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	auf	APPR	(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	gute	ADJA	*	gut	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Art	NN	*)))	Art	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	beizubringen	VVIZU	*)	beibringen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	sie	PPER	*	sie	-	-	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	dieser	PDAT	(VP(AP(NP*	dieser	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Trennung	NN	*)	trennung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	wegen	APPO	*)	wegen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	beruhigen	VVINF	*)))	beruhigen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	muß	VMFIN	(S*	müssen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	ich	PPER	*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	sie	PPER	(VP*	sie	pl	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	sprechen	VVINF	*))	sprechen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	gnädiger	ADJA	(NP*	gnädig	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	Herr	NN	*	herr	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	muß	VMFIN	(S*	müssen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	ich	PPER	*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	sie	PPER	(VP*	sie	pl	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	sprechen	VVINF	*)))	sprechen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	So	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	kommen	VVFIN	*	kommen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*	sie	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	denn	ADV	*	denn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	–	XY	*	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	O	ITJ	(VROOT(PSEUDO(S*	O	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	die	ART	(NP*	der	sg	fem	-	(8
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Tochter	NN	*)	tochter	sg	fem	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	kann	VMFIN	*	können	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	auch	ADV	*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	wohl	ADV	*	wohl	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	zu	APPR	(VP(PP*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	dem	ART	*	der	sg	masc	-	(12
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Vater	NN	*)	vater	sg	masc	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	kommen	VVINF	*))	kommen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Hier	ADV	(NP*	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	unter	APPR	(PP*	unter	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	vier	CARD	*	vier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Augen	NN	*	auge	pl	neut	-	(69)|(389)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	bin	VAFIN	(S*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	ich	PPER	*	ich	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	gleich	ADV	*	gleich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	ihr	PPER	*)	ihr	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	fertig	PTKVZ	*)))	fertig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Senden	VVFIN	(VROOT(PSEUDO(S(S*	send	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*	sie	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mir	PPER	*	sich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sie	PPER	*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nur	ADV	*)	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	gnädiger	ADJA	(NP*	gnädig	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Herr	NN	*))	herr	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Auch	ADV	(VROOT(PSEUDO(NP*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	das	PDS	*)	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	O	NE	*	O	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Galotti	NE	(NP*	galotti	-	-	(PER*)	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	wenn	KOUS	(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Sie	PPER	*	sie	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	mein	PPOSAT	(VP(CNP(NP*	mein	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Freund	NN	*)	freund	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	mein	PPOSAT	(NP*	mein	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Führer	NN	*)	führer	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	mein	PPOSAT	(NP*	mein	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Vater	NN	*))	vater	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	sein	VAINF	*)	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	wollten	VMFIN	*))	wollen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(S(NP*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Prinz	NN	(CNP*	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Marinelli	NN	*))	marinelli	sg	masc	(LOC*)	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	gehen	VVFIN	*	gehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ab	PTKVZ	*)	ab	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO(MPN*	odoardo	-	-	-	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	GALOTTI	NE	*)))	galotti	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ihm	PPER	(VROOT(PSEUDO(S(AP*	ihm	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	nachsehend	ADJD	*)	nachsehend	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nach	APPR	(PP*	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	einer	ART	*	ein	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Pause	NN	*))	pause	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Warum	PWAV	*	warum	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Herzlich	NE	*	herzlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	gern	ADV	(NP*	gern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	–	NE	*)	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Ha	NE	*	ha	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ha	XY	*	ha	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ha	XY	*	ha	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Blickt	NN	(S*	blickt	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wild	ADJD	*	wild	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	umher	PTKVZ	*)	umher	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wer	PWS	(VROOT(PSEUDO(S*	wer	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	lacht	VVFIN	*	lachen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	da	PTKVZ	*)	da	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Bei	APPR	*	bei	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Gott	NN	*	gott	sg	masc	(PER*)	(57)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ich	PPER	*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	glaub	VVFIN	*	glaub	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	ich	PPER	*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	war	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	selbst	ADV	*	selbst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO(S*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Schon	ADV	*	schon	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	recht	ADV	*)	recht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Lustig	ADJD	(VROOT(PSEUDO(AP*	lustig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	lustig	ADJD	*)	lustig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Das	ART	(VROOT(PSEUDO(S(NP*	der	sg	neut	-	(409
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Spiel	NN	*)	spiel	sg	neut	-	409)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	geht	VVFIN	*	gehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	zu	APPR	(PP*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Ende	NN	*))	ende	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	So	ADV	(VROOT(PSEUDO(CS*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	oder	KON	*	oder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	so	ADV	(S*))	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Aber	KON	*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Pause	NN	*	pause	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	wenn	KOUS	(VROOT(PSEUDO(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sie	PPER	*	sie	pl	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ihm	PPER	*)	ihm	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	sich	PRF	*	sich	sg	-	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	verstünde	VVFIN	*)	verstehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wenn	KOUS	(VROOT(PSEUDO(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	das	ART	(NP*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	alltägliche	ADJA	*	alltäglich	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Possenspiel	NN	*)	possenspiel	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	wäre	VAFIN	*)	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wenn	KOUS	(VROOT(PSEUDO(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sie	PPER	*	sie	pl	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	es	PPER	*	es	sg	neut	-	(410)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nicht	PTKNEG	(AVP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	wert	ADJD	*)	wert	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	wäre	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	was	PWS	(S*	was	sg	neut	-	(410)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	ich	PPER	*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	für	APPR	(VP(PP*	für	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	sie	PPER	*)	sie	pl	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	tun	VVINF	*)	tun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	will	VMFIN	*))	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Pause	NN	*	pause	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Für	APPR	(VROOT(PSEUDO(S(VP(PP*	für	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sie	PPER	*)	sie	-	-	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	tun	VVINF	*)	tun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	will	VMFIN	*)	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	will	VMFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	denn	ADV	*	denn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	für	APPR	(VP(PP*	für	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	sie	PPER	*)	sie	-	-	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	tun	VVINF	*))	tun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Hab	XY	*	hab	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	das	ART	*	der	sg	neut	-	(352
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Herz	NN	*	herz	sg	neut	-	352)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	mir	PPER	*	sich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	zu	PTKZU	*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	sagen	VVINF	*	sagen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Da	KOUS	*	da	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	denk	PDS	*	denk	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ich	PPER	*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	so	ADV	*	so	-	-	-	(411
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	was	PIS	*	was	*	neut	-	411)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	So	ADV	*	so	-	-	-	(411
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	was	PIS	*	was	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	was	PRELS	*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	sich	PRF	*	sich	sg	-	-	(411)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	nur	ADV	*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	denken	VVINF	*	denken	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	läßt	VVFIN	*	lassen	sg	-	-	411)
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Gräßlich	NE	*	gräßlich	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Fort	NN	(VROOT(PSEUDO(S*	fort	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	fort	PTKVZ	*)	fort	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	will	VMFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sie	PPER	(VP*	sie	pl	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	erwarten	VVINF	*))	erwarten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nein	PTKANT	*	nein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Gegen	APPR	*	gegen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	den	ART	(NP*	der	sg	masc	-	(132
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Himmel	NN	*)	himmel	sg	masc	-	132)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wer	PWS	(VROOT(PSEUDO(S*	wer	sg	*	-	(412)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sie	PPER	*	sie	*	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	unschuldig	ADJD	(VP*	unschuldig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	diesen	PDAT	*	dieser	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Abgrund	NN	*)	abgrund	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	gestürzt	VVPP	*)	stürzen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	hat	VAFIN	*)	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	der	ART	*	der	sg	masc	-	(412)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	ziehe	VVIMP	(S*	ziehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	sie	PPER	*	sie	*	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	wieder	ADV	*	wieder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	heraus	PTKVZ	*)	heraus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	braucht	VVFIN	*	brauchen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	er	PPER	*	er	sg	masc	-	(412)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	meine	PPOSAT	(NP*	mein	sg	fem	-	(413|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Hand	NN	*)	hand	sg	fem	-	413)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	dazu	PROAV	*)	dazu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Fort	NN	(VROOT(PSEUDO*	fort	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Er	PPER	(VROOT(PSEUDO(CS(S*	er	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	will	VMFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	gehen	VVINF	*)	gehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	sieht	VVFIN	(S*	sehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Emilien	NN	(VP*	emilien	pl	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	kommen	VVINF	*)))	kommen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Zu	PTKA	(VROOT(PSEUDO(VP(AP*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	spät	ADJD	*))	spät	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ah	NE	(VROOT(PSEUDO(MPN*	ah	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*)))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	er	PPER	*	er	sg	masc	-	(412)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	will	VMFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	meine	PPOSAT	*	mein	sg	fem	-	(413|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Hand	NN	*	hand	sg	fem	-	413)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	er	PPER	*	er	sg	masc	-	(412)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	will	VMFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	sie	PPER	*	sie	sg	fem	-	(413)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Emilia	NE	(VROOT(PSEUDO*	emilia	-	-	(PER*)	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Odoardo	NE	(VROOT(PSEUDO*	odoardo	-	-	(PER*)	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	EMILIA	NE	(VROOT(PSEUDO*	emilia	sg	neut	(LOC*)	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wie	PWAV	(VROOT(PSEUDO*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(CNP(NP*	sie	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	hier	ADV	*)	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mein	PPOSAT	(NP*	mein	sg	masc	-	(12|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Vater	NN	*))	vater	sg	masc	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	nur	ADV	(S(NP*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Sie	PPER	*))	sie	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Und	KON	(NP*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	meine	PPOSAT	*	mein	-	-	-	(53|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Mutter	NN	*)	mutter	-	-	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	nicht	PTKNEG	(VROOT(PSEUDO(AP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	hier	ADV	*)	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Und	KON	(NP*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	der	ART	*	der	sg	masc	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Graf	NN	*)	graf	sg	*	-	9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	nicht	PTKNEG	(VROOT(PSEUDO(AP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	hier	ADV	*)	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Und	KON	(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	(NP*	sie	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	so	ADV	*))	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	unruhig	ADJD	(S*	unruhig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	mein	PPOSAT	(NP*	mein	sg	masc	-	(12|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Vater	NN	*))	vater	sg	masc	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	du	PPER	*	du	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	so	ADV	(AP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ruhig	ADJD	*)	ruhig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	meine	PPOSAT	(S(NP*	mein	sg	fem	-	(8|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Tochter	NN	*)))	tochter	sg	fem	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	EMILIA	NE	(VROOT(PSEUDO*	emilia	sg	neut	(LOC*)	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Warum	PWAV	(VROOT(PSEUDO(S*	warum	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mein	PPOSAT	(NP*	mein	sg	masc	-	(12|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Vater	NN	*))	vater	sg	masc	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Entweder	NN	(CO(S*	entweder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nichts	PIS	(VP*	nichts	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	verloren	VVPP	*	verlieren	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	:	$.	*))	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	oder	KON	*	oder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	alles	PIS	*)	alle	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ruhig	ADJD	(VROOT(PSEUDO(CS(S(VP*	ruhig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sein	VAINF	*)	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	können	VMFIN	*)	können	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ruhig	ADJD	(S(VP(VP*	ruhig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	sein	VAINF	*)	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	müssen	VMINF	*)	müssen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	kömmt	VVFIN	*	kömmen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	auf	APPR	(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	eines	PIS	*)))	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Aber	KON	(VROOT(PSEUDO(S*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	was	PWS	*	was	sg	neut	-	(414)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	meinest	VVFIN	*	meinest	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	du	PPER	*	du	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	der	ART	(NP*	der	sg	masc	-	(414
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Fall	NN	*)	fall	sg	masc	-	414)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	ist	VAFIN	*))	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	EMILIA	NE	(VROOT(PSEUDO*	emilia	sg	neut	(LOC*)	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Daß	KOUS	*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	alles	PIS	*	alle	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	verloren	VVPP	*	verlieren	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	–	$(	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	daß	KOUS	*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	wir	PPER	*	wir	pl	*	-	(12)|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	wohl	ADV	*	wohl	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	ruhig	ADJD	*	ruhig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	sein	VAINF	*	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	müssen	VMFIN	*	müssen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	mein	PPOSAT	*	mein	sg	masc	-	(12|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	Vater	NN	*	vater	sg	masc	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	du	PPER	*	du	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wärest	VVFIN	*	wärest	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ruhig	ADJD	*	ruhig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	weil	KOUS	(S*	weil	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	du	PPER	*	du	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ruhig	ADJD	(VP*	ruhig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	sein	VAINF	*)	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	mußt	VMFIN	*))	mussen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Wer	PWS	*	wer	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	bist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	du	PPER	*	du	sg	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ein	ART	(VROOT(PSEUDO(NP*	ein	sg	masc	-	(8
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Mädchen	NN	*)	mädchen	sg	masc	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	meine	PPOSAT	(NP*	mein	sg	fem	-	(8|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Tochter	NN	*))	tochter	sg	fem	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	So	ADV	(VROOT(PSEUDO(S*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sollte	VMFIN	*	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	der	ART	(CNP(NP*	der	sg	masc	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Mann	NN	*)	mann	sg	masc	-	9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	der	ART	(NP*	der	sg	masc	-	(12
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Vater	NN	*))	vater	sg	masc	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	sich	PRF	(VP*	sich	sg	-	-	(9)|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	wohl	ADV	*	wohl	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	vor	APPR	(PP*	vor	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	dir	PPER	*)	dir	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	schämen	VVINF	*))	schämen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Aber	KON	(S*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	laß	VVFIN	*	lassen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	doch	ADV	*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	hören	VVINF	*)	hören	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	was	PWS	(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	nennest	VVFIN	*	nennest	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	du	PPER	*	du	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	alles	PIS	(VP*	alle	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	verloren	VVPP	*))	verlieren	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	der	ART	(NP*	der	sg	masc	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Graf	NN	*)	graf	sg	*	-	9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	tot	ADJD	*	tot	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ist	VAFIN	*)	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	EMILIA	NE	(VROOT(PSEUDO*	emilia	sg	neut	(LOC*)	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	warum	PWAV	*	warum	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	er	PPER	*	er	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	tot	ADJD	*	tot	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ist	VAFIN	*)	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Warum	PWAV	(VROOT(PSEUDO*	warum	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ha	NE	(NP*	ha	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	so	ADV	(S*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	wahr	ADJD	*))	wahr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	mein	PPOSAT	(NP*	mein	sg	masc	-	(12|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Vater	NN	*)	vater	sg	masc	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	So	ADV	(VROOT(PSEUDO(S*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sie	PPER	*	sie	sg	fem	-	(415)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	wahr	ADJD	*)	wahr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	die	ART	(NP*	der	sg	fem	-	(415
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ganze	ADJA	*	ganz	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	schreckliche	ADJA	*	schrecklich	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Geschichte	NN	*	geschichte	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	die	PRELS	(S*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	ich	PPER	*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	dem	ART	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	nassen	ADJA	(CAP*	nassen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	wilden	ADJA	*)	wild	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	Auge	NN	*	auge	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	meiner	PPOSAT	(NP*	mein	pl	masc	-	(53|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	Mutter	NN	*))	mutter	pl	masc	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	las	VVFIN	*))	las	sg	-	-	415)
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Wo	PWAV	(S*	wo	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	meine	PPOSAT	(NP*	mein	sg	fem	-	(53|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Mutter	NN	*))	mutter	sg	fem	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wo	PWAV	(VROOT(PSEUDO(S*	wo	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sie	PPER	*	sie	sg	fem	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	hin	ADV	*	hin	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	mein	PPOSAT	(NP*	mein	sg	masc	-	(12|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Vater	NN	*))	vater	sg	masc	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Voraus	PTKVZ	(VROOT(PSEUDO(S*	voraus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	–	XY	(S*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	wann	PWAV	(S*	wann	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	wir	PPER	*	wir	pl	*	-	(8)|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	anders	ADV	*)	anders	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ihr	PPER	*	ihr	sg	fem	-	(53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	nachkommen	VVFIN	*))	nachkommen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	EMILIA	NE	(VROOT(PSEUDO*	emilia	sg	neut	(LOC*)	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Je	ADV	(VROOT(PSEUDO(AP*	je	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	eher	ADV	(AVP*	eher	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	je	ADV	*)	je	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	besser	ADJD	*)	gut	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Denn	KON	(VROOT(PSEUDO(S*	denn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wenn	KOUS	(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	der	ART	(NP*	der	sg	masc	-	(9
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Graf	NN	*)	graf	sg	*	-	9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	tot	ADJD	*	tot	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ist	VAFIN	*)	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	wenn	KOUS	*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	er	PPER	*	er	sg	masc	-	(9)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	darum	PROAV	*	darum	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	tot	ADJD	*	tot	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	–	PPER	*	–	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	darum	PROAV	*)	darum	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	was	PIS	(VROOT(PSEUDO(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	verweilen	VVFIN	*	verweilen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wir	PPER	*	wir	pl	*	-	(8)|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	noch	ADV	(AVP*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	hier	ADV	*))	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Lassen	VVFIN	(VROOT(PSEUDO(S(S*	lassen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*	sie	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	uns	PPER	(VP*	uns	pl	*	-	(8)|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	fliehen	VVINF	*))	fliehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	mein	PPOSAT	(NP*	mein	sg	masc	-	(12|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Vater	NN	*))	vater	sg	masc	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Fliehen	NN	(VROOT(PSEUDO*	fliehen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Was	PWS	*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	hätt	VAFIN	*	hätt	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	dann	ADV	*	dann	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	für	APPR	*	für	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Not	NN	*	not	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Du	PPER	(S*	du	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	bist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	du	PPER	(S*	du	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	bleibst	VVFIN	*	bleibst	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	den	ART	*	der	pl	fem	-	(416
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Händen	NN	*)))	hand	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	deines	PPOSAT	(NP*	dein	sg	masc	-	(0|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Räubers	NN	*)	räuber	sg	masc	-	416)|0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	EMILIA	NE	(VROOT(PSEUDO*	emilia	sg	neut	(LOC*)	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	bleibe	VVFIN	*	bleiben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	seinen	PPOSAT	*	sein	sg	masc	-	(416|(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Händen	NN	*))	hand	sg	masc	-	416)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	allein	ADV	*	allein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ohne	APPR	(PP*	ohne	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	deine	PPOSAT	*	dein	sg	fem	-	(53|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Mutter	NN	*)	mutter	sg	fem	-	53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ohne	APPR	(PP*	ohne	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	mich	PPER	*))	mich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	EMILIA	NE	(VROOT(PSEUDO*	emilia	sg	neut	(LOC*)	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	allein	ADV	*	allein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	seinen	PPOSAT	*	sein	pl	neut	-	(416|(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Händen	NN	*))	hand	pl	neut	-	416)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Nimmermehr	NN	*	nimmermehr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mein	PPOSAT	(NP*	mein	sg	masc	-	(12|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Vater	NN	*)	vater	sg	masc	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Oder	KON	*	oder	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	(S*	sie	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sind	VAFIN	*	sein	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	mein	PPOSAT	(NP*	mein	sg	masc	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Vater	NN	*))	vater	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ich	PPER	(NP*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	allein	ADV	*	allein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	seinen	PPOSAT	*	sein	pl	neut	-	(416|(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Händen	NN	*))	hand	pl	neut	-	416)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Gut	NN	(NP*	gut	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	lassen	VVFIN	(S*	lassen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Sie	PPER	*	sie	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	mich	PRF	*	mich	sg	-	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	nur	ADV	*))	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	lassen	VVFIN	(S*	lassen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	sie	PPER	*	sie	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	mich	PPER	*	mich	sg	-	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	nur	ADV	*)	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ich	PPER	(S*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	will	VMFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	doch	ADV	*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	sehn	CARD	*	sehn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	wer	PWS	(S*	wer	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	mich	PPER	*	mich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	hält	VVFIN	*))	halten	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	–	XY	*	–	sg	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	wer	PWS	(S*	wer	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	mich	PPER	*	mich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	zwingt	VVFIN	*)	zwingen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	–	XY	*	–	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	wer	PWS	(CS(S*	wer	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	der	ART	(NP*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	Mensch	NN	*)	mensch	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	ist	VAFIN	*)	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	der	PRELS	(S*	der	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	einen	ART	(VP(NP*	ein	sg	masc	-	(8
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	Menschen	NN	*)	mensch	sg	masc	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	zwingen	VVINF	*)	zwingen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	kann	VMFIN	*))	können	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	meine	VVFIN	*	meinen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	du	PPER	(S*	du	sg	masc	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	bist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ruhig	ADJD	(AP*	ruhig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	mein	PPOSAT	(NP*	mein	sg	masc	-	(8|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Kind	NN	*))))	kind	sg	masc	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	EMILIA	NE	(VROOT(PSEUDO*	emilia	sg	neut	(LOC*)	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Das	PDS	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	bin	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Aber	KON	(VROOT(PSEUDO(S*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	was	PWS	*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	nennen	VVFIN	*	nennen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Sie	PPER	*	sie	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ruhig	ADJD	(VP*	ruhig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	sein	VAINF	*))	sein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Die	ART	(VROOT(PSEUDO(VP(NP*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Hände	NN	*)	hand	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	den	ART	*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Schoß	NN	*)	schoß	sg	masc	(LOC*)	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	legen	VVINF	*)	legen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Leiden	NN	*	leiden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	was	PWS	*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	man	PIS	*	man	sg	*	-	(8)|(417)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	sollte	VMFIN	*	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Dulden	NN	*	dulden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	was	PWS	*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	man	PIS	*	man	sg	*	-	(8)|(417)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	dürfte	VMFIN	*	dürfen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ha	XY	*	ha	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	wenn	KOUS	(VROOT(PSEUDO(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	du	PPER	*	du	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	denkest	VVFIN	*)	denkest	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Laß	VVIMP	(S*	lassen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	dich	PPER	(VP*	dich	sg	-	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	umarmen	VVINF	*)	umarmen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	meine	PPOSAT	(NP*	mein	sg	fem	-	(8|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Tochter	NN	*))	tochter	sg	fem	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ich	PPER	*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	hab	VAFIN	*	hab	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	immer	ADV	*	immer	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	gesagt	VVPP	*	sagen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	das	ART	*	der	sg	neut	-	(418
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Weib	NN	*	weib	-	-	-	418)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	wollte	VMFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	die	ART	*	der	sg	fem	-	(74
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Natur	NN	*	natur	sg	fem	-	74)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	zu	APPR	*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	ihrem	PPOSAT	*	ihr	sg	neut	-	(418)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	Meisterstücke	NN	*	meisterstück	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	machen	VVINF	*	machen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Aber	KON	(VROOT(PSEUDO(S*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sie	PPER	*	sie	sg	fem	-	(418)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	vergriff	VVFIN	*	vergreifen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sich	PRF	(VP*	sich	sg	-	-	(418)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	im	APPRART	(NP(PP*	in	sg	neut	-	(419
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Tone	NN	*)	tone	sg	neut	-	419)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	sie	PPER	(S*	sie	sg	fem	-	(418)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	nahm	VVFIN	*	nehmen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	ihn	PPER	*))	ihn	sg	masc	-	(419)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	fein	VAINF	*)))	fein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sonst	ADV	(VROOT(PSEUDO(S*	sonst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	alles	PIS	*	alle	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	besser	ADJD	*	gut	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	an	APPR	(PP*	an	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	euch	PPER	*)	euch	pl	*	-	(418)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	als	KOKOM	(PP*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	an	APPR	*	an	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	uns	PPER	*))	uns	pl	*	-	(358)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ha	XY	*	ha	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	wenn	KOUS	(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	das	PDS	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	deine	PPOSAT	(NP*	dein	sg	neut	-	(420|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Ruhe	NN	*)	ruhe	sg	neut	-	420)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ist	VAFIN	*)	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	so	ADV	(S*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	habe	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	ich	PPER	(VP(NP(AP*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	meine	PPOSAT	*)	mein	sg	fem	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	ihr	PPER	*))	ihr	sg	fem	-	(420)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	wiedergefunden	VVPP	*))	wiederfinden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Laß	KOUS	(VROOT(PSEUDO(S*	lassen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	dich	PPER	*	dich	sg	-	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	umarmen	VVFIN	*	umarmen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	meine	PPOSAT	(NP*	mein	sg	fem	-	(8|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Tochter	NN	*))	tochter	sg	fem	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Denke	NN	(NP*	denken	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	nur	ADV	*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	unter	APPR	(PP*	unter	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	dem	ART	*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Vorwande	NN	*	vorwand	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	einer	ART	(NP*	ein	sg	fem	-	(397
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	gerichtlichen	ADJA	*	gerichtlich	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Untersuchung	NN	*)))	untersuchung	sg	fem	-	397)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	–	$.	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	o	FM	(NP*	O	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	des	ART	*	der	sg	masc	-	(409
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	höllischen	ADJA	*	höllisch	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	Gaukelspieles	NN	*)	gaukelspiele	sg	masc	-	409)
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	reißt	VVFIN	(S*	reißen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	er	PPER	*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	dich	PRF	*	dich	sg	-	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	aus	APPR	(PP*	aus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	unsern	PPOSAT	*	unsern	pl	*	-	(188|(161|(53)|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Armen	NN	*)	arme	pl	*	-	188)|161)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	und	KON	(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	bringt	VVFIN	*	bringen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	dich	PPER	*	dich	sg	-	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	zur	APPRART	(PP*	zu	sg	fem	-	(156
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Grimaldi	NN	*)))	grimaldi	sg	fem	(PER*)	156)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	EMILIA	NE	(VROOT(PSEUDO*	emilia	sg	neut	(LOC*)	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Reißt	VVFIN	(VROOT(PSEUDO(S*	reißen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	mich	PPER	*)	mich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	bringt	VVFIN	(VROOT(PSEUDO(S*	bringen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	mich	PPER	*)	mich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Will	VMFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mich	PPER	*	mich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	reißen	VVINF	*	reißen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	will	VMFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	mich	PPER	*	mich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	bringen	VVINF	*	bringen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	will	VMFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	will	VMFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Als	KOKOM	*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ob	KOUS	*	ob	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	wir	PPER	*	wir	pl	*	-	(12)|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	wir	PPER	*	wir	pl	*	-	(12)|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	keinen	PIAT	*	kein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Willen	NN	*	wille	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	hätten	VAFIN	*	haben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	mein	PPOSAT	*	mein	sg	masc	-	(12|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Vater	NN	*	vater	sg	masc	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ward	VVFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	auch	ADV	(AP*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	so	ADV	*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	wütend	ADJD	*	wütend	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ich	PPER	*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	schon	ADV	(PP*	schon	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	nach	APPR	*	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	diesem	PDAT	*	dieser	sg	masc	-	(356
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Dolche	NN	*)	dolche	sg	masc	-	356)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	griff	VVFIN	*))	greifen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Ihn	PPER	(AP*	ihn	sg	masc	-	(356)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	herausziehend	ADJD	*))	herausziehend	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	um	KOUI	*	um	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	einem	ART	*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	von	APPR	*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	beiden	PIS	*	beide	pl	*	-	(3)|(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	–	APZR	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	beiden	PIAT	*	beide	pl	*	-	(3)|(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	das	ART	*	der	sg	neut	-	(35
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Herz	NN	(VP*	herz	sg	neut	-	35)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	durchstoßen	VVINF	*))	durchstoßen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	EMILIA	NE	(VROOT(PSEUDO*	emilia	sg	neut	(LOC*)	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Um	KOUI	(VROOT(PSEUDO(S(PP*	um	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	des	ART	*	der	sg	masc	-	(132
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Himmels	NN	*	himmel	sg	masc	-	132)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	willen	APZR	*)	willen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	mein	PPOSAT	(NP*	mein	sg	masc	-	(12|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Vater	NN	*))	vater	sg	masc	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Dieses	PDAT	(S(NP*	dieser	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Leben	NN	*)	leben	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	alles	PIS	(NP*	alle	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	was	PRELS	(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	die	ART	(NP*	der	pl	fem	-	(3|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Lasterhaften	NN	*)	lasterhaft	pl	fem	-	3)|0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	haben	VAFIN	*)))	haben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Mir	PPER	(NP*	sich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mein	PPOSAT	(S(NP*	mein	sg	masc	-	(12|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Vater	NN	*)	vater	sg	masc	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	mir	PPER	*	sich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	geben	VVFIN	*	geben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Sie	PPER	*	sie	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	diesen	PDAT	(NP*	dieser	sg	masc	-	(356
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Dolch	NN	*)))	dolch	sg	masc	-	356)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Kind	NN	(VROOT(PSEUDO(S*	kind	sg	neut	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	keine	PIAT	(NP*	kein	sg	fem	-	(421
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Haarnadel	NN	*))	haarnadel	sg	fem	-	421)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	EMILIA	NE	(VROOT(PSEUDO*	emilia	sg	neut	(LOC*)	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	So	ADV	(VROOT(PSEUDO(S*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	werde	VAFIN	*	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	die	ART	(NP*	der	sg	fem	-	(421
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Haarnadel	NN	*)	haarnadel	sg	fem	-	421)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	zum	APPRART	(PP*	zu	-	-	-	(356
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Dolche	NN	*))	dolche	-	-	-	356)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Gleichviel	NN	*	gleichviel	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Was	PWS	*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Dahin	PROAV	*	dahin	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wär	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	gekommen	VVPP	*	kommen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nicht	PTKNEG	(VROOT(PSEUDO(NP(AP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	doch	ADV	*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nicht	PTKNEG	(AVP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	doch	ADV	*)))	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Besinne	NN	*	besinn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	dich	PRF	*	dich	sg	-	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Auch	ADV	(S(NP*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	du	PPER	*)	du	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	hast	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nur	ADV	(VP(NP*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Ein	ART	*	ein	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Leben	NN	*)	leben	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	verlieren	VVINF	*)))	verlieren	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	EMILIA	NE	(VROOT(PSEUDO*	emilia	sg	neut	(LOC*)	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	nur	ADV	*	nur	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Eine	ART	(NP*	ein	sg	fem	-	(422
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Unschuld	NN	*))	unschuld	sg	fem	-	422)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Die	ART	(VROOT(PSEUDO(S*	der	sg	fem	-	(422)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	über	APPR	(PP*	über	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	alle	PIAT	(NP*	aller	sg	fem	-	(423
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Gewalt	NN	*))	gewalt	sg	fem	-	423)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	erhaben	ADJD	*	erhaben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ist	VAFIN	*)	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	EMILIA	NE	(VROOT(PSEUDO*	emilia	sg	neut	(LOC*)	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Aber	KON	(VROOT(PSEUDO(S*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	über	APPR	(PP*	über	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	alle	PIAT	(NP*	aller	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Verführung	NN	*)))	verführung	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Gewalt	NN	*	gewalt	-	-	-	(423)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Gewalt	NN	(VROOT(PSEUDO*	gewalt	-	-	-	(423)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	wer	PWS	(VROOT(PSEUDO(S*	wer	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	kann	VMFIN	*	können	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	der	ART	(VP(NP*	der	sg	fem	-	(423
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Gewalt	NN	*)	gewalt	sg	fem	-	423)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	trotzen	VVINF	*))	trotzen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S(S*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Gewalt	NN	*	gewalt	sg	fem	-	(423)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	heißt	VVFIN	*)	heißen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	nichts	PIS	*	nichts	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Verführung	NN	(S*	verführung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	die	ART	(NP*	der	sg	fem	-	(423
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	wahre	ADJA	*	wahr	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Gewalt	NN	*)))	gewalt	sg	fem	-	423)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ich	PPER	(S*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	habe	VAFIN	*	haben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Blut	NN	(NP*	blut	sg	neut	-	(424)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	mein	PPOSAT	(NP*	mein	sg	masc	-	(12|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Vater	NN	*)))	vater	sg	masc	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	so	ADV	(S(NP(CAP(AP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	jugendliches	ADJA	*)	jugendlich	sg	neut	-	(424)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	so	ADV	(AP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	warmes	ADJA	*))	warm	sg	neut	-	(424
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Blut	NN	*)	blut	sg	neut	-	424)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	als	APPR	(PP*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	eine	PIS	*))	ein	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Auch	ADV	(VROOT(PSEUDO(S(NP*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	meine	PPOSAT	*	mein	sg	fem	-	(425|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sinne	NN	*)	sinn	sg	fem	-	425)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	sind	VAFIN	*	sein	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Sinne	NN	*)	sinn	pl	masc	-	(425)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	stehe	VVFIN	*	stehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	für	APPR	(PP*	für	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nichts	PIS	*))	nichts	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	bin	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	für	APPR	(AP(PP*	für	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nichts	PIS	*)	nichts	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	gut	ADJD	*))	gut	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	kenne	VVFIN	*	kennen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	das	ART	(NP*	der	sg	neut	-	(403
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Haus	NN	*	haus	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	der	ART	(NP*	der	pl	*	-	(156
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Grimaldi	NN	*)))	grimaldi	pl	*	(PER*)	403)|156)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Es	PPER	(VROOT(PSEUDO(S*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	das	ART	(NP*	der	sg	neut	-	(403
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Haus	NN	*	haus	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	der	ART	(NP*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Freude	NN	*)))	freude	sg	fem	-	403)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Eine	ART	(VROOT(PSEUDO(S(NP*	ein	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Stunde	NN	*)	stunde	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	da	ADV	*	da	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	unter	APPR	(PP*	unter	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	den	ART	*	der	pl	*	-	(269
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Augen	NN	*	auge	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	meiner	PPOSAT	(NP*	mein	pl	masc	-	(53|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Mutter	NN	*)))	mutter	pl	masc	-	269)|53)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	es	PPER	(S*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	erhob	VVFIN	*	erheben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	sich	PRF	*	sich	sg	-	-	(426)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	so	ADV	(NP(AP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	mancher	PIAT	*)	mancher	sg	masc	-	(426
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	Tumult	NN	*)	tumult	sg	masc	-	426)
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	meiner	PPOSAT	*	mein	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	Seele	NN	*	seele	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	den	PRELS	(S*	der	sg	masc	-	(426)
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	die	ART	(NP*	der	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	strengsten	ADJA	*	streng	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	Übungen	NN	*	übung	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	der	ART	(NP*	der	sg	fem	-	(427
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	Religion	NN	*))	religion	sg	fem	-	427)
Emilia.xml.rksp.0.CoNLL2012.conll	000	28	kaum	ADV	*	kaum	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	29	in	APPR	(VP(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	30	Wochen	NN	*)	woche	pl	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	31	besänftigen	VVINF	*)	besänftigen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	32	konnten	VMFIN	*)))	können	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	33	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Der	ART	(NP*	der	sg	masc	-	(427
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Religion	NN	*)	religion	sg	masc	-	427)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	welcher	PWAT	(NP*	welcher	sg	fem	-	(427
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Religion	NN	*))	religion	sg	fem	-	427)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Nichts	PIS	*	nichts	*	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Schlimmers	NN	(NP(AP(VP*	schlimmer	sg	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	vermeiden	VVINF	*)	vermeiden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	sprangen	VVFIN	(S*	springen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Tausende	NN	*	tausend	pl	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	in	APPR	(AVP(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	die	ART	*	der	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Fluten	NN	*)	flut	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	und	KON	*)	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	sind	VAFIN	*))	sein	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Heilige	ADJA	*))	heilig	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Geben	VVFIN	*	geben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	(S*	sie	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mir	PPER	*	sich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	mein	PPOSAT	(NP*	mein	sg	masc	-	(12|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Vater	NN	*)	vater	sg	masc	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	geben	VVFIN	*	geben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Sie	PPER	*	sie	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	mir	PPER	*	sich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	diesen	PDAT	(NP*	dieser	sg	masc	-	(356
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Dolch	NN	*))	dolch	sg	masc	-	356)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wenn	KOUS	*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	du	PPER	*	du	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ihn	PPER	*	ihn	sg	masc	-	(356)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	kenntest	VVFIN	*)	kenntest	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	diesen	PDAT	(NP*	dieser	sg	masc	-	(356
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Dolch	NN	*)	dolch	sg	masc	-	356)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	EMILIA	NE	(VROOT(PSEUDO*	emilia	sg	neut	(LOC*)	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wenn	KOUS	(VROOT(PSEUDO(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ich	PPER	*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ihn	PPER	*	ihn	sg	masc	-	(356)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	auch	ADV	(AVP*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nicht	PTKNEG	*)	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	kenne	VVFIN	*)	kennen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ein	ART	(NP*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	unbekannter	ADJA	*	unbekannt	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Freund	NN	*	freund	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ist	VAFIN	(S*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	auch	ADV	*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	ein	ART	(NP*	ein	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Freund	NN	*)))	freund	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Geben	NN	*	geben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*	sie	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mir	PPER	*	sich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ihn	PPER	*	ihn	sg	masc	-	(356)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	mein	PPOSAT	*	mein	sg	masc	-	(12|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Vater	NN	*	vater	sg	masc	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	geben	VVFIN	*	geben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Sie	PPER	*	sie	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	mir	PPER	*	sich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	ihn	PPER	*	ihn	sg	masc	-	(356)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Wenn	KOUS	(VROOT(PSEUDO(S(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ich	PPER	*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	dir	PPER	*	dir	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ihn	PPER	*	ihn	sg	masc	-	(356)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	nun	ADV	*)	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	gebe	VVFIN	*	geben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	–	PPER	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	da	PTKVZ	*)	da	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Gibt	VVFIN	*	geben	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ihr	PPER	*	ihr	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ihn	PPER	*	ihn	sg	masc	-	(356)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	EMILIA	NE	(VROOT(PSEUDO*	emilia	sg	neut	(LOC*)	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	da	ADV	*)	da	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Im	APPRART	(VROOT(PSEUDO(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Begriffe	NN	*)	begreifen	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sich	PRF	(S(VP*	sich	pl	-	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	damit	PROAV	*	damit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	durchstoßen	VVINF	*))	durchstoßen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	reißt	VVFIN	*	reißen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	der	ART	(NP*	der	sg	masc	-	(12
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Vater	NN	*)	vater	sg	masc	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	ihr	PPER	*	ihr	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	ihn	PPER	*	ihn	sg	masc	-	(356)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	wieder	ADV	*	wieder	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	aus	APPR	(PP*	aus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	der	ART	*	der	sg	fem	-	(428
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	Hand	NN	*))	hand	sg	fem	-	428)
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sieh	NE	(VROOT(PSEUDO(NP*	sieh	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wie	PWAV	(AP*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	rasch	ADJD	*))	rasch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Nein	PTKANT	(S*	nein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	das	PDS	*	der	sg	neut	-	(356)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	für	APPR	(PP*	für	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	deine	PPOSAT	*	dein	sg	fem	-	(428|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Hand	NN	*))	hand	sg	fem	-	428)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	EMILIA	NE	(VROOT(PSEUDO*	emilia	sg	neut	(LOC*)	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Es	PPER	(VROOT(PSEUDO(S*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	wahr	ADJD	(VP(AP*	wahr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	mit	APPR	(CS(S(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	einer	ART	*	ein	sg	fem	-	(421
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Haarnadel	NN	*)	haarnadel	sg	fem	-	421)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	soll	VMFIN	*	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	ich	PPER	*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	–	PRF	*	–	*	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Sie	PPER	(S*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	fährt	VVFIN	*	fahren	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	der	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Hand	NN	*)	hand	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	nach	APPR	(PP*	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	dem	ART	*	der	sg	neut	-	(198
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	Haare	NN	*))	haar	sg	neut	-	198)
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	eine	PIS	(VP*	ein	sg	fem	-	(421)
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	suchen	VVINF	*)))	suchen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	bekömmt	VVFIN	*))	bekömmen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	die	ART	(NP*	der	sg	fem	-	(200
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	Rose	NN	*)	rose	sg	fem	-	200)
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	28	fassen	VVINF	*)))	fassen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	29	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Du	PPER	(VROOT(PSEUDO(S*	du	sg	*	-	(200)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	noch	ADV	*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	hier	ADV	*)	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Herunter	NN	(NP*	herunter	pl	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	dir	PPER	*))	dir	sg	*	-	(200)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Du	PPER	*	du	sg	*	-	(200)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	gehörest	VVFIN	*	gehöreen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	in	APPR	*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	das	ART	*	der	sg	neut	-	(198
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Haar	NN	*	haar	sg	neut	-	198)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	einer	PIS	*	ein	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	–	KON	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	wie	KOKOM	*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	mein	PPOSAT	*	mein	sg	masc	-	(12|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	Vater	NN	*	vater	sg	masc	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	will	VMFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	daß	KOUS	*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	ich	PPER	*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	werden	VAINF	*	werden	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	soll	VMFIN	*	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	O	ITJ	(VROOT(PSEUDO(S*	O	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	meine	PPOSAT	(NP*	mein	sg	fem	-	(8|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Tochter	NN	*))	tochter	sg	fem	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*))	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	EMILIA	NE	(VROOT(PSEUDO*	emilia	sg	neut	(LOC*)	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	O	ITJ	(VROOT(PSEUDO(S*	O	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mein	PPOSAT	(NP*	mein	sg	masc	-	(12|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Vater	NN	*)	vater	sg	masc	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	wenn	KOUS	(S*	wenn	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ich	PPER	*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Sie	PPER	*	sie	sg	fem	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	erriete	VVFIN	*))	errieten	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Doch	KON	*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	nein	PTKANT	(S*	nein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	das	PDS	(S*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	wollen	VMFIN	*	wollen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Sie	PPER	*	sie	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	auch	ADV	*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	nicht	PTKNEG	*))	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Warum	PWAV	(VROOT(PSEUDO(S*	warum	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	zauderten	VVFIN	*	zaudern	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*	sie	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sonst	ADV	*)	sonst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	In	APPR	*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	einem	ART	*	ein	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	bittern	ADV	*	bittern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Tone	NN	(NP*	tone	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	während	KOUS	(S*	während	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	daß	KOUS	*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	sie	PPER	*	sie	pl	masc	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	die	ART	(NP*	der	sg	fem	-	(200
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Rose	NN	*)	rose	sg	fem	-	200)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	zerpflückt	VVPP	*))	zerpflücken	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ehedem	ADV	(VROOT(PSEUDO(S(AVP*	ehedem	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wohl	ADV	*)	wohl	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	gab	VVFIN	*	geben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	einen	ART	(NP*	ein	sg	masc	-	(429
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Vater	NN	*	vater	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	der	PRELS	(S*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	seine	PPOSAT	(VP(NP*	sein	pl	neut	-	(430|(429)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Tochter	NN	*)	tochter	sg	fem	-	430)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	von	APPR	(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	der	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Schande	NN	*)	schande	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	retten	VVINF	*))	retten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	ihr	PPER	*	ihr	sg	fem	-	(430)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	den	ART	(NP*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	ersten	ADJA	*)	erster	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	den	ART	(NP*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	besten	ADJA	*	gut	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	Stahl	NN	*	stahl	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	das	ART	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	Herz	NN	*))	herz	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	senkte	VVFIN	*	senken	sg	-	-	429)
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	–	$.	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	27	ihr	PPER	*	ihr	sg	fem	-	(430)
Emilia.xml.rksp.0.CoNLL2012.conll	000	28	zum	APPRART	(NP(PP*	zu	sg	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	29	zweiten	ADJA	*)	zweiter	sg	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	30	das	ART	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	31	Leben	NN	*)	leben	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	32	gab	VVFIN	*)))	geben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	33	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Aber	KON	(VROOT(PSEUDO(S*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	alle	PIS	*	alle	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	solche	PIAT	(NP*	solcher	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Taten	NN	*)	tat	pl	*	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	sind	VAFIN	*	sein	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	von	APPR	(PP*	von	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ehedem	PIS	*))	ehedem	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Solcher	PIAT	*	solcher	*	*	-	(429
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Väter	NN	*	vater	sg	masc	-	429)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	gibt	VVFIN	*	geben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	keinen	PIAT	*	kein	sg	masc	-	(429)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	mehr	PIAT	*	mehr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Doch	KON	(VROOT(PSEUDO(S*	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	meine	PPOSAT	(S(NP*	mein	sg	fem	-	(8|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Tochter	NN	*	tochter	sg	fem	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*)	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	doch	ADV	*))	doch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Indem	KOUS	(VROOT(PSEUDO(S*	indem	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	er	PPER	*	er	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sie	PPER	*	sie	pl	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	durchsticht	VVFIN	*)	durchsticht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Gott	NN	*	gott	-	-	(PER*)	(57)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	was	PWS	*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	hab	VAFIN	*	hab	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ich	PPER	*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	getan	VVPP	*	tun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(CS(S*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	will	VMFIN	*	wollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	sinken	VVINF	*)	sinken	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	er	PPER	(S*	er	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	faßt	VVFIN	*	fassen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	sie	PPER	*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	seine	PPOSAT	*	sein	sg	fem	-	(188|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Arme	NN	*)))	arm	sg	fem	-	188)
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	EMILIA	NE	(VROOT(PSEUDO*	emilia	sg	neut	(LOC*)	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Eine	ART	(VROOT(PSEUDO(VP(NP*	ein	sg	fem	-	(200
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Rose	NN	*)	rose	sg	fem	-	200)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	gebrochen	VVPP	*	brechen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ehe	KOUS	(S*	ehe	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	der	ART	(VP(NP*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Sturm	NN	*)	sturm	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	sie	PPER	*	sie	sg	fem	-	(200)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	entblättert	VVPP	*)))	entblättern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Lassen	VVFIN	(S*	lassen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Sie	PPER	*	sie	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mich	PPER	*	mich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	sie	PPER	*	sie	pl	*	-	(431)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	küssen	VVFIN	*)	küssen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	diese	PDAT	(NP*	dieser	sg	fem	-	(431
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	väterliche	ADJA	*	väterlich	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	Hand	NN	*)	hand	sg	fem	-	431)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(NP*	der	sg	masc	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Prinz	NN	*)	prinz	sg	masc	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Marinelli	NE	(VROOT(PSEUDO*	marinelli	sg	masc	(PER*)	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Die	ART	(VROOT(PSEUDO(NP*	der	pl	*	-	(12|(8
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Vorigen	NN	*)	vorige	pl	*	-	12)|8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)))	prinz	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	im	APPRART	(VROOT(PSEUDO(PP*	in	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Hereintreten	NN	*)	hereintreten	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Was	PWS	*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	das	PDS	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ist	VAFIN	(S*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Emilien	NE	*	emilien	sg	neut	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nicht	PTKNEG	(AP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	wohl	ADV	*))	wohl	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sehr	ADV	(VROOT(PSEUDO(NP(AP*	sehr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	wohl	ADV	*	wohl	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sehr	ADV	(AVP*	sehr	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	wohl	ADV	*)))	wohl	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)))	prinz	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	indem	KOUS	(VROOT(PSEUDO(S*	indem	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	er	PPER	*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	näher	ADJD	*	nah	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	kömmt	VVFIN	*)	kömmen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Was	PWS	*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	seh	XY	*	seh	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Entsetzen	NN	*	entsetzen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Weh	XY	*	weh	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	mir	PPER	*	sich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Grausamer	ADJA	(VROOT(PSEUDO(S(NP*	grausamer	sg	masc	-	(12
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Vater	NN	*)	vater	sg	masc	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	was	PWS	*	was	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	haben	VAFIN	*	haben	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Sie	PPER	(VP*	sie	pl	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	getan	VVPP	*))	tun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Eine	ART	(VROOT(PSEUDO(VP(NP*	ein	sg	fem	-	(200
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Rose	NN	*)	rose	sg	fem	-	200)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	gebrochen	VVPP	*	brechen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	ehe	KOUS	(S*	ehe	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	der	ART	(VP(NP*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Sturm	NN	*)	sturm	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	sie	PPER	*	sie	sg	fem	-	(200)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	entblättert	VVPP	*)))	entblättern	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	War	VAFIN	(S*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	nicht	PTKNEG	(AVP*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	so	ADV	*))	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	meine	PPOSAT	(NP*	mein	sg	fem	-	(8|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Tochter	NN	*)	tochter	sg	fem	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	EMILIA	NE	(VROOT(PSEUDO*	emilia	sg	neut	(LOC*)	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*	sie	pl	*	-	(12
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	mein	PPOSAT	*	mein	sg	masc	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Vater	NN	*	vater	sg	masc	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	–	XY	*	–	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Ich	PPER	*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	selbst	ADV	*	selbst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	–	VVFIN	*	–	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	ich	PPER	*	ich	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	selbst	ADV	*	selbst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	–	XY	*	–	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	du	PPER	*	du	sg	*	-	(8
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	meine	PPOSAT	*	mein	sg	fem	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Tochter	NN	*	tochter	sg	fem	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	;	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	du	PPER	*	du	sg	*	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Gehe	NN	*	gehe	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mit	APPR	*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	keiner	PIAT	(NP*	kein	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Unwahrheit	NN	*	unwahrheit	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	aus	APPR	(PP*	aus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	der	ART	*	der	sg	fem	-	(149
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Welt	NN	*))	welt	sg	fem	-	149)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nicht	PTKNEG	(VROOT(PSEUDO(S*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	du	PPER	*	du	sg	*	-	(8
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	meine	PPOSAT	(NP*	mein	sg	fem	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Tochter	NN	*))	tochter	sg	fem	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Dein	PPOSAT	(VROOT(PSEUDO(CNP(NP*	dein	sg	masc	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Vater	NN	*)	vater	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	dein	PPOSAT	(NP*	dein	sg	masc	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	unglücklicher	ADJA	*	unglücklich	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Vater	NN	*))	vater	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	EMILIA	NE	(VROOT(PSEUDO*	emilia	sg	neut	(LOC*)	(8|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ah	XY	*	ah	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	–	XY	*	–	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	mein	PPOSAT	*	mein	sg	masc	-	(12|(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Vater	NN	*	vater	sg	masc	-	12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	–	$(	*	–	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Sie	PPER	*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	stirbt	VVFIN	*	sterben	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	er	PPER	*	er	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	legt	VVFIN	*	legen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	sie	PPER	*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	sanft	ADJD	*	sanft	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	auf	APPR	*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	den	ART	*	der	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	Boden	NN	*	boden	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	ODOARDO	NE	(VROOT(PSEUDO*	odoardo	sg	neut	(LOC*)	(12|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	12)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Zieh	ADV	(VROOT(PSEUDO(AP*	zieh	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	hin	PTKVZ	*)	hin	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Nun	ADV	(S*	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	da	ADV	*)	da	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Prinz	NN	*	prinz	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Gefällt	VVFIN	(VROOT(PSEUDO(S*	gefallen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sie	PPER	*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Ihnen	PPER	*	ihnen	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	noch	ADV	*)	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Reizt	VVFIN	(VROOT(PSEUDO(S*	reizen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	sie	PPER	*	sie	sg	fem	-	(8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	noch	ADV	*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Ihre	PPOSAT	(NP*	ihr	sg	fem	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Lüste	NN	*))	lüste	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Noch	ADV	(VROOT(PSEUDO(S*	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	diesem	PDAT	*	dieser	sg	masc	-	(432
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Blute	NN	*)	blute	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	das	PRELS	(S*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	wider	APPR	(PP*	wider	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Sie	PPER	*)	sie	*	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	um	APPR	(PP*	um	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Rache	NN	*)	rache	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	schreiet	VVFIN	*))	schreien	sg	fem	-	432)
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nach	APPR	(VROOT(PSEUDO(PP*	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	einer	ART	*	ein	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Pause	NN	*)	pause	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Aber	KON	*	aber	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	*	sie	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	erwarten	VVFIN	*	erwarten	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	wo	PWAV	*	wo	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	das	PDS	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	alles	PIS	*	alle	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	hinaus	APZR	*	hinaus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	soll	VMFIN	*	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	?	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(S*	sie	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	erwarten	VVFIN	*	erwarten	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	vielleicht	ADV	*	vielleicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ich	PPER	*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	den	ART	(VP(NP*	der	sg	masc	-	(356
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Stahl	NN	*	stahl	sg	masc	-	356)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	wider	APPR	(PP*	wider	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	mich	PPER	*))	mich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	selbst	ADV	*	selbst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	kehren	VVINF	*)	kehren	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	werde	VAFIN	*)	werden	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	um	KOUI	(VP*	um	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	meine	PPOSAT	(NP*	mein	sg	fem	-	(433|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	Tat	NN	*	tat	sg	fem	-	433)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	wie	KOKOM	(NP*	wie	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	eine	ART	*	ein	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	schale	ADJA	*	schal	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	Tragödie	NN	*))	tragödie	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	beschließen	VVINF	*)))	beschließen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	(S*	sie	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	irren	VVFIN	*	irren	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	sich	PRF	*)	sich	pl	-	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Hier	ADV	(VROOT(PSEUDO(S*)	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Indem	KOUS	(VROOT(PSEUDO(S*	indem	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	er	PPER	*	er	sg	masc	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ihm	PPER	*	ihm	sg	neut	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	den	ART	(NP*	der	sg	masc	-	(356
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	Dolch	NN	*)	dolch	sg	masc	-	356)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	vor	APPR	(PP*	vor	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	die	ART	*	der	sg	fem	-	(262
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Füße	NN	*)	fuß	sg	fem	-	262)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	wirft	VVFIN	*)	werfen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Hier	ADV	(VROOT(PSEUDO(S*	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	liegt	VVFIN	*	liegen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	er	PPER	(NP*	er	sg	masc	-	(356)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	der	ART	(NP*	der	sg	masc	-	(356
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	blutige	ADJA	*	blutig	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	Zeuge	NN	*	zeuge	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	meines	PPOSAT	(NP*	mein	sg	neut	-	(433|(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Verbrechens	NN	*))))	verbrechen	sg	neut	-	356)|433)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(CS(S*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	gehe	VVFIN	*)	gehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	liefere	VVFIN	(S*	liefern	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	mich	PPER	(NP*	mich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	selbst	ADV	*)	selbst	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	das	ART	*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Gefängnis	NN	*)))	gefängnis	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(CS(S*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	gehe	VVFIN	*)	gehen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	erwarte	VVFIN	(S*	erwarten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Sie	PPER	*	sie	pl	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	als	APPR	(PP*	als	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Richter	NN	*)))	richter	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	dann	ADV	*	dann	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	dort	ADV	*	dort	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	–	$(	*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	erwarte	VVFIN	*	erwarten	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	ich	PPER	*	ich	sg	*	-	(12)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Sie	PPER	*	sie	sg	fem	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	vor	APPR	*	vor	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	dem	ART	*	der	sg	masc	-	(57
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Richter	NN	*	richter	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	unser	PPOSAT	*	unser	sg	neut	-	(158
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	aller	PIAT	*	aller	sg	neut	-	57)|158)
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	!	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)))	prinz	-	-	-	0)

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	nach	APPR	(VROOT(PSEUDO(CO(VP(PP*	nach	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	einigem	PIAT	*	einig	sg	neut	-	(434
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Stillschweigen	NN	*	stillschweigen	sg	neut	-	434)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	unter	APPR	(S(PP*	unter	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	welchem	PRELS	*)	welcher	sg	neut	-	(434)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	er	PPER	*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	den	ART	(NP*	der	sg	masc	-	(8
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Körper	NN	*)))	körper	sg	masc	-	8)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	Entsetzen	NN	(CNP*	entsetzen	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	und	KON	*	und	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	Verzweiflung	NN	*))	verzweiflung	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	betrachtet	VVPP	*)	betrachten	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	zu	APPR	(PP*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	Marinelli	NE	*))	marinelli	sg	*	(PER*)	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Hier	ADV	(VROOT(PSEUDO(S*)	hier	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	heb	XY	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ihn	PPER	*	ihn	sg	masc	-	(356)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	auf	PTKVZ	*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Nun	ADV	(S*)	nun	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Du	PPER	(VROOT(PSEUDO(S*	du	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	bedenkst	VVFIN	*	bedenken	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	dich	PRF	*)	dich	sg	-	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Elender	NN	*	elender	-	-	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Indem	NN	*	indem	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	er	PPER	*	er	sg	masc	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	ihn	PPER	(S*	ihn	sg	masc	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	den	ART	(NP*	der	sg	masc	-	(356
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Dolch	NN	*	dolch	sg	masc	-	356)
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	aus	APPR	(PP*	aus	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	der	ART	*	der	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	Hand	NN	*))	hand	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	reißt	VVFIN	*)	reißen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Nein	PTKANT	(VROOT(PSEUDO(S*	nein	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	dein	PPOSAT	(NP*	dein	sg	masc	-	(435|(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	Blut	NN	*)	blut	sg	masc	-	435)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	soll	VMFIN	*	sollen	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	mit	APPR	(PP*	mit	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	diesem	PDAT	*	dieser	sg	masc	-	(432
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	Blute	NN	*)	blute	sg	masc	-	432)
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	sich	PRF	*	sich	sg	-	-	(435)
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	mischen	VVINF	*)	mischen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Geh	XY	*	geh	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	dich	PRF	(VP*	dich	sg	*	-	(3)
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	auf	APPR	(PP*	auf	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	ewig	ADJD	*)	ewig	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	verbergen	VVINF	*))	verbergen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Geh	XY	*	geh	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	sag	XY	*	sögen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	'	$(	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	.	$.	*	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Gott	NN	*	gott	-	-	-	(57)
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Gott	NN	(VROOT(PSEUDO*	gott	-	-	-	(57)
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	Ist	VAFIN	(S*	sein	sg	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	es	PPER	*	es	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	4	zum	APPRART	(PP*	zu	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	5	Unglücke	NN	*	unglücke	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	6	so	ADV	(NP*	so	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	7	mancher	PIS	*))	mancher	sg	fem	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	9	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	10	genug	ADV	*	genug	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	12	daß	KOUS	(S*	daß	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	13	Fürsten	ADJA	(NP*	fürst	pl	fem	-	(0)
Emilia.xml.rksp.0.CoNLL2012.conll	000	14	Menschen	NN	*)	mensch	pl	fem	-	(158)
Emilia.xml.rksp.0.CoNLL2012.conll	000	15	sind	VAFIN	*))	sein	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	16	:	$.	*	--	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	17	müssen	VMFIN	(S*	müssen	pl	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	18	sich	PRF	*	sich	pl	-	-	(3)|(436)
Emilia.xml.rksp.0.CoNLL2012.conll	000	19	auch	ADV	(AVP*	auch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	20	noch	ADV	*)	noch	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	21	Teufel	NN	(VP(NP*	teufel	pl	masc	-	(3)|(436)
Emilia.xml.rksp.0.CoNLL2012.conll	000	22	in	APPR	(PP*	in	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	23	ihren	PPOSAT	*	ihr	sg	masc	-	(3)|(436)
Emilia.xml.rksp.0.CoNLL2012.conll	000	24	Freund	NN	*))	freund	sg	masc	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	25	verstellen	VVINF	*))	verstellen	-	-	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	26	?	$.	*))	--	-	-	-	-

Emilia.xml.rksp.0.CoNLL2012.conll	000	0	Ende	NN	(VROOT(PSEUDO(NP*	ende	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	1	des	ART	(NP*	der	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	2	Trauerspiels	NN	*))	trauerspiel	sg	neut	-	-
Emilia.xml.rksp.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

#end document
