#begin document (Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll); part 000
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nathan	NE	(VROOT(PSEUDO(CNP*	nathan	-	-	-	(1)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	und	KON	*	und	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	der	ART	(NP*	der	sg	fem	-	(15
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Tempelherr	NN	*))	tempelherr	sg	fem	-	15)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	So	ADV	(VROOT(PSEUDO(S*	so	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	kennt	VVFIN	*	kennen	sg	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Ihr	PPER	*	ihr	pl	*	-	(1)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	ihn	PPER	*	ihn	sg	masc	-	(7)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	noch	ADV	(AVP*	noch	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	nicht	PTKNEG	*))	nicht	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	sg	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	ich	PPER	(S*	ich	sg	*	-	(4)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	meine	VVFIN	*	mein	sg	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	von	APPR	(PP*	von	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Person	NN	*))	person	sg	fem	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Den	ART	(VROOT(PSEUDO(NP*	der	sg	masc	-	(7
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Saladin	NN	*)	saladin	sg	masc	-	7)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Noch	ADV	(VROOT(PSEUDO(CO(AVP*	noch	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	nicht	PTKNEG	*))	nicht	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(1)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	habe	VAFIN	*	haben	sg	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Ihn	PPER	(VP*	ihn	sg	masc	-	(7)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	vermieden	VVPP	*	vermeiden	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	nicht	PTKNEG	(VP(VP*	nicht	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	gesucht	VVPP	*)	suchen	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	kennen	VVINF	*))))	kennen	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(S(NP*	der	sg	masc	-	(16
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	allgemeine	ADJA	*	allgemein	sg	masc	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Ruf	NN	*)	ruf	sg	masc	-	16)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	sprach	VVFIN	*	sprechen	sg	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	viel	ADV	(AP*	viel	*	*	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	zu	PTKA	*	zu	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	gut	ADJD	*)	gut	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	Von	APPR	(NP(PP*	von	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	ihm	PPER	*)	ihm	sg	masc	-	(7)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	daß	KOUS	(S*	daß	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	ich	PPER	*	ich	sg	*	-	(1)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	lieber	ADV	*	lieber	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	glauben	VVINF	*	glauben	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	wollte	VMFIN	*))	wollen	sg	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	Als	APPR	(PP*	als	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	sehn	CARD	*))	sehn	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	19	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Doch	KON	(VROOT(PSEUDO(CS(S*	doch	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	nun	ADV	*)	nun	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	–	KON	*	–	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	wenn	KOUS	(S*	wenn	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	anders	ADV	*	anders	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	dem	PDS	*	der	sg	neut	-	(17)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	so	ADV	*	so	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	–	NN	(S*	–	sg	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	Hat	VAFIN	*	haben	sg	-	-	(17
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	er	PPER	*	er	sg	masc	-	(7)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	durch	APPR	(PP*	durch	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	Sparung	NN	*	sparung	sg	fem	-	(18
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	Eures	NE	(MPN*	dein	sg	neut	-	(19|(15)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	Lebens	NE	*)))))	leben	sg	neut	-	18)|19)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	.	$.	*	--	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	.	$.	*	--	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	19	.	$.	*))	--	-	-	-	17)

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ja	PTKANT	(VROOT(PSEUDO(S*	ja	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	;	$.	*	--	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Dem	PDS	(S*	der	sg	neut	-	(17)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	allerdings	ADV	*	allerdings	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	so	ADV	*))	so	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Das	ART	*	der	sg	neut	-	(19
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Leben	NN	*	leben	sg	neut	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	das	PRELS	*	der	sg	neut	-	19)|(19)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	leb	VVFIN	*	leb	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	'	$(	*	--	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	sein	PPOSAT	*	sein	sg	neut	-	(7)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	Geschenk	NN	*	geschenk	sg	neut	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	.	$.	*	--	-	-	-	-

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Durch	APPR	(VROOT(PSEUDO*	durch	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	das	ART	*	der	sg	neut	-	(18)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	er	PPER	(S*	er	sg	masc	-	(7)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	mir	PPER	*	sich	sg	*	-	(1)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Ein	ART	(NP*	ein	sg	masc	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	doppelt	ADJD	*	doppelt	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	dreifach	ADJD	*	dreifach	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	Leben	NN	*)	leben	sg	neut	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	schenkte	VVFIN	*)	schenken	sg	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Dies	PDS	(VROOT(PSEUDO(CS(S*	dieser	sg	neut	-	(18)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Hat	VAFIN	*	haben	sg	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	alles	PIS	(VP*	alle	sg	neut	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	zwischen	APPR	(PP*	zwischen	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	uns	PPER	*)	uns	pl	*	-	(20)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	verändert	VVPP	*))	verändern	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	;	$.	*	--	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	hat	VAFIN	(S*	haben	sg	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	Mit	APPR	(VP(PP*	mit	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	eins	PIS	*	einer	sg	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	ein	ART	(NP*	ein	sg	masc	-	(21
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	Seil	NN	*))	seil	sg	masc	-	21)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	mir	PPER	*	sich	sg	*	-	(1)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	umgeworfen	VVPP	*))	umgewerfen	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	das	ART	(S*	der	sg	neut	-	(21)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	Mich	PPER	*	mich	sg	neut	-	(1)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	seinem	PPOSAT	(NP*	sein	sg	masc	-	(7)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	Dienst	NN	*)	dienst	sg	masc	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	19	auf	APPR	(PP*	auf	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	20	ewig	ADJD	*)	ewig	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	21	fesselt	VVFIN	*))	fesseln	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	22	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Kaum	ADV	(VROOT(PSEUDO(AVP*	kaum	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Und	KON	(S*	und	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	kaum	ADV	*	kaum	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	kann	VMFIN	*	können	sg	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	ich	PPER	*	ich	sg	*	-	(1)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	es	PPER	(VP*	es	sg	neut	-	(22)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	nun	ADV	*	nun	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	erwarten	VVINF	*	erwarten	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	was	PWS	(S*	was	sg	neut	-	(22)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	Er	PPER	(VP*	er	sg	masc	-	(7)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	mir	PPER	*	sich	sg	*	-	(1)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	zuerst	ADV	*	zuerst	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	befehlen	VVINF	*)	befehlen	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	wird	VAFIN	*))))	werden	sg	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S(S*	ich	sg	*	-	(1)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	bin	VAFIN	*	sein	sg	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Bereit	NN	(NP*	bereit	-	-	-	(23
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	zu	APPR	(PP*	zu	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	allem	PIS	*)	alle	sg	neut	-	23)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	;	$.	*))	--	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	bin	VAFIN	*	sein	sg	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	bereit	ADJD	*	bereit	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	ihm	PPER	*	ihm	sg	masc	-	(7)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	zu	APPR	(PP*	zu	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	Gestehn	NN	*)	gestehn	sg	masc	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	daß	KOUS	(S*	daß	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	ich	PPER	*	ich	sg	*	-	(1)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	es	PPER	*	es	sg	neut	-	(23)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	Euertwegen	NN	*	euertwegen	pl	masc	-	(15)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	bin	VAFIN	*))	sein	sg	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Noch	ADV	(VROOT(PSEUDO(S*	noch	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	hab	VVFIN	*	hab	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	ich	PPER	(NP*	ich	sg	*	-	(4)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	selber	ADV	*)	selber	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	ihm	PPER	*	ihm	sg	masc	-	(7)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	nicht	PTKNEG	(VP(VP*	nicht	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	danken	VVINF	*)	danken	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	können	VMINF	*	können	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	:	$.	*	--	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	So	ADV	(AVP*	so	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	oft	ADV	*))	oft	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	ich	PPER	(NP*	ich	sg	*	-	(4)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	auch	ADV	*)	auch	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	ihm	PPER	(VP*	ihm	sg	masc	-	(7)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	in	APPR	(PP*	in	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	den	ART	*	der	sg	masc	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	Weg	NN	*)	weg	sg	masc	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	getreten	VVPP	*))	treten	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(S(NP*	der	sg	masc	-	(24
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Eindruck	NN	*	eindruck	sg	masc	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	den	PRELS	(S*	der	sg	masc	-	(24)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	auf	APPR	(PP*	auf	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	ihn	PPER	*)	ihn	sg	masc	-	(7)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	machte	VVFIN	*))	machen	sg	-	-	24)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	kam	VVFIN	*	kommen	sg	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	So	ADV	(AP*	so	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	schnell	ADJD	*)	schnell	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	als	KOKOM	(S*	als	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	schnell	ADJD	*	schnell	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	er	PPER	(NP*	er	sg	masc	-	(24)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	wiederum	ADV	*)	wiederum	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	verschwunden	VVPP	*))	verschwinden	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wer	PWS	(VROOT(PSEUDO(S(AVP(S*	wer	sg	masc	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	weiß	VVFIN	*)	weiß	sg	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	ob	KOUS	*)	ob	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	er	PPER	*	er	sg	masc	-	(7)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	sich	PRF	(VP*	sich	sg	-	-	(7)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	meiner	PIS	*	mein	sg	fem	-	(50)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	gar	ADV	*	gar	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	erinnert	VVPP	*))	erinnern	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	dennoch	ADV	*	dennoch	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	muß	VMFIN	*	müssen	sg	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	er	PPER	*	er	sg	masc	-	(7)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	einmal	ADV	(AVP*	einmal	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	wenigstens	ADV	*)	wenigstens	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	Sich	PRF	(VP*	sich	sg	fem	-	(7)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	meiner	PIS	*	mein	sg	fem	-	(50)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	noch	ADV	*	noch	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	erinnern	VVINF	*	erinnern	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	um	KOUI	(VP*	um	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	mein	PPOSAT	(NP*	mein	sg	neut	-	(25|(4)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	Schicksal	NN	*	schicksal	sg	neut	-	25)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	Ganz	ADV	*)	ganz	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	entscheiden	VVINF	*))))	entscheiden	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	19	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	genug	ADV	*	genug	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	daß	KOUS	*	daß	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Auf	APPR	*	auf	sg	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	sein	PPOSAT	*	sein	sg	neut	-	(26|(7)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	Geheiß	NN	*	geheiß	sg	neut	-	26)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	noch	ADV	*	noch	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	bin	VAFIN	*	sein	sg	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	mit	APPR	*	mit	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	seinem	PPOSAT	*	sein	sg	masc	-	(27|(7)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	Willen	NN	*	wille	sg	masc	-	27)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	Noch	ADV	*	noch	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	leb	VVFIN	*	leb	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	'	$(	*	--	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	:	$.	*	--	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	19	muß	VMFIN	*	müssen	sg	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	20	nun	ADV	*	nun	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	21	auch	ADV	*	auch	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	22	von	APPR	*	von	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	23	ihm	PPER	*	ihm	sg	masc	-	(7)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	24	erwarten	VVFIN	*	erwarten	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	25	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	26	Nach	APPR	*	nach	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	27	wessen	PWAT	*	wessen	sg	*	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	28	Willen	NN	*	wille	sg	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	29	ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	30	zu	PTKZU	*	zu	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	31	leben	VVINF	*	leben	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	32	habe	VAFIN	*	haben	sg	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	33	.	$.	*	--	-	-	-	-

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nicht	PTKNEG	(VROOT(PSEUDO(S(AVP*	nicht	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	anders	ADV	*)	anders	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	;	$.	*	--	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	um	KOUI	(AVP(AVP*	um	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	so	ADV	*)	so	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	mehr	ADV	*)	mehr	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	will	VMFIN	*	wollen	sg	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	ich	PPER	*	ich	sg	*	-	(1)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	säumen	VVINF	*)	säumen	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Es	PPER	(S*	es	sg	neut	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	fällt	VVFIN	*	fallen	sg	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	vielleicht	ADV	*	vielleicht	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	ein	ART	(NP*	ein	sg	neut	-	(28
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Wort	NN	*	wort	sg	neut	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	das	PRELS	(S*	der	sg	neut	-	(28)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	mir	PPER	(VP*	sich	sg	masc	-	(1)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	auf	APPR	(PP*	auf	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	Euch	PPER	*)	euch	pl	*	-	28)|(15)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	Zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	kommen	VVINF	*)))))	kommen	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	Anlaß	NN	*	anlaß	sg	masc	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	gibt	VVFIN	*	geben	sg	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Erlaubt	VVFIN	*	erlauben	sg	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	verzeiht	VVFIN	*	verzeihen	sg	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	–	PPER	*	–	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Ich	PPER	*	ich	sg	*	-	(1)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	eile	PIS	*	eilen	sg	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	–	$(	*	–	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	Wenn	KOUS	*	wenn	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	wenn	KOUS	*	wenn	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	aber	ADV	*	aber	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	sehn	CARD	*	sehn	pl	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	wir	PPER	*	wir	pl	*	-	(29)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	Euch	PRF	*	euch	pl	*	-	(15)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	Bei	APPR	*	bei	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	uns	PPER	*	uns	pl	*	-	(29)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	?	$.	*	--	-	-	-	-

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	So	ADV	(VROOT(PSEUDO(S*	so	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	bald	ADV	*	bald	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	darf	VMFIN	*)	dürfen	sg	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	So	ADV	(VROOT(PSEUDO(S*	so	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	bald	ADV	*	bald	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Ihr	PPER	*	ihr	pl	*	-	(15)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	wollt	VMFIN	*)	wollen	pl	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Noch	ADV	(VROOT(PSEUDO(S*)	noch	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	heut	VVFIN	*	heuen	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Euer	PPOSAT	(NP*	euer	sg	*	-	(30|(15)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Name	NN	*))	name	sg	*	-	30)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	muß	VMFIN	(S*	müssen	sg	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	ich	PPER	(VP*	ich	sg	*	-	(1)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	bitten	VVINF	*))	bitten	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Mein	PPOSAT	(VROOT(PSEUDO(CS(S(NP*	mein	sg	masc	-	(30|(4)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Name	NN	*)	name	sg	masc	-	30)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	war	VAFIN	*	sein	sg	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	–	ADJD	*)	–	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	ist	VAFIN	(S*	sein	sg	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Curd	NE	*	curd	sg	masc	-	(31
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	von	APPR	(PP*	von	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	Stauffen	NN	*)))	stauffen	pl	masc	-	31)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Curd	NE	*	curd	-	-	-	(31)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Von	APPR	(VROOT(PSEUDO(PP*	von	-	-	-	(30
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Stauffen	NN	*)	stauffen	pl	masc	-	30)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Stauffen	NN	*	stauffen	-	-	-	(30)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Stauffen	NN	*	stauffen	-	-	-	(30)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Warum	PWAV	(VROOT(PSEUDO(S*	warum	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	fällt	VVFIN	*	fallen	sg	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Euch	PPER	*	euch	sg	neut	-	(1)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	das	PDS	*	der	sg	neut	-	(30)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	so	ADV	*	so	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	auf	PTKVZ	*)	auf	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Von	APPR	(VROOT(PSEUDO(PP*	von	-	-	-	(32
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Stauffen	NN	*)	stauffen	pl	masc	-	32)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Des	ART	(S(NP*	der	-	-	-	(32
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Geschlechts	NN	*)	geschlecht	-	-	-	32)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Sind	VAFIN	*	sein	pl	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	wohl	ADV	*	wohl	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	schon	ADV	*)	schon	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	mehrere	PIS	*	mehrere	pl	*	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	.	$.	*	--	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	.	$.	*	--	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	O	ITJ	(VROOT(PSEUDO(AVP(S*)	O	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	ja	ADV	*)	ja	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	hier	ADV	(VROOT(PSEUDO(S*	hier	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	waren	VAFIN	*	sein	pl	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Hier	ADV	(S*	hier	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	faulen	VVFIN	*	faulen	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	des	ART	(NP*	der	sg	masc	-	(32
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	Geschlechts	NN	*)	geschlecht	sg	masc	-	32)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	schon	ADV	*	schon	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	mehrere	VVFIN	*))	mehrere	pl	*	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Mein	PPOSAT	(VROOT(PSEUDO(S(NP*	mein	sg	neut	-	(33|(4)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Oheim	NE	*	oheim	sg	neut	-	33)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	selbst	ADV	*	selbst	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	–	NN	(NP*	–	sg	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	mein	PPOSAT	(NP*	mein	sg	masc	-	(33|(4)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	Vater	NN	*)))	vater	sg	masc	-	33)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	will	VMFIN	*	wollen	sg	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	ich	PPER	(VP*	ich	sg	*	-	(4)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	sagen	VVINF	*))	sagen	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	–	XY	*	–	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	Doch	NE	*	doch	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	warum	PWAV	(S*	warum	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	schärft	VVFIN	*)	schärfen	sg	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	sich	PRF	(NP(AP*	sich	sg	-	-	(34)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	Euer	ADJA	*)	euer	sg	*	-	(34|(1)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	Blick	NN	*	blick	-	-	-	34)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	auf	APPR	(PP*	auf	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	19	mich	PPER	*))	mich	sg	*	-	(4)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	20	Je	ADV	(AVP*	je	pl	*	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	21	mehr	ADV	*)	mehr	*	*	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	22	und	KON	(S*	und	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	23	mehr	ADV	*)	mehr	*	*	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	24	?	$.	*))	--	-	-	-	-

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	O	XY	*	O	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	nichts	PIS	*	nichts	*	neut	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*	--	-	-	-	-

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	o	XY	*	O	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	nichts	PIS	*	nichts	*	neut	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*	--	-	-	-	-

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wie	PWAV	(VROOT(PSEUDO(S*	wie	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	kann	VMFIN	*	können	sg	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Ich	PPER	*	ich	sg	*	-	(1)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Euch	PPER	(VP*	euch	pl	*	-	(15)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	zu	APPR	(PP*	zu	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	sehn	CARD	*)	sehn	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	ermüden	VVINF	*))	ermüden	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	?	$.	*))	--	-	-	-	-

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Drum	ADV	(VROOT(PSEUDO(S*	drum	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	verlaß	VVFIN	*	verlaß	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Euch	PPER	*	euch	sg	-	-	(1)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	zuerst	ADV	*)	zuerst	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(S(NP*	der	sg	masc	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Blick	NN	*	blick	sg	masc	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	des	ART	(NP*	der	sg	masc	-	(35
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Forschers	NN	*))	forscher	sg	masc	-	35)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	fand	VVFIN	*	finden	sg	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Nicht	NN	*	nicht	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	selten	ADJD	(NP*	selten	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	mehr	PIS	*	mehr	*	*	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	als	KOKOM	(VP(NP*	als	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	er	PPER	*)	er	sg	masc	-	(35)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	finden	VVINF	*)))	finden	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	wünschte	VVFIN	*)	wünschen	sg	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	fürcht	VVFIN	*	fürchen	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	ihn	PPER	*	ihn	sg	masc	-	(34)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Nathan	NE	*	nathan	sg	*	-	(1)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	.	$.	*	--	-	-	-	-

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Laßt	VVIMP	(VROOT(PSEUDO(CS(S*	lassen	pl	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	die	ART	(NP*	der	sg	fem	-	(36
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Zeit	NN	*)	zeit	sg	fem	-	36)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	allmählig	ADJD	*)	allmählig	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Und	KON	(S*	und	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	nicht	PTKNEG	(VP*	nicht	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	die	ART	(NP*	der	pl	*	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	Neugier	NN	*)	neugier	pl	*	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	unsre	ADJA	(NP*	unsr	sg	fem	-	(37)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	Kundschaft	NN	*)	kundschaft	sg	fem	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	machen	VVINF	*)))	machen	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Er	PPER	(VROOT(PSEUDO(S*	er	sg	masc	-	(15)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	geht	VVFIN	*)	gehen	sg	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*))	nathan	-	-	-	(1)

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	der	ART	(VROOT(PSEUDO(S*	der	sg	masc	-	(1)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	ihm	PPER	*	ihm	sg	masc	-	(15)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	mit	APPR	(PP*	mit	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Erstaunen	NN	*)	erstaunen	sg	neut	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	nachsieht	VVFIN	*)	nachsehen	sg	neut	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	»	XY	(VROOT(PSEUDO*	»	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Der	ART	(PP*	der	sg	masc	-	(35
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Forscher	NN	*	forscher	sg	masc	-	35)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	fand	VVFIN	(NP(S*	finden	sg	-	-	(38)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	nicht	PTKNEG	(AP*	nicht	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	selten	ADJD	*))	selten	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	mehr	ADV	(PP*	mehr	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	als	KOKOM	(S*	als	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	er	PPER	(VP*	er	sg	masc	-	(35)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	Zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	finden	VVINF	*))	finden	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	wünschte	VVFIN	*))	wünschen	sg	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	.	$.	*))	--	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	«	XY	*))	«	-	-	-	-

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	es	PPER	*	es	sg	neut	-	(39)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	doch	ADV	*	doch	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	als	KOKOM	*	als	-	-	-	(39
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	ob	KOUS	*	ob	-	-	-	39)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	In	APPR	*	in	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	meiner	PPOSAT	*	mein	sg	fem	-	(40|(1)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	Seel	NN	*	seel	sg	fem	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	'	$(	*	--	-	-	-	40)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	er	PPER	*	er	sg	masc	-	(15)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	lese	VVFIN	*	lesen	sg	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	!	$.	*	--	-	-	-	-

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Wahrlich	NN	(NP*	wahrlich	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	ja	ADV	*)	ja	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	;	$.	*	--	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Das	PDS	(S*	der	sg	neut	-	(38)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	könnt	VVFIN	*	können	sg	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	auch	ADV	*	auch	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	mir	PPER	*	sich	sg	*	-	(1)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	begegnen	VVFIN	*)	begegnen	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Nicht	PTKNEG	(NP(AVP*	nicht	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	allein	ADV	*)	allein	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Wolfs	NE	(MPN*	wolf	sg	masc	-	(41)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Wuchs	NE	*)	wuchs	sg	masc	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	Wolfs	NE	*)	wolf	sg	masc	(PER*)	(42|(41)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	Gang	NN	*	gang	sg	masc	-	42)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	:	$.	*	--	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	auch	ADV	(NP*	auch	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	seine	PPOSAT	*	sein	sg	fem	-	(43|(41)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	Stimme	NN	*)	stimme	sg	fem	-	43)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	So	ADV	*	so	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Vollkommen	NN	*	vollkommen	sg	neut	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	so	ADV	*	so	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	warf	VVFIN	*	werfen	sg	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	Wolf	NE	*	wolf	sg	*	(PER*)	(41)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	sogar	ADV	*	sogar	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	den	ART	*	der	sg	masc	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	Kopf	NN	*	kopf	sg	masc	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	;	$.	*	--	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	Trug	NN	*	trug	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	Wolf	NE	*	wolf	-	-	(PER*)	(41)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	sogar	ADV	*	sogar	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	das	ART	*	der	sg	neut	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	Schwerd	NN	*	schwerd	sg	neut	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	im	APPRART	*	in	sg	neut	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	Arm	NN	*	arm	sg	neut	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	'	$(	*	--	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	19	;	$.	*	--	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	20	strich	VVFIN	*	streichen	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	21	Wolf	NE	*	wolf	-	-	(PER*)	(41)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	22	Sogar	NE	*	sogar	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	23	die	ART	*	der	pl	neut	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	24	Augenbraunen	NN	*	augenbraune	pl	neut	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	25	mit	APPR	*	mit	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	26	der	ART	*	der	sg	fem	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	27	Hand	NN	*	hand	sg	fem	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	28	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	29	Gleichsam	NN	*	gleichsam	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	30	das	ART	*	der	sg	neut	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	31	Feuer	NN	*	feuer	sg	neut	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	32	seines	PPOSAT	*	sein	sg	neut	-	(41)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	33	Blicks	NN	*	blick	sg	neut	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	34	zu	PTKZU	*	zu	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	35	bergen	VVINF	*	bergen	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	36	.	$.	*	--	-	-	-	-

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Wie	PWAV	(S*	wie	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	solche	PIAT	(NP*	solcher	sg	fem	-	(44
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	tiefgeprägte	ADJA	*	tiefgeprägt	sg	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Bilder	NN	*)	bild	pl	neut	-	44)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	doch	ADV	*	doch	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	Zu	APPR	(PP*	zu	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	Zeiten	NN	*)	zeit	pl	fem	-	(45)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	in	APPR	(VP(PP*	in	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	uns	PPER	*)	uns	pl	*	-	(46)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	schlafen	VVINF	*)	schlafen	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	können	VMFIN	*)	können	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	bis	APPR	*	bis	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	Ein	ART	(NP*	ein	sg	neut	-	(47
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	Wort	NN	*	wort	sg	neut	-	47)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	ein	ART	(S(NP*	ein	sg	neut	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	Laut	NN	*)	laut	sg	neut	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	19	sie	PPER	*	sie	sg	fem	-	(44)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	20	weckt	VVFIN	*))	wecken	sg	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	21	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Von	APPR	*	von	-	-	-	(32
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Stauffen	NN	*	stauffen	pl	masc	-	32)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ganz	NN	*	ganz	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	recht	ADJD	(CS*	recht	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	ganz	ADV	(S(NP*	ganz	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	recht	NN	*)	recht	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	;	$.	*	--	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	Filneck	NN	(CNP*	filneck	-	-	-	(41)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	und	KON	*	und	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	Stauffen	NN	*)))	stauffen	-	-	-	(48)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ich	PPER	(S*	ich	sg	*	-	(1)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	will	VMFIN	*	wollen	sg	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	das	ART	(VP(AP(AVP*	der	sg	neut	-	(49)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	bald	ADV	*)	bald	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	genauer	ADJD	*)	genau	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	wissen	VVINF	*))	wissen	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	;	$.	*	--	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	bald	ADV	*	bald	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nur	ADV	(VROOT(PSEUDO(PP*	nur	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	erst	ADV	*	erst	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	zum	APPRART	*	zu	-	-	-	(7
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Saladin	NN	*)	saladin	-	-	-	7)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Doch	KON	*	doch	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	wie	PWAV	*	wie	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	?	$.	*	--	-	-	-	-

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	lauscht	VVFIN	(VROOT(PSEUDO(S*	lauschen	sg	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	dort	ADV	*	dort	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Nicht	PTKNEG	(NP*	nicht	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Daja	NE	*	daja	-	-	-	(0)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	?	$.	*))))	--	-	-	-	-

Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Nun	ADV	(AVP*	nun	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	so	ADV	*)	so	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	komm	VVIMP	(S*	komm	sg	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	nur	ADV	*	nur	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	näher	ADJD	*)	nah	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	Daja	NE	*	daja	-	-	(PER*)	(0)
Nathan_Act2_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

#end document
