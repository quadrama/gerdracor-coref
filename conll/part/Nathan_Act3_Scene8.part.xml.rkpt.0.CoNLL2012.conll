#begin document (Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll); part 000
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	Die	ART	(VROOT(PSEUDO(S(NP*	der	sg	fem	-	(15
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	Szene	NN	*	szene	sg	fem	-	15)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	:	$.	*	--	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	3	unter	APPR	(CPP(PP*	unter	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	4	den	ART	*	der	pl	*	-	(16
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	5	Palmen	NN	*)	palme	pl	*	-	16)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	7	in	APPR	(PP*	in	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	8	der	ART	*	der	sg	fem	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	9	Nähe	NN	*	nähe	sg	fem	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	10	des	ART	(NP*	der	sg	masc	-	(17
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	11	Klosters	NN	*))))	kloster	sg	masc	-	17)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	13	wo	PWAV	(S*	wo	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	14	der	ART	(NP*	der	sg	masc	-	(18
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	15	Tempelherr	NN	*)	tempelherr	sg	masc	-	18)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	16	Nathans	NE	*	nathan	sg	neut	-	(1)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	17	wartet	VVFIN	*))	warten	sg	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	18	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(18
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	TEMPELHERR	NE	*)))	tempelherr	-	-	-	18)

Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	geht	VVFIN	(VROOT(PSEUDO(S*	gehen	sg	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	mit	APPR	(PP*	mit	sg	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	3	sich	PRF	*	sich	sg	-	-	(18)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	4	selbst	ADV	*)	selbst	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	5	kämpfend	ADJD	*	kämpfend	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	7	auf	PTKVZ	(CAVP*	auf	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	8	und	KON	*	und	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	9	ab	PTKVZ	*)	ab	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	10	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	11	bis	KON	*	bis	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	12	er	PPER	*	er	sg	masc	-	(18)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	13	losbricht	VVFIN	*)	losbrechen	sg	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	14	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	Hier	ADV	(S*	hier	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	hält	VVFIN	*	halten	sg	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	3	das	ART	(NP*	der	sg	neut	-	(18
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	4	Opfertier	NN	*))	opfertier	sg	neut	-	18)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	5	ermüdet	VVFIN	(S*	ermüden	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	6	still	PTKVZ	*)	still	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	Nun	ADV	(S(ISU*	nun	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	gut	ADJD	*))	gut	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(CS(S*	ich	sg	*	-	(4)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	mag	VMFIN	*	mögen	sg	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	4	mag	VMFIN	(S*	mögen	sg	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	5	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	6	näher	ADJD	(VP*	nah	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	7	wissen	VVINF	*	wissen	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	9	Was	PWS	(S*	was	sg	neut	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	10	in	APPR	(PP*	in	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	11	mir	PPER	*)	sich	sg	*	-	(4)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	12	vorgeht	VVFIN	*))))	vorgehen	sg	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	13	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	14	mag	VMFIN	(S*	mögen	sg	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	15	voraus	ADV	(VP*	voraus	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	16	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	17	wittern	VVINF	*	wittern	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	18	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	19	Was	PWS	(S*	was	sg	neut	-	(19
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	20	vorgehn	VVPP	*	vorgehn	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	21	wird	VAFIN	*))))	werden	sg	-	-	19)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	22	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	Genug	NN	(NP*	genug	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	3	ich	PPER	(S*	ich	sg	*	-	(4)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	4	bin	VAFIN	*	sein	sg	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	5	umsonst	ADV	*))	umsonst	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	6	Geflohn	NN	*	geflohn	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	7	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	umsonst	ADV	(VROOT(PSEUDO*	umsonst	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	Und	KON	*	und	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	weiter	ADV	*	weiter	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	3	konnt	ADJD	*	konnen	sg	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	4	'	$(	*	--	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	5	ich	PPER	*	ich	sg	fem	-	(4)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	6	doch	ADV	*	doch	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	7	Auch	ADV	*	auch	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	8	nichts	PIS	*	nichts	*	neut	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	10	als	KOKOM	*	als	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	11	fliehn	CARD	*	fliehn	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	12	?	$.	*	--	-	-	-	-

Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	Nun	ADV	*	nun	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	komm	VVIMP	*	komm	sg	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	3	'	$(	*	--	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	5	was	PWS	*	was	sg	neut	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	6	kommen	VVINF	*	kommen	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	7	soll	VMFIN	*	sollen	sg	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	8	!	$.	*	--	-	-	-	-

Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ihm	PPER	(S(VP*	ihm	sg	masc	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	auszubeugen	VVIZU	*	ausbeugen	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	4	war	VAFIN	(S*	sein	sg	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	5	der	ART	(AP(NP*	der	sg	masc	-	(20
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	6	Streich	NN	*)	streich	sg	masc	-	20)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	7	zu	PTKA	*	zu	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	8	schnell	ADJD	*))))	schnell	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	9	Gefallen	NN	*	gefallen	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	10	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	11	unter	APPR	(CS(VP(AVP*	unter	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	12	den	ART	*)	der	pl	*	-	(20)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	13	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	14	kommen	VVINF	*)	kommen	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	15	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	16	ich	PPER	(AP*	ich	sg	*	-	(4)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	17	So	ADV	*	so	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	18	lang	ADJD	*))	lang	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	19	und	KON	*	und	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	20	viel	ADV	(S*	viel	*	*	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	21	mich	PPER	*	mich	sg	*	-	(4)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	22	weigerte	VVFIN	*))	weigern	sg	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	23	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	Sie	PPER	*	sie	pl	*	-	(2)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	sehn	CARD	*	sehn	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	4	Die	KOUS	*	der	sg	-	-	(2)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	5	ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	6	zu	APPR	*	zu	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	7	sehn	CARD	*	sehn	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	8	so	ADV	*	so	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	9	wenig	PIS	*	wenig	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	10	lüstern	VVINF	*	lüstern	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	11	war	VAFIN	*	sein	sg	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	13	–	KOUS	*	–	sg	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	14	Sie	PPER	*	sie	sg	fem	-	(2)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	15	sehn	CARD	*	sehn	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	16	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	17	und	KON	*	und	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	18	der	ART	*	der	sg	masc	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	19	Entschluß	NN	*	entschluß	sg	masc	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	20	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	21	sie	PPER	*	sie	*	*	-	(2)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	22	wieder	ADV	*	wieder	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	23	aus	APPR	*	aus	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	24	Den	ART	*	der	pl	neut	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	25	Augen	NN	*	auge	pl	neut	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	26	nie	ADV	*	nie	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	27	zu	PTKZU	*	zu	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	28	lassen	VVINF	*	lassen	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	29	–	$.	*	–	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	30	Was	PWS	*	was	sg	neut	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	31	Entschluß	NN	*	entschluß	sg	neut	-	(21)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	32	?	$.	*	--	-	-	-	-

Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	Entschluß	NN	*	entschluß	sg	masc	-	(21)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	Vorsatz	NN	*	vorsatz	sg	masc	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	4	Tat	NN	*	tat	sg	*	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	5	:	$.	*	--	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	6	und	KON	*	und	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	7	ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	9	ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	10	litt	VVFIN	*	leiden	sg	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	11	'	$(	*	--	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	13	Ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	14	litte	VVFIN	*	litten	sg	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	15	bloß	PTKVZ	*	bloß	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	16	.	$.	*	--	-	-	-	-

Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	Sie	PPER	*	sie	pl	*	-	(2)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	sehn	CARD	*	sehn	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	4	und	KON	*	und	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	5	das	ART	*	der	sg	neut	-	(22
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	6	Gefühl	NN	*	gefühl	sg	neut	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	22)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	8	An	APPR	*	an	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	9	sie	PPER	*	sie	sg	fem	-	(2)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	10	verstrickt	VVPP	*	verstricken	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	12	in	APPR	*	in	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	13	sie	PPER	*	sie	sg	fem	-	(2)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	14	verwebt	VVPP	*	verweben	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	15	zu	PTKZU	*	zu	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	16	sein	VAINF	*	sein	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	17	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	18	War	VAFIN	*	sein	sg	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	19	eins	PIS	*	eins	sg	neut	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	20	.	$.	*	--	-	-	-	-

Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO(S*	–	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	Bleibt	VVFIN	*	bleiben	sg	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	eins	PIS	*)	eins	sg	neut	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	Von	APPR	*	von	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	ihr	PPER	*	ihr	sg	fem	-	(2)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	3	getrennt	VVPP	*	trennen	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	4	Zu	PTKZU	*	zu	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	5	leben	VVINF	*	leben	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	7	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	8	mir	PPER	*	sich	sg	*	-	(4)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	9	ganz	ADV	*	ganz	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	10	undenkbar	ADJD	*	undenkbar	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	11	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	12	wär	VAFIN	*	sein	sg	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	13	'	$(	*	--	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	14	Mein	PPOSAT	*	mein	sg	masc	-	(4)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	15	Tod	NN	*	tod	sg	masc	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	16	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	17	–	NN	*	–	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	18	und	KON	*	und	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	19	wo	PWAV	*	wo	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	20	wir	PPER	*	wir	pl	*	-	(23)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	21	immer	ADV	*	immer	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	22	nach	APPR	*	nach	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	23	dem	ART	*	der	sg	masc	-	(24
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	24	Tode	NN	*	tod	sg	masc	-	24)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	25	Noch	ADV	*	noch	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	26	sind	VAFIN	*	sein	pl	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	27	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	28	auch	ADV	*	auch	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	29	da	ADV	*	da	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	30	mein	PPOSAT	*	mein	sg	masc	-	(25|(4)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	31	Tod	NN	*	tod	sg	masc	-	25)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	32	.	$.	*	--	-	-	-	-

Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ist	VAFIN	(S*	sein	sg	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	das	PDS	*	der	sg	neut	-	(22)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	3	nun	ADV	*	nun	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	4	Liebe	NN	*	liebe	sg	fem	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	5	:	$.	*	--	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	6	So	ADV	(S(AVP*	so	-	-	-	(26
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	7	–	ADJD	*)	–	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	8	liebt	VVFIN	*	lieben	sg	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	9	der	ART	(NP*	der	sg	masc	-	(18
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	10	Tempelritter	NN	*)	tempelritter	sg	masc	-	18)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	11	freilich	ADV	*	freilich	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	13	–	PPER	(S*	–	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	14	liebt	VVFIN	*	lieben	sg	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	15	Der	ART	(NP*	der	sg	masc	-	(18
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	16	Christ	NN	*))))	christ	sg	masc	-	18)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	17	das	ART	(NP*	der	sg	neut	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	18	Judenmädchen	NN	*	judenmädchen	sg	neut	-	(2)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	19	freilich	ADV	*)	freilich	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	20	.	$.	*))	--	-	-	-	26)

Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	Was	PWS	*	was	sg	neut	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	tuts	FM	*	tut	-	-	-	(26)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	hab	VAFIN	*	hab	sg	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	3	'	$(	*	--	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	4	in	APPR	*	in	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	5	dem	ART	*	der	sg	neut	-	(14
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	6	gelobten	ADJA	*	gelobt	sg	neut	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	7	Lande	NN	*	land	sg	neut	-	14)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	9	–	$.	*	–	sg	neut	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	10	Und	KON	*	und	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	11	drum	ADV	*	drum	sg	neut	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	12	auch	ADV	*	auch	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	13	mir	PPER	*	sich	sg	*	-	(4)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	14	gelobt	VVPP	*	loben	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	15	auf	APPR	*	auf	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	16	immerdar	ADV	*	immerdar	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	17	!	$.	*	--	-	-	-	-

Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	Der	ART	(NP*	der	sg	masc	-	(27
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	Vorurteile	NN	*	vorurteil	sg	masc	-	27)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	3	mehr	ADV	(VP*	mehr	*	*	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	4	schon	ADV	*	schon	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	5	abgelegt	VVPP	*))	ablegen	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	Was	PWS	(S*	was	sg	neut	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	will	VMFIN	*)	wollen	sg	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	3	mein	PPOSAT	(NP*	mein	sg	neut	-	(28|(4)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	4	Orden	NN	*	orden	sg	neut	-	28)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	5	auch	ADV	*)	auch	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(CS(S*	ich	sg	*	-	(18|(4)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	Tempelherr	NN	*	tempelherr	sg	-	-	18)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	Bin	VAFIN	*	sein	sg	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	3	tot	ADJD	*	tot	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	4	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	5	war	VAFIN	(S*	sein	sg	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	6	von	APPR	(PP*	von	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	7	dem	ART	*	der	sg	masc	-	(29
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	8	Augenblick	NN	*)	augenblick	sg	masc	-	29)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	9	ihm	PPER	*	ihm	sg	masc	-	(18)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	10	tot	ADJD	*))	tot	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	12	Der	KOUS	(S*	der	sg	masc	-	(29)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	13	mich	PPER	*	mich	sg	*	-	(4)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	14	zu	APPR	(PP*	zu	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	15	Saladins	NE	*	saladin	sg	*	-	(30|(7)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	16	Gefangnen	NN	*)	gefangnen	sg	*	-	30)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	17	machte	VVFIN	*))	machen	sg	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	18	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	Der	ART	*	der	sg	masc	-	(31|(32
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	Kopf	NN	*	kopf	sg	masc	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	3	den	ART	*	der	sg	masc	-	(32)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	4	Saladin	NN	*	saladin	sg	masc	-	(7)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	5	mir	PPER	*	sich	sg	*	-	(4)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	6	schenkte	VVFIN	*	schenken	sg	-	-	32)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	8	wär	VAFIN	*	sein	sg	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	9	'	$(	*	--	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	10	Mein	PPOSAT	*	mein	sg	masc	-	(4)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	11	alter	ADJA	*	alt	sg	masc	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	12	?	$.	*	--	-	-	-	-

Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	ein	ART	*	ein	sg	masc	-	(33
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	3	neuer	ADJA	*	neu	sg	masc	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	4	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	5	der	ART	*	der	sg	masc	-	(33)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	6	von	APPR	*	von	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	7	allem	PIS	*	alle	sg	neut	-	33)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	8	Nichts	PIS	*	nichts	*	neut	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	9	weiß	VVFIN	*	weiß	sg	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	11	was	PRELS	*	was	sg	neut	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	12	jenem	PDAT	*	jener	sg	masc	-	(34)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	13	eingeplaudert	VVPP	*	einplaudern	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	14	ward	VVFIN	*	werden	sg	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	15	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	16	Was	PWS	*	was	sg	neut	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	17	jenen	PDS	*	jener	sg	*	-	(34)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	18	band	VVFIN	*	binden	*	*	-	31)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	19	Den	ART	*	der	sg	masc	-	(35
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	20	väterlichen	ADJA	*	väterlich	sg	masc	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	21	Himmel	NN	*	himmel	sg	masc	-	35)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	22	mehr	ADV	*	mehr	*	*	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	23	gemacht	VVPP	*	machen	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	24	.	$.	*	--	-	-	-	-

Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	Das	ART	*	der	sg	neut	-	(31)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	spür	FM	*	spüren	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	4	ja	ADV	*	ja	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	5	.	$.	*	--	-	-	-	-

Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	Denn	KON	*	denn	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	erst	ADV	*	erst	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	mit	APPR	*	mit	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	3	ihm	PPER	*	ihm	sg	masc	-	(32)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	4	beginn	VVFIN	*	beginn	sg	masc	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	5	'	$(	*	--	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	6	Ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	7	so	ADV	*	so	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	8	zu	PTKZU	*	zu	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	9	denken	VVINF	*	denken	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	11	wie	KOKOM	*	wie	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	12	mein	PPOSAT	*	mein	sg	masc	-	(36|(4)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	13	Vater	NN	*	vater	sg	masc	-	36)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	14	hier	ADV	*	hier	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	15	Gedacht	NN	*	gedacht	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	16	muß	VMFIN	*	müssen	sg	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	17	haben	VAFIN	*	haben	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	18	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	19	wenn	KOUS	*	wenn	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	20	man	PIS	*	man	sg	*	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	21	Märchen	NN	*	märchen	sg	*	-	(37)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	22	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	23	Von	APPR	*	von	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	24	ihm	PPER	*	ihm	sg	masc	-	(36)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	25	mir	PPER	*	sich	sg	*	-	(4)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	26	vorgelogen	VVPP	*	voeliegen	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	27	.	$.	*	--	-	-	-	-

Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	Märchen	NN	*	märchen	pl	fem	-	(37)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	doch	ADV	(NP(AP*	doch	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	Ganz	ADV	*	ganz	-	-	-	(37
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	3	glaubliche	ADJA	*))	glaublich	sg	fem	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	4	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	5	die	ART	(S(NP*	der	sg	fem	-	(37)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	6	glaublicher	ADJA	*)	glaublich	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	7	mir	PPER	*	sich	sg	*	-	(4)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	8	nie	ADV	(VP*	nie	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	10	Als	APPR	(NP(AP(PP*	als	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	11	itzt	ADJD	*)	itzt	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	12	geschienen	ADJA	*)	geschien	-	-	-	37)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	13	Zu	NN	*)	zu	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	14	straucheln	VVINF	*)	straucheln	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	15	laufe	VVFIN	*	laufen	sg	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	16	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	17	wo	PWAV	(S*	wo	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	18	er	PPER	*	er	sg	masc	-	(36)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	19	fiel	VVFIN	*))	fallen	sg	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	20	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	Er	PPER	(S*	er	sg	masc	-	(36)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	fiel	VVFIN	*)	fallen	sg	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(4)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	will	VMFIN	*	wollen	sg	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	mit	APPR	(VP(PP*	mit	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	3	Männern	NN	*)	mann	pl	masc	-	(38)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	4	lieber	ADV	*	lieber	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	5	fallen	VVINF	*	fallen	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	7	als	KOKOM	(S*	als	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	8	Mit	APPR	(PP*	mit	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	9	Kindern	NN	*)	kind	pl	neut	-	(39)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	10	stehn	VVFIN	*)))	stehn	pl	neut	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	Sein	PPOSAT	(S(NP*	sein	sg	neut	-	(36)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	Beispiel	NN	*)	beispiel	sg	neut	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	3	bürget	VVFIN	*	bürgen	sg	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	4	mir	PPER	*)	sich	sg	*	-	(4)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	5	Für	APPR	(NP(PP*	für	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	6	seinen	PPOSAT	*	sein	sg	masc	-	(36)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	7	Beifall	NN	*))	beifall	sg	masc	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	an	APPR	(PP*	an	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	wessen	PWAT	*	wessen	sg	masc	-	(40
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	3	Beifall	NN	*)	beifall	sg	masc	-	40)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	4	Liegt	VVFIN	*	liegen	sg	masc	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	5	mir	PPER	*	sich	sg	*	-	(4)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	6	denn	ADV	*	denn	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	7	sonst	ADV	*)	sonst	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	8	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	An	APPR	*	an	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	Nathans	NN	*	nathan	sg	*	-	(1)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	O	NE	(NP*	O	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	an	APPR	(PP*	an	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	3	dessen	PRELAT	*	der	sg	masc	-	(1)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	4	Ermuntrung	NN	*))	ermuntrung	sg	fem	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	5	mehr	ADV	(NP*	mehr	*	*	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	7	als	APPR	(PP*	als	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	8	Beifall	NN	*)	beifall	sg	masc	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	10	kann	VMFIN	(S*	können	sg	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	11	es	PPER	*	es	sg	neut	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	12	mir	PPER	(VP*	sich	sg	*	-	(4)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	13	Noch	ADV	(AP*	noch	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	14	weniger	PIS	*)	weniger	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	15	gebrechen	VVINF	*)))	gebrechen	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	16	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	Welch	NN	*	welch	sg	*	-	(1
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	ein	ART	(NP*	ein	sg	neut	-	(41
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	3	Jude	NN	*)	jude	sg	neut	-	1)|41)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	Und	KON	*	und	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	der	ART	(S*	der	sg	masc	-	(1
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	3	so	ADV	(AVP*	so	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	4	ganz	ADV	*)	ganz	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	5	nur	ADV	(VP(AP*	nur	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	6	Jude	NN	*)	jude	-	-	-	(42)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	7	scheinen	VVINF	*)	scheinen	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	8	will	VMFIN	*)	wollen	sg	-	-	1)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	9	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	Da	ADV	(VROOT(PSEUDO*	da	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	kömmt	VVFIN	(S(S*	kömmen	sg	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	er	PPER	*	er	sg	masc	-	(1)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	3	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	4	kömmt	VVFIN	(S*	kömmen	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	5	mit	APPR	(PP*	mit	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	6	Hast	NN	*)))	haben	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	7	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	8	glüht	VVFIN	(S*	glühen	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	9	heitre	ADJA	(NP*	heitr	-	-	-	(43
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	10	Freude	NN	*)))	freude	sg	-	-	43)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	11	Wer	PWS	(S*	wer	sg	masc	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	12	kam	VVFIN	*	kommen	sg	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	13	vom	APPRART	(PP*	von	sg	masc	-	(7
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	14	Saladin	NN	*)	saladin	sg	masc	-	7)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	15	je	ADV	(AVP*	je	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	16	anders	ADV	*))	anders	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	17	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	He	XY	*	--	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	He	XY	(VROOT(PSEUDO*	--	-	-	-	(1
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	Nathan	NE	*	nathan	-	-	-	1)
Nathan_Act3_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

#end document
