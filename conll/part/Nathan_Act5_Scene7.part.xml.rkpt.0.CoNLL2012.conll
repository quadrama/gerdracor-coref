#begin document (Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll); part 000
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Saladin	NE	(VROOT(PSEUDO(CNP*	saladin	sg	*	-	(7)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	und	KON	*	und	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	die	ART	(NP*	der	pl	fem	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Vorigen	NN	*))	vorige	pl	fem	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	gibts	ADV	*	gibts	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	hier	ADV	(NP*	hier	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Sittah	NE	*))	sittah	sg	-	-	(15)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	SITTAH	NE	(VROOT(PSEUDO*	sittah	-	-	-	(15
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(S*	sie	sg	fem	-	(2)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	von	APPR	(PP*	von	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	sich	PRF	*))	sich	sg	-	-	(2)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Gott	NN	(VROOT(PSEUDO*	gott	-	-	-	(16)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wer	PWS	*	wer	sg	masc	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	ists	ADV	*	ists	-	-	-	(17)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	SITTAH	NE	(VROOT(PSEUDO*	sittah	-	-	-	(15
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Du	PPER	(VROOT(PSEUDO(S*	du	sg	*	-	(7)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	weißt	VVFIN	*	weißen	sg	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	ja	ADV	*)	ja	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	.	$.	*	--	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	.	$.	*	--	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Unsers	PPOSAT	(VROOT(PSEUDO(NP*	unser	-	-	-	(17|(1|(18)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Nathans	NN	*	nathan	sg	*	-	1)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Tochter	NN	*)	tochter	*	*	-	17)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	fehlt	VVFIN	*	fehlen	sg	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	ihr	PPER	*)	ihr	sg	fem	-	(2)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	SITTAH	NE	(VROOT(PSEUDO*	sittah	-	-	-	(15
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Komm	VVIMP	(VROOT(PSEUDO(S*	komm	sg	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	doch	ADV	*	doch	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	zu	APPR	(PP*	zu	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	dir	PPER	*)	dir	sg	*	-	(2
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Kind	NN	*)	kind	sg	neut	-	2)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	!	$.	*))	--	-	-	-	-

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Der	ART	(NP*	der	sg	masc	-	(7
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Sultan	NN	*)	sultan	sg	masc	-	7)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	.	$.	*	--	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	.	$.	*	--	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	RECHA	NE	(VROOT(PSEUDO*))	recha	-	-	-	(2)

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	die	PRELS	(VROOT(PSEUDO(CO(S*	der	sg	fem	-	(2)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	sich	PRF	*	sich	sg	-	-	(2)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	auf	APPR	(PP*	auf	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	den	ART	*	der	sg	masc	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Knieen	NN	*	kniee	sg	masc	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	zu	APPR	(PP*	zu	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	Saladins	NE	*	saladin	sg	masc	-	(19|(7)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	Füßen	NN	*))	fuß	sg	masc	-	19)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	schleppt	VVFIN	*)	schleppen	sg	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	den	ART	(VP(NP*	der	sg	masc	-	(20
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	Kopf	NN	*)	kopf	sg	masc	-	20)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	zur	APPRART	(PP*	zu	sg	fem	-	(21
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	Erde	NN	*)	erde	sg	fem	-	21)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	gesenkt	VVPP	*))	senken	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	.	$.	*))	--	-	-	-	-

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(2)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	steh	VVFIN	*	steh	sg	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	auf	PTKVZ	*)	auf	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	nicht	PTKNEG	(VROOT(PSEUDO(VP(AP*	nicht	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	eher	ADV	*))	eher	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	auf	APPR	*	auf	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	mag	VMFIN	(S*	mögen	sg	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	eher	ADV	*	eher	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Des	NN	*)	der	sg	neut	-	(7
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Sultans	NE	(S(NP*	sultan	sg	neut	-	7)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Antlitz	NE	*)	antlitz	sg	neut	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	nicht	PTKNEG	(VP*	nicht	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	erblicken	VVINF	*))	erblicken	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	!	$.	*))	--	-	-	-	-

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	eher	ADV	(S*	eher	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Den	ART	(NP*	der	pl	fem	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Abglanz	NN	*	abglanz	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	ewiger	ADJA	(NP*	ewig	sg	fem	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Gerechtigkeit	NN	*)	gerechtigkeit	sg	fem	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	Und	KON	(S*	und	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	Güte	NN	*	güte	sg	-	-	(22)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	nicht	PTKNEG	(PP*	nicht	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	in	APPR	*	in	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	seinen	PPOSAT	*	sein	pl	neut	-	(23|(7)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	Augen	NN	*)	auge	pl	neut	-	23)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	Auf	APPR	(VP(PP*	auf	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	seiner	PPOSAT	*	sein	sg	fem	-	(7)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	Stirn	NN	*)	stirn	sg	fem	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	bewundern	VVINF	*))))	bewundern	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	.	$.	*	--	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	19	.	$.	*	--	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	20	.	$.	*))	--	-	-	-	-

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Steh	NE	(VROOT(PSEUDO(S*	steh	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*	--	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	.	$.	*	--	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	.	$.	*	--	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	steh	VVFIN	*	steh	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	auf	PTKVZ	*)	auf	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	!	$.	*))	--	-	-	-	-

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	RECHA	NE	(VROOT(PSEUDO*	recha	-	-	(LOC*)	(2
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	2)

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Eh	XY	(VROOT(PSEUDO*	eh	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	er	PPER	(S*	er	sg	masc	-	(7)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	mir	PPER	*	sich	sg	*	-	(2)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	verspricht	VVFIN	*)	versprechen	sg	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	.	$.	*	--	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	.	$.	*	--	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Komm	VVIMP	*	komm	pl	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(7)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	verspreche	VVFIN	*)	versprechen	sg	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	.	$.	*	--	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	.	$.	*	--	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	.	$.	*	--	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Sei	NN	(S*	sein	sg	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	was	PWS	*	was	*	neut	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	es	PPER	*	es	sg	neut	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	will	VMFIN	*)	wollen	sg	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	!	$.	*))	--	-	-	-	-

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	RECHA	NE	(VROOT(PSEUDO*	recha	-	-	(LOC*)	(2
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	2)

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	mehr	ADV	*	mehr	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	weniger	ADV	*	weniger	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	Als	KOUS	*	als	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	meinen	PPOSAT	*	mein	sg	masc	-	(1|(2)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	Vater	NN	*	vater	sg	masc	-	1)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	mir	PPER	*	sich	sg	*	-	(2)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	zu	PTKZU	*	zu	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	lassen	VVINF	*	lassen	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	;	$.	*	--	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	und	KON	*	und	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	Mich	PPER	*	mich	sg	*	-	(2)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	ihm	PPER	*	ihm	sg	masc	-	(1)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	!	$.	*	--	-	-	-	-

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Noch	ADV	*	noch	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	weiß	VVFIN	*	weißn	sg	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(2)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	wer	PWS	*	wer	sg	masc	-	(24
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	sonst	ADV	*	sonst	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	mein	PPOSAT	*	mein	sg	masc	-	(2)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	Vater	NN	*	vater	sg	masc	-	24)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	Zu	NE	*	zu	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	sein	PPOSAT	*	sein	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	verlangt	VVPP	*	verlangen	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	;	$.	*	--	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	–	ADJD	*	–	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	verlangen	VVINF	*	verlangen	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	kann	VMFIN	*	können	sg	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	.	$.	*	--	-	-	-	-

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wills	KON	(VROOT(PSEUDO(VP(AVP*	wills	-	-	-	(24)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	auch	ADV	*)	auch	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Nicht	NN	*	nicht	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	wissen	VVINF	*)	wissen	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Aber	KON	(VROOT(PSEUDO(S*	aber	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	macht	VVFIN	*	machen	sg	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	denn	ADV	*	denn	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	nur	ADV	(NP*	nur	-	-	-	(25
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	das	ART	*	der	sg	neut	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Blut	NN	*	blut	sg	neut	-	25)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	Den	ART	(NP*	der	sg	masc	-	(26
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	Vater	NN	*)))	vater	sg	masc	-	26)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	?	$.	*))	--	-	-	-	-

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	nur	ADV	(VROOT(PSEUDO(NP*	nur	-	-	-	(25
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	das	ART	*	der	sg	neut	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Blut	NN	*)	blut	sg	neut	-	25)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*))	saladin	-	-	-	(7)

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	der	ART	(VROOT(PSEUDO(S*	der	sg	fem	-	(7)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	sie	PPER	*	sie	sg	fem	-	(2)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	aufhebt	VVFIN	*)	aufheben	sg	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(7)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	merke	VVFIN	*	merken	sg	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	wohl	ADV	*)	wohl	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	sg	masc	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Wer	PWS	(S*	wer	sg	masc	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	war	VAFIN	*	sein	sg	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	so	ADV	*	so	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	grausam	ADJD	*	grausam	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	denn	ADV	*	denn	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	dir	PPER	(NP*	dir	sg	*	-	(2)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	selbst	ADV	*))	selbst	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	–	VVFIN	(S*	–	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	dir	PPER	*	dir	sg	*	-	(2)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	selbst	ADV	(VP(NP*	selbst	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	Dergleichen	NN	*)	dergleichen	pl	*	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	in	APPR	(PP*	in	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	den	ART	*	der	sg	masc	-	(27
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	Kopf	NN	*)	kopf	sg	masc	-	27)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	setzen	VVINF	*)))	setzen	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	?	$.	*))	--	-	-	-	-

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ist	VAFIN	(VROOT(PSEUDO(S*	sein	sg	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Es	PPER	*	es	sg	neut	-	(28)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	denn	ADV	(VP*	denn	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	schon	ADV	(AP*	schon	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	völlig	ADJD	*)	völlig	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	ausgemacht	VVPP	*))	ausmachen	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	erwiesen	VVPP	*	erweisen	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	?	$.	*	--	-	-	-	-

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	RECHA	NE	(VROOT(PSEUDO*	recha	-	-	(LOC*)	(2
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	2)

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Muß	VMFIN	*	müssen	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	wohl	ADV	*	wohl	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*	--	-	-	-	-

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Denn	KON	*	denn	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Daja	NE	*	daja	-	-	(PER*)	(0)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	will	VMFIN	*	wollen	sg	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	von	APPR	*	von	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	meiner	PPOSAT	*	mein	sg	fem	-	(29|(2)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Amm	NN	*	amm	sg	fem	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	'	$(	*	--	-	-	-	29)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	Es	PPER	*	es	sg	neut	-	(28)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	haben	VAFIN	*	haben	pl	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	.	$.	*	--	-	-	-	-

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Deiner	PPOSAT	(VROOT(PSEUDO(NP*	deiner	-	-	-	(29|(2)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Amme	NN	*)	amme	-	-	-	29)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	RECHA	NE	(VROOT(PSEUDO*	recha	-	-	(LOC*)	(2
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	2)

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Die	ART	*	der	sg	fem	-	(29
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	es	PPER	*	es	sg	neut	-	(28)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	sterbend	ADJD	*	sterbend	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Ihr	PPER	*	ihr	pl	*	-	(0)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	zu	PTKZU	*	zu	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	vertrauen	VVINF	*	vertrauen	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	sich	PRF	*	sich	sg	-	-	(29)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	verbunden	VVPP	*	verbinden	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	fühlte	VVFIN	*	fühlen	sg	-	-	29)

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Gar	ADV	(VROOT(PSEUDO(S(ISU*	gar	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	sterbend	ADJD	*))	sterbend	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Nicht	PTKNEG	(S*	nicht	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	auch	ADV	*	auch	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	faselnd	ADJD	(AP*	faselnd	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	schon	ADV	*))	schon	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Und	KON	*	und	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	wärs	APPRART	*	wär	sg	*	-	(28)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Auch	ADV	*	auch	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	wahr	PTKVZ	*	wahr	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	!	$.	*	--	-	-	-	-

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ja	PTKANT	(S*	ja	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	wohl	ADV	*	wohl	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	:	$.	*	--	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	das	ART	(CNP(NP*	der	sg	neut	-	(25
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Blut	NN	*)	blut	sg	neut	-	25)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	das	ART	(NP*	der	sg	neut	-	(25
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	Blut	NN	*	blut	sg	neut	-	25)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	allein	ADV	*)))	allein	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	Macht	NN	(S*	macht	sg	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	lange	ADV	(AVP*	lange	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	noch	ADV	*)	noch	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	den	ART	(NP*	der	sg	masc	-	(26
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	Vater	NN	*)	vater	sg	masc	-	26)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	nicht	PTKNEG	*)	nicht	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	!	$.	*))	--	-	-	-	-

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	macht	VVFIN	(VROOT(PSEUDO(S*	machen	sg	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	kaum	ADV	*	kaum	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Den	ART	(NP*	der	sg	masc	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Vater	NN	*	vater	sg	masc	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	eines	ART	(NP*	ein	sg	masc	-	(30
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Tieres	NN	*)))	tier	sg	masc	-	30)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	!	$.	*))	--	-	-	-	-

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	gibt	VVFIN	(VROOT(PSEUDO(S*	geben	sg	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	zum	APPRART	(NP(PP*	zu	sg	neut	-	(31
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	höchsten	ADJA	*)	hoch	sg	neut	-	31)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Das	ART	*	der	sg	neut	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	erste	ADJA	*	erster	sg	neut	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Recht	NN	*)	recht	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	sich	PRF	*	sich	pl	-	-	(31)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	diesen	PDAT	(NP*	dieser	sg	masc	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	Namen	NN	*)	name	sg	masc	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	zu	APPR	(PP*	zu	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	Erwerben	NN	*))	erwerben	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	!	$.	*))	--	-	-	-	-

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Laß	VVIMP	(S*	lassen	sg	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	dir	PPER	*	dir	sg	*	-	(2)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	doch	ADV	*	doch	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	bange	ADJD	(VP*	bange	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	sein	VAINF	*))	sein	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	!	$.	*))	--	-	-	-	-

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Und	KON	*	und	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	weißt	VVFIN	*	weißen	sg	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	du	PPER	*	du	sg	*	-	(2)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	was	PWS	*	was	sg	neut	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	?	$.	*	--	-	-	-	-

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Sobald	KOUS	(VROOT(PSEUDO(S*	sobald	sg	masc	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	der	ART	(NP*	der	sg	masc	-	(32|(33
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Väter	NN	(MPN*	vater	sg	masc	-	33)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	zwei	CARD	*))	zwei	-	-	-	32)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Sich	PRF	(VP*	sich	sg	-	-	(32)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	um	APPR	(PP*	um	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	dich	PPER	*)	dich	sg	-	-	(2)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	streiten	VVINF	*))	streiten	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	:	$.	*	--	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	–	XY	*	–	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	laß	VVFIN	(S*	lassen	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	sie	PPER	*	sie	-	-	-	(32)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	beide	PIS	*)	beide	pl	*	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	;	$.	*	--	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	nimm	ADJD	(NP*	nimm	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	Den	ART	*	der	pl	neut	-	(7
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	dritten	ADJA	*)	dritter	-	-	-	7)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	!	$.	*))	--	-	-	-	-

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Nimm	NE	(NP*	nimm	sg	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	dann	ADV	(NP*	dann	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	mich	PPER	*)	mich	sg	*	-	(7)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	zu	APPR	(PP*	zu	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	deinem	PPOSAT	*	dein	sg	masc	-	(34|(7)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	Vater	NN	*))	vater	sg	masc	-	34)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	!	$.	*))	--	-	-	-	-

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	SITTAH	NE	(VROOT(PSEUDO*	sittah	-	-	-	(15
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	O	XY	*	O	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	tu	XY	*	tu	-	-	-	(35
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	s	XY	*	--	-	-	-	35)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	!	$.	*	--	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	o	XY	*	O	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	tu	XY	*	tu	-	-	-	(35
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	'	$(	*	--	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	s	XY	*	--	-	-	-	35)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	!	$.	*	--	-	-	-	-

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(35|(7)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	will	VMFIN	*	wollen	sg	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	ein	ART	(NP*	ein	sg	masc	-	(34
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	guter	ADJA	*	gut	sg	masc	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Vater	NN	*	vater	sg	masc	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	34)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	Recht	NN	(NP*	recht	sg	masc	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	guter	ADJA	(NP*	gut	sg	masc	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	Vater	NN	*)))	vater	sg	masc	-	35)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	Noch	ADV	(AVP*	noch	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	viel	ADV	*)	viel	*	*	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	was	PIAT	(NP*	was	sg	neut	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	Bessers	NN	*)	besser	sg	neut	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	bei	PTKVZ	*)	bei	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	.	$.	*))	--	-	-	-	-

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Was	PWS	(S*	was	sg	neut	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	brauchst	VVFIN	*)	brauchen	sg	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	du	PPER	*	du	sg	*	-	(2)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	denn	ADV	(NP*	denn	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Der	ART	*	der	sg	masc	-	(33
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	Väter	NN	*	vater	sg	masc	-	33)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	überhaupt	ADV	*)	überhaupt	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	?	$.	*))	--	-	-	-	-

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wenn	KOUS	(VROOT(PSEUDO(S*	wenn	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	sie	PPER	*	sie	pl	*	-	(33)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	nun	ADV	*	nun	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	sterben	VVFIN	*)	sterben	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Bei	APPR	(VROOT(PSEUDO(S(PP*	bei	-	-	-	(36
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Zeiten	NN	*)	zeit	pl	fem	-	36)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	sich	PRF	*	sich	sg	-	-	(2)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	nach	APPR	(PP*	nach	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	einem	ART	*	ein	sg	masc	-	(37)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	umgesehn	TRUNC	*)	umgesehn	sg	masc	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	Der	PRELS	(S*	der	sg	masc	-	(37)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	mit	APPR	(PP*	mit	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	uns	PPER	*)	uns	pl	*	-	(2)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	um	APPR	(VP(PP*	um	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	die	ART	*	der	sg	fem	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	Wette	NN	*)	wette	sg	fem	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	leben	VVINF	*)	leben	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	will	VMFIN	*))	wollen	sg	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	!	$.	*))	--	-	-	-	-

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Kennst	VVFIN	(VROOT(PSEUDO(S*	kennen	sg	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	du	PPER	*	du	sg	*	-	(2)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	noch	ADV	(AVP*	noch	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	keinen	PIAT	*))	kein	sg	masc	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	.	$.	(VROOT(PSEUDO*	--	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*	--	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	SITTAH	NE	(VROOT(PSEUDO*	sittah	-	-	-	(15
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Mach	VVFIN	(VROOT(PSEUDO(S*	mach	pl	*	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	sie	PPER	*	sie	pl	*	-	(42)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	erröten	VVINF	*)	erröten	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Das	PDS	*	der	sg	neut	-	(38)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	hab	VVFIN	*	hab	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(7)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	allerdings	ADV	*	allerdings	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	mir	PPER	*	sich	sg	*	-	(7)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	vorgesetzt	VVPP	*	vorsetzen	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	.	$.	*	--	-	-	-	-

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Erröten	NN	(VROOT(PSEUDO(DL*	erröten	sg	*	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	macht	VVFIN	(S*	machen	sg	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	die	ART	(NP*	der	pl	fem	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Häßlichen	NN	*)	häßliche	pl	fem	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	so	ADV	(AP*	so	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	schön	ADJD	*))	schön	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	:	$.	*	--	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	Und	KON	(S*	und	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	sollte	VMFIN	*	sollen	sg	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	Schöne	NE	*	schöne	sg	*	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	noch	ADV	*	noch	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	schöner	ADJD	(VP*	schön	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	machen	VVINF	*)))	machen	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	?	$.	*))	--	-	-	-	-

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ich	PPER	(CS(S*	ich	sg	*	-	(7)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	habe	VAFIN	*	haben	sg	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	deinen	PPOSAT	(NP*	dein	sg	masc	-	(1|(2)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Vater	NN	*	vater	sg	masc	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Nathan	NE	*	nathan	-	-	(PER*)	1)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	;	$.	*))	--	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	und	KON	*	und	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	Noch	ADV	(S*	noch	-	-	-	(37
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	einen	ART	(NP*	ein	sg	masc	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	–	NN	*)))	–	sg	masc	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	einen	ART	*	ein	sg	masc	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	noch	ADV	(VP(AVP*	noch	-	-	-	37)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	hierher	PROAV	*)	hierher	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	bestellt	VVPP	*)	bestellen	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	.	$.	*))	--	-	-	-	-

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Errätst	VVFIN	*	errätst	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	du	PPER	*	du	sg	*	-	(2)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	ihn	PPER	*	ihn	sg	masc	-	(37)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	?	$.	*	--	-	-	-	-

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Hierher	PROAV	*	hierher	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*	--	-	-	-	-

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Du	PPER	(VROOT(PSEUDO(S*	du	sg	*	-	(2)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	wirst	VVFIN	*	werden	sg	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	mir	PPER	*	sich	sg	*	-	(7)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	doch	ADV	*	doch	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Erlauben	NN	(NP*	erlauben	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	Sittah	NE	*))	sittah	sg	-	-	(15)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	?	$.	*))	--	-	-	-	-

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	SITTAH	NE	(VROOT(PSEUDO*	sittah	-	-	-	(15
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Bruder	NN	(VROOT(PSEUDO*	bruder	-	-	-	(7)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Daß	KOUS	(VROOT(PSEUDO(S*	daß	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	du	PPER	*	du	sg	*	-	(2)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	ja	ADV	*	ja	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Vor	APPR	(S*	vor	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	ihm	PPER	*	ihm	sg	masc	-	(37)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	recht	ADV	*	recht	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	sehr	ADV	*	sehr	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	errötest	VVFIN	*)	errötest	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	liebes	ADJA	(NP*	lieb	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	Mädchen	NN	*))	mädchen	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	!	$.	*))	--	-	-	-	-

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	RECHA	NE	(VROOT(PSEUDO*	recha	-	-	(LOC*)	(2
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	2)

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Vor	APPR	*	vor	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	wem	PWS	*	wem	sg	masc	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	erröten	VVFIN	*	erröten	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	?	$.	*	--	-	-	-	-

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	.	$.	(VROOT(PSEUDO*	--	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*	--	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Kleine	ADJA	(VROOT(PSEUDO(NP*	klein	sg	fem	-	(2
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Heuchlerin	NN	*)	heuchlerin	sg	fem	-	2)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nun	ADV	(VROOT(PSEUDO(S(AVP*	nun	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	so	ADV	*)	so	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	erblasse	VVFIN	*	erblassen	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	lieber	ADV	*)	lieber	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Wie	KOKOM	*	wie	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	du	PPER	*	du	sg	*	-	(2)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	willst	VMFIN	*	wollen	sg	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Und	KON	*	und	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	kannst	VMFIN	*	können	sg	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	!	$.	*	--	-	-	-	-

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Eine	ART	*	ein	sg	fem	-	(39
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Sklavin	NN	*	sklavin	sg	fem	-	39)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	tritt	VVFIN	*	treten	sg	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	herein	PTKVZ	*	herein	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	und	KON	*	und	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	nahet	VVFIN	*	nahet	sg	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	sich	PRF	*	sich	sg	-	-	(39)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	Sittah	NE	*	sittah	sg	*	-	(15)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	.	$.	*	--	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	Sie	PPER	*	sie	pl	*	-	(40)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	sind	VAFIN	*	sein	pl	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	doch	ADV	*	doch	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	etwa	ADV	*	etwa	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	schon	ADV	*	schon	-	-	-	(41
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	da	PTKVZ	*	da	-	-	-	41)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	?	$.	*	--	-	-	-	-

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Eine	ART	(VROOT(PSEUDO(CS(S(NP*	ein	sg	fem	-	(39
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Sklavin	NN	*)	sklavin	sg	fem	-	39)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	tritt	VVFIN	*	treten	sg	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	herein	PTKVZ	*)	herein	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	und	KON	*	und	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	nahet	VVFIN	(S*	nahet	sg	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	sich	PRF	*))	sich	sg	-	-	(39)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	Sittah	NE	*	sittah	sg	*	-	(15)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	SITTAH	NE	(VROOT(PSEUDO*))	sittah	-	-	-	(15)

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	zur	APPRART	(VROOT(PSEUDO(PP*	zu	sg	fem	-	(39
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Sklavin	NN	*)	sklavin	sg	fem	-	39)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Gut	ADJD	(VROOT(PSEUDO*	gut	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	laß	VVFIN	(VROOT(PSEUDO(S*	lassen	sg	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	sie	PPER	*	sie	sg	fem	-	(40)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	nur	ADV	*	nur	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	herein	PTKVZ	*)	herein	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Sie	PPER	(S*	sie	pl	*	-	(40)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	sind	VAFIN	*	sein	pl	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	es	PPER	(NP*	es	sg	neut	-	(41)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Bruder	NN	*))	bruder	sg	masc	-	(7)
Nathan_Act5_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	!	$.	*))	--	-	-	-	-

#end document
