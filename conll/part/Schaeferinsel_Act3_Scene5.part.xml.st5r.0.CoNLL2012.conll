#begin document (Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll); part 000
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	Montan	NE	(VROOT(PSEUDO(CNP*	montan	-	-	-	(0)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	2	Doris	NE	*	doris	sg	neut	(PER*)	(2)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	4	Chloe	NE	*	chloe	sg	neut	(PER*)	(1)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	6	Damöt	NE	*	damöt	sg	neut	-	(6)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	8	Sylvia	NE	*)	sylvia	sg	neut	(PER*)	(5)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	-	(0
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	Kinder	NN	(VROOT(PSEUDO(S*	kind	pl	neut	-	(8)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	wartet	VVFIN	*	warten	sg	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	2	doch	ADV	*)	doch	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	Wohin	PWAV	(VROOT(PSEUDO*	wohin	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	DAMÖT	NE	(VROOT(PSEUDO*	damöt	-	-	(LOC*)	(6
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	6)

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	Auf	APPR	(VROOT(PSEUDO(PP*	auf	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	unsre	ADJA	*	unsr	sg	fem	-	(8)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	2	Flur	NN	*)	flur	sg	fem	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	-	(0
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	So	ADV	(VROOT(PSEUDO(S*	so	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	folgt	VVFIN	*	folgen	sg	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	2	ihr	PPER	*	ihr	sg	neut	-	(8)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	3	ohne	APPR	(PP*	ohne	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	4	mich	PPER	*)	mich	sg	*	-	(0)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	5	den	ART	(NP*	der	sg	masc	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	6	Trieben	NN	*	trieb	sg	masc	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	7	der	ART	(NP*	der	sg	masc	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	8	Natur	NN	*)))	natur	sg	masc	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	9	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(CS(S*	ich	sg	*	-	(0)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	hab	VVFIN	*	heben	sg	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	2	es	PPER	(CVP(VP*	es	sg	neut	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	3	euch	PPER	*	euch	pl	*	-	(8)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	4	gesagt	VVPP	*)	sagen	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	5	und	KON	*	und	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	6	wills	ADV	(VP*	wills	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	7	noch	ADV	*	noch	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	8	einmal	ADV	*	einmal	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	9	sagen	VVINF	*)))	sagen	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	11	Ihr	PPER	(S*	ihr	pl	*	-	(8)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	12	werdet	VVFIN	*	werden	pl	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	14	was	PWS	(S*	was	sg	neut	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	15	ihr	PPER	*	ihr	sg	neut	-	(8)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	16	thut	VVFIN	*	thut	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	17	einmal	ADV	(S*	einmal	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	18	zu	PTKA	(AP*	zu	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	19	spät	ADJD	*)	spät	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	20	beklagen	VVFIN	*))))	beklagen	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	21	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	SYLVIA	NE	(VROOT(PSEUDO*	sylvia	sg	neut	(PER*)	(5
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	Montan	ADJD	(VROOT(PSEUDO(S*	montan	-	-	-	(0)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	2	was	PWS	*	was	sg	neut	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	3	thun	CARD	*	thun	pl	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	4	wir	PPER	*	wir	pl	*	-	(8)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	5	denn	ADV	*)	denn	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	-	(0
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	Daß	KOUS	(VROOT(PSEUDO(CO(S*	daß	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	ihr	PPER	*	ihr	pl	*	-	(8)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	2	beysammen	ADV	*	beysammen	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	3	seyd	ADJD	*)	seyd	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	5	Das	PDS	(S*	der	sg	neut	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	6	ist	VAFIN	*	sein	sg	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	7	nicht	PTKNEG	(AP*	nicht	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	8	recht	ADJD	*)))	recht	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	DORIS	NE	(VROOT(PSEUDO*	doris	sg	neut	(LOC*)	(2
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	2)

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	Warum	PWAV	(VROOT(PSEUDO*	warum	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	CHLOE	NE	(VROOT(PSEUDO*	chloe	-	-	(LOC*)	(1
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	Weil	KOUS	(VROOT(PSEUDO(S*	weil	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	es	PPER	*	es	sg	neut	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	2	Montan	NE	*	montan	sg	*	-	(0)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	3	verbeut	VVFIN	*)	verbeuen	sg	*	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	-	(0
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	Doris	NE	(AVP(S*	doris	sg	neut	(PER*)	(2)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	3	du	PPER	*	du	sg	*	-	(2)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	4	sollst	VMFIN	*	sollen	sg	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	5	zwar	ADV	*	zwar	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	6	noch	ADV	(VP*	noch	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	7	den	ART	(NP*	der	sg	masc	-	(3
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	8	Silvander	NN	*)	silvander	sg	masc	-	3)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	9	sehen	VVINF	*))	sehen	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	11	Doch	KON	*)	doch	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	13	daß	KOUS	(S*	daß	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	14	du	PPER	*	du	sg	*	-	(2)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	15	Abschied	NN	*	abschied	sg	masc	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	16	nimmst	VVFIN	*))	nimmsen	sg	masc	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	17	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	DORIS	NE	(VROOT(PSEUDO*	doris	sg	neut	(LOC*)	(2
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	2)

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	Das	PDS	(VROOT(PSEUDO(S*	der	sg	neut	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	wird	VAFIN	*	werden	sg	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	2	wohl	ADV	(VP*	wohl	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*	nicht	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	4	geschehen	VVPP	*))	geschehen	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	CHLOE	NE	(VROOT(PSEUDO*	chloe	-	-	(LOC*)	(1
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	Allein	ADV	(VROOT(PSEUDO(CS*	allein	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	2	Silvander	NN	(S*	silvander	sg	neut	-	(3)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	3	geht	VVFIN	*))	gehen	sg	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	Willst	VVFIN	(VROOT(PSEUDO(S*	willen	sg	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	du	PPER	*	du	sg	*	-	(2)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	2	so	ADV	(AP(S*	so	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	3	trotzig	ADJD	(AP*	trotzig	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	4	seyn	ADJD	*)	seyn	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	6	Und	KON	(S*	und	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	7	ihn	PPER	(NP*	ihn	sg	masc	-	(3)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	8	so	ADV	*)	so	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	9	lassen	VVFIN	*))	lassen	pl	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	10	gehn	CARD	*))	gehn	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	11	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	Es	PPER	(VROOT(PSEUDO(S*	es	sg	neut	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	wird	VAFIN	*	werden	sg	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	2	dich	PPER	(VP*	dich	-	-	-	(2)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	3	schon	ADV	*	schon	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	4	gereun	VVPP	*))	gereun	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	-	(0
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	Ja	PTKANT	(VROOT(PSEUDO(S*	ja	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	2	ja	PTKANT	(AVP(S*	ja	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	4	er	PPER	(S*	er	sg	masc	-	(3)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	5	geht	VVFIN	*))	gehen	sg	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	7	und	KON	*)	und	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	8	hat	VAFIN	*	haben	sg	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	9	mirs	ADV	(VP*	mir	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	10	für	APPR	(PP*	für	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	11	gewiß	ADJD	*)	gewiß	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	12	entdecket	VVPP	*))	entdecken	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	13	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	DORIS	NE	(VROOT(PSEUDO*	doris	sg	neut	(LOC*)	(2
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	2)

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	Glaubst	VVFIN	(VROOT(PSEUDO(S*	glaubst	sg	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	du	PPER	(NP*	du	sg	*	-	(0)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	3	Montan	NE	*))	montan	-	-	-	(0)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	daß	KOUS	(VROOT(PSEUDO(S*	daß	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	mich	PPER	*	mich	sg	*	-	(2)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	2	dein	PPOSAT	(NP*	dein	sg	neut	-	(0)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	3	leeres	ADJA	*	leer	sg	neut	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	4	Drohen	NN	*)	drohen	pl	fem	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	5	schrecket	VVFIN	*)	schrecken	sg	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	CHLOE	NE	(VROOT(PSEUDO*	chloe	-	-	(LOC*)	(1
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	Erschrick	VVFIN	(VROOT(PSEUDO(S*	erschrick	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	doch	ADV	*	doch	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	2	nur	ADV	*)	nur	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	DORIS	NE	(VROOT(PSEUDO*	doris	sg	neut	(LOC*)	(2
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	2)

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(2)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	will	VMFIN	*	wollen	sg	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	2	für	APPR	(PP*	für	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	3	den	ART	*	der	sg	masc	-	(3
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	4	Silvander	NN	*)	silvander	sg	masc	-	3)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	5	stehn	VVFIN	*	stehn	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	7	Gieng	NN	*	gieng	sg	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	8	er	PPER	*	er	sg	masc	-	(3)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	10	er	PPER	(S*	er	sg	masc	-	(3)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	11	bäte	VVFIN	*	bäten	sg	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	12	mich	PPER	(AP(S*	mich	sg	*	-	(2)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	14	ich	PPER	*	ich	sg	*	-	(2)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	15	müßte	VMFIN	*	müssen	sg	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	16	mit	APPR	(PP*	mit	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	17	ihm	PPER	*))	ihm	sg	*	-	(3)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	18	gehn	CARD	*)))	gehn	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	19	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	-	(0
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	Seht	VVFIN	(VROOT(PSEUDO(CS(S*	sehen	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	doch	ADV	*	doch	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	2	die	ART	(NP*	der	pl	fem	-	(2
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	3	Schäferinn	NN	*))	schäferinn	pl	-	-	2)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	5	wer	PWS	(S*	wer	sg	*	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	6	hat	VAFIN	*	haben	sg	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	7	dich	PPER	*	dich	sg	-	-	(2)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	8	das	PDS	(VP*	der	sg	neut	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	9	gelehret	VVPP	*)))	gelehret	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	10	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	DORIS	NE	(VROOT(PSEUDO*	doris	sg	neut	(LOC*)	(2
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	2)

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	Mein	NE	(VROOT(PSEUDO(CNP*	mein	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	und	KON	*	und	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	2	Silvanders	NE	(MPN*	silvanders	-	-	-	(3)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	3	Herz	NE	*))	herz	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	CHLOE	NE	(VROOT(PSEUDO*	chloe	-	-	(LOC*)	(1
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	Ich	PPER	*	ich	sg	*	-	(1)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	glaub	VVFIN	*	glaubn	sg	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	2	es	PPER	*	es	sg	neut	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	4	eh	PWS	*	eh	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	5	sie	PPER	*	sie	sg	fem	-	(2)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	6	schwöret	VVFIN	*	schwöret	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	7	.	$.	*	--	-	-	-	-

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	-	(0
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	Dein	NE	(VROOT(PSEUDO(S(CNP*	dein	-	-	-	(2)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	und	KON	*	und	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	2	Silvanders	NE	(MPN*	silvanders	sg	masc	-	(3)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	3	Herz	NE	*))	herz	sg	masc	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	4	sind	VAFIN	*	sein	pl	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	5	Lügner	NN	*)	lügner	pl	masc	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	DORIS	NE	(VROOT(PSEUDO*	doris	sg	neut	(LOC*)	(2
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	2)

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	Nein	PTKANT	*	nein	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	2	Montan	NE	*	montan	sg	neut	-	(0)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	3	!	$.	*	--	-	-	-	-

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	Silvander	ADV	(VROOT(PSEUDO(S*	silvander	-	-	-	(3)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	soll	VMFIN	*	sollen	sg	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	2	mich	PPER	(VP*	mich	sg	*	-	(2)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	3	fliehn	VVINF	*))	fliehn	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	Nein	PTKANT	*	nein	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	2	nein	PTKANT	*	nein	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	4	das	PDS	*	der	sg	neut	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	5	geht	VVFIN	*	gehen	sg	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	6	nicht	PTKNEG	*	nicht	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	7	an	PTKVZ	*	an	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	8	.	$.	*	--	-	-	-	-

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	Wenn	KOUS	(VROOT(PSEUDO(CO*	wenn	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	er	PPER	(S*	er	sg	masc	-	(3)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	2	mich	PPER	*	mich	sg	*	-	(2)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	3	könnte	VMFIN	*	können	sg	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	4	fliehn	VVINF	*)	fliehn	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	5	;	$.	*	--	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	6	so	ADV	(S*	so	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	7	müßt	VVFIN	*	müßen	sg	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	8	er	PPER	*	er	sg	masc	-	(3)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	9	mich	PPER	(VP*	mich	sg	*	-	(2)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	10	nicht	PTKNEG	*	nicht	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	11	lieben	VVINF	*)))	lieben	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	-	(0
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	Denkst	VVFIN	(VROOT(PSEUDO(S*	denken	sg	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	du	PPER	*	du	sg	*	-	(2)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	3	er	PPER	(S*	er	sg	masc	-	(3)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	4	liebt	VVFIN	*	lieben	sg	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	5	dich	PRF	*))	dich	sg	-	-	(2)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	DORIS	NE	(VROOT(PSEUDO*	doris	sg	neut	(LOC*)	(2
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	2)

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	Ja	PTKANT	*	ja	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*	--	-	-	-	-

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	-	(0
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	Wo	PWAV	(VROOT(PSEUDO(S*	wo	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	2	mein	PPOSAT	(VP(NP*	mein	sg	neut	-	(0)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	3	Zweck	NN	*)	zweck	sg	neut	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	4	geblieben	VVPP	*))	bleiben	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	Sylvia	NE	(VROOT(PSEUDO(S(CNP*	sylvia	sg	fem	(PER*)	(5)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	und	KON	*	und	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	2	Damöt	NE	*)	damöt	-	-	-	(6)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	3	winken	VVFIN	*	winken	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	4	stets	ADV	*	stets	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	5	einander	PTKVZ	*)	einander	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	Zu	APPR	(VROOT(PSEUDO(PP*	zu	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	ihnen	PPER	*)	ihnen	pl	*	-	(8)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	St	NN	(VROOT(PSEUDO*	--	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	2	st	NE	*	--	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(0)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	glaube	VVFIN	*	glauben	sg	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	2	gar	ADV	*	gar	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	4	daß	KOUS	(S*	daß	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	5	ihr	PPER	*	ihr	sg	masc	-	(8)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	6	bey	APPR	(PP*	bey	sg	masc	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	7	Seite	NN	*)	seite	sg	fem	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	8	geht	VVFIN	*	gehen	sg	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	10	Tritt	NN	(NP*	tritt	sg	masc	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	11	dorthin	ADV	*	dorthin	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	13	Sylvia	NE	*)))	sylvia	-	-	-	(5)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	14	!	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	du	PPER	*	du	sg	masc	-	(6)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	2	hieher	ADV	*	hieher	sg	masc	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	3	Damöt	NN	*)	damöt	sg	masc	-	(6)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	DAMÖT	NE	(VROOT(PSEUDO*	damöt	-	-	(LOC*)	(6
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	6)

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	Hier	ADV	*	hier	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	bin	VAFIN	*	sein	sg	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(6)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	3	.	$.	*	--	-	-	-	-

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	SYLVIA	NE	(VROOT(PSEUDO*	sylvia	sg	neut	(PER*)	(5
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	Nun	ADV	*	nun	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	was	PWS	*	was	sg	neut	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	2	denn	ADV	*	denn	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	3	?	$.	*	--	-	-	-	-

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	-	(0
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	Bleibt	VVFIN	(VROOT(PSEUDO(S*	bleiben	sg	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	beyde	VAFIN	(NP(CS(S*	beyden	sg	-	-	(8)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	2	nur	ADV	*	nur	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	3	so	ADV	(VP*	so	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	4	stehen	VVINF	*))	stehen	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	6	Und	KON	(S*	und	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	7	geht	VVFIN	*	gehen	sg	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	8	nicht	PTKNEG	*	nicht	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	9	eher	ADV	*	eher	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	10	weg	PTKVZ	*))	weg	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	12	bis	KOUS	(S*	bis	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	13	ich	PPER	*	ich	sg	*	-	(0)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	14	euch	PPER	*	euch	pl	*	-	(8)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	15	heiße	VVFIN	*))	heiß	sg	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	16	gehen	VVINF	*)	gehen	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	17	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	DORIS	NE	(VROOT(PSEUDO*	doris	sg	neut	(LOC*)	(2
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	2)

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	Nun	ADV	(VROOT(PSEUDO(S*	nun	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	2	wo	PWAV	*	wo	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	3	trett	VVFIN	*	trett	sg	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	4	ich	PPER	*	ich	sg	*	-	(2)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	5	denn	ADV	*	denn	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	6	hin	PTKVZ	*)	hin	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	7	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	-	(0
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	Wohin	PWAV	(VROOT(PSEUDO(S*	wohin	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	du	PPER	*	du	sg	*	-	(2)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	2	willst	VMFIN	*)	wollen	sg	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	CHLOE	NE	(VROOT(PSEUDO*	chloe	-	-	(LOC*)	(1
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	Und	KON	*	und	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	ich	PPER	*	ich	sg	*	-	(1)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	-	(0
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	Du	PPER	(VROOT(PSEUDO(S*	du	sg	*	-	(1
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	lose	VVFIN	*	los	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	2	Schmeichlerinn	NE	*)	schmeichlerinn	sg	masc	-	1)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	CHLOE	NE	(VROOT(PSEUDO*	chloe	-	-	(LOC*)	(1
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	Das	PDS	(VROOT(PSEUDO(S*	der	sg	neut	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	2	ein	ART	(NP*	ein	sg	masc	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	3	Lob	NN	*	lob	sg	masc	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	4	für	APPR	(PP*	für	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	5	mich	PPER	*)))	mich	sg	*	-	(1)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	Montan	ADJD	(VROOT(PSEUDO(S*	montan	-	-	-	(0)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	versteht	VVFIN	*	verstehen	sg	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	2	mich	PPER	*	mich	sg	*	-	(1)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	3	schon	ADV	*)	schon	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	4	–	XY	*	–	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	5	–	XY	*	–	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	6	Ich	PPER	*	ich	sg	*	-	(1)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	7	seh	XY	*	seh	sg	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	8	Silvandern	NN	(CS(VP*	silvand	pl	neut	-	(3)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	9	kommen	VVINF	*)	kommen	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	11	Und	KON	(S*	und	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	12	Corydon	NE	(NP*	corydon	sg	*	-	(7)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	13	mit	APPR	(PP*	mit	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	14	ihm	PPER	*))))	ihm	sg	masc	-	(3)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	15	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	hat	VAFIN	*	haben	sg	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	2	er	PPER	(VP*	er	sg	masc	-	(7)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	3	unternommen	VVPP	*))	unternehmen	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	-	(0
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	Gut	ADJD	(VROOT(PSEUDO(S*	gut	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	2	es	PPER	*	es	sg	neut	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	3	bedeutet	VVFIN	*	bedeuten	sg	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	4	nichts	PIS	*	nichts	*	neut	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	5	;	$.	*	--	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	6	sie	PPER	*	sie	pl	*	-	(9)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	7	müssen	VMFIN	*)	müssen	pl	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	8	beyde	PIS	*	beyde	-	-	-	(9)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	9	sehn	CARD	*	sehn	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	CHLOE	NE	(VROOT(PSEUDO*	chloe	-	-	(LOC*)	(1
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	Damöt	NE	(VROOT(PSEUDO(CNP*	damöt	-	-	-	(8|(6)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	und	KON	*	und	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	2	Sylvia	NE	*)	sylvia	sg	-	-	8)|(5)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	-	(0
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(AVP(S*	ich	sg	*	-	(0)
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	1	will	VMFIN	*	wollen	sg	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	2	für	APPR	(PP*	für	-	-	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	3	alles	PIS	*))	alle	sg	neut	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	4	stehn	ADV	*)	stehn	sg	neut	-	-
Schaeferinsel_Act3_Scene5.part.xml.st5r.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

#end document
