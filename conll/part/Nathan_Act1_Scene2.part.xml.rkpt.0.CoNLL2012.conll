#begin document (Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll); part 000
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Recha	NE	(VROOT(PSEUDO(CNP*	recha	-	-	-	(2)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	und	KON	*	und	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	die	ART	(NP*	der	pl	fem	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	Vorigen	NN	*))	vorige	pl	*	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	RECHA	NE	(VROOT(PSEUDO*	recha	-	-	(LOC*)	(2
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	2)

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	So	ADV	(VROOT(PSEUDO*	so	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	seid	VAFIN	(S*	sein	pl	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	Ihr	PPER	*	ihr	pl	*	-	(1)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	es	PPER	*	es	sg	neut	-	(16)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	doch	ADV	*	doch	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	ganz	ADV	(CAVP*	ganz	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	und	KON	*	und	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	gar	ADV	*)	gar	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	mein	PPOSAT	(NP*	mein	sg	masc	-	(2)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	Vater	NN	*))	vater	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	?	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	*	ich	sg	*	-	(2)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	glaubt	VVFIN	*	glauben	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	Ihr	PPER	*	ihr	pl	*	-	(1)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	hättet	VVFIN	*	hätten	pl	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	Eure	PPOSAT	*	euer	-	-	-	(17|(1)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	Stimme	NN	*	stimme	sg	-	-	17)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	nur	ADV	*	nur	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	Vorausgeschickt	NN	*	vorausgeschickt	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	.	$.	*	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wo	PWAV	(VROOT(PSEUDO(S*	wo	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	bleibt	VVFIN	*	bleiben	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	Ihr	PPER	*)	ihr	pl	*	-	(1)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	für	APPR	(PP*	für	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	Berge	NN	*)	berg	sg	fem	-	(18)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*)	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	Für	APPR	(S(PP*	für	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	Wüsten	NN	*)	wüste	pl	*	-	(19)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	was	PWS	*	was	sg	neut	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	für	APPR	(PP*	für	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	Ströme	NN	*)	strom	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	trennen	VVFIN	*	trennen	pl	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	uns	PPER	*)	uns	pl	*	-	(20)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	Denn	KON	(S*	denn	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	noch	ADV	*)	noch	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	?	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ihr	PPER	(VROOT(PSEUDO(S(AVP(S*	ihr	pl	*	-	(1)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	atmet	VVFIN	*	atmen	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	Wand	NN	*	wand	sg	-	-	(21)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	an	APPR	(PP*	an	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	Wand	NN	*	wand	sg	-	-	(21)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	mit	APPR	(PP*	mit	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	ihr	PPER	*)))	ihr	sg	fem	-	(2)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	Und	KON	*)	und	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	eilt	VVFIN	*	eilen	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	Eure	PPOSAT	(VP(NP*	euer	sg	neut	-	(2|(1)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	Recha	NN	*)	recha	sg	neut	-	2)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	15	umarmen	VVINF	*)))	umarmen	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	16	?	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Die	ART	(VROOT(PSEUDO(NP*	der	sg	fem	-	(2
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	arme	ADJA	*	arm	sg	fem	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	Recha	NN	*	recha	sg	fem	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	die	PRELS	(S*	der	sg	fem	-	(2)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	indes	ADV	*	indes	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	verbrannte	VVFIN	*))	verbrennen	sg	-	-	2)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	!	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Fast	NN	(S*	fast	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	fast	ADV	*	fast	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	verbrannte	VVFIN	*)	verbrennen	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Fast	ADV	(VROOT(PSEUDO(AVP*	fast	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	nur	ADV	*)	nur	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Schaudert	VVFIN	*	schaudert	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Es	PPER	*	es	sg	neut	-	(22)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	ein	ART	*	ein	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	garst	ADJD	*	garst	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	'	$(	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	ger	ADJA	*	g	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	Tod	NN	*	tod	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	verbrennen	VVINF	*	verbrennen	-	-	-	(22)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	.	$.	*	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	O	ITJ	(VROOT(PSEUDO(S*)	O	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Mein	PPOSAT	(VROOT(PSEUDO(NP*	mein	sg	neut	-	(2|(1)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Kind	NN	*)	kind	sg	neut	-	2)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	mein	PPOSAT	(VROOT(PSEUDO(NP*	mein	sg	neut	-	(2|(1)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	liebes	ADJA	*	lieb	sg	neut	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	Kind	NN	*)	kind	sg	neut	-	2)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	RECHA	NE	(VROOT(PSEUDO*	recha	-	-	(LOC*)	(2
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	2)

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ihr	PPER	*	ihr	pl	*	-	(1)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	mußtet	VVFIN	*	mußten	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	über	APPR	*	über	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	Den	ART	*	der	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	Euphrat	NE	*	euphrat	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	Tigris	NE	*	tigris	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	Jordan	NE	*	jordan	-	-	(PER*)	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	;	$.	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	über	APPR	*	über	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	–	CARD	*	–	sg	neut	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	wer	PWS	*	wer	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	Weiß	NN	*	weiße	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	was	PWS	*	was	sg	neut	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	15	für	APPR	*	für	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	16	Wasser	NN	*	wasser	sg	neut	-	(23)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	17	all	PIAT	*	all	*	*	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	18	?	$.	*	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Wie	PWAV	*	wie	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	oft	ADV	*	oft	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	hab	VAFIN	*	hab	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	'	$(	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	ich	PPER	*	ich	sg	*	-	(2)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	Um	APPR	*	um	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	Euch	PPER	*	euch	sg	neut	-	(1)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	gezittert	VVPP	*	zittern	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	eh	KOUS	*	eh	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	das	ART	*	der	sg	neut	-	(24
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	Feuer	NN	*	feuer	sg	neut	-	24)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	mir	PPER	*	sich	sg	*	-	(2)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	So	ADV	*	so	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	15	nahe	ADJD	*	nahe	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	16	kam	VVFIN	*	kommen	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	17	!	$.	*	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Denn	KON	(VROOT(PSEUDO(S*	denn	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	seit	KOUS	(S*	seit	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	das	ART	(NP*	der	sg	neut	-	(24
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	Feuer	NN	*)	feuer	sg	neut	-	24)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	mir	PPER	*	sich	sg	*	-	(2)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	So	ADV	(AP*	so	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	nahe	ADJD	*)	nahe	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	kam	VVFIN	*)	kommen	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	:	$.	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	dünkt	ADJD	(PP*	dünken	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	mich	PPER	*	mich	sg	*	-	(2)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	im	APPRART	(PP*	in	sg	neut	-	(23
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	Wasser	NN	*))	wasser	sg	neut	-	23)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	sterben	VVFIN	*	sterben	pl	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	Erquickung	NN	(CNP*	erquickung	sg	fem	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	15	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	16	Labsal	NN	*	labsal	sg	fem	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	17	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	18	Rettung	NN	*))	rettung	sg	fem	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	19	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Doch	KON	(S*	doch	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	Ihr	PPER	*	ihr	pl	*	-	(1)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	seid	VAFIN	*	sein	pl	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	Ja	NN	(VP*	ja	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	ertrunken	VVINF	*))	ertrunken	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	:	$.	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	ich	PPER	(NP*	ich	sg	*	-	(2)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	ich	PPER	(S*	ich	sg	masc	-	(2)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	bin	VAFIN	*	sein	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	ja	ADV	(VP*	ja	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	Verbrannt	VVPP	*)))	verbrannt	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	15	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wie	PWAV	(VROOT(PSEUDO(S*	wie	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	wollen	VMFIN	*	wollen	pl	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	wir	PPER	*	wir	pl	*	-	(20)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	uns	PRF	(CVP(VP*	uns	pl	-	-	(20)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	freun	VVINF	*)	freun	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	und	KON	*	und	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	Gott	NN	(VP(CNP*	gott	sg	masc	(PER*)	(25)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	Gott	NN	*)	gott	sg	masc	(PER*)	(25)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	loben	VVINF	*)))	loben	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	!	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Er	PPER	*	er	sg	masc	-	(25)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	er	PPER	*	er	sg	masc	-	(25)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	trug	VVFIN	*	tragen	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	Euch	PPER	*	euch	sg	*	-	(1)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	und	KON	*	und	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	den	ART	*	der	sg	masc	-	(26
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	Nachen	NN	*	nache	sg	masc	-	26)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	Auf	APPR	*	auf	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	Flügeln	NN	*	flügeln	pl	fem	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	seiner	PPOSAT	*	sein	pl	fem	-	(27|(25)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	unsichtbaren	ADJA	*	unsichtbar	pl	neut	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	Engel	NN	*	engel	*	*	-	27)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	Die	ART	*	der	pl	*	-	(23
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	ungetreuen	ADJA	*	ungetreu	pl	*	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	15	Ström	NN	*	ström	pl	*	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	16	'	$(	*	--	-	-	-	23)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	17	hinüber	ADV	*	hinüber	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	18	.	$.	*	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Er	PPER	(VROOT(PSEUDO(S*	er	sg	masc	-	(25)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	Er	PPER	*	er	sg	masc	-	(25)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	winkte	VVFIN	*	winken	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	meinem	PPOSAT	(NP*	mein	sg	masc	-	(28|(2)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	Engel	NN	*)	engel	sg	masc	-	28)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	daß	KOUS	(S*	daß	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	er	PPER	*	er	sg	masc	-	(28)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	sichtbar	ADJD	(AP*	sichtbar	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	Auf	APPR	(PP*	auf	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	seinem	PPOSAT	*	sein	sg	masc	-	(29|(28)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	weißen	ADJA	*	weiß	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	Fittiche	NN	*))	fittich	sg	masc	-	29)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	15	mich	PPER	*	mich	sg	*	-	(2)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	16	durch	APPR	(PP*	durch	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	17	Das	ART	*	der	sg	neut	-	(24
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	18	Feuer	NN	*)	feuer	sg	neut	-	24)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	19	trüge	VVFIN	*))	tragen	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	20	–	$.	*))	–	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	(	$(	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Weißem	ADJA	*	weißem	-	-	-	(29
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	Fittiche	NN	*	fittich	pl	masc	-	29)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ja	PTKANT	(VROOT(PSEUDO(S*	ja	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	ja	ADV	*)	ja	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	der	ART	*	der	sg	masc	-	(29
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	weiße	ADJA	*	weiß	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	vorgespreizte	ADJA	*	vorgespreizt	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	Mantel	NN	*	mantel	sg	neut	-	29)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	Des	NE	*	der	sg	neut	-	(28
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	Tempelherrn	NE	*	tempelherr	sg	neut	-	28)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	.	$.	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	)	$(	*	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	RECHA	NE	(VROOT(PSEUDO*	recha	-	-	(LOC*)	(2
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	2)

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Er	PPER	*	er	sg	masc	-	(28)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	sichtbar	ADJD	*	sichtbar	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	sichtbar	ADJD	*	sichtbar	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	mich	PPER	*	mich	sg	*	-	(2)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	Durchs	NE	*	durch	sg	masc	-	(24
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	Feuer	NN	*	feuer	sg	neut	-	24)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	trüg	VVFIN	*	trüg	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	'	$(	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	von	APPR	*	von	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	seinem	PPOSAT	*	sein	sg	neut	-	(29|(28)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	Fittiche	ADJA	*	fittich	sg	neut	-	29)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	Verweht	NN	*	verwehen	sg	neut	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	.	$.	*	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ich	PPER	*	ich	sg	*	-	(2)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	also	ADV	*	also	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	ich	PPER	*	ich	sg	*	-	(2)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	hab	VVFIN	*	hab	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	'	$(	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	einen	ART	*	ein	sg	masc	-	(96
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	Engel	NN	*	engel	sg	masc	-	96)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	Von	APPR	*	von	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	Angesicht	NN	*	angesicht	-	-	-	(31)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	zu	APPR	*	zu	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	Angesicht	NN	*	angesicht	sg	fem	-	(32)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	gesehn	VVPP	*	gesehn	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	;	$.	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	15	Und	KON	*	und	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	16	meinen	PPOSAT	*	meinen	sg	masc	-	(33|(2)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	17	Engel	NN	*	engel	sg	masc	-	33)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	18	.	$.	*	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Recha	NE	*	recha	-	-	(PER*)	(2)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	wär	VAFIN	*	sein	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	es	PPER	*	es	sg	neut	-	(30)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	wert	ADJD	*	wert	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	;	$.	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	Und	KON	*	und	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	würd	VAFIN	*	würd	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	'	$(	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	an	APPR	*	an	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	ihm	PPER	*	ihm	sg	masc	-	(33)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	nichts	PIS	*	nichts	*	neut	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	Schönres	NE	*	schönre	sg	neut	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	sehn	CARD	*	sehn	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	15	als	KOUS	*	als	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	16	er	PPER	*	er	sg	masc	-	(33)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	17	An	APPR	*	an	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	18	ihr	PPER	*	ihr	sg	fem	-	(2)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	19	.	$.	*	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	RECHA	NE	(VROOT(PSEUDO*))	recha	-	-	-	(2)

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	lächelnd	ADJD	(VROOT(PSEUDO*	lächelnd	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wem	PWS	(VROOT(PSEUDO(S*	wem	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	schmeichelt	VVFIN	*	schmeicheln	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	Ihr	PPER	(NP*	ihr	pl	*	-	(1
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	mein	PPOSAT	(NP*	mein	sg	masc	-	(2)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	Vater	NN	*)))	vater	sg	masc	-	1)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	wem	PWS	*	wem	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	?	$.	*	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Dem	ART	(VROOT(PSEUDO(CNP(NP*	der	sg	neut	-	(33
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Engel	NN	*)	engel	sg	neut	-	33)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	oder	KON	*	oder	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	Euch	PPER	*)	euch	pl	*	-	(1)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Doch	KON	*	doch	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	hätt	VAFIN	*	hätt	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	auch	ADV	*	auch	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	nur	ADV	*	nur	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	Ein	ART	*	ein	sg	masc	-	(34
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	Mensch	NN	*	mensch	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	–	APPO	*	–	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	ein	ART	*	ein	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	Mensch	NN	*	mensch	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	wie	PWAV	*	wie	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	die	ART	*	der	sg	fem	-	(35
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	Natur	NN	*	natur	sg	fem	-	35)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	sie	PPER	*	sie	pl	masc	-	(34)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	15	täglich	ADJD	*	täglich	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	16	Gewährt	NN	*	gewährt	sg	-	-	34)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	17	Für	APPR	*	für	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	18	dich	PPER	*	dich	sg	*	-	(2)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	19	ein	ART	*	ein	sg	neut	-	(37
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	20	Engel	NN	*	engel	sg	neut	-	37)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	21	sein	VAINF	*	sein	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	22	.	$.	*	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Er	PPER	*	er	sg	masc	-	(34)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	müßt	VMFIN	*	müßen	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	und	KON	*	und	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	würde	VAFIN	*	werden	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	.	$.	*	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	RECHA	NE	(VROOT(PSEUDO*	recha	-	-	(LOC*)	(2
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	2)

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	so	ADV	*	so	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	ein	ART	*	ein	sg	neut	-	(37
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	Engel	NN	*	engel	sg	neut	-	37)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	;	$.	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	nein	PTKANT	*	nein	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	!	$.	*	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	ein	ART	(VROOT(PSEUDO(DL(NP*	ein	sg	masc	-	(27
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	wirklicher	ADJA	*)	wirklich	sg	masc	-	27)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	;	$.	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	Es	PPER	(S*	es	sg	neut	-	(28)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	war	VAFIN	*	sein	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	gewiß	ADV	*	gewiß	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	ein	ART	(NP*	ein	sg	masc	-	(38
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	wirklicher	ADJA	*)))	wirklich	sg	masc	-	38)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	!	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Habt	VAFIN	(S*	haben	pl	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	Ihr	PPER	*	ihr	pl	*	-	(1
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	1)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	Ihr	PPER	*	ihr	pl	*	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	selbst	ADV	*)	selbst	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	die	ART	(NP*	der	sg	fem	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	Möglichkeit	NN	*	möglichkeit	sg	fem	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	daß	KOUS	(CS(S*	daß	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	Engel	NN	*	engel	pl	masc	-	(27)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	sind	VAFIN	*	sein	pl	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	Daß	KOUS	(S*	daß	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	Gott	NN	*	gott	sg	masc	-	(25)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	15	zum	APPRART	(PP*	zu	sg	neut	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	16	Besten	NN	*)	gut	sg	neut	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	17	derer	PDS	(NP*	der	pl	*	-	(39
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	18	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	19	die	PRELS	(S*	der	pl	*	-	(39)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	20	ihn	PPER	*	ihn	sg	masc	-	(25)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	21	lieben	VVFIN	*))))	lieben	pl	-	-	39)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	22	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	23	Auch	ADV	(S(NP*	auch	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	24	Wunder	NN	*)	wunder	pl	neut	-	(40)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	25	könne	VMFIN	*	können	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	26	tun	VVINF	(CVP*	tun	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	27	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	28	mich	PPER	(VP*	mich	sg	*	-	(2)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	29	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	30	gelehrt	VVPP	*)))))	lehren	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	31	?	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	*	ich	sg	*	-	(2)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	lieb	VVFIN	*	leiben	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	ihn	PPER	*	ihn	sg	masc	-	(25)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	ja	ADV	*	ja	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	.	$.	*	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	(41
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	er	PPER	*	er	sg	masc	-	(25)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	liebt	VVFIN	*	lieben	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	dich	PRF	*	dich	sg	-	-	(2)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	;	$.	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	und	KON	(CS(S*	und	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	tut	VVFIN	*	tun	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	Für	APPR	(PP*	für	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	dich	PPER	*))	dich	sg	*	-	(2)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	und	KON	*	und	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	deines	PPOSAT	(S(NP*	dein	sg	masc	-	(39|(2)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	gleichen	ADJA	*	gleich	-	-	-	39)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	stündlich	ADJD	*	stündlich	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	15	Wunder	NN	*)	wunder	*	*	-	(40)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	16	;	$.	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	17	Ja	PTKANT	(S*	ja	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	18	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	19	hat	VAFIN	*	haben	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	20	sie	PPER	(VP*	sie	sg	fem	-	(40)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	21	schon	ADV	*	schon	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	22	von	APPR	(PP*	von	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	23	aller	PIAT	*	aller	sg	fem	-	(42
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	24	Ewigkeit	NN	*)	ewigkeit	sg	fem	-	42)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	25	Für	APPR	(PP*	für	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	26	euch	PPER	*)	euch	pl	*	-	(39)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	27	getan	VVPP	*)))))	tun	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	28	.	$.	*))	--	-	-	-	41)

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	RECHA	NE	(VROOT(PSEUDO*	recha	-	-	(LOC*)	(2
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	2)

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Das	PDS	*	der	sg	neut	-	(41)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	hör	VAFIN	*	hör	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(2)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	gern	ADV	*	gern	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	.	$.	*	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wie	PWAV	(VROOT(PSEUDO*	wie	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	weil	KOUS	*	weil	-	-	-	(43)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Es	PPER	*	es	sg	neut	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	ganz	ADV	*	ganz	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	natürlich	ADV	*	natürlich	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	ganz	ADV	*	ganz	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	alltäglich	ADJD	*	alltäglich	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	klänge	VVFIN	*	klängen	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	Wenn	KOUS	*	wenn	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	dich	PPER	*	dich	sg	-	-	(2)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	ein	ART	*	ein	sg	masc	-	(44
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	eigentlicher	ADJA	*	eigentlich	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	Tempelherr	NN	*	tempelherr	sg	masc	-	44)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	Gerettet	VVPP	*	retten	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	15	hätte	VAFIN	*	haben	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	16	:	$.	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	17	sollt	VMFIN	*	sollen	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	18	'	$(	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	19	es	PPER	*	es	sg	neut	-	(36)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	20	darum	PROAV	*	darum	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	21	weniger	PIAT	*	weniger	*	*	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	22	Ein	ART	*	ein	*	*	-	(45
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	23	Wunder	NN	*	wunder	*	*	-	45)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	24	sein	VAINF	*	sein	sg	neut	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	25	?	$.	*	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Der	ART	(S(VP(NP(S(NP(AP(NP*	der	sg	masc	-	(40
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	Wunder	NN	*)	wunder	sg	masc	-	40)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	höchstes	ADJA	*))	hoch	sg	neut	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	ist	VAFIN	*)	sein	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	Daß	KOUS	(S*	daß	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	uns	PPER	*	uns	pl	*	-	(34)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	die	ART	(PP(AVP*	der	pl	*	-	(40
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	wahren	ADJA	*)	wahren	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	echten	ADJA	(S(NP*	echt	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	Wunder	NN	*)	wunder	sg	masc	-	40)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	so	ADV	*	so	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	Alltäglich	ADJD	(VP*	alltäglich	-	-	(PER*)	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	15	werden	VAINF	*)	werden	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	16	können	VMFIN	*))	können	pl	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	17	,	$,	*))	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	18	werden	VAINF	*)	werden	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	19	sollen	VMFIN	*)	sollen	pl	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	20	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ohn	NE	*	ohn	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	'	$(	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	dieses	PDAT	*	dieser	sg	neut	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	allgemeine	ADJA	*	allgemein	sg	neut	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	Wunder	NN	*	wunder	sg	neut	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	hätte	VAFIN	*	haben	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	Ein	ART	*	ein	sg	masc	-	(46
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	Denkender	NN	*	denkender	sg	masc	-	46)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	wohl	ADV	*	wohl	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	schwerlich	ADJD	*	schwerlich	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	Wunder	NN	*	wunder	*	*	-	(40)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	je	ADV	*	je	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	Genannt	VVPP	*	nennen	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	15	was	PWS	*	was	sg	neut	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	16	Kindern	NN	*	kind	pl	neut	-	(47)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	17	bloß	ADV	*	bloß	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	18	so	ADV	*	so	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	19	heißen	VVINF	*	heißen	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	20	müßte	VMFIN	*	müssen	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	21	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	22	Die	NN	*	der	sg	fem	-	(47)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	23	gaffend	ADJD	*	gaffend	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	24	nur	ADV	*	nur	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	25	das	ART	*	der	sg	neut	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	26	Ungewöhnlichste	NN	*	ungewöhnlichste	sg	neut	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	27	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	28	Das	ART	*	der	sg	neut	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	29	Neuste	NN	*	neust	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	30	nur	ADV	*	nur	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	31	verfolgen	VVINF	*	verfolgen	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	32	.	$.	*	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*))	daja	-	-	-	(0)

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	zu	APPR	(VROOT(PSEUDO(MPN*	zu	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Nathan	NE	*)	nathan	-	-	-	(1)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wollt	VMFIN	(VROOT(PSEUDO(S*	wollen	pl	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ihr	PPER	*	ihr	pl	*	-	(1)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	denn	ADV	*	denn	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	Ihr	NN	*	ihr	pl	*	-	(2)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	ohnedem	PIS	*	ohnedem	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	schon	ADV	(NP*	schon	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	Überspanntes	NN	*	überspannt	sg	masc	-	(48
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	Hirn	NE	*)	hirn	sg	masc	-	48)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	Durch	APPR	(PP*	durch	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	solcherlei	PIAT	*	solcherlei	*	*	-	(43
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	Subtilitäten	NN	*)	subtilität	pl	fem	-	43)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	ganz	ADV	*	ganz	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	Zersprengen	NN	*)	zersprenge	pl	fem	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	?	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Laß	KOUS	*	lassen	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	mich	PPER	*	mich	sg	*	-	(1)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Meiner	PPOSAT	*	meiner	*	*	-	(2|(1)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	Recha	FM	*	recha	sg	neut	-	2)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	wär	FM	*	sein	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	'	$(	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	Es	PPER	*	es	sg	neut	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	Wunders	NN	*	wunder	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	genug	ADV	*	genug	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	daß	KOUS	*	daß	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	sie	PPER	*	sie	sg	fem	-	(2)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	ein	ART	*	ein	sg	masc	-	(28
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	Mensch	NN	*	mensch	sg	masc	-	28)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	Gerettet	VVPP	*	retten	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	15	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	16	welchen	PWAT	*	welcher	sg	masc	-	(28)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	17	selbst	ADV	*	selbst	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	18	kein	PIAT	*	kein	sg	neut	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	19	kleines	ADJA	*	klein	sg	neut	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	20	Wunder	NN	*	wunder	sg	neut	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	21	Erst	ADV	*	erst	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	22	retten	VVINF	*	retten	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	23	müssen	VMINF	*	müssen	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	24	?	$.	*	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ja	PTKANT	(VROOT(PSEUDO(S*	ja	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	kein	PIAT	(NP*	kein	sg	neut	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	kleines	ADJA	*	klein	sg	neut	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	Wunder	NN	*))	wunder	sg	neut	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Denn	KON	(VROOT(PSEUDO(S*	denn	-	-	-	(49
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	wer	PWS	*	wer	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	hat	VAFIN	*	haben	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	schon	ADV	*	schon	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	gehört	VVPP	(CVP*	gehören	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	daß	KOUS	(VP(PP*	daß	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	Saladin	NE	*	saladin	sg	fem	(PER*)	(7)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	Je	NE	*)	je	sg	fem	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	eines	ART	(NP*	ein	sg	masc	-	(44
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	Tempelherrn	NN	*)	tempelherr	sg	masc	-	44)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	verschont	VVPP	*)))	verschonen	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	?	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	daß	KOUS	(VROOT(PSEUDO(S*	daß	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	je	ADV	*	je	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	Ein	ART	(NP*	ein	sg	masc	-	(44
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	Tempelherr	NN	*	tempelherr	sg	masc	-	44)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	von	APPR	(VP(VP(PP*	von	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	ihm	PPER	*)	ihm	sg	masc	-	(7)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	verschont	VVPP	*)	verschonen	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	werden	VAINF	*)))	werden	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	Verlangt	NN	*)	verlangen	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	?	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	gehofft	VVPP	*	hoffen	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	?	$.	*	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	ihm	PPER	(VROOT(PSEUDO(DL(VP*	ihm	sg	masc	-	(44)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	je	ADV	(PP*	je	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	für	APPR	*	für	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	seine	PPOSAT	*	sein	sg	fem	-	(50|(44)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	Freiheit	NN	*)	freiheit	sg	fem	-	50)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	Mehr	PIAT	(AP*	mehr	*	*	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	als	KOKOM	(NP*	als	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	den	ART	*	der	sg	masc	-	(51
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	ledern	ADJA	*	ledern	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	Gurt	NN	*))	gurt	sg	masc	-	51)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	geboten	VVPP	*	geboten	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	der	ART	(S(NP*	der	sg	masc	-	(51)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	Sein	NN	*	sein	sg	masc	-	(7)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	Eisen	NN	*)	eisen	pl	fem	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	15	schleppt	VVFIN	*))	schleppen	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	16	;	$.	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	17	und	KON	(S*	und	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	18	höchstens	ADV	*	höchstens	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	19	seinen	PPOSAT	(NP*	sein	pl	-	-	(7)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	20	Dolch	NN	*)))	dolch	*	*	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	21	?	$.	*))	--	-	-	-	49)

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	RECHA	NE	(VROOT(PSEUDO*	recha	-	-	(LOC*)	(2
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	2)

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Das	PDS	(VROOT(PSEUDO(S*	der	sg	neut	-	(49)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	schließt	VVFIN	*	schließen	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	für	APPR	(PP*	für	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	mich	PPER	*)	mich	sg	*	-	(2)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	mein	PPOSAT	(NP*	mein	sg	masc	-	(1|(2)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	Vater	NN	*))	vater	sg	masc	-	1)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Darum	PROAV	(S*	darum	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	eben	ADV	*	eben	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	War	VAFIN	*	sein	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	das	PDS	*	der	sg	neut	-	(28)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	kein	PIAT	(NP*	kein	sg	neut	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	Tempelherr	NN	*)	tempelherr	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	;	$.	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	er	PPER	(S*	er	sg	masc	-	(33)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	schien	VVFIN	*	scheinen	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	es	PPER	*	es	sg	neut	-	(52)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	nur	ADV	*))	nur	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Kömmt	VVFIN	*	kömmen	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	kein	PIAT	*	kein	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	gefangner	ADJA	*	gefangn	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	Tempelherr	NN	*	tempelherr	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	je	ADV	*	je	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	anders	ADV	*	anders	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	Als	KOKOM	*	als	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	zum	APPRART	*	zu	sg	neut	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	gewissen	ADJA	*	gewiß	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	Tode	NN	*	tod	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	nach	APPR	*	nach	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	Jerusalem	NE	*	jerusalem	sg	neut	(LOC*)	(14)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	;	$.	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	Geht	VVFIN	*	gehen	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	15	keiner	PIS	*	keiner	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	16	in	APPR	*	in	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	17	Jerusalem	NE	*	jerusalem	sg	neut	(LOC*)	(14)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	18	so	ADV	*	so	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	19	frei	ADJD	*	frei	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	20	Umher	NN	*	umher	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	21	:	$.	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	22	wie	KOKOM	*	wie	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	23	hätte	VAFIN	*	haben	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	24	mich	PPER	*	mich	sg	*	-	(2)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	25	des	ART	*	der	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	26	Nachts	NN	*	nacht	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	27	freiwillig	ADJD	*	freiwillig	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	28	Denn	KON	*	denn	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	29	einer	ART	*	ein	sg	fem	-	(44)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	30	retten	VVINF	*	retten	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	31	können	VMINF	*	können	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	32	?	$.	*	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Sieh	NE	(VROOT(PSEUDO*	sieh	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	wie	PWAV	(VROOT(PSEUDO(AP*	wie	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	sinnreich	ADJD	*)	sinnreich	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Jetzt	ADV	(VROOT(PSEUDO(CS*	jetzt	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	Daja	NE	(S(CNP*	daja	-	-	(PER*)	(0)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	nimm	NE	*)	nimm	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	das	ART	(NP*	der	sg	neut	-	(53
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	Wort	NN	*)))	wort	sg	neut	-	53)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	*	ich	sg	*	-	(1)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	hab	VVFIN	*	hab	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	es	PPER	*	es	sg	neut	-	(54)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	ja	ADV	*	ja	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	Von	APPR	*	von	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	dir	PPER	*	dir	sg	*	-	(0)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	daß	KOUS	*	daß	-	-	-	(54
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	er	PPER	*	er	sg	masc	-	(28)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	gefangen	VVPP	*	gefangen	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	hergeschickt	VVPP	*	hergeschickt	-	-	-	54)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	Ist	VVPP	*	sein	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	worden	VAPP	*	werden	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	.	$.	*	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ohne	APPR	(VROOT(PSEUDO(S(PP*	ohne	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Zweifel	NN	*)	zweifel	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	weißt	VVFIN	*	weißen	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	du	PPER	*	du	sg	*	-	(0)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	mehr	ADV	*)	mehr	*	*	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nun	ADV	(VROOT(PSEUDO(S*	nun	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	ja	PTKANT	*)	ja	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	So	ADV	(S*	so	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	sagt	VVFIN	*	sagen	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	man	PIS	*	man	sg	*	-	(55)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	freilich	ADV	*	freilich	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	;	$.	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	–	PPER	*	–	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	doch	ADV	*	doch	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	man	PIS	*	man	sg	*	-	(56|(55)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	sagt	VVFIN	*	sagen	sg	-	-	56)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	Zugleich	ADV	*	zugleich	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	daß	KOUS	(S*	daß	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	Saladin	NE	*	saladin	sg	*	(PER*)	(7)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	den	ART	(NP*	der	pl	masc	-	(28
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	15	Tempelherrn	NN	*)	tempelherr	pl	masc	-	28)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	16	Begnadigt	VVPP	*	begnadigen	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	17	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	18	weil	KOUS	(S*	weil	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	19	er	PPER	*	er	sg	masc	-	(28)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	20	seiner	PPOSAT	(VP(NP*	sein	sg	fem	-	(57|(7)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	21	Brüder	NN	*)	Bruder	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	22	einem	PIS	(NP*	ein	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	23	,	$,	*	--	-	-	-	57)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	24	Den	PRELS	(S*	der	sg	masc	-	(57)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	25	er	PPER	*	er	sg	masc	-	(7)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	26	besonders	ADV	*	besonders	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	27	lieb	VVFIN	*))	leiben	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	28	gehabt	VAPP	*)	haben	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	29	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	30	so	ADV	(AP*	so	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	31	ähnlich	ADJD	*))))	ähnlich	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	32	sehe	VVFIN	*	sehen	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	33	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Doch	KON	(VROOT(PSEUDO(CS(S*	doch	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	da	KOUS	*	da	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	es	PPER	*	es	sg	neut	-	(58)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	viele	PIS	*	vieler	pl	*	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	zwanzig	CARD	(NP*	zwanzig	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	Jahre	NN	*)	jahr	pl	neut	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	her	PTKVZ	*	her	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	Daß	KOUS	(S*	daß	-	-	-	(58
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	dieser	PDAT	(NP*	dieser	sg	masc	-	(57
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	Bruder	NN	*)	bruder	sg	masc	-	57)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	nicht	PTKNEG	(AVP*	nicht	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	mehr	ADV	*)	mehr	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	lebt	VVFIN	*))	leben	sg	-	-	58)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	15	–	NN	(S*	–	sg	neut	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	16	er	PPER	*	er	sg	masc	-	(57)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	17	hieß	VVFIN	*	heißen	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	18	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	19	Ich	PPER	(S*	ich	sg	*	-	(0)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	20	weiß	VVFIN	*	weiß	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	21	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	22	wie	KOKOM	(PP*	wie	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	23	;	$.	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	24	–	KON	(S*	–	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	25	er	PPER	*	er	sg	masc	-	(57)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	26	blieb	VVFIN	*	bleiben	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	27	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	28	ich	PPER	(S*	ich	sg	*	-	(0)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	29	weiß	VVFIN	*	weiß	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	30	nicht	PTKNEG	*))))))	nicht	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	31	wo	PWAV	*	wo	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	32	;	$.	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	33	–	XY	*	–	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	34	So	ADV	(S*	so	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	35	klingt	VVFIN	*	klingen	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	36	das	PDS	*	der	sg	neut	-	(56)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	37	ja	ADV	*	ja	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	38	so	ADV	(AVP*	so	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	39	gar	ADV	*)	gar	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	40	–	ADV	*	–	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	41	so	ADV	(AVP*	so	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	42	gar	ADV	*)	gar	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	43	unglaublich	ADJD	*	unglaublich	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	44	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	45	Daß	KOUS	(S*	daß	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	46	an	APPR	(PP*	an	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	47	der	ART	*	der	sg	fem	-	(56
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	48	ganzen	ADJA	*	ganz	sg	fem	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	49	Sache	NN	*)	sache	sg	fem	-	56)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	50	wohl	ADV	(NP*	wohl	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	51	nichts	PIS	*)	nichts	*	neut	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	52	ist	VAFIN	*))	sein	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	53	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ei	XY	(VROOT(PSEUDO*	ei	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	Daja	NE	*	daja	-	-	(PER*)	(0)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Warum	PWAV	(VROOT(PSEUDO(S*	warum	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	wäre	VAFIN	*	sein	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	denn	ADV	*	denn	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	das	PDS	*	der	sg	neut	-	(56)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	so	ADV	(AP*	so	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	Unglaublich	ADJD	*))	unglaublich	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Doch	KON	*	doch	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	wohl	ADV	*	wohl	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	–	$(	*	–	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	wie	KOKOM	*	wie	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	'	$(	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	s	PPER	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	wohl	ADV	*	wohl	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	geschieht	VVFIN	*	geschehen	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	–	$(	*	–	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	Um	NN	*	um	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	lieber	ADV	*	lieber	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	etwas	ADV	*	etwas	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	noch	ADV	*	noch	-	-	-	(59
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	Unglaublichers	NN	*	unglaublicher	sg	*	-	59)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	15	Zu	PTKZU	*	zu	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	16	glauben	VVINF	*	glauben	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	17	?	$.	*	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Warum	PWAV	(NP(AP(S*	warum	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	hätte	VAFIN	*	haben	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	Saladin	NN	(NP*	saladin	-	-	(PER*)	(7
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	7)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	Der	PRELS	(S*	der	sg	masc	-	(7)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	sein	PPOSAT	(NP*	sein	sg	masc	-	(7)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	Geschwister	NN	*)	geschwister	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	insgesamt	ADV	*)))	insgesamt	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	so	ADV	*	so	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	liebt	ADJD	*)	lieben	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	In	APPR	(VP(PP*	in	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	jüngern	ADJA	*	jüngern	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	Jahren	NN	*)	jahr	pl	neut	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	15	einen	ART	(VP(NP*	ein	sg	masc	-	(57
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	16	Bruder	NN	*)	bruder	sg	masc	-	57)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	17	nicht	PTKNEG	(AVP*	nicht	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	18	Noch	ADV	*)	noch	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	19	ganz	ADV	(AVP*	ganz	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	20	besonders	ADV	*)	besonders	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	21	lieben	VVINF	*)	lieben	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	22	können	VMINF	*))	können	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	23	?	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Pflegen	VVFIN	(S*	pflege	pl	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	Sich	PRF	(VP*	sich	pl	-	-	(60)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	zwei	CARD	(NP*	zwei	-	-	-	(60
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	Gesichter	NN	*)	gesicht	sg	*	-	60)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	ähneln	VVINF	*)))	ähneln	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	?	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ist	VAFIN	(S*	sein	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	Ein	ART	(NP*	ein	sg	masc	-	(61
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	alter	ADJA	*	alt	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	Eindruck	NN	*))	eindruck	sg	masc	-	61)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	ein	ART	(NP*	ein	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	verlorner	ADJA	*)	verlorn	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	?	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Wirkt	NN	(NP*	wirken	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	Das	ART	(NP*	der	sg	neut	-	(62
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	nämliche	ADJA	*))	nämlich	sg	neut	-	62)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	nicht	PTKNEG	(NP(AVP*	nicht	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	mehr	ADV	*)	mehr	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	das	ART	*	der	sg	neut	-	(63
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	nämliche	ADJA	*)	nämlich	sg	neut	-	63)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	?	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Seit	NN	*	seit	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	wenn	KOUS	*	wenn	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	?	$.	*	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Wo	PWAV	(S*	wo	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	steckt	VVFIN	*)	stecken	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	hier	ADV	(NP*	hier	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	das	ART	*	der	sg	neut	-	(59
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	Unglaubliche	NN	*)	unglaubliche	sg	neut	-	59)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ei	XY	*	ei	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	freilich	ADV	*	freilich	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	weise	VVFIN	*	weise	-	-	-	(0
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	Daja	NE	*	daja	-	-	(PER*)	0)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	wär	VAFIN	*	sein	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	'	$(	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	s	PPER	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	für	APPR	*	für	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	dich	PRF	*	dich	sg	*	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	Kein	PIAT	*	kein	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	Wunder	NN	*	wunder	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	mehr	ADV	*	mehr	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	15	;	$.	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	16	und	KON	*	und	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	17	deine	PPOSAT	*	dein	pl	neut	-	(59
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	18	Wunder	NN	*	wunder	pl	neut	-	59)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	19	nur	ADV	*	nur	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	20	Bedürf	NN	*	bedürf	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	21	.	$.	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	22	.	$.	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	23	.	$.	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	24	verdienen	VVFIN	*	verdienen	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	25	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	26	will	VMFIN	*	wollen	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	27	ich	PPER	*	ich	sg	*	-	(1)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	28	sagen	VVINF	*	sagen	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	29	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	30	Glauben	NN	*	glaube	sg	masc	-	(64)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	31	.	$.	*	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ihr	PPER	(VROOT(PSEUDO(S*	ihr	pl	*	-	(1)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	spottet	VVFIN	*)	spotten	pl	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Weil	KOUS	(VROOT(PSEUDO(S*	weil	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	du	PPER	*	du	sg	masc	-	(0)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	meiner	PIS	*	mein	sg	fem	-	(1)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	spottest	VVFIN	*)	spottest	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Doch	KON	(S(AVP(S*	doch	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	Auch	ADV	(AVP*	auch	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	so	ADV	*	so	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	noch	ADV	*)	noch	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	Recha	NE	*	recha	sg	neut	(PER*)	(2)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	bleibet	VVFIN	*	bleiben	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	deine	PPOSAT	(NP*	dein	sg	fem	-	(36
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	Rettung	NN	*	rettung	sg	fem	-	36)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	Ein	ART	(NP*	ein	sg	masc	-	(45
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	Wunder	NN	*	wunder	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	dem	PRELS	(S*	der	sg	masc	-	(65)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	15	nur	ADV	*	nur	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	16	möglich	ADJD	*))	möglich	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	17	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	18	der	PRELS	(S*	der	sg	masc	-	(65)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	19	die	ART	(NP*	der	pl	fem	-	(66
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	20	strengsten	ADJA	*	streng	pl	masc	-	66)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	21	Entschlüsse	NN	*)	entschluß	pl	masc	-	45)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	22	Der	ART	(NP*	der	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	23	Könige	NN	*)	könig	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	24	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	25	sein	PPOSAT	(AP(NP*	sein	sg	masc	-	(65)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	26	Spiel	NN	*)	spiel	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	27	–	APPO	*))))	–	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	28	wenn	ADV	*)	wenn	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	29	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	30	sein	PPOSAT	(NP*	sein	sg	masc	-	(65)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	31	Spott	NN	*)	spott	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	32	–	PIAT	(NP*	–	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	33	Gern	NN	*)	gern	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	34	an	APPR	(PP*	an	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	35	den	ART	*	der	pl	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	36	schwächsten	ADJA	*	schwache	pl	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	37	Fäden	NN	*))	faden	pl	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	38	lenkt	VVFIN	*	lenken	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	39	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	RECHA	NE	(VROOT(PSEUDO*	recha	-	-	(LOC*)	(2
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	2)

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Mein	PPOSAT	(VROOT(PSEUDO(NP*	mein	sg	masc	-	(1|(2)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Vater	NN	*)	vater	sg	masc	-	1)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Mein	PPOSAT	*	mein	sg	masc	-	(1|(2)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Vater	NN	*	vater	sg	masc	-	1)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	wenn	KOUS	*	wenn	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	ich	PPER	*	ich	sg	*	-	(2)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	irr	PRF	*	irr	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	'	$(	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	Ihr	PPER	*	ihr	pl	*	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	wißt	VVFIN	*	wissen	pl	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	ich	PPER	*	ich	sg	*	-	(2)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	irre	PPOSAT	*	irre	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	Nicht	NN	*	nicht	sg	neut	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	gern	ADV	*	gern	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	15	.	$.	*	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Vielmehr	ADV	(VROOT(PSEUDO(S*	vielmehr	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	du	PPER	*	du	sg	*	-	(2)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	läßst	VVFIN	*	läßsen	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	dich	PPER	*	dich	sg	-	-	(2)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	gern	ADV	*	gern	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	belehren	VVINF	*)	belehren	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Sieh	NE	*	sieh	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	eine	ART	*	ein	sg	fem	-	(67
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Stirn	NN	*	stirn	sg	fem	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	so	ADV	*	so	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	oder	KON	*	oder	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	so	ADV	*	so	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	gewölbt	VVPP	*	wölben	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	;	$.	*	--	-	-	-	67)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	Der	ART	*	der	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	Rücken	NN	*	rücken	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	einer	ART	*	ein	sg	fem	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	Nase	NN	*	nase	sg	fem	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	so	ADV	*	so	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	vielmehr	ADV	*	vielmehr	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	15	Als	APPR	*	als	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	16	so	ADV	*	so	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	17	geführet	VVPP	*	geführet	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	18	;	$.	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	19	Augenbraunen	NN	*	augenbraune	-	-	-	(68
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	20	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	21	die	PRELS	*	der	sg	fem	-	68)|(68)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	22	Auf	APPR	*	auf	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	23	einem	ART	*	ein	sg	neut	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	24	scharfen	ADJA	*	scharf	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	25	oder	KON	*	oder	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	26	stumpfen	ADJA	*	stumpf	pl	*	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	27	Knochen	NN	*	knochen	pl	*	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	28	So	ADV	*	so	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	29	oder	KON	*	oder	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	30	so	ADV	*	so	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	31	sich	PRF	*	sich	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	32	schlängeln	VVINF	*	schlängeln	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	33	;	$.	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	34	eine	ART	*	ein	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	35	Linie	NN	*	linie	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	36	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	37	Ein	ART	*	ein	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	38	Bug	NN	*	bug	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	39	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	40	ein	ART	*	ein	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	41	Winkel	NN	*	winkel	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	42	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	43	eine	ART	*	ein	sg	fem	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	44	Falt	NN	*	falt	sg	fem	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	45	'	$(	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	46	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	47	ein	ART	*	ein	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	48	Mal	NN	*	mal	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	49	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	50	Ein	ART	*	ein	sg	neut	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	51	Nichts	PIS	*	nichts	*	neut	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	52	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	53	auf	APPR	*	auf	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	54	eines	ART	*	ein	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	55	wilden	ADJA	*	wild	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	56	Europäers	NN	*	europäer	sg	masc	(MISC*)	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	57	Gesicht	NN	*	gesicht	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	58	:	$.	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	59	–	TRUNC	*	–	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	60	und	KON	*	und	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	61	du	PPER	*	du	sg	*	-	(2)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	62	entkömmst	VVFIN	*	entkömmsen	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	63	dem	ART	*	der	sg	neut	-	(24
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	64	Feur	NN	*	feur	sg	neut	-	24)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	65	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	66	in	APPR	*	in	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	67	Asien	NE	*	asien	sg	neut	(LOC*)	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	68	!	$.	*	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Das	PDS	*	der	sg	neut	-	(67)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	wär	VAFIN	*	sein	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	kein	PIAT	*	kein	sg	neut	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	Wunder	NN	*	wunder	sg	neut	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	wundersücht	NN	*	wundersüchen	-	-	-	(69
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	'	$(	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	ges	ADJA	*	g	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	Volk	NN	*	volk	-	-	-	69)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	?	$.	*	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Warum	PWAV	(VROOT(PSEUDO(S*	warum	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	bemüht	ADJD	*	bemühen	pl	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	ihr	PPER	*	ihr	pl	*	-	(69)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	denn	ADV	*	denn	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	noch	ADV	(NP*	noch	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	einen	ART	*	ein	sg	masc	-	(70
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	Engel	NN	*))	engel	sg	masc	-	70)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	?	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	schadets	ADV	(AP*	schadets	-	-	-	(71)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	–	CARD	(NP*	–	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	Nathan	NN	*))	nathan	-	-	-	(1)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	wenn	KOUS	(S*	wenn	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	ich	PPER	*	ich	sg	*	-	(0)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	sprechen	VVINF	*	sprechen	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	darf	VMFIN	*))	dürfen	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	–	XY	*	–	*	*	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	Bei	APPR	*	bei	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	alle	PIS	(NP*	aller	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	dem	PDS	(NP*	der	sg	neut	-	(43)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	von	APPR	(VP(PP*	von	-	-	-	(71
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	15	einem	ART	*	ein	sg	neut	-	(70
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	16	Engel	NN	*)	engel	sg	neut	-	70)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	17	lieber	ADV	(VP*	lieber	-	-	-	71)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	18	Als	APPR	(PP*	als	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	19	einem	ART	*	ein	sg	neut	-	(34
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	20	Menschen	NN	*)	mensch	sg	neut	-	34)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	21	sich	PRF	*	sich	sg	-	-	(34)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	22	gerettet	VVPP	*)	retten	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	23	denken	VVINF	*)))	denken	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	24	?	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Fühlt	VVFIN	(VROOT(PSEUDO(S*	fühlen	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	man	PIS	*	man	sg	*	-	(34)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	der	ART	(NP*	der	sg	fem	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	ersten	ADJA	*	erster	sg	fem	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	unbegreiflichen	ADJA	*	unbegreiflich	sg	fem	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	Ursache	NN	*	ursache	sg	fem	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	seiner	PPOSAT	(NP*	sein	sg	fem	-	(72|(34)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	Rettung	NN	*))	rettung	sg	fem	-	72)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	sich	PRF	*	sich	sg	-	-	(34)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	so	ADV	(AVP*	so	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	Viel	ADV	*)	viel	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	näher	ADJD	*)	nah	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	?	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Stolz	ADJD	(VROOT(PSEUDO*	stolz	-	-	-	(73)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	nichts	PIS	(NP*	nichts	*	neut	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	als	APPR	(PP*	als	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	Stolz	NN	*)))	stolz	sg	masc	-	(73)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(S(NP*	der	sg	masc	-	(74
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Topf	NN	*	topf	sg	masc	-	74)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	Von	APPR	(PP*	von	*	*	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	Eisen	NN	*))	eisen	*	neut	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	will	VMFIN	*	wollen	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	mit	APPR	(VP(VP(NP(VP(PP*	mit	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	einer	PIS	*)	ein	sg	fem	-	(59
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	silbern	VVINF	*)	silbern	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	Zange	ADJA	*	zange	-	-	-	59)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	Gern	NN	*)	ger	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	aus	APPR	(PP*	aus	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	der	ART	*	der	sg	fem	-	(75
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	Glut	NN	*)	glut	sg	fem	-	75)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	gehoben	VVPP	*)	heben	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	sein	VAINF	*	sein	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	15	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	16	um	KOUI	(VP*	um	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	17	selbst	ADV	*	selbst	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	18	Ein	ART	(NP*	ein	*	*	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	19	Topf	NN	*	topf	sg	*	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	20	von	APPR	(PP*	von	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	21	Silber	NN	*))	silber	sg	*	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	22	sich	PRF	*	sich	sg	-	-	(74)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	23	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	24	dünken	VVINF	*))))	dünken	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	25	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Pah	NE	*	pah	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Und	KON	(S*	und	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	was	PWS	*	was	sg	neut	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	es	PPER	*	es	sg	neut	-	(71)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	schadet	VVFIN	*)	schaden	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	fragst	VVFIN	(S*	fragen	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	du	PPER	*)	du	sg	*	-	(0)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	?	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	es	PPER	*	es	sg	neut	-	(71)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	schadet	VVFIN	*)	schaden	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	hilft	VVFIN	*	helfen	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	es	PPER	*)	es	sg	neut	-	(71)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	dürft	VVFIN	(VROOT(PSEUDO(S*	dürfen	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	ich	PPER	*	ich	sg	*	-	(1)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	nur	ADV	(VP*	nur	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	hinwieder	ADV	*	hinwieder	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	fragen	VVINF	*))	fragen	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Denn	KON	(S*	denn	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	dein	PPOSAT	(S(NP*	dein	-	-	-	(0)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	»	NN	*)	»	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	Sich	PRF	(VP*	sich	sg	-	-	(34)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	Gott	NN	*	gott	sg	masc	-	(76)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	um	KOUI	(AVP*	um	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	so	ADV	*)	so	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	viel	ADV	(AP*	viel	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	näher	ADJD	*)	nah	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	fühlen	VVINF	*)	fühlen	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	«	VAFIN	*)	«	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	Ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	Unsinn	NN	(CNP*	unsinn	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	15	oder	KON	*	oder	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	16	Gotteslästerung	NN	*))	gotteslästerung	sg	fem	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	17	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Allein	ADV	(S(NP*	allein	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	es	PPER	*)	es	sg	neut	-	(71)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	schadet	VVFIN	*)	schaden	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	;	$.	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	ja	PTKANT	(S*	ja	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	es	PPER	(S*	es	sg	neut	-	(71)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	schadet	VVFIN	*	schaden	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	allerdings	ADV	*))	allerdings	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Kommt	VVFIN	*	kommen	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	hört	VVFIN	(VROOT(PSEUDO(S*	hören	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	mir	PPER	*	sich	sg	*	-	(1)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	zu	PTKVZ	*)	zu	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	wahr	PTKVZ	*	wahr	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	?	$.	*	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	dem	ART	(VROOT(PSEUDO(CS(S(NP*	der	sg	masc	-	(28
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Wesen	NN	*	wesen	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	das	PRELS	(S*	der	sg	neut	-	28)|(28)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	Dich	PPER	*	dich	sg	neut	-	(0)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	rettete	VVFIN	*))	retten	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	–	VAFIN	*	–	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	es	PPER	(S*	es	sg	neut	-	(28)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	sei	VAFIN	*	sein	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	ein	ART	(CNP(NP*	ein	sg	neut	-	(38
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	Engel	NN	*)	engel	sg	neut	-	38)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	oder	KON	*	oder	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	Ein	ART	(NP*	ein	sg	masc	-	(37
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	Mensch	NN	*))))	mensch	sg	masc	-	37)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	15	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	16	dem	PDS	(S*	der	sg	masc	-	(28)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	17	möchtet	VMFIN	*	möchten	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	18	ihr	PPER	*	ihr	sg	fem	-	(69)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	19	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	20	und	KON	(VP*	und	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	21	du	PPER	*	du	sg	*	-	(0)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	22	besonders	ADV	*	besonders	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	23	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	24	Gern	NN	(NP*	gern	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	25	wieder	ADV	(NP(AP*	wieder	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	26	viele	PIAT	*)	vieler	pl	*	-	(77
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	27	große	ADJA	*	groß	pl	*	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	28	Dienste	NN	*))	dienst	pl	masc	-	77)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	29	tun	VVINF	*)))	tun	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	30	?	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	wahr	PTKVZ	*	wahr	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	?	$.	*	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Nun	ADV	*	nun	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	einem	ART	(NP*	ein	sg	neut	-	(33
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	Engel	NN	*	engel	sg	neut	-	33)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	was	PWS	(S*	was	sg	neut	-	(77
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	für	APPR	(PP*	für	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	Dienste	NN	*	dienst	pl	masc	-	77)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	Für	APPR	(PP*	für	-	-	-	(77
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	große	ADJA	*	groß	pl	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	Dienste	NN	*))	dienst	pl	masc	-	77)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	könnt	VVFIN	*	können	pl	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	ihr	PPER	*	ihr	sg	fem	-	(69)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	15	dem	PDS	*	der	sg	neut	-	(33)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	16	wohl	ADV	*	wohl	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	17	tun	VVINF	*))	tun	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	18	?	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ihr	PPER	(VROOT(PSEUDO(S*	ihr	pl	*	-	(69)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	könnt	VVFIN	*	können	pl	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	ihm	PPER	*	ihm	sg	*	-	(33)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	danken	VVINF	(VP*	danken	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	;	$.	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	zu	APPR	(CO(VP(PP*	zu	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	ihm	PPER	*)	ihm	sg	masc	-	(33)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	seufzen	VVINF	*)	seufzen	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	beten	VVINF	(VP*	beten	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	;	$.	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	Könnt	NN	(CO(VP*	könnt	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	in	APPR	(PP*	in	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	Entzückung	NN	*)	entzückung	sg	fem	-	(78
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	über	APPR	(PP*	über	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	15	ihn	PPER	*)	ihn	sg	masc	-	78)|(33)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	16	zerschmelzen	VVINF	*	zerschmelzen	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	17	;	$.	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	18	Könnt	NN	(NP*	könnt	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	19	an	APPR	(PP*	an	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	20	dem	ART	*	der	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	21	Tage	NN	*	tag	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	22	seiner	PPOSAT	(NP*	sein	pl	neut	-	(33)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	23	Feier	NN	*)))	feier	pl	neut	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	24	fasten	VVINF	*)	fasten	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	25	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	26	Almosen	NN	(VP*	almosen	pl	fem	-	(79)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	27	spenden	VVINF	*))))))	spenden	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	28	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Alles	PIS	(NP*	alle	sg	neut	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	nichts	PIS	*)	nichts	*	neut	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Denn	KON	(S(AVP(S*	denn	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	mich	PPER	*	mich	sg	*	-	(1)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	Deucht	VVFIN	*)	deucht	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	immer	ADV	*)	immer	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	daß	KOUS	(S*	daß	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	ihr	PPER	*	ihr	sg	fem	-	(69)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	selbst	ADV	(AVP*	selbst	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	und	KON	*)	und	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	euer	ADV	(NP*	eu	pl	masc	-	(34|(69)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	Nächster	NN	*	nächster	*	*	-	34)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	Hierbei	PROAV	(AVP*	hierbei	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	weit	ADV	*	weit	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	mehr	ADV	*))	mehr	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	15	gewinnt	ADJD	*))	gewinnen	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	16	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	17	als	KOKOM	(NP*	als	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	18	er	PPER	*)	er	sg	masc	-	(33)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	19	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Er	PPER	(VROOT(PSEUDO(CS(S*	er	sg	masc	-	(33)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	wird	VAFIN	*	werden	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	Nicht	PTKNEG	(AP*	nicht	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	fett	ADJD	*)	fett	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	durch	APPR	(PP*	durch	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	euer	PPOSAT	*	eu	pl	fem	-	(69)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	Fasten	NN	*)	fasten	pl	fem	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	;	$.	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	wird	VAFIN	(S*	werden	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	reich	ADJD	*	reich	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	Durch	APPR	(PP*	durch	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	eure	PPOSAT	*	euer	pl	fem	-	(79|(69)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	Spenden	NN	*)))	spende	pl	fem	-	79)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	;	$.	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	15	wird	VAFIN	(S*	werden	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	16	nicht	PTKNEG	(NP(AP*	nicht	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	17	herrlicher	ADJA	*))))	herrlich	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	18	Durch	APPR	(S(PP*	durch	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	19	eur	PPOSAT	*	eur	-	-	-	(78|(69)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	20	Entzücken	NN	*)	entzücken	-	-	-	78)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	21	;	$.	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	22	wird	VAFIN	*	werden	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	23	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	24	mächtiger	ADJA	(NP*	mächtig	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	25	Durch	NN	*	durch	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	26	eur	APPRART	(PP*	eur	-	-	-	(64|(69)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	27	Vertraun	NN	*)))	vertraun	-	-	-	64)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	28	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	wahr	PTKVZ	*	wahr	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Allein	ADV	(VROOT(PSEUDO(NP*	allein	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	ein	ART	*	ein	sg	masc	-	(34
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	Mensch	NN	*)	mensch	sg	masc	-	34)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ei	XY	*	ei	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	freilich	ADV	*	freilich	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	hätt	VAFIN	*	hätt	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	'	$(	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	ein	ART	*	ein	sg	masc	-	(34
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	Mensch	NN	*	mensch	sg	masc	-	34)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	etwas	PIS	*	etwas	*	neut	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	für	APPR	*	für	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	ihn	PPER	*	ihn	sg	masc	-	(34)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	Zu	PTKZU	*	zu	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	tun	VVINF	*	tun	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	uns	PPER	*	uns	pl	*	-	(69)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	mehr	PIAT	*	mehr	*	*	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	15	Gelegenheit	NN	*	gelegenheit	sg	fem	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	16	verschafft	VVPP	*	verschaffen	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	17	.	$.	*	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S(NP(S*	und	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Gott	NN	*	gott	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	weiß	VVFIN	*)	weiß	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	wie	PWAV	(S*	wie	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	bereit	ADJD	*	bereit	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	wir	PPER	*	wir	pl	*	-	(69)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	dazu	PROAV	*))	dazu	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	waren	VAFIN	*)	sein	pl	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	!	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Allein	ADV	(VROOT(PSEUDO(CS(S(NP*	allein	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	er	PPER	*)	er	sg	masc	-	(28)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	wollte	VMFIN	*	wollen	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	ja	PTKANT	(AP(S*	ja	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	bedurfte	VVFIN	*)	bedürfen	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	ja	ADV	*	ja	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	So	ADV	*	so	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	völlig	ADJD	*)	völlig	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	nichts	PIS	*	nichts	*	neut	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	;	$.	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	war	VAFIN	(S*	sein	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	in	APPR	(AP(CPP(PP*	in	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	sich	PRF	*)	sich	sg	-	-	(28)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	15	mit	APPR	(PP*	mit	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	16	sich	PRF	*))	sich	sg	-	-	(28)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	17	so	ADV	*	so	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	18	Vergnügsam	ADJD	*)))	vergnügsam	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	19	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	20	als	KOKOM	(S*	als	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	21	nur	ADV	*	nur	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	22	Engel	NN	*	engel	pl	masc	-	(70)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	23	sind	VAFIN	*)	sein	pl	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	24	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	25	nur	ADV	(S(VP(NP*	nur	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	26	Engel	NN	*)	engel	sg	neut	-	(70)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	27	Sein	VAINF	*)	sein	sg	neut	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	28	können	VMFIN	*))	können	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	29	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	RECHA	NE	(VROOT(PSEUDO*	recha	-	-	(LOC*)	(2
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	2)

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Endlich	ADV	(VROOT(PSEUDO(S*	endlich	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	als	KOUS	*	als	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	er	PPER	*	er	sg	masc	-	(28)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	gar	ADV	*	gar	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	verschwand	ADJD	*)	verschwinden	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	.	$.	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	.	$.	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Verschwand	ADJD	(VROOT(PSEUDO*	verschwand	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO(S*	–	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Wie	KOKOM	(AVP*	wie	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	denn	ADV	*)	denn	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	verschwand	VVFIN	*)	verschwinden	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO(S*	–	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Sich	PRF	(VP*	sich	sg	-	-	(28)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	untern	VVINF	*)	untern	-	-	-	(80
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	Palmen	NN	*	palme	pl	fem	-	80)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	Nicht	PTKNEG	(VP*	nicht	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	ferner	ADV	*	ferner	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	sehen	VVINF	*)	sehen	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	ließ	VVFIN	*)	lassen	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	?	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Wie	PWAV	*	wie	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	oder	KON	(VROOT(PSEUDO(S*	oder	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	habt	VAFIN	*	haben	pl	-	-	(81)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	Ihr	PPER	(VP*	ihr	pl	*	-	(69)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	wirklich	ADJD	*	wirklich	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	schon	ADV	*	schon	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	ihn	PPER	*	ihn	sg	masc	-	(28)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	weiter	ADV	*	weiter	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	aufgesucht	VVPP	*))	aufsuchen	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	?	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Das	PDS	(VROOT(PSEUDO(S*	der	sg	neut	-	(81)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	nun	ADV	*	nun	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	wohl	ADV	*	wohl	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*)	nicht	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nicht	PTKNEG	(VROOT(PSEUDO(NP*	nicht	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	Daja	NE	*)	daja	-	-	(PER*)	(0)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	?	$.	*	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Da	KOUS	(S*	da	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	sieh	FM	(AVP*	sieh	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	Nun	FM	*)	nun	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	was	PWS	*	was	sg	neut	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	es	PPER	*	es	sg	neut	-	(71)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	schadt	VVFIN	*)	schadt	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	!	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Grausame	ADJA	*	grausam	pl	fem	-	(69
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	Schwärmerinnen	NN	*	schwärmerin	pl	fem	-	69)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Wenn	KOUS	(S*	wenn	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	dieser	PDAT	(NP*	dieser	sg	masc	-	(28
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	Engel	NN	*)	engel	sg	masc	-	28)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	nun	ADV	*)	nun	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	–	ADV	(S*	–	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	nun	ADV	*	nun	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	krank	ADJD	(VP*	krank	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	geworden	VAPP	*))	werden	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	!	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	.	$.	(VROOT(PSEUDO*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	RECHA	NE	(VROOT(PSEUDO*	recha	-	-	(LOC*)	(2
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	2)

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Krank	NE	(VROOT(PSEUDO*	krank	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Krank	NE	(VROOT(PSEUDO*	krank	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Er	PPER	(VROOT(PSEUDO(S*	er	sg	masc	-	(28)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	wird	VAFIN	*	werden	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	doch	ADV	*	doch	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*)	nicht	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	RECHA	NE	(VROOT(PSEUDO*	recha	-	-	(LOC*)	(2
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	2)

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Welch	PWAT	(VROOT(PSEUDO(S(NP*	welch	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	kalter	ADJA	*	kalt	pl	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	Schauer	NN	*)	schauer	*	*	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	Befällt	VVFIN	*	befallen	pl	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	mich	PPER	*)	mich	sg	*	-	(2)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Daja	NE	*	daja	-	-	-	(0)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Meine	PPOSAT	(CAP(NP*	mein	sg	fem	-	(2)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	Stirne	NN	*)	stirne	sg	fem	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	sonst	ADV	(AP*	sonst	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	So	ADV	*	so	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	warm	ADJD	*)	warm	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	fühl	ADJD	*)	fühl	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	!	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	ist	VAFIN	(VROOT(PSEUDO(S*	sein	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	auf	APPR	(PP*	auf	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	einmal	ADV	*)	einmal	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	Eis	NN	*)	eis	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Er	PPER	(VROOT(PSEUDO(CS(CS(S*	er	sg	masc	-	(28)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	Ein	ART	(NP*	ein	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	Franke	NN	*))	franke	sg	masc	(PER*)	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	dieses	PDAT	(S(NP*	dieser	sg	neut	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	Klimas	NN	*)	klima	sg	neut	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	ungewohnt	ADJD	*))	ungewohnt	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	;	$.	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	Ist	VAFIN	(S*	sein	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	jung	ADJD	*	jung	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	;	$.	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	der	ART	(NP*	der	sg	fem	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	harten	ADJA	*	hart	sg	fem	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	Arbeit	NN	*	arbeit	sg	fem	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	15	seines	PPOSAT	(NP*	sein	sg	masc	-	(82|(28)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	16	Standes	NN	*)))	stand	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	17	,	$,	*	--	-	-	-	82)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	18	Des	NE	(S(NP(MPN*	der	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	19	Hungerns	NE	*)	hungern	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	20	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	21	Wachens	NE	*)	wachen	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	22	ungewohnt	ADJD	*))	ungewohnt	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	23	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	RECHA	NE	(VROOT(PSEUDO*	recha	-	-	(LOC*)	(2
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	2)

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Krank	NE	(VROOT(PSEUDO*	krank	-	-	-	(83
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	83)

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	krank	ADJD	(VROOT(PSEUDO*	krank	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Das	PDS	(VROOT(PSEUDO(CS(S*	der	sg	neut	-	(83)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	wäre	VAFIN	*	sein	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	möglich	ADJD	*)	möglich	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	meint	VVFIN	(S*	meinen	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	ja	ADV	(NP*	ja	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	Nathan	NE	*)	nathan	-	-	-	(1)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	nur	ADV	*))	nur	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nun	ADV	(VROOT(PSEUDO(S*	nun	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	liegt	VVFIN	*	liegen	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	er	PPER	*	er	sg	masc	-	(28)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	da	PTKVZ	*)	da	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	hat	VAFIN	(VROOT(PSEUDO(S*	haben	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	weder	KON	(CNP*	weder	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	Freund	NN	*	freund	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	noch	ADV	(NP*	noch	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	Geld	NN	*))	geld	sg	neut	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	Sich	PRF	(VP*	sich	sg	neut	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	Freunde	NN	*	freund	pl	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	besolden	VVINF	*)))	besolden	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	RECHA	NE	(VROOT(PSEUDO*	recha	-	-	(LOC*)	(2
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	2)

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ah	XY	(VROOT(PSEUDO*	ah	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	mein	PPOSAT	(NP*	mein	sg	masc	-	(1|(2)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	Vater	NN	*)	vater	sg	masc	-	1)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Liegt	VVFIN	(VROOT(PSEUDO(S*	liegen	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	ohne	APPR	(PP*	ohne	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	Wartung	NN	(CNP(NP*	wartung	sg	fem	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	ohne	APPR	(PP*	ohne	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	Rat	NN	(CNP*	Rat	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	und	KON	*	und	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	Zusprach	NN	*)))	zusprach	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	Ein	ART	(NP*	ein	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	Raub	NN	*	raub	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	der	ART	(NP*	der	pl	fem	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	Schmerzen	NN	*))	schmerz	pl	fem	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	und	KON	*	und	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	des	ART	(NP*	der	sg	masc	-	(84
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	15	Todes	NN	*)))	tod	sg	masc	-	84)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	16	da	PTKVZ	*)	da	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	17	!	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	RECHA	NE	(VROOT(PSEUDO*	recha	-	-	(LOC*)	(2
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	2)

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wo	PWAV	(VROOT(PSEUDO*	wo	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	wo	PWAV	(VROOT(PSEUDO*	wo	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Er	PPER	(VROOT(PSEUDO(S(NP*	er	sg	masc	-	(28
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	der	PRELS	(S*	der	sg	masc	-	(28)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	für	APPR	(PP*	für	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	eine	PIS	*)	ein	sg	fem	-	(2
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	die	PRELS	(S*	der	sg	fem	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	er	PPER	*	er	sg	masc	-	(28)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	nie	ADV	*	nie	-	-	-	2)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	Gekannt	NN	*)))	gekannt	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	gesehn	ADJD	(S(AP*	gesehn	-	-	-	28)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	Ins	APPRART	(PP*	in	-	-	-	(24
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	Feur	NN	*))	feur	-	-	-	24)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	sich	PRF	*	sich	pl	-	-	(28)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	15	stürzte	VVFIN	*))	stürzen	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	16	.	$.	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	17	.	$.	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	18	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nathan	NE	*	nathan	-	-	-	(1)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	schonet	VVFIN	*	schonen	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	ihrer	PPOSAT	*	ihr	sg	fem	-	(2)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	!	$.	*	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Der	PDS	(VROOT(PSEUDO(S(NP*	der	sg	masc	-	(28
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	was	PRELS	(S*	was	sg	neut	-	(69
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	er	PPER	*	er	sg	masc	-	(28)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	rettete	VVFIN	*))	retten	sg	-	-	69)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	nicht	PTKNEG	(S(AP*	nicht	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	näher	ADJD	*)	nah	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	kennen	VVINF	*	kennen	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	Nicht	PTKNEG	(VP(VP*	nicht	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	weiter	ADV	*	weiter	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	sehen	VVINF	*)	sehen	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	mocht	PTKNEG	*	mochen	sg	-	-	28)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	Zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	15	sparen	VVINF	*))))	sparen	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	16	.	$.	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	17	.	$.	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	18	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Schonet	NN	(VROOT(PSEUDO(NP*	schonet	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	ihrer	PPOSAT	(NP*	ihr	sg	fem	-	(2)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	Nathan	NE	*	nathan	-	-	-	(1)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	!	$.	*))))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Weiter	ADV	*	weiter	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Auch	ADV	*	auch	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	zu	APPR	*	zu	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	sehn	CARD	*	sehn	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	verlangt	VVPP	*	verlangen	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	'	$(	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	–	KON	*	–	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	es	PPER	*	es	sg	neut	-	(86)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	wäre	VAFIN	*	sein	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	denn	ADV	*	denn	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	Daß	KOUS	*	daß	-	-	-	(86
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	er	PPER	*	er	sg	masc	-	(28)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	15	zum	APPRART	*	zu	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	16	zweiten	ADJA	*	zweiter	sg	neut	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	17	Mal	NN	*	mal	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	18	es	PPER	*	es	sg	neut	-	(69)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	19	retten	VVINF	*	retten	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	20	sollte	VMFIN	*	sollen	sg	-	-	86)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	21	–	$.	*	–	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	22	Denn	KON	*	denn	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	23	gnug	ADJD	*	gnug	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	24	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	25	es	PPER	*	es	sg	neut	-	(28)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	26	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	27	ein	ART	*	ein	sg	masc	-	(37
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	28	Mensch	NN	*	mensch	sg	masc	-	37)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	29	.	$.	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	30	.	$.	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	31	.	$.	*	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Hört	VVIMP	*	hören	pl	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	auf	PTKVZ	*	auf	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	und	KON	*	und	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	seht	VVFIN	*	sehen	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	!	$.	*	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Der	ART	*	der	sg	masc	-	(28
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	der	PDS	*	der	sg	masc	-	28)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	hat	VAFIN	*	haben	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	sterbend	ADJD	*	sterbend	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	sich	PRF	*	sich	sg	-	-	(28)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	zu	PTKZU	*	zu	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	laben	VVINF	*	laben	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	nichts	PIS	*	nichts	*	neut	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	–	$(	*	–	sg	neut	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	Als	KOUS	*	als	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	das	ART	*	der	sg	neut	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	Bewußtsein	NN	*	bewußtsein	sg	neut	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	dieser	PDAT	*	dieser	sg	masc	-	(87
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	15	Tat	NN	*	tat	sg	masc	-	87)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	16	!	$.	*	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Hört	VVIMP	*	hören	pl	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	auf	PTKVZ	*	auf	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ihr	PPER	(VROOT(PSEUDO(S*	ihr	-	-	-	(1)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	tötet	VVFIN	*	töten	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	sie	PPER	*)	sie	sg	fem	-	(2)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	du	PPER	*	du	sg	*	-	(0)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	hast	VAFIN	*	haben	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	ihn	PPER	(VP*	ihn	sg	masc	-	(28)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	getötet	VVPP	*))	töten	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Hättst	VVFIN	*	hättst	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	so	ADV	(S*	so	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	ihn	PPER	*	ihn	sg	masc	-	(28)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	töten	VVINF	*	töten	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	können	VMFIN	*)	können	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Recha	NE	*	recha	-	-	-	(2)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Recha	NE	(VROOT(PSEUDO(MPN*	recha	-	-	-	(2)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*)))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Es	PPER	(VROOT(PSEUDO(S*	es	sg	neut	-	(43)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	Arznei	NE	*	arznei	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	Gift	NN	*	gift	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	was	PWS	(S*	was	sg	neut	-	(43)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	ich	PPER	*	ich	sg	*	-	(1)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	dir	PPER	*	dir	sg	*	-	(2)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	reiche	VVFIN	*))	reichen	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Er	PPER	(VROOT(PSEUDO(S*	er	sg	masc	-	(28)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	lebt	VVFIN	*)	leben	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	komm	VVIMP	(S*	komm	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	zu	APPR	(PP*	zu	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	dir	PPER	*))	dir	sg	*	-	(28)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	ist	VAFIN	(S*	sein	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	auch	ADV	(AP*	auch	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	wohl	ADV	*	wohl	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	krank	ADJD	*))	krank	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	;	$.	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	Nicht	PTKNEG	(S(VP(AP(AVP*	nicht	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	einmal	ADV	*)	einmal	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	krank	ADJD	*)))	krank	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	!	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	RECHA	NE	(VROOT(PSEUDO*	recha	-	-	(LOC*)	(2
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	2)

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Gewiß	ADV	(VROOT(PSEUDO(S*)	gewiß	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	nicht	PTKNEG	(CO(AVP*	nicht	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	tot	ADJD	*))	tot	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	nicht	PTKNEG	(VROOT(PSEUDO(VP(AP*	nicht	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	krank	ADJD	*))	krank	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Gewiß	ADV	(VROOT(PSEUDO(S*	gewiß	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	nicht	PTKNEG	(AP*	nicht	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	tot	ADJD	*))	tot	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Denn	KON	(S*	denn	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	Gott	NN	*	gott	-	-	(PER*)	(25)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	lohnt	VVFIN	*	lohnen	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	Gutes	NN	*)	gut	sg	neut	-	(88)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	hier	ADV	*	hier	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	Getan	NE	(NP*	getan	sg	neut	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	auch	ADV	(CO(AVP*	auch	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	hier	ADV	*	hier	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	noch	ADV	*)))	noch	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Geh	XY	*	geh	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Begreifst	VVFIN	(S*	begreifst	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	du	PPER	*)	du	sg	masc	-	(2)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	aber	ADV	(NP*	aber	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	Wie	PWAV	(S*	wie	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	viel	PIS	*	viel	*	*	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	andächtig	ADJD	(VP*	andächtig	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	schwärmen	VVFIN	(S*	schwärmen	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	leichter	ADJD	*)	leicht	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	als	APPR	(PP*	als	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	Gut	NN	*)	gut	sg	neut	-	(88
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	handeln	VVINF	*)	handeln	-	-	-	88)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	ist	VAFIN	*))	sein	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	15	?	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	wie	PWAV	*	wie	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	gern	ADV	*	gern	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	der	ART	*	der	sg	masc	-	(89
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	schlaffste	ADJA	*	schlaff	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	Mensch	NN	*	mensch	sg	masc	-	89)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	Andächtig	ADJD	*	andächtig	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	schwärmt	VVFIN	*	schwärmen	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	um	KOUI	*	um	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	nur	ADV	*	nur	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	–	$(	*	–	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	er	PPER	*	er	sg	masc	-	(89)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	zu	APPR	*	zu	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	15	Zeiten	NN	*	zeit	pl	fem	-	(90)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	16	Sich	PRF	*	sich	pl	-	-	(89)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	17	schon	ADV	*	schon	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	18	der	ART	*	der	sg	fem	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	19	Absicht	NN	*	absicht	sg	fem	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	20	deutlich	ADJD	*	deutlich	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	21	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	22	bewußt	ADJD	*	bewußt	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	23	–	XY	*	–	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	24	Um	NN	*	um	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	25	nur	ADV	*	nur	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	26	gut	ADJD	*	gut	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	27	handeln	VVFIN	*	handeln	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	28	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	29	zu	PTKZU	*	zu	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	30	dürfen	VMINF	*	dürfen	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	31	?	$.	*	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	RECHA	NE	(VROOT(PSEUDO*	recha	-	-	(LOC*)	(2
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	2)

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ah	XY	(VROOT(PSEUDO*	ah	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	Mein	PPOSAT	(NP*	mein	sg	masc	-	(1|(2)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	Vater	NN	*)	vater	sg	masc	-	1)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	laßt	VVIMP	(VROOT(PSEUDO(S*	lassen	pl	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	laßt	VVIMP	(S*	lassen	pl	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	Eure	PPOSAT	(NP*	euer	pl	fem	-	(2|(1)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	Recha	NE	*)	recha	-	-	(PER*)	2)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	doch	ADV	*	doch	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	Nie	ADV	(AVP*	nie	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	wiederum	ADV	*	wiederum	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	allein	ADV	*)))	allein	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	!	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	wahr	PTKVZ	*	wahr	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	er	PPER	*	er	sg	masc	-	(28)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	kann	VMFIN	*	können	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	Auch	ADV	*	auch	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	wohl	ADV	*	wohl	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	verreist	ADV	*	verreisen	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	nur	ADV	*	nur	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	sein	VAINF	*	sein	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	?	$.	*	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*))	–	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Geht	VVFIN	*	gehen	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Allerdings	ADV	(S*)	allerdings	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ich	PPER	*	ich	sg	*	-	(1)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	seh	XY	*	seh	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	dort	ADV	*	dort	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	mustert	VVFIN	*	mustert	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	mit	APPR	*	mit	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	neugier	ADJA	*	neugi	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	'	$(	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	gem	ADJA	*	g	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	Blick	NN	*	blick	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	Ein	ART	*	ein	sg	masc	-	(3
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	Muselmann	NN	*	muselmann	sg	masc	-	3)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	mir	PPER	*	sich	sg	*	-	(1)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	die	ART	*	der	pl	masc	-	(91
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	15	beladenen	ADJA	*	beladen	-	-	-	91)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	16	Kamele	NN	*	kamele	pl	neut	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	17	.	$.	*	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Kennt	VVFIN	*	kennen	pl	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	ihr	PPER	*	ihr	sg	fem	-	(69)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	ihn	PPER	*	ihn	sg	masc	-	(3)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	?	$.	*	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ha	XY	*	ha	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Euer	PPOSAT	(VROOT(PSEUDO(NP*	euer	-	-	-	(3|(1)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Derwisch	NN	*)	derwisch	-	-	-	3)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wer	PWS	*	wer	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	?	$.	*	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Euer	PPOSAT	(VROOT(PSEUDO(S(NP*	euer	-	-	-	(3|(1)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Derwisch	NN	*)	derwisch	-	-	-	3)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	;	$.	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	Euer	ADJA	(NP*	euer	-	-	-	(3|(1)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	Schachgesell	NN	*))	schachgesell	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	3)

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Al-Hafi	NE	(VROOT(PSEUDO(MPN*	al-hafi	-	-	(LOC*)	(3)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	?	$.	*)))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	das	ART	(VROOT(PSEUDO(NP*	der	sg	neut	-	(3)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Al-Hafi	NN	*)	al-hafi	sg	neut	(LOC*)	(92)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Itzt	APPR	(VROOT(PSEUDO(PP*	itzt	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	des	ART	*	der	sg	neut	-	(95
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	Sultans	NN	*	sultan	sg	neut	-	95)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	Schatzmeister	NN	*)	schatzmeister	sg	masc	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wie	PWAV	(VROOT(PSEUDO*	wie	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Al-Hafi	NE	(VROOT(PSEUDO(MPN*	al-hafi	-	-	(LOC*)	(3)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	?	$.	*)))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Träumst	VVFIN	(VROOT(PSEUDO(S*	träumst	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	du	PPER	*	du	sg	*	-	(0)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	wieder	ADV	*)	wieder	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO(S*	–	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Er	PPER	*	er	sg	masc	-	(3)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	ists	ADV	*)	ist	-	-	-	(92)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	wahrhaftig	ADJD	*	wahrhaftig	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	ists	FM	*	ists	-	-	-	(92)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	kömmt	VVFIN	(S*	kömmen	sg	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	auf	APPR	(PP*	auf	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	uns	PPER	*)	uns	pl	*	-	(94)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	zu	PTKVZ	*)	zu	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Hinein	ADV	(VROOT(PSEUDO(CAP(AP(PP*	hinein	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	mit	APPR	*	mit	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	Euch	PPER	*))	euch	pl	*	-	(69)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	geschwind	ADJD	*)	geschwind	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Was	PWS	*	was	sg	neut	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	werd	VAFIN	*	werden	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	'	$(	*	--	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	ich	PPER	*	ich	sg	*	-	(1)
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	hören	VVINF	*	hören	-	-	-	-
Nathan_Act1_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	!	$.	*	--	-	-	-	-

#end document
