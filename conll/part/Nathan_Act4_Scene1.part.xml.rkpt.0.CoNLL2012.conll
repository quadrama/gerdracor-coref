#begin document (Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll); part 000
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Szene	NN	(VROOT(PSEUDO*	szene	sg	fem	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	:	$.	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	in	APPR	(PP*	in	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	den	ART	*	der	pl	neut	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	Kreuzgängen	NN	*	kreuzgang	pl	neut	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	des	ART	(NP*	der	sg	masc	-	(15
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	Klosters	NN	*))	kloster	sg	masc	-	15)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(CNP(NP*	der	sg	masc	-	(5
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	Klosterbruder	NN	*)	klosterbruder	sg	masc	-	5)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	und	KON	*	und	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	bald	ADV	(NP(AVP*	bald	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	darauf	PROAV	*)	darauf	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	der	ART	*	der	sg	fem	-	(16
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	Tempelherr	NN	*))	tempelherr	sg	fem	-	16)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	(LOC*)	(5
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ja	PTKANT	(VROOT(PSEUDO(S*	ja	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	ja	ADV	*)	ja	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	er	PPER	(VROOT(PSEUDO(S*	er	sg	masc	-	(8)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	hat	VAFIN	*	haben	sg	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	schon	ADV	(NP*	schon	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	Recht	NN	*	recht	-	-	-	(17)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	der	ART	(NP*	der	sg	masc	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	Patriarch	NN	*)))	patriarch	sg	masc	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Es	PPER	(VROOT(PSEUDO(S*	es	sg	neut	-	(18)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	hat	VAFIN	*	haben	sg	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	mir	PPER	*	sich	sg	*	-	(5)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	freilich	ADV	*	freilich	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	noch	ADV	*	noch	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	von	APPR	(PP*	von	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	alle	PIS	*)	alle	pl	*	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	dem	ART	(NP*	der	sg	masc	-	(18)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	8	Nicht	NN	*)	nicht	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	9	viel	PIS	(S(VP*	viel	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	10	gelingen	VVINF	*)	gelingen	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	11	wollen	VMFIN	*)	wollen	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	13	was	PWS	(S*	was	sg	neut	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	14	er	PPER	*	er	sg	masc	-	(8)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	15	mir	PPER	(NP*	sich	sg	*	-	(5)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	16	So	ADV	*)	so	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	17	aufgetragen	VVPP	*))	auftragen	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	18	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	Warum	PWAV	(S*	warum	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	trägt	VVFIN	*	tragen	sg	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	er	PPER	*	er	sg	masc	-	(8)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	mir	PPER	*	sich	sg	*	-	(5)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	Auch	ADV	*)	auch	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	lauter	ADJD	(S*	lauter	-	-	-	(19
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	solche	PIAT	(NP*	solcher	pl	fem	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	8	Sachen	NN	*)	sache	pl	fem	-	19)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	9	auf	PTKVZ	*)	auf	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	10	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ich	PPER	(S*	ich	sg	*	-	(5)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	mag	VMFIN	*	mögen	sg	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	Nicht	PTKNEG	(VP(AP*	nicht	sg	neut	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	fein	ADJD	*)	fein	sg	neut	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	sein	VAINF	*)	sein	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	;	$.	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	mag	VMFIN	(S*	mögen	sg	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	8	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	9	überreden	VVINF	*))	überreden	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	10	;	$.	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	11	mag	VMFIN	(S(S*	mögen	sg	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	12	Mein	PPOSAT	(VP(NP*	mein	sg	neut	-	(5)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	13	Näschen	NN	*)	näsche	pl	*	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	14	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	15	in	APPR	(PP*	in	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	16	alles	PIS	*)	alle	sg	neut	-	(20)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	17	stecken	VVINF	*))	stecken	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	18	;	$.	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	19	mag	VMFIN	*	mögen	sg	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	20	Mein	PPOSAT	(NP*	mein	sg	neut	-	(5)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	21	Händchen	NN	*)	händchen	sg	neut	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	22	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	23	in	APPR	(PP*	in	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	24	allem	PIS	*)	alle	sg	neut	-	(20)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	25	haben	VAFIN	*)	haben	pl	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	26	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	Bin	VAFIN	(S*	sein	sg	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	Ich	PPER	*	ich	sg	*	-	(5)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	darum	PROAV	(VP*	darum	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	aus	APPR	(PP*	aus	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	der	ART	*	der	sg	fem	-	(21
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	Welt	NN	*)	welt	sg	fem	-	21)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	geschieden	VVPP	*)	scheiden	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	9	ich	PPER	*	ich	sg	*	-	(5)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	10	Für	APPR	(PP*	für	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	11	mich	PPER	*))	mich	sg	*	-	(5)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	12	;	$.	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	13	um	APPR	(S(NP(PP*	um	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	14	mich	PPER	*)	mich	sg	*	-	(5)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	15	für	APPR	(PP*	für	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	16	andre	ADJA	*)	andre	sg	*	-	(22)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	17	mit	APPR	(PP*	mit	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	18	der	ART	*	der	sg	fem	-	(21
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	19	Welt	NN	*))	welt	sg	fem	-	21)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	20	Noch	ADV	(VP*	noch	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	21	erst	ADV	(AVP*	erst	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	22	recht	ADV	*)	recht	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	23	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	24	verwickeln	VVINF	*)))	verwickeln	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	25	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*))	tempelherr	-	-	-	(16)

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	mit	APPR	(VROOT(PSEUDO(AP(PP*	mit	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	Hast	NN	*)	haben	pl	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	auf	APPR	(PP*	auf	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	ihn	PPER	*)	ihn	sg	masc	-	(5)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	zukommend	ADJD	*)	zukommend	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Guter	ADJA	(VROOT(PSEUDO(NP*	gut	sg	masc	-	(5
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	Bruder	NN	*)	bruder	sg	masc	-	5)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Da	ADV	(VROOT(PSEUDO(S*	da	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	seid	VAFIN	*	sein	pl	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	Ihr	PPER	*	ihr	pl	*	-	(5)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	ja	ADV	*)	ja	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	hab	VVFIN	*	hab	sg	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	Euch	PPER	*	euch	pl	*	-	(5)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	lange	ADV	*	lange	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	schon	ADV	*	schon	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	Gesucht	NN	*	gesucht	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	.	$.	*	--	-	-	-	-

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	(LOC*)	(5
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Mich	PPER	(VROOT(PSEUDO(NP*	mich	sg	*	-	(5)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	Herr	NN	*)	herr	sg	masc	-	(16)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(16
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	16)

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ihr	PPER	(VROOT(PSEUDO(S*	ihr	sg	neut	-	(5)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	kennt	VVFIN	*	kennen	sg	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	mich	PPER	*	mich	sg	*	-	(4)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	schon	ADV	(AVP*	schon	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	mehr	ADV	*))	mehr	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	(LOC*)	(5
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Doch	KON	(VROOT(PSEUDO(CNP*	doch	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	doch	KON	*)	doch	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(5)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	glaubte	VVFIN	*	glauben	sg	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	nur	ADV	*	nur	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	daß	KOUS	(S*	daß	-	-	-	(23
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	ich	PPER	*	ich	sg	*	-	(5)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	den	ART	(NP*	der	pl	masc	-	(16
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	Herrn	NN	*)	herr	pl	masc	-	23)|16)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	8	In	APPR	(PP*	in	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	9	meinem	PPOSAT	*	mein	sg	neut	-	(5)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	10	Leben	NN	*)	leben	sg	neut	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	11	wieder	ADV	(AVP*	wieder	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	12	nie	ADV	*)	nie	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	13	zu	APPR	(PP*	zu	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	14	sehn	CARD	*	sehn	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	15	Bekommen	NN	*)	bekommen	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	16	würde	VAFIN	*))	werden	sg	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	17	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Denn	KON	*	denn	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	ich	PPER	*	ich	sg	*	-	(5)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	hofft	VVFIN	*	hoffen	sg	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	es	PPER	*	es	sg	neut	-	(23)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	zu	APPR	*	zu	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	Dem	ART	*	der	sg	neut	-	(24
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	lieben	ADJA	*	lieb	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	8	Gott	NN	*	gott	sg	masc	(PER*)	24)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	9	.	$.	*	--	-	-	-	-

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	Der	ART	(S(NP(NP*	der	sg	masc	-	(24
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	liebe	ADJA	*	liebe	sg	masc	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	Gott	NN	*)	gott	sg	masc	(PER*)	24)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	der	PDS	*)	der	sg	masc	-	(24)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	weiß	VVFIN	*	weiß	sg	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	Wie	NN	*)	wie	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	8	sauer	ADJD	(S*	sauer	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	9	mir	PPER	*	sich	sg	*	-	(5)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	10	der	ART	(NP*	der	sg	masc	-	(18
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	11	Antrag	NN	*)	antrag	sg	masc	-	18)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	12	ward	VVFIN	*	werden	sg	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	14	den	PRELS	(S*	der	sg	masc	-	(18)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	15	ich	PPER	*	ich	sg	*	-	(5)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	16	Dem	ART	(VP(NP*	der	sg	neut	-	(16
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	17	Herrn	NN	*)	herr	sg	masc	-	16)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	18	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	19	tun	VVINF	*))	tun	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	20	verbunden	VVPP	*	verbinden	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	21	war	VAFIN	*))	sein	sg	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	22	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Er	PPER	*	er	sg	masc	-	(24)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	weiß	VVFIN	*	weiß	sg	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	Ob	KOUS	*	ob	sg	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	ich	PPER	*	ich	sg	*	-	(5)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	gewünscht	VVPP	*	wünschen	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	ein	ART	*	ein	sg	neut	-	(25
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	8	offnes	ADJA	*	offn	sg	neut	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	9	Ohr	NN	*	ohr	sg	neut	-	25)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	10	bei	APPR	*	bei	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	11	Euch	PPER	*	euch	sg	masc	-	(16)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	12	Zu	NN	*	zu	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	13	finden	VVINF	*	finden	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	14	;	$.	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	15	weiß	VVFIN	*	weiß	sg	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	16	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	17	wie	PWAV	*	wie	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	18	sehr	ADV	*	sehr	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	19	ich	PPER	*	ich	sg	*	-	(5)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	20	mich	PPER	*	mich	sg	-	-	(5)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	21	gefreut	VVPP	*	freuen	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	22	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	23	Im	APPRART	*	in	sg	neut	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	24	Innersten	NN	*	innersten	sg	neut	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	25	gefreut	VVPP	*	freuen	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	26	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	27	daß	KOUS	*	daß	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	28	Ihr	PPER	*	ihr	pl	*	-	(16)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	29	so	ADV	*	so	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	30	rund	ADV	*	rund	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	31	Das	PDS	*	der	sg	neut	-	(18
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	32	alles	PIS	*	alle	sg	neut	-	18)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	33	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	34	ohne	KOUI	*	ohne	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	35	viel	PIAT	*	viel	*	*	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	36	Bedenken	NN	*	bedenken	sg	neut	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	37	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	38	von	APPR	*	von	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	39	Euch	PPER	*	euch	pl	*	-	(16)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	40	wies	VVFIN	*	weisen	sg	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	41	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	42	t	PPER	*	T	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	43	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	44	was	PRELS	*	was	sg	neut	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	45	einem	ART	*	ein	sg	masc	-	(26
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	46	Ritter	NN	*	ritter	sg	masc	-	26)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	47	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	48	geziemt	VVPP	*	ziemen	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	49	.	$.	*	--	-	-	-	-

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	Nun	ADV	(S*	nun	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	kommt	VVFIN	*	kommen	sg	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	Ihr	PPER	*)	ihr	sg	neut	-	(16)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	doch	ADV	*	doch	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	;	$.	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	nun	ADV	(VP*	nun	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	hats	ADV	(AVP*	hats	-	-	-	(18)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	8	doch	ADV	*)	doch	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	9	nachgewirkt	VVPP	*	nachgewirken	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	10	!	$.	*)))	--	-	-	-	-

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(16
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	16)

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ihr	PPER	(VROOT(PSEUDO(S*	ihr	pl	*	-	(5)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	wißt	VVFIN	*	wissen	pl	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	es	PPER	*	es	sg	neut	-	(27)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	schon	ADV	*	schon	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	warum	PWAV	(S*	warum	-	-	-	(27
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	komme	VVFIN	*))	kommen	sg	-	-	27)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	8	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Kaum	ADV	(VROOT(PSEUDO(S*	kaum	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	Weiß	VVFIN	*	weiße	sg	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	es	PPER	*	es	sg	neut	-	(27)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	selbst	ADV	*)	selbst	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	(LOC*)	(5
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ihr	PPER	*	ihr	pl	*	-	(16)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	habts	VAFIN	*	habts	pl	-	-	(18)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	nun	ADV	*	nun	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	überlegt	VVPP	*	überlegen	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	;	$.	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	Habt	VAFIN	*	haben	sg	-	-	(28
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	nun	ADV	*	nun	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	gefunden	VVPP	*	finden	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	9	daß	KOUS	*	daß	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	10	der	ART	*	der	sg	masc	-	(8
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	11	Patriarch	NN	*	patriarch	sg	masc	-	8)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	12	So	ADV	*	so	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	13	Unrecht	NN	*	unrecht	pl	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	14	doch	ADV	*	doch	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	15	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	16	hat	VAFIN	*	haben	sg	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	17	;	$.	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	18	daß	KOUS	*	daß	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	19	Ehr	NN	*	ehr	-	-	-	(29)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	20	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	21	und	KON	*	und	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	22	Geld	NN	*	geld	sg	neut	-	(30)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	23	Durch	APPR	*	durch	sg	neut	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	24	seinen	PPOSAT	*	sein	sg	masc	-	(31|(8)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	25	Anschlag	NN	*	anschlag	sg	masc	-	31)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	26	zu	PTKZU	*	zu	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	27	gewinnen	VVINF	*	gewinnen	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	28	;	$.	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	29	daß	KOUS	*	daß	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	30	Ein	ART	*	ein	sg	masc	-	(32
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	31	Feind	NN	*	feind	sg	masc	-	32)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	32	ein	ART	*	ein	sg	masc	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	33	Feind	NN	*	feind	sg	masc	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	34	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	35	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	36	wenn	KOUS	*	wenn	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	37	er	PPER	*	er	sg	masc	-	(32)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	38	unser	PPOSAT	*	unser	sg	neut	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	39	Engel	NN	*	engel	sg	neut	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	40	Auch	ADV	*	auch	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	41	siebenmal	ADV	*	siebenmal	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	42	gewesen	VAPP	*	sein	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	43	wäre	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	44	.	$.	*	--	-	-	-	28)

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Das	PDS	(VROOT(PSEUDO(S(AVP(S*	der	sg	neut	-	(28)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	habt	VAFIN	*	haben	pl	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	Ihr	PPER	(VP*	ihr	pl	*	-	(16)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	nun	ADV	*	nun	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	mit	APPR	(PP*	mit	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	Fleisch	NN	(CNP*	fleisch	sg	neut	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	und	KON	*	und	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	Blut	NN	*))	blut	sg	neut	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	8	erwogen	VVPP	*))	erwägen	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	10	Und	KON	*)	und	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	11	kommt	VVFIN	*	kommen	sg	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	13	und	KON	*	und	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	14	tragt	VVFIN	(S*	tragen	sg	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	15	Euch	PPER	*	euch	pl	masc	-	(16)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	16	wieder	ADV	*	wieder	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	17	an	PTKVZ	*))	an	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	18	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ach	ITJ	(S*)	ach	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	Gott	NN	(S*)	gott	-	-	-	(24)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(16
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	16)

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Mein	PPOSAT	(VROOT(PSEUDO(NP*	mein	sg	masc	-	(5|(4)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	frommer	ADJA	*	fromm	sg	masc	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	lieber	ADJA	*	lieber	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	Mann	NN	*)	mann	sg	masc	-	5)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	gebt	VVPP	(VROOT(PSEUDO(S*	geben	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	Euch	PPER	*	euch	pl	*	-	(5)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	zufrieden	ADJD	*)	zufrieden	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Deswegen	PROAV	*	deswegen	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	komm	VVIMP	*	komm	sg	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	;	$.	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	deswegen	PROAV	*	deswegen	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	will	VMFIN	*	wollen	sg	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	8	Ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	9	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	10	den	ART	*	der	sg	masc	-	(8
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	11	Patriarchen	NN	*	patriarch	sg	masc	-	8)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	12	sprechen	VVINF	*	sprechen	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	13	.	$.	*	--	-	-	-	-

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Noch	ADV	*	noch	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	Noch	ADV	*	noch	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	denk	ADJD	*	denk	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	über	APPR	*	über	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	jenen	PDAT	*	jener	sg	masc	-	(18
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	8	Punkt	NN	*	punkt	sg	masc	-	18)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	10	wie	KOKOM	*	wie	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	11	ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	12	Gedacht	NN	*	gedacht	sg	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	14	und	KON	*	und	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	15	wollt	VMFIN	*	wollen	pl	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	16	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	17	um	APPR	*	um	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	18	alles	PIS	*	alle	sg	neut	-	(33
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	19	in	APPR	*	in	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	20	der	ART	*	der	sg	fem	-	(21
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	21	Welt	NN	*	welt	sg	fem	-	33)|21)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	22	Die	ART	*	der	sg	fem	-	(34
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	23	gute	ADJA	*	gut	sg	fem	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	24	Meinung	NN	*	meinung	sg	fem	-	34)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	25	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	26	verlieren	VVINF	*	verlieren	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	27	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	28	deren	PRELAT	*	der	pl	masc	-	(34)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	29	Mich	PPER	*	mich	sg	*	-	(4)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	30	ein	ART	*	ein	sg	masc	-	(35
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	31	so	ADV	*	so	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	32	grader	ADJD	*	grader	sg	fem	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	33	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	34	frommer	ADJD	*	fromm	sg	fem	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	35	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	36	lieber	ADJA	*	lieber	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	37	Mann	NN	*	mann	-	-	-	35)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	38	Einmal	ADV	*	einmal	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	39	gewürdiget	VVPP	*	gerdigen	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	40	.	$.	*	--	-	-	-	-

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ich	PPER	(S*	ich	sg	*	-	(4)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	komme	VVFIN	*	kommen	sg	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	bloß	PTKVZ	*	bloß	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	Den	ART	(VP(NP*	der	pl	*	-	(8
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	Patriarchen	NN	*)	patriarch	pl	*	-	8)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	über	APPR	(PP*	über	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	8	eine	ART	*	ein	sg	fem	-	(36
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	9	Sache	NN	*)	sache	sg	fem	-	36)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	10	Um	APPR	(PP*	um	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	11	Rat	NN	*)	Rat	sg	masc	-	(37)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	12	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	13	fragen	VVINF	*)))	fragen	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	14	.	$.	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	15	.	$.	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	16	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	(LOC*)	(5
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ihr	PPER	(VROOT(PSEUDO(NP*	ihr	pl	*	-	(16)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	den	ART	(NP*	der	pl	masc	-	(8
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	Patriarchen	NN	*))	patriarch	pl	masc	-	8)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ein	ART	(VROOT(PSEUDO(CNP(NP*	ein	sg	masc	-	(26
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ritter	NN	*)	ritter	sg	masc	-	26)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	einen	ART	(NP*	ein	sg	masc	-	(38
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	–	ADJA	*	–	sg	masc	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	Pfaffen	NN	*))	pfaffe	pl	fem	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	38)

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Sich	PRF	(VROOT(PSEUDO(AP*	sich	sg	-	-	(5)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	schüchtern	ADJD	*	schüchtern	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	umsehend	ADJD	*)	umsehend	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(16
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	16)

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ja	PTKANT	*	ja	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	;	$.	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	–	XY	*	–	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	die	ART	*	der	sg	fem	-	(36
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	Sach	NE	*	sach	sg	fem	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	'	$(	*	--	-	-	-	36)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	Ist	NE	*	sein	sg	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	ziemlich	ADV	*	ziemlich	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	8	pfäffisch	ADJD	*	pfäffisch	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	9	.	$.	*	--	-	-	-	-

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	(LOC*)	(5
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Gleichwohl	ADV	(VROOT(PSEUDO(S*	gleichwohl	-	-	-	(39
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	fragt	VVFIN	*	fragen	sg	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	der	ART	(NP*	der	sg	fem	-	(38
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	Pfaffe	NN	*	pfaff	sg	fem	-	38)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	Den	NE	(MPN*	der	sg	masc	-	(26
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	Ritter	NE	*))	ritter	sg	masc	-	26)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	nie	ADV	*	nie	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	8	die	ART	(S(NP*	der	sg	fem	-	(40
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	9	Sache	NN	*)	sache	sg	fem	-	40)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	10	sei	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	11	auch	ADV	(AP*	auch	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	12	noch	ADV	*	noch	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	13	So	ADV	*	so	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	14	ritterlich	ADJD	*)))	ritterlich	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	15	.	$.	*))	--	-	-	-	39)

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(16
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	16)

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Weil	KOUS	*	weil	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	er	PPER	*	er	sg	masc	-	(38)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	das	ART	*	der	sg	neut	-	(41
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	Vorrecht	NN	*	vorrecht	sg	neut	-	41)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	hat	VAFIN	*	haben	sg	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	Sich	PRF	*	sich	sg	-	-	(38)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	zu	PTKZU	*	zu	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	8	vergehn	VVINF	*	vergehn	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	9	;	$.	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	10	das	PDS	*	der	sg	neut	-	(41)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	11	unser	PPOSAT	*	unser	sg	neut	-	(26
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	12	einer	PIS	*	ein	sg	masc	-	26)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	13	ihm	PPER	*	ihm	sg	masc	-	(38)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	14	Nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	15	sehr	ADV	*	sehr	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	16	beneidet	VVFIN	*	beneiden	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	17	.	$.	*	--	-	-	-	-

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	Freilich	ADV	*	freilich	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	wenn	KOUS	*	wenn	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	nur	ADV	*	nur	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	Für	APPR	*	für	sg	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	mich	PPER	*	mich	sg	*	-	(4)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	8	zu	PTKZU	*	zu	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	9	handeln	VVINF	*	handeln	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	10	hätte	VAFIN	*	haben	sg	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	11	;	$.	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	12	freilich	ADV	*	freilich	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	14	wenn	KOUS	*	wenn	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	15	Ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	16	Rechenschaft	NN	*	rechenschaft	sg	fem	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	17	nur	ADV	*	nur	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	18	mir	PPER	*	sich	sg	*	-	(4)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	19	zu	PTKZU	*	zu	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	20	geben	VVINF	*	geben	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	21	hätte	VAFIN	*	haben	sg	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	22	:	$.	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	23	Was	PWS	*	was	sg	neut	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	24	braucht	VVFIN	*	brauchen	sg	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	25	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	26	ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	27	Euers	NE	*	euer	sg	masc	-	(8|(5)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	28	Patriarchen	NN	*	patriarch	sg	masc	-	8)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	29	?	$.	*	--	-	-	-	-

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Aber	KON	(VROOT(PSEUDO*	aber	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	Gewisse	FM	*	gewiß	-	-	-	(40
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	Dinge	NN	(NP*	ding	-	-	-	40)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	will	VMFIN	(CS(S*	wollen	sg	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	lieber	ADV	*	lieber	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	schlecht	ADJD	*)	schlecht	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	8	Nach	APPR	(VP(PP*	nach	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	9	andrer	ADJA	*	andr	sg	fem	-	(42|(43)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	10	Willen	NN	*)	wille	-	-	-	42)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	12	machen	VVINF	*	machen	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	13	;	$.	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	14	als	KOKOM	(AVP*	als	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	15	allein	ADV	*))))	allein	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	16	Nach	APPR	(AP(PP*	nach	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	17	meinem	PIS	*)	mein	sg	masc	-	(4)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	18	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	19	gut	ADJD	*)	gut	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	20	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	Zudem	PROAV	*	zudem	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	seh	VVFIN	*	seh	sg	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	nun	ADV	*	nun	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	wohl	ADV	*	wohl	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	8	Religion	NN	*	religion	sg	fem	-	(44)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	9	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	10	auch	ADV	*	auch	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	11	Partei	NN	*	partei	sg	fem	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	12	;	$.	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	13	und	KON	*	und	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	14	wer	PWS	*	wer	sg	masc	-	(53)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	15	Sich	PRF	*	sich	sg	-	-	(46)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	16	drob	VVFIN	*	drob	sg	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	17	auch	ADV	*	auch	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	18	noch	ADV	*	noch	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	19	so	ADV	*	so	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	20	unparteiisch	ADJD	*	unparteiisch	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	21	glaubt	VVFIN	*	glauben	sg	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	22	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	23	Hält	NN	*	halten	sg	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	24	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	25	ohn	PPER	*	ohn	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	26	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	27	es	PPER	*	es	sg	neut	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	28	selbst	ADV	*	selbst	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	29	zu	PTKZU	*	zu	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	30	wissen	VVINF	*	wissen	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	31	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	32	doch	ADV	*	doch	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	33	nur	ADV	*	nur	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	34	seiner	PPOSAT	*	sein	sg	fem	-	(44)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	35	Die	ART	*	der	sg	fem	-	(47
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	36	Stange	NN	*	stange	-	-	-	47)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	37	.	$.	*	--	-	-	-	-

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Weil	KOUS	(VROOT(PSEUDO(S(S*	weil	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	das	ART	*	der	sg	neut	-	(45)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	einmal	ADV	*	einmal	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	nun	ADV	*	nun	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	so	ADV	*	so	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	ist	VAFIN	*)	sein	sg	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	:	$.	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	Wirds	NN	*	wird	-	-	-	(45)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	8	so	ADV	*	so	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	9	wohl	ADV	*	wohl	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	10	recht	ADJD	(VP*	recht	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	11	sein	VAINF	*))	sein	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	(LOC*)	(5
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Dazu	PROAV	*	dazu	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	schweig	VVFIN	*	schweig	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(5)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	lieber	ADV	*	lieber	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	.	$.	*	--	-	-	-	-

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Denn	KON	(VROOT(PSEUDO(S*	denn	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	ich	PPER	*	ich	sg	*	-	(5)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	versteh	VVFIN	*	versteh	sg	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	den	ART	(NP*	der	pl	masc	-	(16
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	Herrn	NN	*	herr	pl	masc	-	16)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	nicht	PTKNEG	(AVP*	nicht	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	recht	ADV	*)))	recht	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(16
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	16)

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	doch	ADV	*)	doch	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	(	$(	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	Laß	NN	*	lassen	sg	masc	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	sehn	CARD	*	sehn	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	warum	PWAV	*	warum	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	mir	PPER	*	sich	sg	*	-	(4)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	eigentlich	ADV	*	eigentlich	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	8	zu	PTKZU	*	zu	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	9	tun	VVINF	*	tun	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	10	!	$.	*	--	-	-	-	-

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Um	KOUI	(VROOT(PSEUDO(PP*	um	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	Machtspruch	NN	*	machtspruch	sg	masc	-	(48)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	oder	KON	(CNP*	oder	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	Rat	NN	*	Rat	sg	masc	-	(49)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	?	$.	*))))	--	-	-	-	-

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	Um	KOUI	*	um	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	lautern	VVINF	*	lautern	pl	-	-	(48)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	oder	KON	*	oder	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	Gelehrten	ADJA	*	gelehrt	sg	masc	-	(49
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	Rat	NN	*	Rat	sg	masc	-	49)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	?	$.	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	8	)	$(	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	9	–	$(	*	–	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	10	Ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	11	dank	APPR	*	dank	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	12	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	13	Euch	PPER	*	euch	pl	*	-	(5
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	15	Bruder	NN	*	bruder	*	*	-	5)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	16	;	$.	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	17	dank	APPR	*	dank	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	18	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	19	Euch	PPER	*	euch	pl	masc	-	(5)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	20	für	APPR	*	für	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	21	den	ART	*	der	sg	masc	-	(39
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	22	guten	ADJA	*	gut	sg	masc	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	23	Wink	NN	*	wink	sg	masc	-	39)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	24	.	$.	*	--	-	-	-	-

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	Was	PWS	*	was	sg	neut	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	Patriarch	NN	*	patriarch	-	-	-	(8)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	?	$.	*	--	-	-	-	-

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	Seid	VAFIN	(S*	sein	pl	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	Ihr	PPER	*	ihr	pl	*	-	(5)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	mein	PPOSAT	(NP*	mein	sg	neut	-	(4)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	Patriarch	NN	*))	patriarch	sg	neut	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(4)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	will	VMFIN	*	wollen	sg	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	ja	ADV	*	ja	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	doch	ADV	*	doch	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	Den	NE	(VP(NP*	der	sg	masc	-	(50
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	Christen	NN	*)	christ	sg	masc	(MISC*)	50)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	mehr	ADV	*	mehr	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	im	APPRART	(CPP(PP*	in	sg	neut	-	(8
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	8	Patriarchen	NN	*)	patriarchen	sg	neut	-	8)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	10	als	APPR	(PP*	als	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	11	Den	ART	*	der	pl	*	-	(51
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	12	Patriarchen	NN	*	patriarch	pl	*	-	51)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	13	in	APPR	(PP*	in	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	14	dem	ART	*	der	sg	neut	-	(8
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	15	Christen	NN	*)))	christ	sg	neut	(MISC*)	8)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	16	fragen	VVINF	*))	fragen	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	17	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	Die	ART	*	der	sg	fem	-	(36
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	Sach	NE	*	sach	sg	fem	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	'	$(	*	--	-	-	-	36)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	die	PDS	*	der	sg	fem	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	.	$.	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	.	$.	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	8	.	$.	*	--	-	-	-	-

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	(LOC*)	(5
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nicht	PTKNEG	(VROOT(PSEUDO(NP*	nicht	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	weiter	ADV	*	weiter	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	Herr	NN	(NP*	herr	sg	masc	-	(16)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	nicht	PTKNEG	(CO(AVP*	nicht	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	weiter	ADV	*))))	weiter	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wozu	PWAV	(VROOT(PSEUDO*	wozu	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	Der	ART	(S(NP*	der	sg	masc	-	(16
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	Herr	NN	*)	herr	sg	masc	-	16)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	verkennt	VVFIN	*	verkennen	sg	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	mich	PPER	*)	mich	sg	masc	-	(5)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	Wer	PWS	(S*	wer	sg	masc	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	viel	PIS	*	viel	*	*	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	weiß	VVFIN	*	weiß	sg	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	Hat	VAFIN	(S*	haben	sg	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	viel	ADV	(VP*	viel	*	*	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	8	sorgen	VVINF	*))))	sorgen	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	9	;	$.	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	10	und	KON	(S*	und	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	11	ich	PPER	*	ich	sg	*	-	(5)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	12	habe	VAFIN	*	haben	sg	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	13	ja	ADV	(VP*	ja	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	14	Mich	APPR	(PP*	mich	sg	masc	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	15	Einer	ART	*	einer	sg	masc	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	16	Sorge	NN	*)	sorge	sg	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	17	nur	ADV	*	nur	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	18	gelobt	VVPP	*))	loben	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	19	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	O	NE	*	O	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	gut	ADJD	*	gut	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*	--	-	-	-	-

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Hört	VVIMP	*	hören	pl	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	seht	VVFIN	*	sehen	sg	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Dort	ADV	(VROOT(PSEUDO(S*	dort	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	kömmt	VVFIN	*	kömmen	sg	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	zu	APPR	(PP*	zu	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	meinem	PPOSAT	*	mein	sg	masc	-	(52|(5)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	Glück	NN	*)	glück	sg	masc	-	52)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	er	PPER	(NP*	er	sg	masc	-	(8)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	8	selbst	ADV	*))	selbst	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Bleibt	VVFIN	(VROOT(PSEUDO(S*	bleiben	sg	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	hier	ADV	*	hier	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	nur	ADV	(NP*	nur	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	stehn	CARD	*))	stehn	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Er	PPER	(VROOT(PSEUDO(S*	er	sg	masc	-	(8)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	hat	VAFIN	*	haben	sg	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	Euch	PPER	(VP*	euch	sg	neut	-	(16)
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	schon	ADV	*	schon	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	erblickt	VVPP	*))	erblicken	-	-	-	-
Nathan_Act4_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

#end document
