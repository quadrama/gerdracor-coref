#begin document (Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll); part 000
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	Daja	NE	(VROOT(PSEUDO(CNP*	daja	-	-	(PER*)	(0)
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	und	KON	*	und	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	Nathan	NE	*)	nathan	-	-	-	(1)
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*))	daja	-	-	-	(0)

Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	eilig	ADJD	(VROOT(PSEUDO(CO*	eilig	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	und	KON	*	und	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	verlegen	ADJD	*)	verlegen	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	Denkt	VVIMP	(VROOT(PSEUDO(S*	denken	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	doch	ADV	*)	doch	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	3	Nathan	NE	*	nathan	-	-	-	(1)
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nun	ADV	(VROOT(PSEUDO(S*)	nun	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	Das	ART	(VROOT(PSEUDO(S(NP*	der	sg	neut	-	(2
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	arme	ADJA	*	arm	sg	neut	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	Kind	NN	*)	kind	sg	neut	-	2)
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	3	erschrak	VVFIN	*	erschrecken	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	4	wohl	ADV	*	wohl	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	5	recht	ADV	(AVP*	recht	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	6	darüber	PROAV	*))	darüber	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	7	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	Da	ADV	(VROOT(PSEUDO*	da	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	schickt	VVFIN	*	schicken	sg	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	.	$.	*	--	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	3	.	$.	*	--	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(NP*	der	sg	masc	-	(8
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	Patriarch	NN	*)	patriarch	sg	masc	-	8)
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	Des	ART	(VROOT(PSEUDO(NP*	der	-	-	-	(15|(7
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	Sultans	NN	*)	sultan	sg	neut	-	7)
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	Schwester	NN	(NP*	schwester	*	masc	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	4	Prinzessin	NN	(NP*	prinzessin	sg	fem	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	5	Sittah	NE	*))))	sittah	sg	fem	-	15)

Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nicht	PTKNEG	(VROOT(PSEUDO(NP*	nicht	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	der	ART	*	der	sg	masc	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	Patriarch	NN	*)	patriarch	sg	masc	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nein	PTKANT	*	nein	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	Sittah	NE	*	sittah	pl	-	-	(15)
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*	--	-	-	-	-

Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	Hört	VVFIN	(S*	hören	pl	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	Ihr	PPER	*	ihr	pl	*	-	(1)
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*)	nicht	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	Prinzessin	NN	*	prinzessin	sg	fem	-	(15
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	Sittah	NE	(S(NP*	sittah	sg	fem	-	15)
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	3	Schickt	NE	*)	schickt	sg	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	4	her	PTKVZ	*	her	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	6	und	KON	*	und	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	7	läßt	VVFIN	(S*	lassen	sg	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	8	sie	PPER	*	sie	pl	*	-	(2)
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	9	zu	APPR	(VP(PP*	zu	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	10	sich	PRF	*)	sich	sg	-	-	(15)
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	11	holen	VVINF	*)))	holen	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wen	PWS	*	wen	sg	*	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	?	$.	*	--	-	-	-	-

Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	Läßt	VVFIN	*	lassen	*	*	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	Recha	NE	*	recha	sg	neut	-	(2)
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	holen	VVINF	*	holen	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	3	?	$.	*	--	-	-	-	-

Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	Sittah	NE	(S*	sittah	sg	*	-	(15)
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	läßt	VVFIN	*	lassen	sg	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	3	sie	PPER	(VP*	sie	sg	fem	-	(2)
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	4	holen	VVINF	*))	holen	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	Nun	XY	*	nun	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	;	$.	*	--	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	3	wenn	KOUS	(S*	wenn	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	4	sie	PPER	*	sie	sg	fem	-	(2)
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	5	Sittah	NE	*	sittah	sg	masc	-	(15)
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	6	holen	VVINF	*	holen	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	7	läßt	VVFIN	*	lassen	sg	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	9	und	KON	(S*	und	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	10	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	11	Der	ART	(NP*	der	sg	masc	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	12	Patriarch	NN	*)))	patriarch	sg	masc	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	13	.	$.	*	--	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	14	.	$.	*	--	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	15	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wie	PWAV	(VROOT(PSEUDO(S*	wie	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	kommt	VVFIN	*	kommen	pl	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	Ihr	PPER	*	ihr	pl	*	-	(1)
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	3	denn	ADV	*	denn	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	4	auf	APPR	(AVP*	auf	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	5	den	ART	*))	der	sg	masc	-	(8)
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	So	ADV	(VROOT(PSEUDO(S*	so	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	hast	VAFIN	*	haben	sg	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	du	PPER	*	du	sg	*	-	(0)
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	3	kürzlich	ADV	(NP*	kürzlich	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	4	nichts	PIS	*)	nichts	*	neut	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	5	von	APPR	(PP*	von	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	6	ihm	PPER	*)	ihm	sg	masc	-	(8)
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	7	gehört	VVFIN	*)	gehören	sg	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	8	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	Gewiß	ADV	(VROOT(PSEUDO(CO(AVP*	gewiß	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	nicht	PTKNEG	*))	nicht	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	Auch	ADV	(VROOT(PSEUDO(VP(NP*	auch	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	ihm	PPER	*)	ihm	sg	masc	-	(8)
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	nichts	PIS	*	nichts	*	neut	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	3	gesteckt	VVPP	*)	stecken	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	*	ich	sg	*	-	(0)
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	?	$.	*	--	-	-	-	-

Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	ihm	PPER	*	ihm	sg	masc	-	(8)
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	?	$.	*	--	-	-	-	-

Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wo	PWAV	(VROOT(PSEUDO(S*	wo	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	sind	VAFIN	*	sein	pl	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	die	ART	(NP*	der	pl	fem	-	(16
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	3	Boten	NN	*))	bote	pl	fem	-	16)
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	Vorn	ADV	(VROOT(PSEUDO(S*)	vorn	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(1)
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	will	VMFIN	*	wollen	sg	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	sie	PPER	(VP*	sie	pl	*	-	(16)
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	3	doch	ADV	*	doch	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	4	Aus	APPR	(PP*	aus	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	5	Vorsicht	NN	*)	vorsicht	-	-	-	(17)
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	6	selber	ADV	*	selber	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	7	sprechen	VVINF	*))	sprechen	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	Komm	VVIMP	*	komm	pl	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	Wenn	KOUS	(S*	wenn	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	nur	ADV	*	nur	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	3	Vom	APPRART	(PP*	von	pl	fem	-	(8
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	4	Patriarchen	NN	*)	patriarchen	pl	fem	-	8)
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	5	nichts	PIS	(NP*	nichts	*	neut	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	6	dahinter	PROAV	*))	dahinter	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	7	steckt	VVFIN	*	stecken	sg	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ab	NN	(VROOT(PSEUDO*	ab	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	(18
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	ich	PPER	*	ich	sg	*	-	(0)
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	–	VVFIN	*	–	sg	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	3	ich	PPER	(S*	ich	sg	*	-	(0)
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	4	fürchte	VVFIN	*	fürchen	sg	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	5	ganz	ADV	(NP*	ganz	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	6	was	PIS	*)	was	sg	neut	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	7	anders	ADV	(AVP*	anders	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	8	noch	ADV	*)))	noch	-	-	-	18)
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	Was	PWS	*	was	sg	neut	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	gilts	ADV	*	gilt	-	-	-	(18)
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	die	ART	*	der	sg	fem	-	(2
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	einzige	ADJA	*	einzig	sg	fem	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	vermeinte	ADJA	*	vermeint	sg	fem	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	3	Tochter	NN	*	tochter	sg	fem	-	2)
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	4	So	ADV	*	so	-	-	-	(1
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	5	eines	ART	*	ein	sg	masc	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	6	reichen	ADJA	*	reich	sg	masc	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	7	Juden	NN	*	Jude	sg	masc	-	1)
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	8	wär	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	9	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	10	auch	ADV	*	auch	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	11	wohl	ADV	*	wohl	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	12	Für	APPR	*	für	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	13	einen	ART	*	ein	sg	masc	-	(19
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	14	Muselmann	NN	*	muselmann	sg	masc	-	19)
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	15	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	16	übel	ADV	*	übel	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	17	?	$.	*	--	-	-	-	-

Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	Hui	NE	(NP*	hui	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	3	Der	ART	(S(NP*	der	sg	masc	-	(20
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	4	Tempelherr	NN	*)	tempelherr	sg	masc	-	20)
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	5	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	6	drum	ADV	*))	drum	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ist	VAFIN	(VROOT(PSEUDO(S*	sein	sg	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	drum	ADV	*	drum	sg	neut	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	:	$.	*	--	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	3	wenn	KOUS	(S*	wenn	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	4	ich	PPER	*	ich	sg	*	-	(0)
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	5	Den	ART	(NP*	der	sg	masc	-	(21
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	6	zweiten	ADJA	*	zweiter	sg	masc	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	7	Schritt	NN	*)	schritt	sg	masc	-	21)
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	8	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	9	auch	ADV	(AVP*	auch	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	10	noch	ADV	*)	noch	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	11	wage	NN	*	wagen	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	12	;	$.	*	--	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	13	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	14	Auch	ADV	*	auch	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	15	ihr	PPER	*	ihr	sg	fem	-	(2)
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	16	noch	ADV	(AVP*	noch	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	17	selbst	ADV	*)	selbst	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	18	entdecke	VVFIN	*	entdecken	sg	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	19	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	20	wer	PWS	(S*	wer	sg	masc	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	21	sie	PPER	*	sie	sg	fem	-	(2)
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	22	ist	VAFIN	*)))	sein	sg	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	23	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	Getrost	NN	*	getrost	pl	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	Laß	KOUS	(VROOT(PSEUDO(S*	lassen	sg	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	mich	PPER	*	mich	sg	*	-	(0)
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	den	ART	(NP*	der	sg	masc	-	(22
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	3	ersten	ADJA	*	erster	sg	masc	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	4	Augenblick	NN	*)	augenblick	sg	masc	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	22)
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	6	Den	NE	*	der	sg	masc	-	(22)
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	7	ich	PPER	*	ich	sg	*	-	(0)
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	8	allein	ADV	(NP*	allein	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	9	sie	PPER	*)	sie	sg	fem	-	(2)
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	10	habe	VAFIN	*	haben	sg	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	12	dazu	PROAV	(VP*	dazu	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	13	brauchen	VVINF	*))	brauchen	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	14	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	der	PDS	*	der	sg	masc	-	(22)
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	wird	VAFIN	*	werden	sg	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	3	sein	PPOSAT	(NP*	sein	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	4	–	NN	*)	–	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	5	vielleicht	ADV	*	vielleicht	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	6	nun	ADV	*	nun	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	7	eben	ADV	*	eben	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	9	wenn	KOUS	(S*	wenn	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	10	Ich	PPER	*	ich	sg	*	-	(0)
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	11	sie	PPER	*	sie	sg	fem	-	(2)
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	12	begleite	VVFIN	*))	begleiten	sg	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	13	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	So	ADV	(VROOT(PSEUDO*	so	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	ein	ART	(S(NP*	ein	sg	masc	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	erster	ADJA	*	erster	sg	masc	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	3	Wink	NN	*	wink	sg	masc	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	4	Kann	NE	*)	können	sg	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	5	unterwegens	ADV	(VP*	unterwegens	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	6	wenigstens	ADV	(AVP*	wenigstens	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	7	nicht	PTKNEG	*)	nicht	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	8	schaden	VVINF	*))	schaden	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ja	PTKANT	(VROOT(PSEUDO(S*	ja	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	ja	ADV	*)	ja	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nur	ADV	(VROOT(PSEUDO(AP*	nur	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	zu	PTKVZ	*)	zu	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	Itzt	ADV	(VROOT(PSEUDO*	itzt	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	oder	KON	*	oder	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	nie	ADV	*	nie	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nur	ADV	(VROOT(PSEUDO(AP*	nur	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	zu	PTKVZ	*)	zu	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ihm	PPER	*	ihm	sg	*	-	(1)
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	1	nach	PTKVZ	*	nach	-	-	-	-
Nathan_Act4_Scene8.part.xml.rkpt.0.CoNLL2012.conll	000	2	.	$.	*	--	-	-	-	-

#end document
