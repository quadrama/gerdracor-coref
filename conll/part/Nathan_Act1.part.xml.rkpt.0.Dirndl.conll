#begin document (Nathan_Act1.part.xml.rkpt.0.Dirndl.conll); part 000
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Szene	NN	(VROOT(PSEUDO(S*	szene	sg	fem	_stage	-	-	-	-	(17)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	:	$.	*	--	-	-	_stage	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Flur	NN	(NP*	flur	sg	fem	_stage	-	-	-	-	(18
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	in	APPR	(PP*	in	-	-	_stage	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Nathans	NE	*	nathan	sg	*	_stage	-	-	-	-	(19|(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Hause	NN	*)))	haus	sg	neut	_stage	-	-	-	-	18)|19)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	.	$.	*))	--	-	-	_stage	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Nathan	NE	(VROOT(PSEUDO*	nathan	-	-	_stage	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	von	APPR	(AP(PP*	von	-	-	_stage	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	der	ART	*	der	sg	fem	_stage	-	-	-	-	(20
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Reise	NN	*)	reise	sg	fem	_stage	-	-	-	-	20)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	kommend	ADJD	*)	kommend	-	-	_stage	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	.	$.	*))	--	-	-	_stage	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Daja	NE	(VROOT(PSEUDO(S*	daja	-	-	_stage	(PER*)	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	ihm	PPER	*	ihm	sg	masc	_stage	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	entgegen	PTKVZ	*)	entgegen	-	-	_stage	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	.	$.	*))	--	-	-	_stage	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	daja	-	-	-	-	(0
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	daja	-	-	-	-	0)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Er	PPER	*	er	sg	masc	daja	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	ist	VAFIN	*	sein	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	es	PPER	*	es	sg	neut	daja	-	-	-	-	(21)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	!	$.	*	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Nathan	NE	(VROOT(PSEUDO(MPN*	nathan	-	-	daja	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	!	$.	*)))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Gott	NN	(S*	gott	sg	masc	daja	(PER*)	-	-	-	(22)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	sei	VAFIN	*	sein	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	ewig	ADJD	*)	ewig	-	-	daja	-	-	-	-	(23
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Dank	NN	(NP*	dank	-	-	daja	-	-	-	-	23)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Daß	KOUS	(S*	daß	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Ihr	PPER	*	ihr	pl	*	daja	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	doch	ADV	*	doch	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	endlich	ADV	(AVP*	endlich	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	einmal	ADV	*)	einmal	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	wiederkommt	VVFIN	*))	wiederkommen	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	.	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Ja	PTKANT	(VROOT(PSEUDO(S*	ja	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Daja	NE	*	daja	-	-	nathan	(PER*)	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	;	$.	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Gott	NN	(S*	gott	-	-	nathan	(PER*)	-	-	-	(24)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	sei	VAFIN	*	sein	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Dank	NN	*))	dank	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	!	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Doch	KON	*	doch	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	warum	PWAV	*	warum	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	endlich	ADV	*	endlich	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	?	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Hab	XY	*	hab	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	'	$(	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	ich	PPER	*	ich	sg	*	nathan	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	denn	ADV	*	denn	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	eher	ADV	*	eher	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	wiederkommen	VVINF	*	wiederkommen	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	wollen	VMINF	*	wollen	pl	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	?	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	wiederkommen	VVINF	*	wiederkommen	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	können	VMFIN	*)	können	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	?	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Babylon	NE	(VROOT(PSEUDO(CS(S*	babylon	-	-	nathan	-	-	-	-	(25)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Ist	VAFIN	*	sein	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	von	APPR	(VP(VP(PP*	von	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Jerusalem	NE	*	jerusalem	sg	neut	nathan	(LOC*)	-	-	-	(14)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	wie	PWAV	(S*	wie	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	ich	PPER	*	ich	sg	*	nathan	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	den	ART	(NP*	der	sg	masc	nathan	-	-	-	-	(26
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	Weg	NN	*	weg	sg	masc	nathan	-	-	-	-	26)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	Seit	NN	(VP*	seit	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	ab	APPR	(PP*	ab	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	bald	ADV	*)	bald	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	rechts	ADV	(AVP*	rechts	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	bald	ADV	*	bald	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	links	ADV	*)	links	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	zu	PTKZU	(VZ*	zu	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	nehmen	VVINF	*)))	nehmen	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	bin	VAFIN	*))	sein	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	Genötigt	VVPP	*)	nötigen	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	22	worden	VAPP	*))	werden	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	23	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	24	gut	ADV	(S(NP(AP*	gut	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	25	zwei	CARD	(NM*	zwei	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	26	hundert	CARD	*))	hundert	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	27	Meilen	NN	*)	meile	pl	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	28	;	$.	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	29	Und	KON	(S*	und	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	30	Schulden	NN	*	schuld	sg	fem	nathan	-	-	-	-	(27)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	31	einkassieren	VVFIN	*	einkassieren	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	32	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	33	ist	VAFIN	(S*	sein	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	34	gewiß	ADV	*	gewiß	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	35	Auch	ADV	(NP*	auch	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	36	kein	PIAT	*	kein	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	37	Geschäft	NN	*	geschäft	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	38	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	39	das	PRELS	(S*	der	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	40	merklich	ADJD	*	merklich	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	41	födert	VVFIN	*	födern	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	42	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	43	das	ART	(AVP*	der	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	44	So	ADV	*)	so	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	45	von	APPR	(VP(PP*	von	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	46	der	ART	*	der	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	47	Hand	NN	*)	hand	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	48	sich	PRF	*	sich	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	49	schlagen	VVINF	*)))	schlagen	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	50	läßt	VVFIN	*))))	lassen	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	51	.	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	daja	-	-	-	-	(0
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	daja	-	-	-	-	0)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	O	NE	(VROOT(PSEUDO(NP(MPN*	O	-	-	daja	-	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Nathan	NE	*)	nathan	-	-	daja	-	-	-	-	1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Wie	PWAV	(CO(AP*	wie	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	elend	ADJD	*)	elend	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	elend	ADJD	(S*	elend	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	hättet	VVFIN	*	hätten	pl	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	Ihr	PPER	*	ihr	pl	*	daja	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	indes	ADV	(VP(AP*	indes	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	Hier	ADV	*)	hier	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	werden	VAINF	*)	werden	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	können	VMFIN	*)))	können	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	!	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Euer	ADJA	(VROOT(PSEUDO*	euer	-	-	daja	-	-	-	-	(19|(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Haus	NN	*	haus	-	-	daja	-	-	-	-	19)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	.	$.	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	.	$.	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	.	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Das	PDS	(VROOT(PSEUDO(S*	der	sg	neut	nathan	-	-	-	-	(19)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	brannte	VVFIN	*)	brennen	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	.	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	So	ADV	*	so	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	hab	VAFIN	*	hab	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	'	$(	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	ich	PPER	*	ich	sg	*	nathan	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	schon	ADV	*	schon	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	vernommen	VVPP	*	vernehmen	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	.	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Gebe	NN	*	gebe	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Gott	NN	(NP*	gott	sg	masc	nathan	(PER*)	-	-	-	(24)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Daß	KOUS	(S*	daß	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	ich	PPER	*	ich	sg	*	nathan	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	nur	ADV	(VP(NP*	nur	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	alles	PIS	*)	alle	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	schon	ADV	*	schon	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	vernommen	VVPP	*)	vernehmen	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	habe	VAFIN	*))	haben	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	!	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	daja	-	-	-	-	(0
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	daja	-	-	-	-	0)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	wäre	VAFIN	*	sein	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	leicht	ADJD	(VP*	leicht	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	von	APPR	(PP*	von	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Grund	NN	*	grund	sg	masc	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	aus	APZR	*)	aus	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	abgebrannt	VVPP	*))	abgebrennen	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	.	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Dann	ADV	(VROOT(PSEUDO(S*	dann	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Daja	NE	*	daja	-	-	nathan	(PER*)	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	hätten	VAFIN	*	haben	pl	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	wir	PPER	*	wir	pl	*	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	ein	ART	(NP*	ein	sg	neut	nathan	-	-	-	-	(28
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	neues	ADJA	*)	neu	sg	neut	nathan	-	-	-	-	28)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	uns	PPER	*	uns	sg	neut	nathan	-	-	-	-	(29)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	Gebaut	NN	(CNP*	gebaut	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	;	$.	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	und	KON	*	und	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	ein	ART	(NP*	ein	sg	neut	nathan	-	-	-	-	(28
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	bequemeres	ADJA	*)))	bequem	sg	neut	nathan	-	-	-	-	28)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	.	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	daja	-	-	-	-	(0
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	daja	-	-	-	-	0)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Schon	ADV	(VROOT(PSEUDO(S(ISU*	schon	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	wahr	ADJD	*))	wahr	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	!	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	*	–	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Doch	KON	*	doch	-	-	daja	-	-	-	-	(30
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Recha	NE	*	recha	-	-	daja	(PER*)	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	wär	VAFIN	*	sein	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	'	$(	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	bei	APPR	*	bei	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	einem	ART	*	ein	sg	neut	daja	-	-	-	-	(31
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Haare	NN	*	haar	sg	neut	daja	-	-	-	-	31)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	mit	APPR	*	mit	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	Verbrannt	NN	*	verbrannt	sg	neut	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	.	$.	*	--	-	-	daja	-	-	-	-	30)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Verbrannt	NN	(VROOT(PSEUDO*	verbrannt	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	?	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Wer	PWS	*	wer	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	?	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	meine	PPOSAT	(VROOT(PSEUDO(NP*	mein	sg	fem	nathan	-	-	-	-	(2|(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Recha	NN	*)	recha	sg	fem	nathan	-	-	-	-	2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	?	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	sie	PPER	*	sie	pl	*	nathan	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	?	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Das	PDS	*	der	sg	neut	nathan	-	-	-	-	(30)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	hab	VAFIN	*	hab	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	'	$(	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	ich	PPER	*	ich	sg	*	nathan	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	nicht	PTKNEG	*	nicht	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	gehört	VVFIN	*	gehören	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	.	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Nun	ADV	(S*	nun	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	dann	ADV	*)	dann	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	!	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	So	ADV	(VROOT(PSEUDO(S*	so	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	hätte	VAFIN	*	haben	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Ich	PPER	(NP*	ich	sg	*	nathan	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	keines	ADJA	(NP*	keiner	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Hauses	NN	*))	haus	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	mehr	ADV	(VP*	mehr	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	bedurft	VVPP	*))	bedürfen	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	.	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Verbrannt	NN	*	verbrannt	sg	-	nathan	-	-	-	-	(32)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Bei	APPR	*	bei	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	einem	ART	(NP*	ein	sg	masc	nathan	-	-	-	-	(31
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Haare	NN	*)	haar	sg	masc	nathan	-	-	-	-	31)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	!	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Ha	NE	*	ha	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	!	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	sie	PPER	(VROOT(PSEUDO(S*	sie	sg	fem	nathan	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	ist	VAFIN	*	sein	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	es	PPER	*	es	sg	neut	nathan	-	-	-	-	(32)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	wohl	ADV	*)	wohl	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	!	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Ist	VAFIN	(VROOT(PSEUDO(S*	sein	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	wirklich	ADJD	*	wirklich	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	wohl	ADV	(VP*	wohl	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	verbrannt	VVPP	*))	verbrennen	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	!	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Sag	NE	*	sag	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	'	$(	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	nur	ADV	*	nur	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	heraus	PTKVZ	*	heraus	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	!	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Heraus	ADV	(VROOT(PSEUDO*	heraus	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	nur	ADV	*	nur	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	!	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Töte	NN	*	töte	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	mich	PPER	(CS*	mich	sg	*	nathan	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	:	$.	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	und	KON	*	und	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	martre	VVFIN	(S*	martren	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	mich	PPER	*	mich	sg	*	nathan	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Nicht	PTKNEG	(AP*	nicht	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	länger	ADJD	*)))	lang	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	.	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Ja	PTKANT	(S*	ja	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	sie	PPER	*	sie	sg	fem	nathan	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	ist	VAFIN	*	sein	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	verbrannt	VVPP	*)	verbrennen	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	.	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	daja	-	-	-	-	(0
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	daja	-	-	-	-	0)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Wenn	KOUS	(VROOT(PSEUDO(S*	wenn	-	-	daja	-	-	-	-	(33
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	sie	PPER	*	sie	pl	*	daja	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Es	PPER	*	es	sg	neut	daja	-	-	-	-	(32)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	wäre	VAFIN	*)))	sein	sg	-	daja	-	-	-	-	33)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Warum	PWAV	(VROOT(PSEUDO(S*	warum	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	erschreckest	VVFIN	*	erschreckeen	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	du	PPER	*	du	sg	*	nathan	-	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	mich	PPER	*	mich	sg	*	nathan	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	denn	ADV	*)	denn	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	?	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	O	XY	*	O	-	-	nathan	-	-	-	-	(2
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Recha	NE	*	recha	-	-	nathan	-	-	-	-	2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	!	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	O	ITJ	(VROOT(PSEUDO(S*)	O	-	-	nathan	-	-	-	-	(2
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	meine	PPOSAT	(NP*	mein	-	-	nathan	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Recha	NE	*)	recha	-	-	nathan	-	-	-	-	2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	!	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	daja	-	-	-	-	(0
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	daja	-	-	-	-	0)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Eure	PPOSAT	*	euer	-	-	daja	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	?	$.	*	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Eure	PPOSAT	(VROOT(PSEUDO(NP*	euer	-	-	daja	-	-	-	-	(2
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Recha	NN	*)	recha	-	-	daja	(PER*)	-	-	-	2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	?	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Wenn	KOUS	(VROOT(PSEUDO(S*	wenn	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	ich	PPER	*	ich	sg	*	nathan	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	mich	PRF	(VP*	mich	sg	-	nathan	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	wieder	ADV	(AVP*	wieder	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	je	ADV	*)	je	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	entwöhnen	VVINF	*)	entwöhnen	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	müßte	VMFIN	*	müssen	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	Dies	FM	(VP(NP*	dieser	sg	neut	nathan	-	-	-	-	(2
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	Kind	NN	*	kind	sg	neut	nathan	-	-	-	-	2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	mein	PPOSAT	*	mein	sg	masc	nathan	-	-	-	-	(34|(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	Kind	NN	*)	kind	sg	neut	nathan	-	-	-	-	34)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	zu	PTKZU	(VZ*	zu	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	nennen	VVINF	*)))	nennen	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	!	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	daja	-	-	-	-	(0
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	daja	-	-	-	-	0)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Nennt	VVFIN	(VROOT(PSEUDO(S*	nennen	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Ihr	PPER	(NP*	ihr	sg	neut	daja	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	alles	PIS	*)	alle	sg	neut	daja	-	-	-	-	(35
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	,	$,	*	--	-	-	daja	-	-	-	-	35)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Was	PWS	(CS(S*	was	sg	neut	daja	-	-	-	-	(35)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Ihr	PPER	*	ihr	sg	neut	daja	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	besitzt	VVFIN	*)	besitzen	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	mit	APPR	(S(PP*	mit	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	eben	ADV	(AP*	eben	-	-	daja	-	-	-	-	(36
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	so	ADV	*	so	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	viel	PIAT	*)	viel	*	*	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	Rechte	NN	*)	recht	*	*	daja	-	-	-	-	36)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	Das	ART	(NP*	der	sg	neut	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	Eure	NN	*))))	euer	sg	neut	daja	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	?	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Nichts	PIS	(VROOT(PSEUDO(NP*	nichts	*	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	mit	APPR	(PP*	mit	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	größerm	ADJD	*))	größer	-	-	nathan	-	-	-	-	(37)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	!	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Alles	PIS	(VROOT(PSEUDO(S(NP*	alle	sg	neut	nathan	-	-	-	-	(35
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	was	PRELS	(S*	was	sg	neut	nathan	-	-	-	-	35)|(35)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Ich	PPER	*	ich	sg	*	nathan	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	sonst	ADV	*	sonst	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	besitze	VVFIN	*))	besitzen	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	hat	VAFIN	*	haben	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	Natur	NN	(VP(NP(CNP*	natur	sg	fem	nathan	-	-	-	-	(38)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	und	KON	*	und	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	Glück	NN	*)	glück	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	Mir	NE	*)	sich	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	zugeteilt	VVPP	*))	zuteilen	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	.	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Dies	APPRART	*	dieser	sg	neut	nathan	-	-	-	-	(2
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Eigentum	NN	*	eigentum	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	allein	ADV	*	allein	-	-	nathan	-	-	-	-	2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Dank	NN	*	dank	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	'	$(	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	ich	PPER	*	ich	sg	*	nathan	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	der	ART	*	der	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Tugend	NN	*	tugend	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	.	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	daja	-	-	-	-	(0
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	daja	-	-	-	-	0)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	O	ITJ	(VROOT(PSEUDO(S*	O	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	wie	KOKOM	(VP(AP*	wie	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	teuer	ADJD	*))	teuer	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	laßt	VVIMP	*	lassen	pl	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Ihr	PPER	*	ihr	pl	*	daja	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Eure	PPOSAT	(NP*	euer	pl	neut	daja	-	-	-	-	(39|(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Güte	NN	*)	güte	pl	neut	daja	-	-	-	-	39)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	Nathan	NE	*	nathan	pl	neut	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	mich	PPER	(VP*	mich	sg	*	daja	-	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	bezahlen	VVINF	*))	bezahlen	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	!	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Wenn	KOUS	*	wenn	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Güt	NE	*	güt	-	-	daja	-	-	-	-	(40)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	'	$(	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	in	APPR	*	in	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	solcher	PIAT	*	solcher	sg	fem	daja	-	-	-	-	(41
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Absicht	NN	*	absicht	sg	fem	daja	-	-	-	-	41)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	ausgeübt	VVPP	*	ausüben	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	Noch	ADV	*	noch	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	Güte	NN	*	güte	sg	*	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	heißen	VVINF	*	heißen	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	kann	VMFIN	*	können	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	!	$.	*	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	In	APPR	(VROOT(PSEUDO(PP*	in	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	solcher	PIAT	*	solcher	sg	fem	nathan	-	-	-	-	(41
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Absicht	NN	*)	absicht	sg	fem	nathan	-	-	-	-	41)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	?	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	In	APPR	*	in	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	welcher	PWAT	*	welcher	sg	fem	nathan	-	-	-	-	(41)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	?	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	daja	-	-	-	-	(0
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	daja	-	-	-	-	0)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Mein	PPOSAT	(VROOT(PSEUDO(NP*	mein	sg	neut	daja	-	-	-	-	(42|(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Gewissen	NN	*)	gewissen	sg	neut	daja	-	-	-	-	42)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	.	$.	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	.	$.	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	.	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Daja	NE	(VROOT(PSEUDO(S*	daja	-	-	nathan	(PER*)	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	laß	VVFIN	*	lassen	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Vor	APPR	(PP*	vor	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	allen	PIAT	*	aller	pl	*	nathan	-	-	-	-	(43
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Dingen	NN	*)	ding	pl	-	nathan	-	-	-	-	43)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	dir	PPER	(VP*	dir	sg	*	nathan	-	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	erzählen	VVINF	*))	erzählen	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	.	$.	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	.	$.	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	.	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	daja	-	-	-	-	(0
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	daja	-	-	-	-	0)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Mein	PPOSAT	(VROOT(PSEUDO(NP*	mein	sg	neut	daja	-	-	-	-	(42|(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Gewissen	NN	*)))	gewissen	sg	neut	daja	-	-	-	-	42)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	in	APPR	(PP*	in	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Babylon	NE	*)	babylon	sg	neut	nathan	-	-	-	-	(25)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Für	APPR	(PP*	für	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	einen	ART	*	ein	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	schönen	ADJA	*	schön	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Stoff	NN	*)	stoff	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	ich	PPER	(VP*	ich	sg	*	nathan	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	dir	PPER	*	dir	sg	*	nathan	-	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	gekauft	VVPP	*))	kaufen	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	.	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	So	ADV	(VROOT(PSEUDO(CS(AP*	so	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	reich	ADJD	*)	reich	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	und	KON	*	und	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	mit	APPR	(S(PP*	mit	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Geschmack	NN	*)	geschmack	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	so	ADV	(AP*	so	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	reich	ADJD	*)))	reich	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	!	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	nathan	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	bringe	VVFIN	*	bringen	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Für	APPR	(PP*	für	-	-	nathan	-	-	-	-	(2
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Recha	NE	*)	recha	sg	neut	nathan	(PER*)	-	-	-	2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	selbst	ADV	*	selbst	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	kaum	ADV	(VP*	kaum	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	einen	PIS	*	ein	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	schönern	VVINF	*)	schönern	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	mit	PTKVZ	*)	mit	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	.	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	daja	-	-	-	-	(0
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	daja	-	-	-	-	0)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Was	PWS	*	was	sg	neut	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	hilfts	ADV	*	hilft	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	?	$.	*	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Denn	KON	(VROOT(PSEUDO(CS(S*	denn	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	mein	PPOSAT	(NP*	mein	sg	neut	daja	-	-	-	-	(42|(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Gewissen	NN	*)	gewissen	sg	neut	daja	-	-	-	-	42)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	muß	VMFIN	*	müssen	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	ich	PPER	*	ich	sg	*	daja	-	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Euch	PRF	(VP*	euch	pl	*	daja	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Nur	ADV	*	nur	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	sagen	VVINF	*))	sagen	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	läßt	VVFIN	(S*	lassen	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	sich	PRF	(VP*	sich	sg	-	daja	-	-	-	-	(42)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	länger	ADJD	*	lang	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	nicht	PTKNEG	*	nicht	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	betäuben	VVINF	*)))	betäuben	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	.	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	wie	KOKOM	(NP*	wie	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	die	ART	*	der	pl	fem	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Spangen	NN	*)	spange	pl	fem	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	wie	PWAV	*	wie	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	die	ART	(NP*	der	pl	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Ohrgehenke	NN	*	ohrgehenk	pl	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	Wie	PWAV	(S*	wie	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	Ring	NN	(CNP*	ring	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	und	KON	*	und	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	Kette	NN	*)	kette	pl	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	dir	PPER	*	dir	sg	*	nathan	-	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	gefallen	VVPP	(VP*	fallen	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	werden	VAINF	*)	werden	pl	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	Die	NN	*	der	pl	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	in	APPR	(PP*	in	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	Damaskus	NE	*)))	damaskus	sg	-	nathan	(LOC*)	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	ich	PPER	*	ich	sg	*	nathan	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	dir	PPER	*	dir	sg	*	nathan	-	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	22	ausgesucht	VVPP	*	aussuchen	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	23	:	$.	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	24	Verlanget	NN	(VP*	verlanget	pl	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	25	mich	PPER	*	mich	sg	*	nathan	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	26	zu	PTKZU	(VZ*	zu	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	27	sehn	VVINF	*)))	sehn	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	28	.	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	daja	-	-	-	-	(0
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	daja	-	-	-	-	0)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	So	ADV	(VROOT(PSEUDO(S*	so	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	seid	VAFIN	*	sein	pl	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Ihr	PPER	*	ihr	pl	*	daja	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	nun	ADV	*)	nun	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	!	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Wenn	KOUS	(VROOT(PSEUDO(S*	wenn	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Ihr	PPER	*	ihr	pl	*	daja	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	nur	ADV	(VP*	nur	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	schenken	VVINF	*)	schenken	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	könnt	VVFIN	*)	können	pl	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	!	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	nur	ADV	(VROOT(PSEUDO(VP*	nur	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	schenken	VVINF	*)	schenken	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	könnt	VVFIN	*	können	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	!	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Nimm	VVIMP	*	nimm	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	du	PPER	*	du	sg	*	nathan	-	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	so	ADV	*	so	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	gern	ADV	*	gern	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	als	KOUS	*	als	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	ich	PPER	*	ich	sg	*	nathan	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	dir	PPER	*	dir	sg	*	nathan	-	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	geb	VVFIN	*	geb	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	'	$(	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	:	$.	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	–	ADJD	*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	und	KON	*	und	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	schweig	ADJD	*	schweig	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	!	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	daja	-	-	-	-	(0
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	daja	-	-	-	-	0)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Und	KON	(VROOT(PSEUDO(VP(AP*	und	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	schweig	ADJD	*))	schweig	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	!	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Wer	PWS	(S*	wer	sg	masc	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	zweifelt	VVFIN	*)	zweifeln	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Nathan	NE	(NP*	nathan	-	-	daja	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	daß	KOUS	(S*	daß	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Ihr	PPER	*	ihr	pl	*	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	nicht	PTKNEG	*	nicht	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	Die	ART	(NP*	der	sg	fem	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	Ehrlichkeit	NN	*)	ehrlichkeit	sg	fem	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	die	ART	(NP*	der	sg	fem	daja	-	-	-	-	(44
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	Großmut	NN	*	großmut	sg	fem	daja	-	-	-	-	44)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	selber	ADV	*)	selber	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	seid	VAFIN	*))	sein	pl	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	?	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	doch	ADV	*)	doch	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	.	$.	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	.	$.	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	.	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Doch	KON	(VROOT(PSEUDO(S*	doch	-	-	nathan	-	-	-	-	(45
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	bin	VAFIN	*	sein	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	ich	PPER	*	ich	sg	*	nathan	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	nur	ADV	(NP*	nur	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	ein	ART	*	ein	sg	neut	nathan	-	-	-	-	(46
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Jude	NN	*))	jude	sg	neut	nathan	-	-	-	-	46)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	.	$.	*))	--	-	-	nathan	-	-	-	-	45)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Gelt	NN	(NP*	gelt	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Das	PDS	(S*	der	sg	neut	nathan	-	-	-	-	(45)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	willst	VVFIN	*	wollen	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	du	PPER	(VP*	du	sg	*	nathan	-	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	sagen	VVINF	*)))	sagen	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	?	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	daja	-	-	-	-	(0
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	daja	-	-	-	-	0)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Was	PWS	(VROOT(PSEUDO(CS(S*	was	sg	neut	daja	-	-	-	-	(47
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	ich	PPER	(VP*	ich	sg	*	daja	-	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	sagen	VVINF	*)	sagen	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	will	VMFIN	*)	wollen	sg	-	daja	-	-	-	-	47)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Das	PDS	(S*	der	sg	neut	daja	-	-	-	-	(47)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	wißt	VVFIN	*	wissen	pl	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Ihr	PPER	*	ihr	pl	*	daja	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	besser	ADJD	*))	gut	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	.	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Nun	ADV	(VROOT(PSEUDO(S*	nun	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	so	ADV	*	so	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	schweig	ADJD	*)	schweig	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	!	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	daja	-	-	-	-	(0
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	daja	-	-	-	-	0)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	daja	-	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	schweige	VVFIN	*)	schweigen	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	.	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Was	PWS	*	was	sg	neut	daja	-	-	-	-	(48
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Sträfliches	NN	*	sträflich	sg	neut	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	vor	APPR	*	vor	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Gott	NN	*	gott	sg	masc	daja	-	-	-	-	(22)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	hierbei	ADV	*	hierbei	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	geschieht	VVPP	*	geschehen	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Und	KON	*	und	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	ich	PPER	*	ich	sg	*	daja	-	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	nicht	PTKNEG	*	nicht	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	hindern	VVINF	*	hindern	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	kann	VMFIN	*	können	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	nicht	PTKNEG	*	nicht	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	ändern	VVINF	*	ändern	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	kann	VMFIN	*	können	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	–	KOUI	*	–	sg	neut	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	Nicht	PTKNEG	*	nicht	sg	neut	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	kann	VMFIN	*	können	sg	-	daja	-	-	-	-	48)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Komm	NN	*	komm	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	'	$(	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	über	APPR	*	über	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	mich	PPER	*	mich	sg	*	nathan	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	!	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Wo	PWAV	(S*	wo	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	aber	ADV	*	aber	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	ist	VAFIN	*	sein	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	sie	PPER	*	sie	sg	fem	nathan	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	denn	ADV	*)	denn	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	?	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	wo	PWAV	(VROOT(PSEUDO(S*	wo	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	bleibt	VVFIN	*	bleiben	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	sie	PPER	*)	sie	sg	fem	nathan	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	?	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Daja	NE	(NP*	daja	-	-	nathan	(PER*)	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Wenn	KOUS	(S*	wenn	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	du	PPER	*	du	sg	*	nathan	-	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	mich	PPER	*	mich	sg	*	nathan	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	hintergehst	VVFIN	*))	hintergehst	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	!	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Weiß	VVFIN	(S*	weiß	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	sie	PPER	*)	sie	sg	fem	nathan	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	es	PPER	*	es	sg	neut	nathan	-	-	-	-	(49)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	denn	ADV	(NP*	denn	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Daß	KOUS	(S*	daß	sg	-	nathan	-	-	-	-	(49
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	ich	PPER	*	ich	sg	*	nathan	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	gekommen	VVPP	*	kommen	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	bin	VAFIN	*))	sein	sg	-	nathan	-	-	-	-	49)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	?	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	daja	-	-	-	-	(0
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	daja	-	-	-	-	0)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Das	PDS	*	der	sg	neut	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	frag	VVFIN	*	frag	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	'	$(	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	ich	PPER	*	ich	sg	*	daja	-	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Euch	PPER	*	euch	pl	*	daja	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	!	$.	*	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Noch	ADV	(VROOT(PSEUDO(S*	noch	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	zittert	VVFIN	*	zittern	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	ihr	PPER	*	ihr	sg	masc	daja	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	der	ART	(NP*	der	sg	masc	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Schreck	NN	*)	schreck	sg	masc	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	durch	APPR	(PP*	durch	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	jede	PIAT	*	jeder	sg	fem	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Nerve	NN	*))	nerve	sg	fem	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	.	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Noch	ADV	(VROOT(PSEUDO(S*	noch	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	malet	VVFIN	*	malet	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Feuer	NN	*	feuer	sg	neut	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	ihre	PPOSAT	(NP*	ihr	pl	masc	daja	-	-	-	-	(50|(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Phantasie	NN	*)	phantasie	pl	masc	daja	-	-	-	-	50)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Zu	APPR	(PP*	zu	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	allem	PIS	*)	alle	sg	neut	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	was	PRELS	(S*	was	sg	neut	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	sie	PPER	*	sie	sg	fem	daja	-	-	-	-	(50)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	malt	VVFIN	*))	malen	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	.	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Im	APPRART	(VROOT(PSEUDO(S(PP*	in	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Schlafe	NN	*)	schlaf	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	wacht	VVFIN	*	wachen	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Im	APPRART	(CO(S(PP*	in	sg	neut	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Wachen	NN	*)	wache	sg	neut	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	schläft	VVFIN	*	schlafen	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	ihr	PPOSAT	(NP*	ihr	sg	masc	daja	-	-	-	-	(51|(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	Geist	NN	*	geist	sg	masc	daja	-	-	-	-	51)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	:	$.	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	bald	ADV	(NP*	bald	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	weniger	PIS	*	weniger	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	Als	APPR	(PP*	als	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	Tier	NN	*))))	tier	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	bald	ADV	(NP*	bald	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	mehr	PIS	*	mehr	*	*	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	als	KOKOM	(NP*	als	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	Engel	NN	*))))	engel	sg	*	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	.	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Armes	ADJA	(VROOT(PSEUDO(NP*	armes	sg	neut	nathan	-	-	-	-	(2
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Kind	NN	*)	kind	sg	neut	nathan	-	-	-	-	2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	!	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	sind	VAFIN	*	sein	pl	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	wir	PPER	*	wir	pl	*	nathan	-	-	-	-	(52
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Menschen	NN	*)	mensch	pl	masc	nathan	-	-	-	-	52)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	!	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	daja	-	-	-	-	(0
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	daja	-	-	-	-	0)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Diesen	PDAT	*	dieser	pl	*	daja	-	-	-	-	(53
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Morgen	NN	*	morgen	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	lag	VVFIN	*	liegen	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Sie	PPER	*	sie	sg	fem	daja	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	lange	ADV	*	lange	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	mit	APPR	*	mit	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	verschloßnem	ADJA	*	verschloßn	sg	masc	daja	-	-	-	-	(54
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Aug	NN	*	aug	sg	masc	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	'	$(	*	--	-	-	daja	-	-	-	-	54)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	und	KON	*	und	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	war	VAFIN	*	sein	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	Wie	NN	*	wie	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	tot	ADJD	*	tot	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	.	$.	*	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Schnell	ADJD	(VROOT(PSEUDO(CS(S*	schnell	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	fuhr	VVFIN	*	fahren	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	sie	PPER	*	sie	sg	fem	daja	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	auf	PTKVZ	*)	auf	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	und	KON	*	und	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	rief	VVFIN	(S*	rufen	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	:	$.	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	»	PPER	(NP*	»	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	Horch	NE	*	horch	-	-	daja	(PER*)	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	!	$.	*)))))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	horch	PTKVZ	*	horch	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	!	$.	*	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Da	ADV	(VROOT(PSEUDO(S*	da	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	kommen	VVFIN	*	kommen	pl	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	die	ART	(NP*	der	pl	neut	daja	-	-	-	-	(55
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Kamele	NN	*	kamele	pl	neut	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	meines	PPOSAT	(NP*	mein	sg	masc	daja	-	-	-	-	(1|(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Vaters	NN	*)))	vater	sg	masc	daja	-	-	-	-	55)|1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	!	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Horch	NE	(VROOT(PSEUDO(MPN*	horch	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	!	$.	*)))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	seine	PPOSAT	*	sein	pl	masc	daja	-	-	-	-	(56|(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	sanfte	ADJA	*	sanft	pl	masc	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Stimme	NN	*	stimme	pl	masc	daja	-	-	-	-	56)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	selbst	ADV	*	selbst	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	!	$.	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	«	XY	*	«	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Indem	KOUS	(S*	indem	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Brach	NE	*	brach	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	sich	PRF	*	sich	sg	-	daja	-	-	-	-	(54)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	ihr	PPOSAT	(NP*	ihr	sg	masc	daja	-	-	-	-	(54|(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Auge	NN	*	auge	sg	masc	daja	-	-	-	-	54)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	wieder	ADV	*	wieder	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	:	$.	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	und	KON	(CNP*	und	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	ihr	PPOSAT	(NP*	ihr	sg	fem	daja	-	-	-	-	(57|(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	Haupt	NN	*)	haupt	sg	neut	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	,	$,	*	--	-	-	daja	-	-	-	-	57)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	Dem	NN	(NP*	der	sg	masc	daja	-	-	-	-	(57)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	seines	PPOSAT	(NP*	sein	sg	neut	daja	-	-	-	-	(58|(57)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	Armes	NN	*	arm	sg	neut	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	Stütze	NN	*))))	stütze	sg	fem	daja	-	-	-	-	58)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	sich	PRF	*	sich	sg	-	daja	-	-	-	-	(58)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	entzog	VVFIN	*)	entziehen	sg	-	daja	-	-	-	-	53)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	Stürzt	NN	(NP*	stürzt	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	auf	APPR	(PP*	auf	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	das	ART	*	der	sg	neut	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	Küssen	NN	*))	küssen	sg	neut	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	22	.	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	*	–	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Ich	PPER	*	ich	sg	*	daja	-	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	zur	APPRART	*	zu	sg	fem	daja	-	-	-	-	(59
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Pfort	NN	*	pfort	sg	fem	daja	-	-	-	-	59)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	'	$(	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	hinaus	APZR	*	hinaus	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	!	$.	*	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	sieh	VVIMP	*	sieh	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	:	$.	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	da	ADV	(S*	da	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	kommt	VVFIN	*	kommen	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Ihr	PPER	*	ihr	sg	neut	daja	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	wahrlich	ADV	*))	wahrlich	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	!	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	kommt	VVFIN	(VROOT(PSEUDO(S*	kommen	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Ihr	PPER	*	ihr	sg	neut	daja	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	wahrlich	ADV	*)	wahrlich	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	!	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	*	–	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Was	PWS	*	was	sg	neut	daja	-	-	-	-	(53
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Wunder	NN	*	wunder	sg	neut	daja	-	-	-	-	53)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	!	$.	*	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	ihre	PPOSAT	*	ihr	sg	fem	daja	-	-	-	-	(60|(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	ganze	ADJA	*	ganz	sg	fem	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Seele	NN	*	seele	sg	fem	daja	-	-	-	-	60)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	war	VAFIN	*	sein	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Die	ART	*	der	sg	fem	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Zeit	NN	*	zeit	sg	fem	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	her	ADV	*	her	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	nur	ADV	*	nur	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	bei	APPR	*	bei	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	Euch	PPER	*	euch	sg	neut	daja	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	–	$(	*	–	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	und	KON	*	und	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	ihm	PPER	*	ihm	sg	masc	daja	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	.	$.	*	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*))	–	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Bei	APPR	(VROOT(PSEUDO(PP*	bei	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	ihm	PPER	*)	ihm	sg	masc	nathan	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	?	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Bei	APPR	*	bei	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	welchem	PWAT	*	welcher	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Ihm	PPER	*	ihm	sg	neut	nathan	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	?	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	daja	-	-	-	-	(0
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	daja	-	-	-	-	0)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Bei	APPR	(VROOT(PSEUDO(PP*	bei	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	ihm	PPER	(CNP*	ihm	sg	masc	daja	-	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	der	ART	(NP*	der	sg	masc	daja	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	aus	APPR	(PP*	aus	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	dem	ART	*	der	sg	masc	daja	-	-	-	-	(62
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Feuer	NN	*))))	feuer	sg	masc	daja	-	-	-	-	61)|62)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Sie	PPER	(S*	sie	sg	fem	daja	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	rettete	VVFIN	*)	retten	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	.	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Wer	PWS	*	wer	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	war	VAFIN	*	sein	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	das	PDS	*	der	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	?	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	wer	PWS	*	wer	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	?	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Wo	PWAV	*	wo	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	ist	VAFIN	*	sein	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	er	PPER	*	er	sg	masc	nathan	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	?	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Wer	PWS	(VROOT(PSEUDO(S*	wer	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	rettete	VVFIN	*	retten	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	mir	PPER	*	sich	sg	*	nathan	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	meine	PPOSAT	(NP*	mein	sg	fem	nathan	-	-	-	-	(2|(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Recha	NN	*))	recha	sg	fem	nathan	-	-	-	-	2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	?	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	wer	PWS	*	wer	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	?	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	daja	-	-	-	-	(0
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	daja	-	-	-	-	0)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Ein	ART	(VROOT(PSEUDO(NP*	ein	sg	masc	daja	-	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	junger	ADJA	*	jung	sg	masc	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Tempelherr	NN	*	tempelherr	sg	masc	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	den	ART	(NP*	der	sg	masc	daja	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	wenig	PIAT	(S(NP*	wenig	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Tage	NN	*)	tag	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	Zuvor	NN	*	zuvor	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	man	PIS	(S(AVP(S(NP*	man	sg	*	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	hier	ADV	*)	hier	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	gefangen	ADJD	(VP*	gefangen	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	eingebracht	VVPP	*))	einbringen	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	Und	KON	*)	und	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	Saladin	NE	*	saladin	sg	fem	daja	(PER*)	-	-	-	(7)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	begnadigt	VVPP	*	begnadigen	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	hatte	VAFIN	*))))))	haben	sg	-	daja	-	-	-	-	61)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Wie	PWAV	(VROOT(PSEUDO*	wie	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	?	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Ein	ART	(VROOT(PSEUDO(S(NP*	ein	sg	masc	nathan	-	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Tempelherr	NN	(CNP*	tempelherr	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	dem	ART	(NP*	der	sg	masc	nathan	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Sultan	NN	*	sultan	sg	masc	nathan	-	-	-	-	(7
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Saladin	NE	*))	saladin	sg	neut	nathan	(PER*)	-	-	-	7)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Das	ART	(NP*	der	sg	neut	nathan	-	-	-	-	(63
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Leben	NN	*))	leben	-	-	nathan	-	-	-	-	63)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	ließ	VVFIN	*	lassen	sg	-	nathan	-	-	-	-	61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	War	NN	(VP(NP*	sein	*	*	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	Recha	NE	*)	recha	sg	*	nathan	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	nicht	PTKNEG	*	nicht	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	zu	PTKZU	(VZ*	zu	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	retten	VVINF	*)))	retten	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	?	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Gott	NN	(VROOT(PSEUDO*	gott	-	-	nathan	-	-	-	-	(24)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	!	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	daja	-	-	-	-	(0
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	daja	-	-	-	-	0)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Ohn	XY	*	ohn	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	'	$(	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	ihn	PPER	*	ihn	sg	masc	daja	-	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	,	$,	*	--	-	-	daja	-	-	-	-	61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Der	PRELS	*	der	sg	masc	daja	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	seinen	PPOSAT	*	sein	sg	masc	daja	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	unvermuteten	ADJA	*	unvermutet	sg	masc	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Gewinst	NN	*	gewinst	sg	masc	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	Frisch	ADJD	*	frisch	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	wieder	ADV	*	wieder	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	wagte	VVFIN	*	wagen	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	war	VAFIN	*	sein	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	es	PPER	*	es	sg	neut	daja	-	-	-	-	(64)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	aus	APPR	*	aus	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	mit	APPR	*	mit	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	ihr	PPER	*	ihr	sg	fem	daja	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	.	$.	*	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Wo	PWAV	(VROOT(PSEUDO(S*	wo	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	ist	VAFIN	*	sein	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	er	PPER	(NP*	er	sg	masc	nathan	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Daja	NE	*)	daja	-	-	nathan	(PER*)	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	dieser	PDAT	(NP*	dieser	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	edle	ADJA	*	edel	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	Mann	NN	*))	mann	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	?	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Wo	PWAV	*	wo	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	ist	VAFIN	*	sein	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	er	PPER	*	er	sg	masc	nathan	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	?	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Führe	VVFIN	(VROOT(PSEUDO(S*	führe	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	mich	PPER	*	mich	sg	*	nathan	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	zu	APPR	(PP*	zu	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	seinen	PPOSAT	*	sein	pl	masc	nathan	-	-	-	-	(65|(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Füßen	NN	*))	fuß	pl	masc	nathan	-	-	-	-	65)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	.	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Ihr	PPER	(VROOT(PSEUDO(S*	ihr	-	-	nathan	-	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	gabt	VVFIN	*	gebten	pl	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	ihm	PPER	*	ihm	sg	masc	nathan	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	doch	ADV	*	doch	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	vors	ADJD	(AP*	vor	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	erste	PIS	(NP*	erster	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	was	PRELS	(S*	was	sg	neut	nathan	-	-	-	-	(66
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	an	APPR	(VP(PP*	an	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	Schätzen	NN	*)	schatz	pl	masc	nathan	-	-	-	-	66)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	Ich	PPER	*	ich	sg	*	nathan	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	euch	PPER	*	euch	pl	*	nathan	-	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	gelassen	VVPP	*)	lassen	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	hatte	VAFIN	*))))	haben	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	?	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	gabt	VVFIN	(VROOT(PSEUDO(S*	gaben	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	ihm	PPER	*	ihm	sg	masc	nathan	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	alles	PIS	*)	alle	sg	neut	nathan	-	-	-	-	(66)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	?	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Verspracht	VVPP	(VROOT(PSEUDO(S*	verspracht	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	ihm	PPER	*	ihm	sg	masc	nathan	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	mehr	ADV	*)	mehr	*	*	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	?	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	weit	ADJD	(VROOT(PSEUDO*	weit	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	mehr	ADV	(S*)	mehr	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	?	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	daja	-	-	-	-	(0
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	daja	-	-	-	-	0)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Wie	PWAV	*	wie	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	konnten	VMFIN	*	können	pl	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	wir	PPER	*	wir	pl	*	daja	-	-	-	-	(67)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	?	$.	*	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Nicht	PTKNEG	*	nicht	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	?	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	nicht	PTKNEG	*	nicht	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	?	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	daja	-	-	-	-	(0
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	daja	-	-	-	-	0)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Er	PPER	(VROOT(PSEUDO(CS(S*	er	sg	masc	daja	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	kam	VVFIN	*)	kommen	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	und	KON	*	und	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	niemand	PIS	(S*	niemand	sg	masc	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	weiß	VVFIN	*	weiß	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	woher	PTKVZ	*))	woher	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	.	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Er	PPER	(VROOT(PSEUDO(CS(S*	er	sg	masc	daja	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	ging	VVFIN	*)	gehen	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	und	KON	*	und	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	niemand	PIS	(S*	niemand	sg	masc	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	weiß	VVFIN	*	weiß	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	wohin	PTKVZ	*))	wohin	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	.	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	*	–	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Ohn	XY	*	ohn	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	'	$(	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	alle	PIAT	*	aller	pl	*	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Des	ART	*	der	sg	neut	daja	-	-	-	-	(19
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Hauses	NN	*	haus	sg	neut	daja	-	-	-	-	19)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Kundschaft	NN	*	kundschaft	sg	fem	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	nur	ADV	*	nur	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	von	APPR	*	von	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	seinem	PPOSAT	*	sein	sg	neut	daja	-	-	-	-	(68|(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	Ohr	NN	*	ohr	sg	neut	daja	-	-	-	-	68)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	Geleitet	VVFIN	*	leiten	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	drang	VVFIN	*	dringen	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	mit	APPR	*	mit	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	vorgespreiztem	ADJA	*	vorgespreizt	sg	neut	daja	-	-	-	-	(69
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	Mantel	NN	*	mantel	sg	neut	daja	-	-	-	-	69)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	Er	PPER	*	er	sg	masc	daja	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	kühn	ADJD	*	kühn	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	22	durch	APPR	*	durch	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	23	Flamm	NN	*	flamm	sg	neut	daja	-	-	-	-	(62)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	24	'	$(	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	25	und	KON	*	und	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	26	Rauch	NN	*	rauch	sg	masc	daja	-	-	-	-	(70)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	27	der	ART	*	der	sg	fem	daja	-	-	-	-	(71
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	28	Stimme	NN	*	stimme	sg	fem	daja	-	-	-	-	71)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	29	nach	PTKVZ	*	nach	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	30	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	31	Die	NN	*	der	sg	fem	daja	-	-	-	-	(71)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	32	uns	PPER	*	uns	pl	*	daja	-	-	-	-	(67)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	33	um	APPR	*	um	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	34	Hülfe	NN	*	hülfe	sg	fem	daja	-	-	-	-	(72)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	35	rief	VVFIN	*	rufen	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	36	.	$.	*	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Schon	ADV	(VROOT(PSEUDO(S*	schon	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	hielten	VVFIN	*	halten	pl	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	wir	PPER	*	wir	pl	*	daja	-	-	-	-	(67)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Ihn	PPER	*	ihn	sg	masc	daja	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	für	APPR	(PP*	für	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	verloren	ADJD	(AP*	verloren	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	als	KOKOM	(S*	als	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	aus	APPR	(PP*	aus	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	Rauch	NN	(CNP*	rauch	sg	neut	daja	-	-	-	-	(70)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	und	KON	*	und	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	Flamme	NN	*))	flamm	sg	fem	daja	-	-	-	-	(62)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	Mit	APPR	(PP*	mit	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	eins	CARD	*)	einer	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	er	PPER	*	er	sg	masc	daja	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	vor	APPR	(PP*	vor	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	uns	PPER	*)	uns	pl	*	daja	-	-	-	-	(67)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	stand	VVFIN	*)))	stehen	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	im	APPRART	(PP*	in	sg	neut	daja	-	-	-	-	(73
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	starken	ADJA	*	stark	sg	neut	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	Arm	NN	*	arm	sg	neut	daja	-	-	-	-	73)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	22	Empor	NE	*)	empor	sg	neut	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	23	sie	PPER	*	sie	sg	fem	daja	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	24	tragend	ADJD	*)	tragend	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	25	.	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Kalt	NN	(VROOT(PSEUDO(S*	kalt	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	und	KON	*	und	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	ungerührt	VVFIN	(S*	ungerührt	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Vom	APPRART	(PP*	von	sg	neut	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Jauchzen	NN	*	jauchzen	sg	neut	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	unsers	PPOSAT	(NP*	unsers	-	-	daja	-	-	-	-	(74|(67)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Danks	NN	*))	dank	-	-	daja	-	-	-	-	74)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	setzt	VVFIN	(S*	setzen	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	seine	PPOSAT	(NP*	sein	sg	fem	daja	-	-	-	-	(2|(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	Beute	NN	*)	beute	sg	fem	daja	-	-	-	-	2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	Er	PPER	*	er	sg	masc	daja	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	nieder	PTKVZ	*	nieder	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	drängt	VVFIN	(CS(S*	drängen	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	sich	PRF	*	sich	sg	-	daja	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	unters	APPRART	(PP*	unter	sg	*	daja	-	-	-	-	(75
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	Volk	NN	*))	volk	sg	neut	daja	-	-	-	-	75)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	und	KON	*	und	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	ist	VAFIN	(S*	sein	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	–	PPOSAT	(NP*	–	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	Verschwunden	NN	*))))))	verschwunde	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	22	!	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Nicht	PTKNEG	(VROOT(PSEUDO(S(PP*	nicht	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	auf	APPR	*	auf	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	immer	ADV	*)	immer	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	will	VMFIN	*	wollen	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	ich	PPER	(VP*	ich	sg	*	nathan	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	hoffen	VVINF	*))	hoffen	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	.	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	daja	-	-	-	-	(0
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	daja	-	-	-	-	0)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Nachher	APPR	(VROOT(PSEUDO(S(PP*	nachher	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	die	ART	*	der	pl	*	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	ersten	ADJA	*	erster	pl	*	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Tage	NN	*)	tag	pl	masc	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	sahen	VVFIN	*	sehen	pl	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	wir	PPER	*	wir	pl	*	daja	-	-	-	-	(67)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Ihn	PPER	(S*	ihn	sg	masc	daja	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	untern	VVFIN	*	untern	-	-	daja	-	-	-	-	(76
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	Palmen	NN	*	palme	-	-	daja	-	-	-	-	76)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	auf	PTKVZ	*)	auf	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	und	KON	*	und	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	nieder	PTKVZ	*	nieder	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	wandeln	VVFIN	*	wandeln	pl	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	Die	NN	(VP*	der	pl	masc	daja	-	-	-	-	(76)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	dort	ADV	*	dort	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	des	ART	(NP*	der	sg	masc	daja	-	-	-	-	(77|(78
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	Auferstandnen	NN	*	auferstandn	sg	masc	daja	-	-	-	-	78)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	Grab	NE	*)	grab	sg	masc	daja	-	-	-	-	77)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	umschatten	VVINF	*))	umschatten	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	.	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Ich	PPER	*	ich	sg	*	daja	-	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	nahte	VVFIN	*	nahen	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	mich	PRF	*	mich	sg	-	daja	-	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	ihm	PPER	*	ihm	sg	masc	daja	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	mit	APPR	*	mit	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Entzücken	NN	*	entzück	pl	neut	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	dankte	VVFIN	*	danken	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	Erhob	VVFIN	*	erhob	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	entbot	VVFIN	*	entbot	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	beschwor	VVFIN	*	beschwören	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	–	$(	*	–	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	nur	ADV	*	nur	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	einmal	ADV	*	einmal	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	noch	ADV	*	noch	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	Die	ART	*	der	sg	fem	daja	-	-	-	-	(2
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	fromme	ADJA	*	fromm	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	Kreatur	NN	*	kreatur	sg	fem	daja	-	-	-	-	2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	22	zu	PTKZU	*	zu	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	23	sehen	VVINF	*	sehen	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	24	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	25	die	ART	*	der	pl	*	daja	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	26	Nicht	NN	*	nicht	sg	neut	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	27	ruhen	VVINF	*	ruhen	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	28	könne	VMFIN	*	können	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	29	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	30	bis	KOUS	*	bis	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	31	sie	PPER	*	sie	sg	fem	daja	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	32	ihren	PPOSAT	*	ihr	sg	masc	daja	-	-	-	-	(79|(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	33	Dank	NN	*	dank	sg	masc	daja	-	-	-	-	79)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	34	Zu	APPR	*	zu	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	35	seinen	PPOSAT	*	sein	pl	neut	daja	-	-	-	-	(65|(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	36	Füßen	NN	*	fuß	pl	neut	daja	-	-	-	-	65)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	37	ausgeweinet	VVPP	*	ausgeweinet	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	38	.	$.	*	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Nun	ADV	(VROOT(PSEUDO(S*)	nun	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	?	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	daja	-	-	-	-	(0
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	daja	-	-	-	-	0)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Umsonst	ADV	(VROOT(PSEUDO(S*)	umsonst	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	!	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Er	PPER	(VROOT(PSEUDO(CS(S*	er	sg	masc	daja	-	-	-	-	(80|(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	war	VAFIN	*	sein	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	zu	APPR	(PP*	zu	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	unsrer	ADJA	*	unsrer	-	-	daja	-	-	-	-	(67)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Bitte	NN	*)	bitte	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	taub	PTKVZ	*)	taub	-	-	daja	-	-	-	-	80)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	;	$.	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Und	KON	(S*	und	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	goß	ADV	(VP(AVP*	goß	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	so	ADV	*)	so	-	-	daja	-	-	-	-	(81
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	bittern	VVINF	*)))	bittern	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	Spott	NN	(NP*	spott	sg	-	daja	-	-	-	-	81)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	auf	APPR	(PP*	auf	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	mich	PPER	*))	mich	sg	*	daja	-	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	besonders	ADV	*	besonders	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	.	$.	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	.	$.	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	.	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Bis	APPR	(VROOT(PSEUDO(VP(PP*	bis	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	dadurch	PROAV	*)	dadurch	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	abgeschreckt	VVPP	*)	abschrecken	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	.	$.	(S(ISU*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	.	$.	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	.	$.	*))))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	daja	-	-	-	-	(0
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	daja	-	-	-	-	0)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Nichts	PIS	(VROOT(PSEUDO(CO(AVP*	nichts	*	neut	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	weniger	ADV	*))	weniger	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	!	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	daja	-	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	trat	VVFIN	*	treten	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	ihn	PPER	*	ihn	sg	masc	daja	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	jeden	PIAT	(NP*	jeder	sg	masc	daja	-	-	-	-	(82
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Tag	NN	*)	tag	sg	masc	daja	-	-	-	-	82)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	von	APPR	(PP*	von	-	-	daja	-	-	-	-	(83
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	neuem	ADJA	*)	neu	sg	*	daja	-	-	-	-	83)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	an	PTKVZ	*	an	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	;	$.	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	Ließ	NN	*	ließ	sg	masc	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	jeden	PIAT	(NP*	jeder	sg	masc	daja	-	-	-	-	(82
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	Tag	NN	*	tag	sg	masc	daja	-	-	-	-	82)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	von	APPR	(PP*	von	-	-	daja	-	-	-	-	(83
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	neuem	ADJA	*))	neu	sg	*	daja	-	-	-	-	83)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	mich	PPER	(VP*	mich	sg	*	daja	-	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	verhöhnen	VVINF	*))	verhöhnen	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	.	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	litt	VVFIN	*	leiden	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	ich	PPER	*	ich	sg	*	daja	-	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	nicht	PTKNEG	*	nicht	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	von	APPR	(PP*	von	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	ihm	PPER	*))	ihm	sg	masc	daja	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	!	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Was	PWS	*	was	sg	neut	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	hätt	VAFIN	*	hätt	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	'	$(	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	ich	PPER	*	ich	sg	*	daja	-	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	nicht	PTKNEG	*	nicht	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Noch	ADV	*	noch	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	gern	ADV	*	gern	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	ertragen	VVINF	*	ertragen	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	!	$.	*	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Aber	KON	(S*	aber	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	lange	ADV	(AVP*	lange	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	schon	ADV	*)	schon	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Kommt	VVFIN	*	kommen	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	er	PPER	*	er	sg	masc	daja	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	nicht	PTKNEG	(AVP*	nicht	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	mehr	ADV	*)	mehr	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	die	ART	(CVP(VP(NP*	der	pl	fem	daja	-	-	-	-	(76
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	Palmen	NN	*)	palme	pl	fem	daja	-	-	-	-	76)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	zu	PTKZU	(VZ*	zu	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	besuchen	VVINF	*))	besuchen	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	Die	NN	(VP(NP*	der	sg	fem	daja	-	-	-	-	(76)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	unsers	PPOSAT	(NP*	unser	sg	masc	daja	-	-	-	-	(77|(78|(75)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	Auferstandnen	NN	*))	auferstandn	sg	masc	daja	-	-	-	-	78)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	Grab	NN	*	grab	sg	masc	daja	-	-	-	-	77)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	umschatten	VVINF	*)))	umschatten	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	;	$.	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	Und	KON	(S*	und	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	niemand	PIS	*	niemand	sg	masc	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	22	weiß	VVFIN	*	weiß	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	23	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	24	wo	PWAV	(S*	wo	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	25	er	PPER	*	er	sg	masc	daja	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	26	geblieben	VVPP	*	bleiben	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	27	ist	VAFIN	*))	sein	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	28	.	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Ihr	PPER	(S*	ihr	pl	*	daja	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	staunt	VVFIN	*)	staunen	pl	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	?	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Ihr	PPER	(VROOT(PSEUDO(S*	ihr	pl	*	daja	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	sinnt	VVFIN	*)	sinnen	pl	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	?	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	nathan	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	überdenke	VVFIN	*	überdenken	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	mir	PPER	*	sich	sg	-	nathan	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Was	PWS	(S*	was	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	das	PDS	*	der	sg	neut	nathan	-	-	-	-	(80)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	auf	APPR	(VP(PP*	auf	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	einen	ART	*	ein	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	Geist	NN	*	geist	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	wie	PWAV	(S*	wie	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	Rechas	NE	*	rechas	sg	*	nathan	(LOC*)	-	-	-	(311)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	wohl	ADV	*	wohl	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	Für	APPR	(PP*	für	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	Eindruck	NN	*)))	eindruck	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	machen	VVINF	*)	machen	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	muß	VMFIN	*))	müssen	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	.	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Sich	PRF	(VROOT(PSEUDO(S(NP*	sich	pl	-	nathan	-	-	-	-	(84)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	so	ADV	*)	so	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	verschmäht	VVFIN	*	verschmähen	pl	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Von	APPR	(VP*	von	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	dem	PDS	*	der	sg	masc	nathan	-	-	-	-	(85)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	zu	PTKZU	(VZ*	zu	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	finden	VVINF	*)	finden	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	den	PRELS	(S*	der	sg	masc	nathan	-	-	-	-	(85)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	man	PIS	*	man	sg	*	nathan	-	-	-	-	(84)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	hochzuschätzen	VVIZU	(VP*	hochzuhätzen	pl	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	Sich	PRF	(NP*	sich	pl	-	nathan	-	-	-	-	(84)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	so	ADV	*)	so	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	gezwungen	VVPP	*)	zwingen	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	fühlt	VVFIN	*	fühlen	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	;	$.	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	so	ADV	(VP(CVP(VP*	so	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	weggestoßen	VVPP	*)	wegstoßen	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	Und	KON	(VP*	und	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	doch	ADV	*	doch	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	so	ADV	*	so	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	22	angezogen	VVPP	*))	anziehen	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	23	werden	VAINF	*))))	werden	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	24	;	$.	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	25	–	XY	*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	26	Traun	NE	(NP*	traun	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	27	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	28	Da	ADV	(S*	da	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	29	müssen	VMFIN	*	müssen	pl	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	30	Herz	NN	(CNP*	herz	pl	-	nathan	-	-	-	-	(86)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	31	und	KON	*	und	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	32	Kopf	NN	*)	kopf	sg	masc	nathan	-	-	-	-	(87)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	33	sich	PRF	(VP*	sich	pl	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	34	lange	ADV	*	lange	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	35	zanken	VVINF	*	zanken	pl	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	36	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	37	Ob	KOUS	(S*	ob	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	38	Menschenhaß	NN	*	menschenhaß	sg	neut	nathan	-	-	-	-	(88)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	39	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	40	ob	KOUS	(S*	ob	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	41	Schwermut	NN	*	schwermut	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	42	siegen	VVINF	*	siegen	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	43	soll	VMFIN	*)))))	sollen	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	44	.	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Oft	ADV	*	oft	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	siegt	VVFIN	*	siegen	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	auch	ADV	*	auch	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	keines	PIS	*	keiner	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	;	$.	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	und	KON	*	und	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	die	ART	*	der	sg	fem	nathan	-	-	-	-	(309
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Phantasie	NN	*	phantasie	sg	fem	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	,	$,	*	--	-	-	nathan	-	-	-	-	309)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	Die	NN	*	der	sg	fem	nathan	-	-	-	-	(90)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	in	APPR	*	in	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	den	ART	*	der	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	Streit	NN	*	streit	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	sich	PRF	*	sich	sg	-	nathan	-	-	-	-	(90)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	mengt	VVFIN	*	mengen	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	macht	VVFIN	*	machen	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	Schwärmer	NE	*	schwärmer	sg	masc	nathan	-	-	-	-	(91
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	,	$,	*	--	-	-	nathan	-	-	-	-	91)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	Bei	APPR	*	bei	-	-	nathan	-	-	-	-	(92
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	welchen	PWAT	*	welcher	sg	masc	nathan	-	-	-	-	(91)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	bald	ADV	*	bald	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	22	der	ART	*	der	sg	masc	nathan	-	-	-	-	(87
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	23	Kopf	NN	*	kopf	sg	masc	nathan	-	-	-	-	87)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	24	das	ART	*	der	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	25	Herz	NN	*	herz	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	26	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	27	und	KON	*	und	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	28	bald	ADV	*	bald	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	29	Das	ART	*	der	sg	neut	nathan	-	-	-	-	(86
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	30	Herz	NN	*	herz	sg	neut	nathan	-	-	-	-	86)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	31	den	ART	*	der	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	32	Kopf	NN	*	kopf	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	33	muß	VMFIN	*	müssen	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	34	spielen	VVINF	*	spielen	pl	-	nathan	-	-	-	-	92)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	35	Das	ART	*	der	sg	neut	nathan	-	-	-	-	(89
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	36	letztere	ADJA	*	letzter	sg	fem	nathan	-	-	-	-	89)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	37	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	38	verkenn	FM	*	verkenn	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	39	'	$(	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	40	ich	PPER	*	ich	sg	*	nathan	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	41	Recha	NE	*	recha	sg	-	nathan	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	42	nicht	PTKNEG	*	nicht	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	43	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	44	Ist	VAFIN	*	sein	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	45	Rechas	NE	*	rechas	sg	*	nathan	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	46	Fall	NN	*	fall	sg	*	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	47	:	$.	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	48	sie	PPER	*	sie	*	*	nathan	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	49	schwärmt	VVFIN	*	schwärmen	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	50	.	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	daja	-	-	-	-	(0
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	daja	-	-	-	-	0)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Allein	ADV	(VROOT(PSEUDO(CS(AP(AVP*	allein	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	so	ADV	*)	so	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	fromm	ADJD	*)	fromm	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	So	ADV	(AP*	so	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	liebenswürdig	ADJD	*))	liebenswürdig	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	!	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Ist	VAFIN	(VROOT(PSEUDO(S*	sein	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	doch	ADV	*	doch	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	auch	ADV	(VP*	auch	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	geschwärmt	VVPP	*))	schwärmen	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	!	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	daja	-	-	-	-	(0
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	daja	-	-	-	-	0)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Vornehmlich	ADJD	(VROOT(PSEUDO(S*	vornehmlich	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Eine	ART	(AVP(NP*	ein	sg	fem	daja	-	-	-	-	(93
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	–	ADJA	*	–	sg	fem	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Grille	NN	*)	grille	sg	fem	daja	-	-	-	-	93)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	wenn	KOUS	*)	wenn	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Ihr	PPER	*	ihr	pl	*	daja	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	wollt	VMFIN	*	wollen	pl	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	Ist	VAFIN	(S*	sein	pl	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	ihr	PPER	*	ihr	pl	*	daja	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	sehr	ADV	(AP*	sehr	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	wert	ADJD	*)))	wert	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	.	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Es	PPER	(VROOT(PSEUDO(S*	es	sg	neut	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	sei	VAFIN	*	sein	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	ihr	PPOSAT	(NP*	ihr	sg	masc	daja	-	-	-	-	(61|(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Tempelherr	NN	*)	tempelherr	sg	masc	daja	-	-	-	-	61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Kein	PIAT	(NP*	kein	sg	masc	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Irdischer	ADJA	(CAP*	irdischer	sg	masc	daja	(MISC*)	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	und	KON	*	und	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	keines	ADJA	*)	keiner	sg	masc	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	Irdischen	NN	*	irdischen	sg	masc	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	;	$.	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	Der	ART	(NP*	der	sg	masc	daja	-	-	-	-	(94|(95
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	Engel	NN	*	engel	sg	masc	daja	-	-	-	-	95)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	einer	PIS	*	ein	sg	fem	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	deren	PRELAT	(S(NP*	der	sg	fem	daja	-	-	-	-	(95)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	Schutze	NN	*)	schutzen	sg	fem	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	sich	PRF	*	sich	sg	-	daja	-	-	-	-	(60)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	Ihr	PPOSAT	(NP*	ihr	sg	neut	daja	-	-	-	-	(60|(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	kleines	ADJA	*	klein	sg	neut	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	Herz	NN	*	herz	sg	neut	daja	-	-	-	-	60)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	von	APPR	(PP*	von	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	22	Kindheit	NN	*))	kindheit	sg	fem	daja	-	-	-	-	(96)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	23	auf	PTKVZ	*	auf	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	24	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	25	so	ADV	(S*	so	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	26	gern	ADV	*	gern	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	27	Vertrauet	NN	*	vertrauet	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	28	glaubte	VVFIN	*))))	glauben	sg	-	daja	-	-	-	-	94)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	29	In	APPR	(PP*	in	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	30	die	ART	*	der	pl	masc	daja	-	-	-	-	(94)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	31	er	PPER	(S*	er	sg	masc	daja	-	-	-	-	(94)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	32	sonst	ADV	*	sonst	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	33	verhüllt	VVFIN	*)	verhüllen	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	34	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	35	auch	ADV	(AP(PP*	auch	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	36	noch	ADV	*	noch	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	37	im	APPRART	*	in	sg	neut	daja	-	-	-	-	(62
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	38	Feuer	NN	*)	feuer	sg	neut	daja	-	-	-	-	62)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	39	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	40	Um	KOUI	(VP*	um	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	41	sie	PPER	*	sie	sg	fem	daja	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	42	geschwebt	VVPP	*	schweben	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	43	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	44	mit	APPR	(PP*	mit	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	45	eins	CARD	*	einer	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	46	als	APPR	(PP*	als	-	-	daja	-	-	-	-	(97
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	47	Tempelherr	NN	*))))	tempelherr	sg	masc	daja	-	-	-	-	97)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	48	Hervorgetreten	NN	*))	hervorgetreten	pl	*	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	49	.	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO(S*	–	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Lächelt	VVFIN	*	lächelt	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	nicht	PTKNEG	*)	nicht	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	!	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Wer	PWS	(S*	wer	sg	masc	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	weiß	VVFIN	*)	weiß	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	?	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Laßt	VVIMP	*	lassen	pl	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	lächelnd	ADJD	*	lächelnd	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	wenigstens	ADV	*	wenigstens	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	ihr	PPER	*	ihr	sg	fem	daja	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	einen	ART	*	ein	sg	masc	daja	-	-	-	-	(93
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Wahn	NN	*	wahn	sg	masc	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	,	$,	*	--	-	-	daja	-	-	-	-	93)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	In	APPR	*	in	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	dem	PRELS	*	der	sg	neut	daja	-	-	-	-	(93)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	sich	PRF	*	sich	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	Jud	NE	*	jud	-	-	daja	-	-	-	-	(98)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	'	$(	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	und	KON	*	und	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	Christ	NE	*	christ	-	-	daja	-	-	-	-	(99)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	und	KON	*	und	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	Muselmann	NE	*	muselmann	pl	*	daja	-	-	-	-	(100)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	Vereinigen	NE	*	vereiniger	pl	*	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	;	$.	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	–	XY	*	–	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	so	ADV	*	so	-	-	daja	-	-	-	-	(93
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	einen	ART	*	ein	sg	masc	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	süßen	ADJA	*	süß	sg	masc	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	22	Wahn	NN	*	wahn	sg	masc	daja	-	-	-	-	93)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	23	!	$.	*	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Auch	ADV	(VROOT(PSEUDO(S*	auch	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	mir	PPER	(NP*	sich	sg	*	nathan	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	so	ADV	*)	so	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	süß	ADJD	*)	süß	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	!	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Geh	XY	*	geh	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	wackre	FM	*	wackren	-	-	nathan	-	-	-	-	(0
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Daja	FM	*	daja	-	-	nathan	(PER*)	-	-	-	0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	geh	XY	*	geh	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	;	$.	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	Sieh	NE	(S(NP*	sieh	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	was	PWS	(S*	was	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	sie	PPER	*	sie	sg	fem	nathan	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	macht	VVFIN	*))	machen	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	;	$.	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	ob	KOUS	*	ob	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	ich	PPER	*	ich	sg	*	nathan	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	sie	PPER	(VP*	sie	pl	masc	nathan	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	sprechen	VVINF	*)	sprechen	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	kann	VMFIN	*)	können	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	.	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Sodann	ADV	*	sodann	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	such	ADV	*	such	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	'	$(	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	ich	PPER	*	ich	sg	*	nathan	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	den	ART	*	der	sg	masc	nathan	-	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	wilden	ADJA	*	wilden	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	launigen	ADJA	*	launig	pl	-	nathan	-	-	-	-	61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	Schutzengel	NN	*	schutzengel	pl	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	auf	PTKVZ	*	auf	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	.	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Und	KON	*	und	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	wenn	KOUS	*	wenn	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	ihm	PPER	*	ihm	sg	masc	nathan	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	noch	ADV	*	noch	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	beliebt	ADJD	*	beliebt	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Hiernieden	NN	*	hiernieden	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	unter	APPR	*	unter	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	uns	PPER	*	uns	pl	*	nathan	-	-	-	-	(29)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	zu	PTKZU	*	zu	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	wallen	VVINF	*	wallen	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	;	$.	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	noch	ADV	*	noch	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	Beliebt	ADJD	*	belieben	pl	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	so	ADV	*	so	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	ungesittet	ADJD	*	ungesittet	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	Ritterschaft	NN	*	ritterschaft	-	-	nathan	-	-	-	-	(72)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	Zu	PTKZU	*	zu	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	treiben	VVINF	*	treiben	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	:	$.	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	find	VAFIN	*	find	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	22	'	$(	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	23	ich	PPER	*	ich	sg	*	nathan	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	24	ihn	PPER	*	ihn	sg	masc	nathan	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	25	gewiß	ADV	*	gewiß	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	26	;	$.	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	27	und	KON	*	und	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	28	bring	VVFIN	*	bring	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	29	'	$(	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	30	Ihn	PPER	*	ihn	sg	masc	nathan	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	31	her	PTKVZ	*	her	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	32	.	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	daja	-	-	-	-	(0
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	daja	-	-	-	-	0)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Ihr	PPER	(VROOT(PSEUDO(S*	ihr	pl	*	daja	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	unternehmet	VVFIN	*	unternehmet	pl	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	viel	PIS	*)	viel	*	*	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	.	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Macht	VVFIN	*	macht	pl	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	dann	ADV	*	dann	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Der	ART	*	der	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	süße	ADJA	*	süß	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Wahn	NN	*	wahn	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	der	ART	*	der	sg	masc	nathan	-	-	-	-	(101
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	süßern	ADJA	*	süßern	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Wahrheit	NN	*	wahrheit	sg	fem	nathan	-	-	-	-	101)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	Platz	NN	*	platz	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	:	$.	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	–	XY	*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	Denn	KON	*	denn	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	Daja	NE	*	daja	-	-	nathan	(PER*)	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	glaube	VVFIN	*	glauben	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	mir	PPER	*	sich	sg	*	nathan	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	;	$.	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	dem	ART	*	der	sg	neut	nathan	-	-	-	-	(52
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	Menschen	NN	*	mensch	sg	neut	nathan	-	-	-	-	52)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	ist	VAFIN	*	sein	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	Ein	ART	*	ein	sg	masc	nathan	-	-	-	-	(52
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	22	Mensch	NN	*	mensch	sg	masc	nathan	-	-	-	-	52)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	23	noch	ADV	*	noch	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	24	immer	ADV	*	immer	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	25	lieber	ADJD	*	lieber	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	26	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	27	als	KOKOM	*	als	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	28	ein	ART	*	ein	sg	neut	nathan	-	-	-	-	(102
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	29	Engel	NN	*	engel	sg	neut	nathan	-	-	-	-	102)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	30	–	$(	*	–	*	*	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	31	So	ADV	*	so	*	*	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	32	wirst	VAFIN	*	werden	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	33	du	PPER	*	du	sg	*	nathan	-	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	34	doch	ADV	*	doch	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	35	auf	APPR	*	auf	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	36	mich	PPER	*	mich	sg	*	nathan	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	37	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	38	auf	APPR	*	auf	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	39	mich	PPER	*	mich	sg	*	nathan	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	40	nicht	PTKNEG	*	nicht	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	41	zürnen	VVINF	*	zürnen	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	42	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	43	Die	ART	*	der	sg	fem	nathan	-	-	-	-	(2
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	44	Engelschwärmerin	NN	*	engelschwärmerin	sg	fem	nathan	-	-	-	-	2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	45	geheilt	VVPP	*	heilen	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	46	zu	PTKZU	*	zu	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	47	sehn	VAINF	*	sehn	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	48	?	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	daja	-	-	-	-	(0
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	daja	-	-	-	-	0)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Ihr	PPER	(VROOT(PSEUDO(CS(S*	ihr	pl	*	daja	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	seid	VAFIN	*	sein	pl	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	so	ADV	(AP*	so	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	gut	ADJD	*))	gut	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	und	KON	*	und	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	seid	VAFIN	(S*	sein	pl	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	zugleich	ADV	*	zugleich	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	so	ADV	(AP*	so	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	schlimm	ADJD	*)))	schlimm	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	!	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Ich	PPER	*	ich	sg	*	daja	-	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	geh	XY	*	gehen	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	!	$.	*	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	*	–	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Doch	KON	*	doch	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	hört	VVFIN	*	hören	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	!	$.	*	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	doch	ADV	(VROOT(PSEUDO(S*)	doch	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	seht	VVFIN	*	sehen	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	!	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Da	ADV	*	da	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	kommt	VVFIN	*	kommen	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	sie	PPER	(NP*	sie	sg	fem	daja	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	selbst	ADV	*)	selbst	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	.	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Recha	NE	(VROOT(PSEUDO(CNP*	recha	-	-	_stage	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	,	$,	*	--	-	-	_stage	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	und	KON	*	und	-	-	_stage	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	die	ART	(NP*	der	pl	fem	_stage	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Vorigen	NN	*))	vorige	pl	*	_stage	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	.	$.	*))	--	-	-	_stage	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	RECHA	NE	(VROOT(PSEUDO*	recha	-	-	recha	(LOC*)	-	-	-	(2
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	recha	-	-	-	-	2)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	So	ADV	(VROOT(PSEUDO*	so	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	seid	VAFIN	(S*	sein	pl	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Ihr	PPER	*	ihr	pl	*	recha	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	es	PPER	*	es	sg	neut	recha	-	-	-	-	(21)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	doch	ADV	*	doch	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	ganz	ADV	(CAVP*	ganz	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	und	KON	*	und	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	gar	ADV	*)	gar	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	,	$,	*	--	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	mein	PPOSAT	(NP*	mein	sg	masc	recha	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	Vater	NN	*))	vater	sg	masc	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	?	$.	*))	--	-	-	recha	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Ich	PPER	*	ich	sg	*	recha	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	glaubt	VVFIN	*	glauben	sg	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	'	$(	*	--	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	,	$,	*	--	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Ihr	PPER	*	ihr	pl	*	recha	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	hättet	VVFIN	*	hätten	pl	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Eure	PPOSAT	*	euer	-	-	recha	-	-	-	-	(56|(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Stimme	NN	*	stimme	sg	-	recha	-	-	-	-	56)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	nur	ADV	*	nur	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	Vorausgeschickt	NN	*	vorausgeschickt	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	.	$.	*	--	-	-	recha	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Wo	PWAV	(VROOT(PSEUDO(S*	wo	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	bleibt	VVFIN	*	bleiben	sg	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Ihr	PPER	*)	ihr	pl	*	recha	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	?	$.	*))	--	-	-	recha	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	für	APPR	(PP*	für	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Berge	NN	*)	berg	sg	fem	recha	-	-	-	-	(103)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	,	$,	*)	--	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Für	APPR	(S(PP*	für	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Wüsten	NN	*)	wüste	pl	*	recha	-	-	-	-	(104)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	,	$,	*	--	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	was	PWS	*	was	sg	neut	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	für	APPR	(PP*	für	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	Ströme	NN	*)	strom	sg	masc	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	trennen	VVFIN	*	trennen	pl	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	uns	PPER	*)	uns	pl	*	recha	-	-	-	-	(105)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	Denn	KON	(S*	denn	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	noch	ADV	*)	noch	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	?	$.	*))	--	-	-	recha	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Ihr	PPER	(VROOT(PSEUDO(S(AVP(S*	ihr	pl	*	recha	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	atmet	VVFIN	*	atmen	sg	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Wand	NN	*	wand	sg	-	recha	-	-	-	-	(106)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	an	APPR	(PP*	an	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Wand	NN	*	wand	sg	-	recha	-	-	-	-	(106)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	mit	APPR	(PP*	mit	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	ihr	PPER	*)))	ihr	sg	fem	recha	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	,	$,	*	--	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	Und	KON	*)	und	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	eilt	VVFIN	*	eilen	sg	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	nicht	PTKNEG	*	nicht	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	,	$,	*	--	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	Eure	PPOSAT	(VP(NP*	euer	sg	neut	recha	-	-	-	-	(2|(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	Recha	NN	*)	recha	sg	neut	recha	-	-	-	-	2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	zu	PTKZU	(VZ*	zu	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	umarmen	VVINF	*)))	umarmen	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	?	$.	*))	--	-	-	recha	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Die	ART	(VROOT(PSEUDO(NP*	der	sg	fem	recha	-	-	-	-	(2
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	arme	ADJA	*	arm	sg	fem	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Recha	NN	*	recha	sg	fem	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	,	$,	*	--	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	die	PRELS	(S*	der	sg	fem	recha	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	indes	ADV	*	indes	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	verbrannte	VVFIN	*))	verbrennen	sg	-	recha	-	-	-	-	2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	!	$.	*))	--	-	-	recha	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Fast	NN	(S*	fast	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	,	$,	*	--	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	fast	ADV	*	fast	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	verbrannte	VVFIN	*)	verbrennen	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	!	$.	*))	--	-	-	recha	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Fast	ADV	(VROOT(PSEUDO(AVP*	fast	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	nur	ADV	*)	nur	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	.	$.	*))	--	-	-	recha	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Schaudert	VVFIN	*	schaudert	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	nicht	PTKNEG	*	nicht	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	!	$.	*	--	-	-	recha	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Es	PPER	*	es	sg	neut	recha	-	-	-	-	(107)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	ist	VAFIN	*	sein	sg	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	ein	ART	*	ein	sg	masc	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	garst	ADJD	*	garst	sg	masc	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	'	$(	*	--	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	ger	ADJA	*	g	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Tod	NN	*	tod	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	,	$,	*	--	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	verbrennen	VVINF	*	verbrennen	-	-	recha	-	-	-	-	(107)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	.	$.	*	--	-	-	recha	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	O	ITJ	(VROOT(PSEUDO(S*)	O	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	!	$.	*))	--	-	-	recha	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Mein	PPOSAT	(VROOT(PSEUDO(NP*	mein	sg	neut	nathan	-	-	-	-	(2|(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Kind	NN	*)	kind	sg	neut	nathan	-	-	-	-	2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	!	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	mein	PPOSAT	(VROOT(PSEUDO(NP*	mein	sg	neut	nathan	-	-	-	-	(2|(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	liebes	ADJA	*	lieb	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Kind	NN	*)	kind	sg	neut	nathan	-	-	-	-	2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	!	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	RECHA	NE	(VROOT(PSEUDO*	recha	-	-	recha	(LOC*)	-	-	-	(2
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	recha	-	-	-	-	2)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Ihr	PPER	*	ihr	pl	*	recha	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	mußtet	VVFIN	*	mußten	sg	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	über	APPR	*	über	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Den	ART	*	der	sg	masc	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Euphrat	NE	*	euphrat	sg	masc	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	,	$,	*	--	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Tigris	NE	*	tigris	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	,	$,	*	--	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	Jordan	NE	*	jordan	-	-	recha	(PER*)	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	;	$.	*	--	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	über	APPR	*	über	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	–	CARD	*	–	sg	neut	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	wer	PWS	*	wer	sg	masc	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	Weiß	NN	*	weiße	sg	masc	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	was	PWS	*	was	sg	neut	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	für	APPR	*	für	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	Wasser	NN	*	wasser	sg	neut	recha	-	-	-	-	(108)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	all	PIAT	*	all	*	*	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	?	$.	*	--	-	-	recha	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	*	–	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Wie	PWAV	*	wie	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	oft	ADV	*	oft	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	hab	VAFIN	*	hab	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	'	$(	*	--	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	ich	PPER	*	ich	sg	*	recha	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Um	APPR	*	um	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Euch	PPER	*	euch	sg	neut	recha	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	gezittert	VVPP	*	zittern	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	,	$,	*	--	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	eh	KOUS	*	eh	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	das	ART	*	der	sg	neut	recha	-	-	-	-	(62
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	Feuer	NN	*	feuer	sg	neut	recha	-	-	-	-	62)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	mir	PPER	*	sich	sg	*	recha	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	So	ADV	*	so	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	nahe	ADJD	*	nahe	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	kam	VVFIN	*	kommen	sg	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	!	$.	*	--	-	-	recha	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Denn	KON	(VROOT(PSEUDO(S*	denn	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	seit	KOUS	(S*	seit	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	das	ART	(NP*	der	sg	neut	recha	-	-	-	-	(62
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Feuer	NN	*)	feuer	sg	neut	recha	-	-	-	-	62)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	mir	PPER	*	sich	sg	*	recha	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	So	ADV	(AP*	so	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	nahe	ADJD	*)	nahe	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	kam	VVFIN	*)	kommen	sg	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	:	$.	*	--	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	dünkt	ADJD	(PP*	dünken	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	mich	PPER	*	mich	sg	*	recha	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	im	APPRART	(PP*	in	sg	neut	recha	-	-	-	-	(108
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	Wasser	NN	*))	wasser	sg	neut	recha	-	-	-	-	108)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	sterben	VVFIN	*	sterben	pl	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	Erquickung	NN	(CNP*	erquickung	sg	fem	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	,	$,	*	--	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	Labsal	NN	*	labsal	sg	fem	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	,	$,	*	--	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	Rettung	NN	*))	rettung	sg	fem	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	.	$.	*))	--	-	-	recha	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Doch	KON	(S*	doch	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Ihr	PPER	*	ihr	pl	*	recha	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	seid	VAFIN	*	sein	pl	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Ja	NN	(VP*	ja	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	nicht	PTKNEG	*	nicht	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	ertrunken	VVINF	*))	ertrunken	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	:	$.	*	--	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	ich	PPER	(NP*	ich	sg	*	recha	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	,	$,	*	--	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	ich	PPER	(S*	ich	sg	masc	recha	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	bin	VAFIN	*	sein	sg	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	ja	ADV	(VP*	ja	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	nicht	PTKNEG	*	nicht	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	Verbrannt	VVPP	*)))	verbrannt	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	.	$.	*))	--	-	-	recha	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Wie	PWAV	(VROOT(PSEUDO(S*	wie	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	wollen	VMFIN	*	wollen	pl	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	wir	PPER	*	wir	pl	*	recha	-	-	-	-	(105)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	uns	PRF	(CVP(VP*	uns	pl	-	recha	-	-	-	-	(105)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	freun	VVINF	*)	freun	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	,	$,	*	--	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	und	KON	*	und	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Gott	NN	(VP(CNP*	gott	sg	masc	recha	(PER*)	-	-	-	(24)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	,	$,	*	--	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	Gott	NN	*)	gott	sg	masc	recha	(PER*)	-	-	-	(24)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	loben	VVINF	*)))	loben	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	!	$.	*))	--	-	-	recha	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Er	PPER	*	er	sg	masc	recha	-	-	-	-	(24)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	,	$,	*	--	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	er	PPER	*	er	sg	masc	recha	-	-	-	-	(24)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	trug	VVFIN	*	tragen	sg	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Euch	PPER	*	euch	sg	*	recha	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	und	KON	*	und	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	den	ART	*	der	sg	masc	recha	-	-	-	-	(109
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Nachen	NN	*	nache	sg	masc	recha	-	-	-	-	109)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	Auf	APPR	*	auf	sg	masc	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	Flügeln	NN	*	flügeln	pl	fem	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	seiner	PPOSAT	*	sein	pl	fem	recha	-	-	-	-	(95|(24)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	unsichtbaren	ADJA	*	unsichtbar	pl	neut	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	Engel	NN	*	engel	*	*	recha	-	-	-	-	95)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	Die	ART	*	der	pl	*	recha	-	-	-	-	(108
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	ungetreuen	ADJA	*	ungetreu	pl	*	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	Ström	NN	*	ström	pl	*	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	'	$(	*	--	-	-	recha	-	-	-	-	108)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	hinüber	ADV	*	hinüber	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	.	$.	*	--	-	-	recha	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Er	PPER	(VROOT(PSEUDO(S*	er	sg	masc	recha	-	-	-	-	(24)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	,	$,	*	--	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Er	PPER	*	er	sg	masc	recha	-	-	-	-	(24)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	winkte	VVFIN	*	winken	sg	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	meinem	PPOSAT	(NP*	mein	sg	masc	recha	-	-	-	-	(61|(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Engel	NN	*)	engel	sg	masc	recha	-	-	-	-	61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	,	$,	*	--	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	daß	KOUS	(S*	daß	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	er	PPER	*	er	sg	masc	recha	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	sichtbar	ADJD	(AP*	sichtbar	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	Auf	APPR	(PP*	auf	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	seinem	PPOSAT	*	sein	sg	masc	recha	-	-	-	-	(69|(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	weißen	ADJA	*	weiß	sg	masc	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	Fittiche	NN	*))	fittich	sg	masc	recha	-	-	-	-	69)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	,	$,	*	--	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	mich	PPER	*	mich	sg	*	recha	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	durch	APPR	(PP*	durch	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	Das	ART	*	der	sg	neut	recha	-	-	-	-	(62
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	Feuer	NN	*)	feuer	sg	neut	recha	-	-	-	-	62)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	trüge	VVFIN	*))	tragen	sg	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	–	$.	*))	–	-	-	recha	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	(	$(	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Weißem	ADJA	*	weißem	-	-	nathan	-	-	-	-	(69
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Fittiche	NN	*	fittich	pl	masc	nathan	-	-	-	-	69)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	!	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Ja	PTKANT	(VROOT(PSEUDO(S*	ja	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	ja	ADV	*)	ja	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	!	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	der	ART	*	der	sg	masc	nathan	-	-	-	-	(69
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	weiße	ADJA	*	weiß	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	vorgespreizte	ADJA	*	vorgespreizt	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Mantel	NN	*	mantel	sg	neut	nathan	-	-	-	-	69)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Des	NE	*	der	sg	neut	nathan	-	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Tempelherrn	NE	*	tempelherr	sg	neut	nathan	-	-	-	-	61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	.	$.	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	)	$(	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	RECHA	NE	(VROOT(PSEUDO*	recha	-	-	recha	(LOC*)	-	-	-	(2
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	recha	-	-	-	-	2)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Er	PPER	*	er	sg	masc	recha	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	sichtbar	ADJD	*	sichtbar	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	,	$,	*	--	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	sichtbar	ADJD	*	sichtbar	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	mich	PPER	*	mich	sg	*	recha	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Durchs	NE	*	durch	sg	masc	recha	-	-	-	-	(62
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Feuer	NN	*	feuer	sg	neut	recha	-	-	-	-	62)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	trüg	VVFIN	*	trüg	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	'	$(	*	--	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	,	$,	*	--	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	von	APPR	*	von	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	seinem	PPOSAT	*	sein	sg	neut	recha	-	-	-	-	(69|(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	Fittiche	ADJA	*	fittich	sg	neut	recha	-	-	-	-	69)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	Verweht	NN	*	verwehen	sg	neut	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	.	$.	*	--	-	-	recha	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	*	–	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Ich	PPER	*	ich	sg	*	recha	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	also	ADV	*	also	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	,	$,	*	--	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	ich	PPER	*	ich	sg	*	recha	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	hab	VVFIN	*	hab	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	'	$(	*	--	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	einen	ART	*	ein	sg	masc	recha	-	-	-	-	(315
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	Engel	NN	*	engel	sg	masc	recha	-	-	-	-	315)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	Von	APPR	*	von	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	Angesicht	NN	*	angesicht	-	-	recha	-	-	-	-	(111)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	zu	APPR	*	zu	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	Angesicht	NN	*	angesicht	sg	fem	recha	-	-	-	-	(112)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	gesehn	VVPP	*	gesehn	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	;	$.	*	--	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	Und	KON	*	und	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	meinen	PPOSAT	*	meinen	sg	masc	recha	-	-	-	-	(94|(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	Engel	NN	*	engel	sg	masc	recha	-	-	-	-	94)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	.	$.	*	--	-	-	recha	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Recha	NE	*	recha	-	-	nathan	(PER*)	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	wär	VAFIN	*	sein	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	'	$(	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	es	PPER	*	es	sg	neut	nathan	-	-	-	-	(110)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	wert	ADJD	*	wert	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	;	$.	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Und	KON	*	und	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	würd	VAFIN	*	würd	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	'	$(	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	an	APPR	*	an	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	ihm	PPER	*	ihm	sg	masc	nathan	-	-	-	-	(94)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	nichts	PIS	*	nichts	*	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	Schönres	NE	*	schönre	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	sehn	CARD	*	sehn	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	als	KOUS	*	als	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	er	PPER	*	er	sg	masc	nathan	-	-	-	-	(94)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	An	APPR	*	an	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	ihr	PPER	*	ihr	sg	fem	nathan	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	.	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	RECHA	NE	(VROOT(PSEUDO*))	recha	-	-	recha	-	-	-	-	(2)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	lächelnd	ADJD	(VROOT(PSEUDO*	lächelnd	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	recha	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Wem	PWS	(VROOT(PSEUDO(S*	wem	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	schmeichelt	VVFIN	*	schmeicheln	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Ihr	PPER	(NP*	ihr	pl	*	recha	-	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	,	$,	*	--	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	mein	PPOSAT	(NP*	mein	sg	masc	recha	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Vater	NN	*)))	vater	sg	masc	recha	-	-	-	-	1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	?	$.	*))	--	-	-	recha	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	wem	PWS	*	wem	sg	masc	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	?	$.	*	--	-	-	recha	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Dem	ART	(VROOT(PSEUDO(CNP(NP*	der	sg	neut	recha	-	-	-	-	(94
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Engel	NN	*)	engel	sg	neut	recha	-	-	-	-	94)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	,	$,	*	--	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	oder	KON	*	oder	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Euch	PPER	*)	euch	pl	*	recha	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	?	$.	*))	--	-	-	recha	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Doch	KON	*	doch	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	hätt	VAFIN	*	hätt	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	'	$(	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	auch	ADV	*	auch	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	nur	ADV	*	nur	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Ein	ART	*	ein	sg	masc	nathan	-	-	-	-	(52
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Mensch	NN	*	mensch	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	–	APPO	*	–	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	ein	ART	*	ein	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	Mensch	NN	*	mensch	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	wie	PWAV	*	wie	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	die	ART	*	der	sg	fem	nathan	-	-	-	-	(38
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	Natur	NN	*	natur	sg	fem	nathan	-	-	-	-	38)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	sie	PPER	*	sie	pl	masc	nathan	-	-	-	-	(52)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	täglich	ADJD	*	täglich	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	Gewährt	NN	*	gewährt	sg	-	nathan	-	-	-	-	52)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	Für	APPR	*	für	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	dich	PPER	*	dich	sg	*	nathan	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	ein	ART	*	ein	sg	neut	nathan	-	-	-	-	(114
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	Engel	NN	*	engel	sg	neut	nathan	-	-	-	-	114)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	sein	VAINF	*	sein	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	22	.	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Er	PPER	*	er	sg	masc	nathan	-	-	-	-	(52)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	müßt	VMFIN	*	müßen	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	'	$(	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	und	KON	*	und	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	würde	VAFIN	*	werden	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	.	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	RECHA	NE	(VROOT(PSEUDO*	recha	-	-	recha	(LOC*)	-	-	-	(2
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	recha	-	-	-	-	2)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Nicht	PTKNEG	*	nicht	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	so	ADV	*	so	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	ein	ART	*	ein	sg	neut	recha	-	-	-	-	(114
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Engel	NN	*	engel	sg	neut	recha	-	-	-	-	114)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	;	$.	*	--	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	nein	PTKANT	*	nein	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	!	$.	*	--	-	-	recha	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	ein	ART	(VROOT(PSEUDO(DL(NP*	ein	sg	masc	recha	-	-	-	-	(95
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	wirklicher	ADJA	*)	wirklich	sg	masc	recha	-	-	-	-	95)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	;	$.	*	--	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Es	PPER	(S*	es	sg	neut	recha	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	war	VAFIN	*	sein	sg	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	gewiß	ADV	*	gewiß	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	ein	ART	(NP*	ein	sg	masc	recha	-	-	-	-	(115
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	wirklicher	ADJA	*)))	wirklich	sg	masc	recha	-	-	-	-	115)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	!	$.	*))	--	-	-	recha	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Habt	VAFIN	(S*	haben	pl	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Ihr	PPER	*	ihr	pl	*	recha	-	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	,	$,	*	--	-	-	recha	-	-	-	-	1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Ihr	PPER	*	ihr	pl	*	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	selbst	ADV	*)	selbst	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	die	ART	(NP*	der	sg	fem	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Möglichkeit	NN	*	möglichkeit	sg	fem	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	,	$,	*	--	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	daß	KOUS	(CS(S*	daß	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	Engel	NN	*	engel	pl	masc	recha	-	-	-	-	(95)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	sind	VAFIN	*	sein	pl	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	,	$,	*	--	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	Daß	KOUS	(S*	daß	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	Gott	NN	*	gott	sg	masc	recha	-	-	-	-	(24)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	zum	APPRART	(PP*	zu	sg	neut	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	Besten	NN	*)	gut	sg	neut	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	derer	PDS	(NP*	der	pl	*	recha	-	-	-	-	(116
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	,	$,	*	--	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	die	PRELS	(S*	der	pl	*	recha	-	-	-	-	(116)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	ihn	PPER	*	ihn	sg	masc	recha	-	-	-	-	(24)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	lieben	VVFIN	*))))	lieben	pl	-	recha	-	-	-	-	116)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	22	,	$,	*	--	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	23	Auch	ADV	(S(NP*	auch	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	24	Wunder	NN	*)	wunder	pl	neut	recha	-	-	-	-	(117)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	25	könne	VMFIN	*	können	sg	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	26	tun	VVINF	(CVP*	tun	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	27	,	$,	*	--	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	28	mich	PPER	(VP*	mich	sg	*	recha	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	29	nicht	PTKNEG	*	nicht	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	30	gelehrt	VVPP	*)))))	lehren	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	31	?	$.	*))	--	-	-	recha	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Ich	PPER	*	ich	sg	*	recha	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	lieb	VVFIN	*	leiben	sg	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	'	$(	*	--	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	ihn	PPER	*	ihn	sg	masc	recha	-	-	-	-	(24)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	ja	ADV	*	ja	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	.	$.	*	--	-	-	recha	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	nathan	-	-	-	-	(118
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	er	PPER	*	er	sg	masc	nathan	-	-	-	-	(24)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	liebt	VVFIN	*	lieben	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	dich	PRF	*	dich	sg	-	nathan	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	;	$.	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	und	KON	(CS(S*	und	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	tut	VVFIN	*	tun	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Für	APPR	(PP*	für	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	dich	PPER	*))	dich	sg	*	nathan	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	und	KON	*	und	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	deines	PPOSAT	(S(NP*	dein	sg	masc	nathan	-	-	-	-	(116|(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	gleichen	ADJA	*	gleich	-	-	nathan	-	-	-	-	116)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	stündlich	ADJD	*	stündlich	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	Wunder	NN	*)	wunder	*	*	nathan	-	-	-	-	(117)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	;	$.	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	Ja	PTKANT	(S*	ja	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	hat	VAFIN	*	haben	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	sie	PPER	(VP*	sie	sg	fem	nathan	-	-	-	-	(117)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	schon	ADV	*	schon	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	22	von	APPR	(PP*	von	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	23	aller	PIAT	*	aller	sg	fem	nathan	-	-	-	-	(119
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	24	Ewigkeit	NN	*)	ewigkeit	sg	fem	nathan	-	-	-	-	119)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	25	Für	APPR	(PP*	für	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	26	euch	PPER	*)	euch	pl	*	nathan	-	-	-	-	(116)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	27	getan	VVPP	*)))))	tun	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	28	.	$.	*))	--	-	-	nathan	-	-	-	-	118)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	RECHA	NE	(VROOT(PSEUDO*	recha	-	-	recha	(LOC*)	-	-	-	(2
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	recha	-	-	-	-	2)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Das	PDS	*	der	sg	neut	recha	-	-	-	-	(118)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	hör	VAFIN	*	hör	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	'	$(	*	--	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	ich	PPER	*	ich	sg	*	recha	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	gern	ADV	*	gern	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	.	$.	*	--	-	-	recha	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Wie	PWAV	(VROOT(PSEUDO*	wie	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	?	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	weil	KOUS	*	weil	-	-	nathan	-	-	-	-	(120)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Es	PPER	*	es	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	ganz	ADV	*	ganz	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	natürlich	ADV	*	natürlich	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	ganz	ADV	*	ganz	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	alltäglich	ADJD	*	alltäglich	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	klänge	VVFIN	*	klängen	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	Wenn	KOUS	*	wenn	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	dich	PPER	*	dich	sg	-	nathan	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	ein	ART	*	ein	sg	masc	nathan	-	-	-	-	(121
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	eigentlicher	ADJA	*	eigentlich	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	Tempelherr	NN	*	tempelherr	sg	masc	nathan	-	-	-	-	121)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	Gerettet	VVPP	*	retten	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	hätte	VAFIN	*	haben	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	:	$.	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	sollt	VMFIN	*	sollen	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	'	$(	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	es	PPER	*	es	sg	neut	nathan	-	-	-	-	(113)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	darum	PROAV	*	darum	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	weniger	PIAT	*	weniger	*	*	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	22	Ein	ART	*	ein	*	*	nathan	-	-	-	-	(122
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	23	Wunder	NN	*	wunder	*	*	nathan	-	-	-	-	122)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	24	sein	VAINF	*	sein	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	25	?	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Der	ART	(S(VP(NP(S(NP(AP(NP*	der	sg	masc	nathan	-	-	-	-	(117
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Wunder	NN	*)	wunder	sg	masc	nathan	-	-	-	-	117)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	höchstes	ADJA	*))	hoch	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	ist	VAFIN	*)	sein	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Daß	KOUS	(S*	daß	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	uns	PPER	*	uns	pl	*	nathan	-	-	-	-	(52)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	die	ART	(PP(AVP*	der	pl	*	nathan	-	-	-	-	(117
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	wahren	ADJA	*)	wahren	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	echten	ADJA	(S(NP*	echt	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	Wunder	NN	*)	wunder	sg	masc	nathan	-	-	-	-	117)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	so	ADV	*	so	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	Alltäglich	ADJD	(VP*	alltäglich	-	-	nathan	(PER*)	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	werden	VAINF	*)	werden	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	können	VMFIN	*))	können	pl	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	,	$,	*))	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	werden	VAINF	*)	werden	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	sollen	VMFIN	*)	sollen	pl	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	.	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Ohn	NE	*	ohn	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	'	$(	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	dieses	PDAT	*	dieser	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	allgemeine	ADJA	*	allgemein	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Wunder	NN	*	wunder	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	hätte	VAFIN	*	haben	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Ein	ART	*	ein	sg	masc	nathan	-	-	-	-	(123
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	Denkender	NN	*	denkender	sg	masc	nathan	-	-	-	-	123)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	wohl	ADV	*	wohl	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	schwerlich	ADJD	*	schwerlich	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	Wunder	NN	*	wunder	*	*	nathan	-	-	-	-	(117)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	je	ADV	*	je	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	Genannt	VVPP	*	nennen	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	was	PWS	*	was	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	Kindern	NN	*	kind	pl	neut	nathan	-	-	-	-	(124)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	bloß	ADV	*	bloß	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	so	ADV	*	so	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	heißen	VVINF	*	heißen	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	müßte	VMFIN	*	müssen	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	22	Die	NN	*	der	sg	fem	nathan	-	-	-	-	(124)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	23	gaffend	ADJD	*	gaffend	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	24	nur	ADV	*	nur	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	25	das	ART	*	der	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	26	Ungewöhnlichste	NN	*	ungewöhnlichste	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	27	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	28	Das	ART	*	der	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	29	Neuste	NN	*	neust	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	30	nur	ADV	*	nur	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	31	verfolgen	VVINF	*	verfolgen	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	32	.	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DAJA	NE	(VROOT(PSEUDO*))	daja	-	-	daja	-	-	-	-	(0)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	zu	APPR	(VROOT(PSEUDO(MPN*	zu	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Nathan	NE	*)	nathan	-	-	daja	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	.	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Wollt	VMFIN	(VROOT(PSEUDO(S*	wollen	pl	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Ihr	PPER	*	ihr	pl	*	daja	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	denn	ADV	*	denn	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Ihr	NN	*	ihr	pl	*	daja	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	ohnedem	PIS	*	ohnedem	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	schon	ADV	(NP*	schon	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Überspanntes	NN	*	überspannt	sg	masc	daja	-	-	-	-	(51
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Hirn	NE	*)	hirn	sg	masc	daja	-	-	-	-	51)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	Durch	APPR	(PP*	durch	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	solcherlei	PIAT	*	solcherlei	*	*	daja	-	-	-	-	(120
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	Subtilitäten	NN	*)	subtilität	pl	fem	daja	-	-	-	-	120)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	ganz	ADV	*	ganz	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	Zersprengen	NN	*)	zersprenge	pl	fem	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	?	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Laß	KOUS	*	lassen	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	mich	PPER	*	mich	sg	*	nathan	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	!	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Meiner	PPOSAT	*	meiner	*	*	nathan	-	-	-	-	(2|(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Recha	FM	*	recha	sg	neut	nathan	-	-	-	-	2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	wär	FM	*	sein	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	'	$(	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Es	PPER	*	es	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Wunders	NN	*	wunder	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	nicht	PTKNEG	*	nicht	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	genug	ADV	*	genug	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	daß	KOUS	*	daß	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	sie	PPER	*	sie	sg	fem	nathan	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	ein	ART	*	ein	sg	masc	nathan	-	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	Mensch	NN	*	mensch	sg	masc	nathan	-	-	-	-	61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	Gerettet	VVPP	*	retten	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	welchen	PWAT	*	welcher	sg	masc	nathan	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	selbst	ADV	*	selbst	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	kein	PIAT	*	kein	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	kleines	ADJA	*	klein	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	Wunder	NN	*	wunder	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	Erst	ADV	*	erst	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	22	retten	VVINF	*	retten	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	23	müssen	VMINF	*	müssen	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	24	?	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Ja	PTKANT	(VROOT(PSEUDO(S*	ja	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	kein	PIAT	(NP*	kein	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	kleines	ADJA	*	klein	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Wunder	NN	*))	wunder	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	!	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Denn	KON	(VROOT(PSEUDO(S*	denn	-	-	nathan	-	-	-	-	(125
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	wer	PWS	*	wer	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	hat	VAFIN	*	haben	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	schon	ADV	*	schon	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	gehört	VVPP	(CVP*	gehören	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	daß	KOUS	(VP(PP*	daß	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Saladin	NE	*	saladin	sg	fem	nathan	(PER*)	-	-	-	(7)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	Je	NE	*)	je	sg	fem	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	eines	ART	(NP*	ein	sg	masc	nathan	-	-	-	-	(121
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	Tempelherrn	NN	*)	tempelherr	sg	masc	nathan	-	-	-	-	121)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	verschont	VVPP	*)))	verschonen	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	?	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	daß	KOUS	(VROOT(PSEUDO(S*	daß	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	je	ADV	*	je	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Ein	ART	(NP*	ein	sg	masc	nathan	-	-	-	-	(121
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Tempelherr	NN	*	tempelherr	sg	masc	nathan	-	-	-	-	121)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	von	APPR	(VP(VP(PP*	von	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	ihm	PPER	*)	ihm	sg	masc	nathan	-	-	-	-	(7)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	verschont	VVPP	*)	verschonen	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	zu	PTKZU	(VZ*	zu	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	werden	VAINF	*)))	werden	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	Verlangt	NN	*)	verlangen	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	?	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	gehofft	VVPP	*	hoffen	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	?	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	ihm	PPER	(VROOT(PSEUDO(DL(VP*	ihm	sg	masc	nathan	-	-	-	-	(121)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	je	ADV	(PP*	je	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	für	APPR	*	für	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	seine	PPOSAT	*	sein	sg	fem	nathan	-	-	-	-	(126|(121)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Freiheit	NN	*)	freiheit	sg	fem	nathan	-	-	-	-	126)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Mehr	PIAT	(AP*	mehr	*	*	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	als	KOKOM	(NP*	als	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	den	ART	*	der	sg	masc	nathan	-	-	-	-	(127
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	ledern	ADJA	*	ledern	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	Gurt	NN	*))	gurt	sg	masc	nathan	-	-	-	-	127)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	geboten	VVPP	*	geboten	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	der	ART	(S(NP*	der	sg	masc	nathan	-	-	-	-	(127)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	Sein	NN	*	sein	sg	masc	nathan	-	-	-	-	(7)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	Eisen	NN	*)	eisen	pl	fem	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	schleppt	VVFIN	*))	schleppen	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	;	$.	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	und	KON	(S*	und	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	höchstens	ADV	*	höchstens	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	seinen	PPOSAT	(NP*	sein	pl	-	nathan	-	-	-	-	(7)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	Dolch	NN	*)))	dolch	*	*	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	?	$.	*))	--	-	-	nathan	-	-	-	-	125)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	RECHA	NE	(VROOT(PSEUDO*	recha	-	-	recha	(LOC*)	-	-	-	(2
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	recha	-	-	-	-	2)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Das	PDS	(VROOT(PSEUDO(S*	der	sg	neut	recha	-	-	-	-	(125)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	schließt	VVFIN	*	schließen	sg	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	für	APPR	(PP*	für	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	mich	PPER	*)	mich	sg	*	recha	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	,	$,	*	--	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	mein	PPOSAT	(NP*	mein	sg	masc	recha	-	-	-	-	(1|(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Vater	NN	*))	vater	sg	masc	recha	-	-	-	-	1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	.	$.	*))	--	-	-	recha	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Darum	PROAV	(S*	darum	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	eben	ADV	*	eben	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	War	VAFIN	*	sein	sg	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	das	PDS	*	der	sg	neut	recha	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	kein	PIAT	(NP*	kein	sg	neut	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Tempelherr	NN	*)	tempelherr	sg	masc	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	;	$.	*	--	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	er	PPER	(S*	er	sg	masc	recha	-	-	-	-	(94)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	schien	VVFIN	*	scheinen	sg	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	es	PPER	*	es	sg	neut	recha	-	-	-	-	(97)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	nur	ADV	*))	nur	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	.	$.	*))	--	-	-	recha	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	*	–	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Kömmt	VVFIN	*	kömmen	sg	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	kein	PIAT	*	kein	sg	masc	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	gefangner	ADJA	*	gefangn	sg	masc	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Tempelherr	NN	*	tempelherr	sg	masc	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	je	ADV	*	je	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	anders	ADV	*	anders	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Als	KOKOM	*	als	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	zum	APPRART	*	zu	sg	neut	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	gewissen	ADJA	*	gewiß	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	Tode	NN	*	tod	sg	masc	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	nach	APPR	*	nach	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	Jerusalem	NE	*	jerusalem	sg	neut	recha	(LOC*)	-	-	-	(14)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	;	$.	*	--	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	Geht	VVFIN	*	gehen	sg	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	keiner	PIS	*	keiner	sg	masc	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	in	APPR	*	in	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	Jerusalem	NE	*	jerusalem	sg	neut	recha	(LOC*)	-	-	-	(14)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	so	ADV	*	so	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	frei	ADJD	*	frei	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	Umher	NN	*	umher	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	:	$.	*	--	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	22	wie	KOKOM	*	wie	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	23	hätte	VAFIN	*	haben	sg	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	24	mich	PPER	*	mich	sg	*	recha	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	25	des	ART	*	der	sg	masc	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	26	Nachts	NN	*	nacht	sg	masc	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	27	freiwillig	ADJD	*	freiwillig	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	28	Denn	KON	*	denn	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	29	einer	ART	*	ein	sg	fem	recha	-	-	-	-	(121)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	30	retten	VVINF	*	retten	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	31	können	VMINF	*	können	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	32	?	$.	*	--	-	-	recha	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Sieh	NE	(VROOT(PSEUDO*	sieh	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	!	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	wie	PWAV	(VROOT(PSEUDO(AP*	wie	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	sinnreich	ADJD	*)	sinnreich	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	.	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Jetzt	ADV	(VROOT(PSEUDO(CS*	jetzt	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Daja	NE	(S(CNP*	daja	-	-	nathan	(PER*)	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	nimm	NE	*)	nimm	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	das	ART	(NP*	der	sg	neut	nathan	-	-	-	-	(128
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Wort	NN	*)))	wort	sg	neut	nathan	-	-	-	-	128)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	.	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Ich	PPER	*	ich	sg	*	nathan	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	hab	VVFIN	*	hab	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	'	$(	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	es	PPER	*	es	sg	neut	nathan	-	-	-	-	(129)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	ja	ADV	*	ja	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Von	APPR	*	von	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	dir	PPER	*	dir	sg	*	nathan	-	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	daß	KOUS	*	daß	-	-	nathan	-	-	-	-	(129
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	er	PPER	*	er	sg	masc	nathan	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	gefangen	VVPP	*	gefangen	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	hergeschickt	VVPP	*	hergeschickt	-	-	nathan	-	-	-	-	129)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	Ist	VVPP	*	sein	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	worden	VAPP	*	werden	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	.	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Ohne	APPR	(VROOT(PSEUDO(S(PP*	ohne	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Zweifel	NN	*)	zweifel	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	weißt	VVFIN	*	weißen	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	du	PPER	*	du	sg	*	nathan	-	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	mehr	ADV	*)	mehr	*	*	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	.	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	daja	-	-	-	-	(0
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	daja	-	-	-	-	0)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Nun	ADV	(VROOT(PSEUDO(S*	nun	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	ja	PTKANT	*)	ja	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	.	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	So	ADV	(S*	so	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	sagt	VVFIN	*	sagen	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	man	PIS	*	man	sg	*	daja	-	-	-	-	(75)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	freilich	ADV	*	freilich	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	;	$.	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	–	PPER	*	–	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	doch	ADV	*	doch	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	man	PIS	*	man	sg	*	daja	-	-	-	-	(130|(75)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	sagt	VVFIN	*	sagen	sg	-	daja	-	-	-	-	130)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	Zugleich	ADV	*	zugleich	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	daß	KOUS	(S*	daß	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	Saladin	NE	*	saladin	sg	*	daja	(PER*)	-	-	-	(7)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	den	ART	(NP*	der	pl	masc	daja	-	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	Tempelherrn	NN	*)	tempelherr	pl	masc	daja	-	-	-	-	61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	Begnadigt	VVPP	*	begnadigen	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	weil	KOUS	(S*	weil	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	er	PPER	*	er	sg	masc	daja	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	seiner	PPOSAT	(VP(NP*	sein	sg	fem	daja	-	-	-	-	(131|(7)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	Brüder	NN	*)	Bruder	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	22	einem	PIS	(NP*	ein	sg	masc	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	23	,	$,	*	--	-	-	daja	-	-	-	-	131)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	24	Den	PRELS	(S*	der	sg	masc	daja	-	-	-	-	(131)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	25	er	PPER	*	er	sg	masc	daja	-	-	-	-	(7)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	26	besonders	ADV	*	besonders	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	27	lieb	VVFIN	*))	leiben	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	28	gehabt	VAPP	*)	haben	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	29	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	30	so	ADV	(AP*	so	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	31	ähnlich	ADJD	*))))	ähnlich	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	32	sehe	VVFIN	*	sehen	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	33	.	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Doch	KON	(VROOT(PSEUDO(CS(S*	doch	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	da	KOUS	*	da	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	es	PPER	*	es	sg	neut	daja	-	-	-	-	(132)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	viele	PIS	*	vieler	pl	*	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	zwanzig	CARD	(NP*	zwanzig	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Jahre	NN	*)	jahr	pl	neut	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	her	PTKVZ	*	her	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	Daß	KOUS	(S*	daß	-	-	daja	-	-	-	-	(132
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	dieser	PDAT	(NP*	dieser	sg	masc	daja	-	-	-	-	(131
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	Bruder	NN	*)	bruder	sg	masc	daja	-	-	-	-	131)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	nicht	PTKNEG	(AVP*	nicht	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	mehr	ADV	*)	mehr	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	lebt	VVFIN	*))	leben	sg	-	daja	-	-	-	-	132)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	–	NN	(S*	–	sg	neut	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	er	PPER	*	er	sg	masc	daja	-	-	-	-	(131)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	hieß	VVFIN	*	heißen	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	Ich	PPER	(S*	ich	sg	*	daja	-	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	weiß	VVFIN	*	weiß	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	nicht	PTKNEG	*	nicht	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	22	wie	KOKOM	(PP*	wie	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	23	;	$.	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	24	–	KON	(S*	–	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	25	er	PPER	*	er	sg	masc	daja	-	-	-	-	(131)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	26	blieb	VVFIN	*	bleiben	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	27	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	28	ich	PPER	(S*	ich	sg	*	daja	-	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	29	weiß	VVFIN	*	weiß	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	30	nicht	PTKNEG	*))))))	nicht	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	31	wo	PWAV	*	wo	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	32	;	$.	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	33	–	XY	*	–	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	34	So	ADV	(S*	so	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	35	klingt	VVFIN	*	klingen	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	36	das	PDS	*	der	sg	neut	daja	-	-	-	-	(130)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	37	ja	ADV	*	ja	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	38	so	ADV	(AVP*	so	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	39	gar	ADV	*)	gar	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	40	–	ADV	*	–	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	41	so	ADV	(AVP*	so	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	42	gar	ADV	*)	gar	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	43	unglaublich	ADJD	*	unglaublich	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	44	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	45	Daß	KOUS	(S*	daß	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	46	an	APPR	(PP*	an	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	47	der	ART	*	der	sg	fem	daja	-	-	-	-	(130
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	48	ganzen	ADJA	*	ganz	sg	fem	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	49	Sache	NN	*)	sache	sg	fem	daja	-	-	-	-	130)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	50	wohl	ADV	(NP*	wohl	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	51	nichts	PIS	*)	nichts	*	neut	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	52	ist	VAFIN	*))	sein	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	53	.	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Ei	XY	(VROOT(PSEUDO*	ei	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Daja	NE	*	daja	-	-	nathan	(PER*)	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	!	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Warum	PWAV	(VROOT(PSEUDO(S*	warum	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	wäre	VAFIN	*	sein	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	denn	ADV	*	denn	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	das	PDS	*	der	sg	neut	nathan	-	-	-	-	(130)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	so	ADV	(AP*	so	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Unglaublich	ADJD	*))	unglaublich	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	?	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Doch	KON	*	doch	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	wohl	ADV	*	wohl	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	nicht	PTKNEG	*	nicht	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	–	$(	*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	wie	KOKOM	*	wie	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	'	$(	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	s	PPER	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	wohl	ADV	*	wohl	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	geschieht	VVFIN	*	geschehen	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	–	$(	*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	Um	NN	*	um	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	lieber	ADV	*	lieber	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	etwas	ADV	*	etwas	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	noch	ADV	*	noch	-	-	nathan	-	-	-	-	(133
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	Unglaublichers	NN	*	unglaublicher	sg	*	nathan	-	-	-	-	133)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	Zu	PTKZU	*	zu	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	glauben	VVINF	*	glauben	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	?	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Warum	PWAV	(NP(AP(S*	warum	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	hätte	VAFIN	*	haben	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Saladin	NN	(NP*	saladin	-	-	nathan	(PER*)	-	-	-	(7
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	,	$,	*	--	-	-	nathan	-	-	-	-	7)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Der	PRELS	(S*	der	sg	masc	nathan	-	-	-	-	(7)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	sein	PPOSAT	(NP*	sein	sg	masc	nathan	-	-	-	-	(7)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Geschwister	NN	*)	geschwister	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	insgesamt	ADV	*)))	insgesamt	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	so	ADV	*	so	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	liebt	ADJD	*)	lieben	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	In	APPR	(VP(PP*	in	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	jüngern	ADJA	*	jüngern	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	Jahren	NN	*)	jahr	pl	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	einen	ART	(VP(NP*	ein	sg	masc	nathan	-	-	-	-	(131
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	Bruder	NN	*)	bruder	sg	masc	nathan	-	-	-	-	131)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	nicht	PTKNEG	(AVP*	nicht	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	Noch	ADV	*)	noch	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	ganz	ADV	(AVP*	ganz	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	besonders	ADV	*)	besonders	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	lieben	VVINF	*)	lieben	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	22	können	VMINF	*))	können	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	23	?	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Pflegen	VVFIN	(S*	pflege	pl	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Sich	PRF	(VP*	sich	pl	-	nathan	-	-	-	-	(134)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	zwei	CARD	(NP*	zwei	-	-	nathan	-	-	-	-	(134
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Gesichter	NN	*)	gesicht	sg	*	nathan	-	-	-	-	134)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	nicht	PTKNEG	*	nicht	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	zu	PTKZU	(VZ*	zu	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	ähneln	VVINF	*)))	ähneln	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	?	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Ist	VAFIN	(S*	sein	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Ein	ART	(NP*	ein	sg	masc	nathan	-	-	-	-	(135
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	alter	ADJA	*	alt	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Eindruck	NN	*))	eindruck	sg	masc	nathan	-	-	-	-	135)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	ein	ART	(NP*	ein	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	verlorner	ADJA	*)	verlorn	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	?	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Wirkt	NN	(NP*	wirken	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Das	ART	(NP*	der	sg	neut	nathan	-	-	-	-	(136
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	nämliche	ADJA	*))	nämlich	sg	neut	nathan	-	-	-	-	136)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	nicht	PTKNEG	(NP(AVP*	nicht	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	mehr	ADV	*)	mehr	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	das	ART	*	der	sg	neut	nathan	-	-	-	-	(137
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	nämliche	ADJA	*)	nämlich	sg	neut	nathan	-	-	-	-	137)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	?	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Seit	NN	*	seit	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	wenn	KOUS	*	wenn	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	?	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Wo	PWAV	(S*	wo	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	steckt	VVFIN	*)	stecken	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	hier	ADV	(NP*	hier	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	das	ART	*	der	sg	neut	nathan	-	-	-	-	(133
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Unglaubliche	NN	*)	unglaubliche	sg	neut	nathan	-	-	-	-	133)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	?	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Ei	XY	*	ei	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	freilich	ADV	*	freilich	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	weise	VVFIN	*	weise	-	-	nathan	-	-	-	-	(0
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Daja	NE	*	daja	-	-	nathan	(PER*)	-	-	-	0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	wär	VAFIN	*	sein	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	'	$(	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	s	PPER	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	für	APPR	*	für	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	dich	PRF	*	dich	sg	*	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	Kein	PIAT	*	kein	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	Wunder	NN	*	wunder	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	mehr	ADV	*	mehr	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	;	$.	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	und	KON	*	und	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	deine	PPOSAT	*	dein	pl	neut	nathan	-	-	-	-	(133
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	Wunder	NN	*	wunder	pl	neut	nathan	-	-	-	-	133)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	nur	ADV	*	nur	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	Bedürf	NN	*	bedürf	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	.	$.	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	22	.	$.	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	23	.	$.	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	24	verdienen	VVFIN	*	verdienen	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	25	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	26	will	VMFIN	*	wollen	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	27	ich	PPER	*	ich	sg	*	nathan	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	28	sagen	VVINF	*	sagen	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	29	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	30	Glauben	NN	*	glaube	sg	masc	nathan	-	-	-	-	(138)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	31	.	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	daja	-	-	-	-	(0
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	daja	-	-	-	-	0)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Ihr	PPER	(VROOT(PSEUDO(S*	ihr	pl	*	daja	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	spottet	VVFIN	*)	spotten	pl	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	.	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Weil	KOUS	(VROOT(PSEUDO(S*	weil	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	du	PPER	*	du	sg	masc	nathan	-	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	meiner	PIS	*	mein	sg	fem	nathan	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	spottest	VVFIN	*)	spottest	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	.	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Doch	KON	(S(AVP(S*	doch	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Auch	ADV	(AVP*	auch	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	so	ADV	*	so	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	noch	ADV	*)	noch	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Recha	NE	*	recha	sg	neut	nathan	(PER*)	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	bleibet	VVFIN	*	bleiben	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	deine	PPOSAT	(NP*	dein	sg	fem	nathan	-	-	-	-	(113
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	Rettung	NN	*	rettung	sg	fem	nathan	-	-	-	-	113)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	Ein	ART	(NP*	ein	sg	masc	nathan	-	-	-	-	(122
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	Wunder	NN	*	wunder	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	dem	PRELS	(S*	der	sg	masc	nathan	-	-	-	-	(139)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	nur	ADV	*	nur	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	möglich	ADJD	*))	möglich	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	der	PRELS	(S*	der	sg	masc	nathan	-	-	-	-	(139)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	die	ART	(NP*	der	pl	fem	nathan	-	-	-	-	(140
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	strengsten	ADJA	*	streng	pl	masc	nathan	-	-	-	-	140)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	Entschlüsse	NN	*)	entschluß	pl	masc	nathan	-	-	-	-	122)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	22	Der	ART	(NP*	der	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	23	Könige	NN	*)	könig	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	24	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	25	sein	PPOSAT	(AP(NP*	sein	sg	masc	nathan	-	-	-	-	(139)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	26	Spiel	NN	*)	spiel	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	27	–	APPO	*))))	–	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	28	wenn	ADV	*)	wenn	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	29	nicht	PTKNEG	*	nicht	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	30	sein	PPOSAT	(NP*	sein	sg	masc	nathan	-	-	-	-	(139)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	31	Spott	NN	*)	spott	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	32	–	PIAT	(NP*	–	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	33	Gern	NN	*)	gern	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	34	an	APPR	(PP*	an	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	35	den	ART	*	der	pl	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	36	schwächsten	ADJA	*	schwache	pl	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	37	Fäden	NN	*))	faden	pl	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	38	lenkt	VVFIN	*	lenken	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	39	.	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	RECHA	NE	(VROOT(PSEUDO*	recha	-	-	recha	(LOC*)	-	-	-	(2
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	recha	-	-	-	-	2)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Mein	PPOSAT	(VROOT(PSEUDO(NP*	mein	sg	masc	recha	-	-	-	-	(1|(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Vater	NN	*)	vater	sg	masc	recha	-	-	-	-	1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	!	$.	*))	--	-	-	recha	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Mein	PPOSAT	*	mein	sg	masc	recha	-	-	-	-	(1|(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Vater	NN	*	vater	sg	masc	recha	-	-	-	-	1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	,	$,	*	--	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	wenn	KOUS	*	wenn	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	ich	PPER	*	ich	sg	*	recha	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	irr	PRF	*	irr	sg	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	'	$(	*	--	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	,	$,	*	--	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	Ihr	PPER	*	ihr	pl	*	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	wißt	VVFIN	*	wissen	pl	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	,	$,	*	--	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	ich	PPER	*	ich	sg	*	recha	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	irre	PPOSAT	*	irre	sg	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	Nicht	NN	*	nicht	sg	neut	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	gern	ADV	*	gern	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	.	$.	*	--	-	-	recha	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Vielmehr	ADV	(VROOT(PSEUDO(S*	vielmehr	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	du	PPER	*	du	sg	*	nathan	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	läßst	VVFIN	*	läßsen	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	dich	PPER	*	dich	sg	-	nathan	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	gern	ADV	*	gern	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	belehren	VVINF	*)	belehren	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	.	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Sieh	NE	*	sieh	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	!	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	eine	ART	*	ein	sg	fem	nathan	-	-	-	-	(141
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Stirn	NN	*	stirn	sg	fem	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	so	ADV	*	so	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	oder	KON	*	oder	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	so	ADV	*	so	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	gewölbt	VVPP	*	wölben	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	;	$.	*	--	-	-	nathan	-	-	-	-	141)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	Der	ART	*	der	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	Rücken	NN	*	rücken	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	einer	ART	*	ein	sg	fem	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	Nase	NN	*	nase	sg	fem	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	so	ADV	*	so	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	vielmehr	ADV	*	vielmehr	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	Als	APPR	*	als	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	so	ADV	*	so	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	geführet	VVPP	*	geführet	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	;	$.	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	Augenbraunen	NN	*	augenbraune	-	-	nathan	-	-	-	-	(142
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	die	PRELS	*	der	sg	fem	nathan	-	-	-	-	142)|(142)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	22	Auf	APPR	*	auf	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	23	einem	ART	*	ein	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	24	scharfen	ADJA	*	scharf	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	25	oder	KON	*	oder	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	26	stumpfen	ADJA	*	stumpf	pl	*	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	27	Knochen	NN	*	knochen	pl	*	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	28	So	ADV	*	so	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	29	oder	KON	*	oder	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	30	so	ADV	*	so	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	31	sich	PRF	*	sich	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	32	schlängeln	VVINF	*	schlängeln	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	33	;	$.	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	34	eine	ART	*	ein	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	35	Linie	NN	*	linie	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	36	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	37	Ein	ART	*	ein	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	38	Bug	NN	*	bug	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	39	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	40	ein	ART	*	ein	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	41	Winkel	NN	*	winkel	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	42	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	43	eine	ART	*	ein	sg	fem	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	44	Falt	NN	*	falt	sg	fem	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	45	'	$(	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	46	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	47	ein	ART	*	ein	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	48	Mal	NN	*	mal	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	49	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	50	Ein	ART	*	ein	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	51	Nichts	PIS	*	nichts	*	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	52	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	53	auf	APPR	*	auf	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	54	eines	ART	*	ein	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	55	wilden	ADJA	*	wild	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	56	Europäers	NN	*	europäer	sg	masc	nathan	(MISC*)	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	57	Gesicht	NN	*	gesicht	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	58	:	$.	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	59	–	TRUNC	*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	60	und	KON	*	und	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	61	du	PPER	*	du	sg	*	nathan	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	62	entkömmst	VVFIN	*	entkömmsen	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	63	dem	ART	*	der	sg	neut	nathan	-	-	-	-	(62
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	64	Feur	NN	*	feur	sg	neut	nathan	-	-	-	-	62)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	65	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	66	in	APPR	*	in	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	67	Asien	NE	*	asien	sg	neut	nathan	(LOC*)	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	68	!	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Das	PDS	*	der	sg	neut	nathan	-	-	-	-	(141)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	wär	VAFIN	*	sein	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	'	$(	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	kein	PIAT	*	kein	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Wunder	NN	*	wunder	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	wundersücht	NN	*	wundersüchen	-	-	nathan	-	-	-	-	(67
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	'	$(	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	ges	ADJA	*	g	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	Volk	NN	*	volk	-	-	nathan	-	-	-	-	67)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	?	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Warum	PWAV	(VROOT(PSEUDO(S*	warum	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	bemüht	ADJD	*	bemühen	pl	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	ihr	PPER	*	ihr	pl	*	nathan	-	-	-	-	(67)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	denn	ADV	*	denn	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	noch	ADV	(NP*	noch	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	einen	ART	*	ein	sg	masc	nathan	-	-	-	-	(102
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Engel	NN	*))	engel	sg	masc	nathan	-	-	-	-	102)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	?	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	daja	-	-	-	-	(0
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	daja	-	-	-	-	0)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	schadets	ADV	(AP*	schadets	-	-	daja	-	-	-	-	(143)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	–	CARD	(NP*	–	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Nathan	NN	*))	nathan	-	-	daja	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	wenn	KOUS	(S*	wenn	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	ich	PPER	*	ich	sg	*	daja	-	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	sprechen	VVINF	*	sprechen	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	darf	VMFIN	*))	dürfen	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	–	XY	*	–	*	*	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	Bei	APPR	*	bei	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	alle	PIS	(NP*	aller	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	dem	PDS	(NP*	der	sg	neut	daja	-	-	-	-	(120)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	von	APPR	(VP(PP*	von	-	-	daja	-	-	-	-	(143
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	einem	ART	*	ein	sg	neut	daja	-	-	-	-	(102
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	Engel	NN	*)	engel	sg	neut	daja	-	-	-	-	102)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	lieber	ADV	(VP*	lieber	-	-	daja	-	-	-	-	143)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	Als	APPR	(PP*	als	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	einem	ART	*	ein	sg	neut	daja	-	-	-	-	(52
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	Menschen	NN	*)	mensch	sg	neut	daja	-	-	-	-	52)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	sich	PRF	*	sich	sg	-	daja	-	-	-	-	(52)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	22	gerettet	VVPP	*)	retten	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	23	denken	VVINF	*)))	denken	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	24	?	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Fühlt	VVFIN	(VROOT(PSEUDO(S*	fühlen	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	man	PIS	*	man	sg	*	daja	-	-	-	-	(52)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	der	ART	(NP*	der	sg	fem	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	ersten	ADJA	*	erster	sg	fem	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	unbegreiflichen	ADJA	*	unbegreiflich	sg	fem	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Ursache	NN	*	ursache	sg	fem	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	seiner	PPOSAT	(NP*	sein	sg	fem	daja	-	-	-	-	(144|(52)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Rettung	NN	*))	rettung	sg	fem	daja	-	-	-	-	144)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	nicht	PTKNEG	*	nicht	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	sich	PRF	*	sich	sg	-	daja	-	-	-	-	(52)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	so	ADV	(AVP*	so	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	Viel	ADV	*)	viel	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	näher	ADJD	*)	nah	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	?	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Stolz	ADJD	(VROOT(PSEUDO*	stolz	-	-	nathan	-	-	-	-	(145)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	!	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	und	KON	(VROOT(PSEUDO(S*	und	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	nichts	PIS	(NP*	nichts	*	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	als	APPR	(PP*	als	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Stolz	NN	*)))	stolz	sg	masc	nathan	-	-	-	-	(145)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	!	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Der	ART	(VROOT(PSEUDO(S(NP*	der	sg	masc	nathan	-	-	-	-	(146
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Topf	NN	*	topf	sg	masc	nathan	-	-	-	-	146)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Von	APPR	(PP*	von	*	*	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Eisen	NN	*))	eisen	*	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	will	VMFIN	*	wollen	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	mit	APPR	(VP(VP(NP(VP(PP*	mit	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	einer	PIS	*)	ein	sg	fem	nathan	-	-	-	-	(133
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	silbern	VVINF	*)	silbern	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	Zange	ADJA	*	zange	-	-	nathan	-	-	-	-	133)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	Gern	NN	*)	ger	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	aus	APPR	(PP*	aus	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	der	ART	*	der	sg	fem	nathan	-	-	-	-	(147
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	Glut	NN	*)	glut	sg	fem	nathan	-	-	-	-	147)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	gehoben	VVPP	*)	heben	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	sein	VAINF	*	sein	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	um	KOUI	(VP*	um	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	selbst	ADV	*	selbst	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	Ein	ART	(NP*	ein	*	*	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	Topf	NN	*	topf	sg	*	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	von	APPR	(PP*	von	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	Silber	NN	*))	silber	sg	*	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	22	sich	PRF	*	sich	sg	-	nathan	-	-	-	-	(146)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	23	zu	PTKZU	(VZ*	zu	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	24	dünken	VVINF	*))))	dünken	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	25	.	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Pah	NE	*	pah	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	!	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Und	KON	(S*	und	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	was	PWS	*	was	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	es	PPER	*	es	sg	neut	nathan	-	-	-	-	(143)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	schadet	VVFIN	*)	schaden	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	fragst	VVFIN	(S*	fragen	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	du	PPER	*)	du	sg	*	nathan	-	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	?	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	es	PPER	*	es	sg	neut	nathan	-	-	-	-	(143)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	schadet	VVFIN	*)	schaden	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	?	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	hilft	VVFIN	*	helfen	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	es	PPER	*)	es	sg	neut	nathan	-	-	-	-	(143)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	?	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	dürft	VVFIN	(VROOT(PSEUDO(S*	dürfen	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	ich	PPER	*	ich	sg	*	nathan	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	nur	ADV	(VP*	nur	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	hinwieder	ADV	*	hinwieder	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	fragen	VVINF	*))	fragen	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	.	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Denn	KON	(S*	denn	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	dein	PPOSAT	(S(NP*	dein	-	-	nathan	-	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	»	NN	*)	»	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Sich	PRF	(VP*	sich	sg	-	nathan	-	-	-	-	(52)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Gott	NN	*	gott	sg	masc	nathan	-	-	-	-	(22)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	um	KOUI	(AVP*	um	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	so	ADV	*)	so	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	viel	ADV	(AP*	viel	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	näher	ADJD	*)	nah	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	fühlen	VVINF	*)	fühlen	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	«	VAFIN	*)	«	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	Ist	VAFIN	*	sein	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	Unsinn	NN	(CNP*	unsinn	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	oder	KON	*	oder	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	Gotteslästerung	NN	*))	gotteslästerung	sg	fem	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	.	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Allein	ADV	(S(NP*	allein	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	es	PPER	*)	es	sg	neut	nathan	-	-	-	-	(143)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	schadet	VVFIN	*)	schaden	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	;	$.	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	ja	PTKANT	(S*	ja	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	es	PPER	(S*	es	sg	neut	nathan	-	-	-	-	(143)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	schadet	VVFIN	*	schaden	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	allerdings	ADV	*))	allerdings	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	.	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Kommt	VVFIN	*	kommen	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	!	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	hört	VVFIN	(VROOT(PSEUDO(S*	hören	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	mir	PPER	*	sich	sg	*	nathan	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	zu	PTKVZ	*)	zu	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	.	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Nicht	PTKNEG	*	nicht	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	wahr	PTKVZ	*	wahr	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	?	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	dem	ART	(VROOT(PSEUDO(CS(S(NP*	der	sg	masc	nathan	-	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Wesen	NN	*	wesen	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	das	PRELS	(S*	der	sg	neut	nathan	-	-	-	-	61)|(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Dich	PPER	*	dich	sg	neut	nathan	-	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	rettete	VVFIN	*))	retten	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	–	VAFIN	*	–	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	es	PPER	(S*	es	sg	neut	nathan	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	sei	VAFIN	*	sein	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	ein	ART	(CNP(NP*	ein	sg	neut	nathan	-	-	-	-	(115
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	Engel	NN	*)	engel	sg	neut	nathan	-	-	-	-	115)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	oder	KON	*	oder	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	Ein	ART	(NP*	ein	sg	masc	nathan	-	-	-	-	(114
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	Mensch	NN	*))))	mensch	sg	masc	nathan	-	-	-	-	114)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	dem	PDS	(S*	der	sg	masc	nathan	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	möchtet	VMFIN	*	möchten	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	ihr	PPER	*	ihr	sg	fem	nathan	-	-	-	-	(67)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	und	KON	(VP*	und	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	du	PPER	*	du	sg	*	nathan	-	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	22	besonders	ADV	*	besonders	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	23	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	24	Gern	NN	(NP*	gern	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	25	wieder	ADV	(NP(AP*	wieder	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	26	viele	PIAT	*)	vieler	pl	*	nathan	-	-	-	-	(148
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	27	große	ADJA	*	groß	pl	*	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	28	Dienste	NN	*))	dienst	pl	masc	nathan	-	-	-	-	148)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	29	tun	VVINF	*)))	tun	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	30	?	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Nicht	PTKNEG	*	nicht	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	wahr	PTKVZ	*	wahr	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	?	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Nun	ADV	*	nun	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	einem	ART	(NP*	ein	sg	neut	nathan	-	-	-	-	(94
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Engel	NN	*	engel	sg	neut	nathan	-	-	-	-	94)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	was	PWS	(S*	was	sg	neut	nathan	-	-	-	-	(148
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	für	APPR	(PP*	für	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	Dienste	NN	*	dienst	pl	masc	nathan	-	-	-	-	148)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	Für	APPR	(PP*	für	-	-	nathan	-	-	-	-	(148
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	große	ADJA	*	groß	pl	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	Dienste	NN	*))	dienst	pl	masc	nathan	-	-	-	-	148)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	könnt	VVFIN	*	können	pl	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	ihr	PPER	*	ihr	sg	fem	nathan	-	-	-	-	(67)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	dem	PDS	*	der	sg	neut	nathan	-	-	-	-	(94)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	wohl	ADV	*	wohl	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	tun	VVINF	*))	tun	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	?	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Ihr	PPER	(VROOT(PSEUDO(S*	ihr	pl	*	nathan	-	-	-	-	(67)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	könnt	VVFIN	*	können	pl	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	ihm	PPER	*	ihm	sg	*	nathan	-	-	-	-	(94)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	danken	VVINF	(VP*	danken	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	;	$.	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	zu	APPR	(CO(VP(PP*	zu	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	ihm	PPER	*)	ihm	sg	masc	nathan	-	-	-	-	(94)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	seufzen	VVINF	*)	seufzen	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	beten	VVINF	(VP*	beten	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	;	$.	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	Könnt	NN	(CO(VP*	könnt	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	in	APPR	(PP*	in	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	Entzückung	NN	*)	entzückung	sg	fem	nathan	-	-	-	-	(149
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	über	APPR	(PP*	über	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	ihn	PPER	*)	ihn	sg	masc	nathan	-	-	-	-	149)|(94)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	zerschmelzen	VVINF	*	zerschmelzen	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	;	$.	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	Könnt	NN	(NP*	könnt	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	an	APPR	(PP*	an	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	dem	ART	*	der	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	Tage	NN	*	tag	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	22	seiner	PPOSAT	(NP*	sein	pl	neut	nathan	-	-	-	-	(94)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	23	Feier	NN	*)))	feier	pl	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	24	fasten	VVINF	*)	fasten	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	25	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	26	Almosen	NN	(VP*	almosen	pl	fem	nathan	-	-	-	-	(150)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	27	spenden	VVINF	*))))))	spenden	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	28	.	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Alles	PIS	(NP*	alle	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	nichts	PIS	*)	nichts	*	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	.	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Denn	KON	(S(AVP(S*	denn	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	mich	PPER	*	mich	sg	*	nathan	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Deucht	VVFIN	*)	deucht	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	immer	ADV	*)	immer	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	daß	KOUS	(S*	daß	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	ihr	PPER	*	ihr	sg	fem	nathan	-	-	-	-	(67)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	selbst	ADV	(AVP*	selbst	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	und	KON	*)	und	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	euer	ADV	(NP*	eu	pl	masc	nathan	-	-	-	-	(52|(67)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	Nächster	NN	*	nächster	*	*	nathan	-	-	-	-	52)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	Hierbei	PROAV	(AVP*	hierbei	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	weit	ADV	*	weit	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	mehr	ADV	*))	mehr	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	gewinnt	ADJD	*))	gewinnen	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	als	KOKOM	(NP*	als	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	er	PPER	*)	er	sg	masc	nathan	-	-	-	-	(94)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	.	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Er	PPER	(VROOT(PSEUDO(CS(S*	er	sg	masc	nathan	-	-	-	-	(94)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	wird	VAFIN	*	werden	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Nicht	PTKNEG	(AP*	nicht	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	fett	ADJD	*)	fett	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	durch	APPR	(PP*	durch	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	euer	PPOSAT	*	eu	pl	fem	nathan	-	-	-	-	(67)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Fasten	NN	*)	fasten	pl	fem	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	;	$.	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	wird	VAFIN	(S*	werden	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	nicht	PTKNEG	*	nicht	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	reich	ADJD	*	reich	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	Durch	APPR	(PP*	durch	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	eure	PPOSAT	*	euer	pl	fem	nathan	-	-	-	-	(150|(67)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	Spenden	NN	*)))	spende	pl	fem	nathan	-	-	-	-	150)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	;	$.	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	wird	VAFIN	(S*	werden	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	nicht	PTKNEG	(NP(AP*	nicht	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	herrlicher	ADJA	*))))	herrlich	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	Durch	APPR	(S(PP*	durch	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	eur	PPOSAT	*	eur	-	-	nathan	-	-	-	-	(149|(67)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	Entzücken	NN	*)	entzücken	-	-	nathan	-	-	-	-	149)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	;	$.	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	22	wird	VAFIN	*	werden	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	23	nicht	PTKNEG	*	nicht	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	24	mächtiger	ADJA	(NP*	mächtig	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	25	Durch	NN	*	durch	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	26	eur	APPRART	(PP*	eur	-	-	nathan	-	-	-	-	(138|(67)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	27	Vertraun	NN	*)))	vertraun	-	-	nathan	-	-	-	-	138)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	28	.	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Nicht	PTKNEG	*	nicht	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	wahr	PTKVZ	*	wahr	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	?	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Allein	ADV	(VROOT(PSEUDO(NP*	allein	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	ein	ART	*	ein	sg	masc	nathan	-	-	-	-	(52
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Mensch	NN	*)	mensch	sg	masc	nathan	-	-	-	-	52)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	!	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	daja	-	-	-	-	(0
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	daja	-	-	-	-	0)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Ei	XY	*	ei	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	freilich	ADV	*	freilich	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	hätt	VAFIN	*	hätt	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	'	$(	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	ein	ART	*	ein	sg	masc	daja	-	-	-	-	(52
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Mensch	NN	*	mensch	sg	masc	daja	-	-	-	-	52)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	etwas	PIS	*	etwas	*	neut	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	für	APPR	*	für	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	ihn	PPER	*	ihn	sg	masc	daja	-	-	-	-	(52)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	Zu	PTKZU	*	zu	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	tun	VVINF	*	tun	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	uns	PPER	*	uns	pl	*	daja	-	-	-	-	(67)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	mehr	PIAT	*	mehr	*	*	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	Gelegenheit	NN	*	gelegenheit	sg	fem	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	verschafft	VVPP	*	verschaffen	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	.	$.	*	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Und	KON	(VROOT(PSEUDO(S(NP(S*	und	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Gott	NN	*	gott	sg	masc	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	weiß	VVFIN	*)	weiß	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	wie	PWAV	(S*	wie	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	bereit	ADJD	*	bereit	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	wir	PPER	*	wir	pl	*	daja	-	-	-	-	(67)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	dazu	PROAV	*))	dazu	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	waren	VAFIN	*)	sein	pl	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	!	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Allein	ADV	(VROOT(PSEUDO(CS(S(NP*	allein	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	er	PPER	*)	er	sg	masc	daja	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	wollte	VMFIN	*	wollen	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	ja	PTKANT	(AP(S*	ja	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	bedurfte	VVFIN	*)	bedürfen	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	ja	ADV	*	ja	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	So	ADV	*	so	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	völlig	ADJD	*)	völlig	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	nichts	PIS	*	nichts	*	neut	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	;	$.	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	war	VAFIN	(S*	sein	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	in	APPR	(AP(CPP(PP*	in	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	sich	PRF	*)	sich	sg	-	daja	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	mit	APPR	(PP*	mit	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	sich	PRF	*))	sich	sg	-	daja	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	so	ADV	*	so	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	Vergnügsam	ADJD	*)))	vergnügsam	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	als	KOKOM	(S*	als	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	nur	ADV	*	nur	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	22	Engel	NN	*	engel	pl	masc	daja	-	-	-	-	(102)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	23	sind	VAFIN	*)	sein	pl	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	24	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	25	nur	ADV	(S(VP(NP*	nur	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	26	Engel	NN	*)	engel	sg	neut	daja	-	-	-	-	(102)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	27	Sein	VAINF	*)	sein	sg	neut	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	28	können	VMFIN	*))	können	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	29	.	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	RECHA	NE	(VROOT(PSEUDO*	recha	-	-	recha	(LOC*)	-	-	-	(2
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	recha	-	-	-	-	2)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Endlich	ADV	(VROOT(PSEUDO(S*	endlich	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	,	$,	*	--	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	als	KOUS	*	als	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	er	PPER	*	er	sg	masc	recha	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	gar	ADV	*	gar	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	verschwand	ADJD	*)	verschwinden	sg	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	.	$.	*	--	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	.	$.	*	--	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	.	$.	*))	--	-	-	recha	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Verschwand	ADJD	(VROOT(PSEUDO*	verschwand	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	?	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO(S*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Wie	KOKOM	(AVP*	wie	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	denn	ADV	*)	denn	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	verschwand	VVFIN	*)	verschwinden	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	?	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO(S*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Sich	PRF	(VP*	sich	sg	-	nathan	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	untern	VVINF	*)	untern	-	-	nathan	-	-	-	-	(76
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Palmen	NN	*	palme	pl	fem	nathan	-	-	-	-	76)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Nicht	PTKNEG	(VP*	nicht	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	ferner	ADV	*	ferner	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	sehen	VVINF	*)	sehen	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	ließ	VVFIN	*)	lassen	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	?	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Wie	PWAV	*	wie	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	?	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	oder	KON	(VROOT(PSEUDO(S*	oder	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	habt	VAFIN	*	haben	pl	-	nathan	-	-	-	-	(151)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Ihr	PPER	(VP*	ihr	pl	*	nathan	-	-	-	-	(67)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	wirklich	ADJD	*	wirklich	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	schon	ADV	*	schon	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	ihn	PPER	*	ihn	sg	masc	nathan	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	weiter	ADV	*	weiter	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	aufgesucht	VVPP	*))	aufsuchen	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	?	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	daja	-	-	-	-	(0
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	daja	-	-	-	-	0)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Das	PDS	(VROOT(PSEUDO(S*	der	sg	neut	daja	-	-	-	-	(151)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	nun	ADV	*	nun	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	wohl	ADV	*	wohl	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	nicht	PTKNEG	*)	nicht	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	.	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Nicht	PTKNEG	(VROOT(PSEUDO(NP*	nicht	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Daja	NE	*)	daja	-	-	nathan	(PER*)	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	?	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	nicht	PTKNEG	*	nicht	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	?	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Da	KOUS	(S*	da	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	sieh	FM	(AVP*	sieh	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Nun	FM	*)	nun	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	was	PWS	*	was	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	es	PPER	*	es	sg	neut	nathan	-	-	-	-	(143)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	schadt	VVFIN	*)	schadt	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	!	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Grausame	ADJA	*	grausam	pl	fem	nathan	-	-	-	-	(67
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Schwärmerinnen	NN	*	schwärmerin	pl	fem	nathan	-	-	-	-	67)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	!	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Wenn	KOUS	(S*	wenn	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	dieser	PDAT	(NP*	dieser	sg	masc	nathan	-	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Engel	NN	*)	engel	sg	masc	nathan	-	-	-	-	61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	nun	ADV	*)	nun	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	–	ADV	(S*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	nun	ADV	*	nun	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	krank	ADJD	(VP*	krank	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	geworden	VAPP	*))	werden	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	!	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	.	$.	(VROOT(PSEUDO*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	.	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	RECHA	NE	(VROOT(PSEUDO*	recha	-	-	recha	(LOC*)	-	-	-	(2
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	recha	-	-	-	-	2)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Krank	NE	(VROOT(PSEUDO*	krank	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	!	$.	*))	--	-	-	recha	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	daja	-	-	-	-	(0
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	daja	-	-	-	-	0)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Krank	NE	(VROOT(PSEUDO*	krank	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	!	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Er	PPER	(VROOT(PSEUDO(S*	er	sg	masc	daja	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	wird	VAFIN	*	werden	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	doch	ADV	*	doch	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	nicht	PTKNEG	*)	nicht	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	!	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	RECHA	NE	(VROOT(PSEUDO*	recha	-	-	recha	(LOC*)	-	-	-	(2
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	recha	-	-	-	-	2)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Welch	PWAT	(VROOT(PSEUDO(S(NP*	welch	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	kalter	ADJA	*	kalt	pl	masc	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Schauer	NN	*)	schauer	*	*	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Befällt	VVFIN	*	befallen	pl	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	mich	PPER	*)	mich	sg	*	recha	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	!	$.	*))	--	-	-	recha	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Daja	NE	*	daja	-	-	recha	-	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	!	$.	*))	--	-	-	recha	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Meine	PPOSAT	(CAP(NP*	mein	sg	fem	recha	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Stirne	NN	*)	stirne	sg	fem	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	,	$,	*	--	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	sonst	ADV	(AP*	sonst	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	So	ADV	*	so	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	warm	ADJD	*)	warm	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	,	$,	*	--	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	fühl	ADJD	*)	fühl	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	!	$.	*))	--	-	-	recha	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	ist	VAFIN	(VROOT(PSEUDO(S*	sein	sg	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	auf	APPR	(PP*	auf	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	einmal	ADV	*)	einmal	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Eis	NN	*)	eis	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	.	$.	*))	--	-	-	recha	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Er	PPER	(VROOT(PSEUDO(CS(CS(S*	er	sg	masc	nathan	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	ist	VAFIN	*	sein	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Ein	ART	(NP*	ein	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Franke	NN	*))	franke	sg	masc	nathan	(PER*)	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	dieses	PDAT	(S(NP*	dieser	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Klimas	NN	*)	klima	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	ungewohnt	ADJD	*))	ungewohnt	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	;	$.	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	Ist	VAFIN	(S*	sein	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	jung	ADJD	*	jung	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	;	$.	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	der	ART	(NP*	der	sg	fem	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	harten	ADJA	*	hart	sg	fem	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	Arbeit	NN	*	arbeit	sg	fem	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	seines	PPOSAT	(NP*	sein	sg	masc	nathan	-	-	-	-	(152|(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	Standes	NN	*)))	stand	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	,	$,	*	--	-	-	nathan	-	-	-	-	152)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	Des	NE	(S(NP(MPN*	der	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	Hungerns	NE	*)	hungern	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	Wachens	NE	*)	wachen	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	22	ungewohnt	ADJD	*))	ungewohnt	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	23	.	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	RECHA	NE	(VROOT(PSEUDO*	recha	-	-	recha	(LOC*)	-	-	-	(2
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	recha	-	-	-	-	2)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Krank	NE	(VROOT(PSEUDO*	krank	-	-	recha	-	-	-	-	(153
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	!	$.	*))	--	-	-	recha	-	-	-	-	153)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	krank	ADJD	(VROOT(PSEUDO*	krank	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	!	$.	*))	--	-	-	recha	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	daja	-	-	-	-	(0
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	daja	-	-	-	-	0)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Das	PDS	(VROOT(PSEUDO(CS(S*	der	sg	neut	daja	-	-	-	-	(153)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	wäre	VAFIN	*	sein	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	möglich	ADJD	*)	möglich	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	meint	VVFIN	(S*	meinen	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	ja	ADV	(NP*	ja	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Nathan	NE	*)	nathan	-	-	daja	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	nur	ADV	*))	nur	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	.	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Nun	ADV	(VROOT(PSEUDO(S*	nun	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	liegt	VVFIN	*	liegen	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	er	PPER	*	er	sg	masc	nathan	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	da	PTKVZ	*)	da	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	!	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	hat	VAFIN	(VROOT(PSEUDO(S*	haben	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	weder	KON	(CNP*	weder	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Freund	NN	*	freund	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	noch	ADV	(NP*	noch	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Geld	NN	*))	geld	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Sich	PRF	(VP*	sich	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Freunde	NN	*	freund	pl	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	zu	PTKZU	(VZ*	zu	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	besolden	VVINF	*)))	besolden	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	.	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	RECHA	NE	(VROOT(PSEUDO*	recha	-	-	recha	(LOC*)	-	-	-	(2
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	recha	-	-	-	-	2)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Ah	XY	(VROOT(PSEUDO*	ah	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	,	$,	*	--	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	mein	PPOSAT	(NP*	mein	sg	masc	recha	-	-	-	-	(1|(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Vater	NN	*)	vater	sg	masc	recha	-	-	-	-	1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	!	$.	*))	--	-	-	recha	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Liegt	VVFIN	(VROOT(PSEUDO(S*	liegen	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	ohne	APPR	(PP*	ohne	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Wartung	NN	(CNP(NP*	wartung	sg	fem	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	ohne	APPR	(PP*	ohne	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Rat	NN	(CNP*	Rat	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	und	KON	*	und	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Zusprach	NN	*)))	zusprach	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	Ein	ART	(NP*	ein	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	Raub	NN	*	raub	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	der	ART	(NP*	der	pl	fem	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	Schmerzen	NN	*))	schmerz	pl	fem	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	und	KON	*	und	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	des	ART	(NP*	der	sg	masc	nathan	-	-	-	-	(154
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	Todes	NN	*)))	tod	sg	masc	nathan	-	-	-	-	154)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	da	PTKVZ	*)	da	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	!	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	RECHA	NE	(VROOT(PSEUDO*	recha	-	-	recha	(LOC*)	-	-	-	(2
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	recha	-	-	-	-	2)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Wo	PWAV	(VROOT(PSEUDO*	wo	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	?	$.	*))	--	-	-	recha	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	wo	PWAV	(VROOT(PSEUDO*	wo	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	?	$.	*))	--	-	-	recha	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Er	PPER	(VROOT(PSEUDO(S(NP*	er	sg	masc	nathan	-	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	der	PRELS	(S*	der	sg	masc	nathan	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	für	APPR	(PP*	für	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	eine	PIS	*)	ein	sg	fem	nathan	-	-	-	-	(2
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	die	PRELS	(S*	der	sg	fem	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	er	PPER	*	er	sg	masc	nathan	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	nie	ADV	*	nie	-	-	nathan	-	-	-	-	2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	Gekannt	NN	*)))	gekannt	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	gesehn	ADJD	(S(AP*	gesehn	-	-	nathan	-	-	-	-	61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	Ins	APPRART	(PP*	in	-	-	nathan	-	-	-	-	(62
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	Feur	NN	*))	feur	-	-	nathan	-	-	-	-	62)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	sich	PRF	*	sich	pl	-	nathan	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	stürzte	VVFIN	*))	stürzen	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	.	$.	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	.	$.	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	.	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	daja	-	-	-	-	(0
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	daja	-	-	-	-	0)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Nathan	NE	*	nathan	-	-	daja	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	schonet	VVFIN	*	schonen	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	ihrer	PPOSAT	*	ihr	sg	fem	daja	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	!	$.	*	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Der	PDS	(VROOT(PSEUDO(S(NP*	der	sg	masc	nathan	-	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	was	PRELS	(S*	was	sg	neut	nathan	-	-	-	-	(67
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	er	PPER	*	er	sg	masc	nathan	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	rettete	VVFIN	*))	retten	sg	-	nathan	-	-	-	-	67)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	nicht	PTKNEG	(S(AP*	nicht	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	näher	ADJD	*)	nah	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	kennen	VVINF	*	kennen	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	Nicht	PTKNEG	(VP(VP*	nicht	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	weiter	ADV	*	weiter	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	sehen	VVINF	*)	sehen	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	mocht	PTKNEG	*	mochen	sg	-	nathan	-	-	-	-	61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	Zu	PTKZU	(VZ*	zu	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	sparen	VVINF	*))))	sparen	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	.	$.	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	.	$.	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	.	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	daja	-	-	-	-	(0
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	daja	-	-	-	-	0)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Schonet	NN	(VROOT(PSEUDO(NP*	schonet	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	ihrer	PPOSAT	(NP*	ihr	sg	fem	daja	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Nathan	NE	*	nathan	-	-	daja	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	!	$.	*))))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Weiter	ADV	*	weiter	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Auch	ADV	*	auch	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	nicht	PTKNEG	*	nicht	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	zu	APPR	*	zu	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	sehn	CARD	*	sehn	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	verlangt	VVPP	*	verlangen	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	'	$(	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	–	KON	*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	es	PPER	*	es	sg	neut	nathan	-	-	-	-	(155)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	wäre	VAFIN	*	sein	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	denn	ADV	*	denn	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	Daß	KOUS	*	daß	-	-	nathan	-	-	-	-	(155
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	er	PPER	*	er	sg	masc	nathan	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	zum	APPRART	*	zu	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	zweiten	ADJA	*	zweiter	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	Mal	NN	*	mal	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	es	PPER	*	es	sg	neut	nathan	-	-	-	-	(67)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	retten	VVINF	*	retten	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	sollte	VMFIN	*	sollen	sg	-	nathan	-	-	-	-	155)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	–	$.	*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	22	Denn	KON	*	denn	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	23	gnug	ADJD	*	gnug	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	24	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	25	es	PPER	*	es	sg	neut	nathan	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	26	ist	VAFIN	*	sein	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	27	ein	ART	*	ein	sg	masc	nathan	-	-	-	-	(114
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	28	Mensch	NN	*	mensch	sg	masc	nathan	-	-	-	-	114)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	29	.	$.	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	30	.	$.	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	31	.	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	daja	-	-	-	-	(0
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	daja	-	-	-	-	0)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Hört	VVIMP	*	hören	pl	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	auf	PTKVZ	*	auf	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	und	KON	*	und	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	seht	VVFIN	*	sehen	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	!	$.	*	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Der	ART	*	der	sg	masc	nathan	-	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	der	PDS	*	der	sg	masc	nathan	-	-	-	-	61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	hat	VAFIN	*	haben	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	sterbend	ADJD	*	sterbend	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	sich	PRF	*	sich	sg	-	nathan	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	zu	PTKZU	*	zu	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	laben	VVINF	*	laben	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	nichts	PIS	*	nichts	*	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	–	$(	*	–	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	Als	KOUS	*	als	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	das	ART	*	der	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	Bewußtsein	NN	*	bewußtsein	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	dieser	PDAT	*	dieser	sg	masc	nathan	-	-	-	-	(72
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	Tat	NN	*	tat	sg	masc	nathan	-	-	-	-	72)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	!	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	daja	-	-	-	-	(0
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	daja	-	-	-	-	0)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Hört	VVIMP	*	hören	pl	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	auf	PTKVZ	*	auf	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	!	$.	*	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Ihr	PPER	(VROOT(PSEUDO(S*	ihr	-	-	daja	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	tötet	VVFIN	*	töten	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	sie	PPER	*)	sie	sg	fem	daja	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	!	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	du	PPER	*	du	sg	*	nathan	-	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	hast	VAFIN	*	haben	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	ihn	PPER	(VP*	ihn	sg	masc	nathan	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	getötet	VVPP	*))	töten	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	!	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Hättst	VVFIN	*	hättst	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	so	ADV	(S*	so	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	ihn	PPER	*	ihn	sg	masc	nathan	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	töten	VVINF	*	töten	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	können	VMFIN	*)	können	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	.	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Recha	NE	*	recha	-	-	nathan	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	!	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Recha	NE	(VROOT(PSEUDO(MPN*	recha	-	-	nathan	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	!	$.	*)))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Es	PPER	(VROOT(PSEUDO(S*	es	sg	neut	nathan	-	-	-	-	(120)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	ist	VAFIN	*	sein	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Arznei	NE	*	arznei	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	nicht	PTKNEG	*	nicht	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Gift	NN	*	gift	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	was	PWS	(S*	was	sg	neut	nathan	-	-	-	-	(120)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	ich	PPER	*	ich	sg	*	nathan	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	dir	PPER	*	dir	sg	*	nathan	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	reiche	VVFIN	*))	reichen	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	.	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Er	PPER	(VROOT(PSEUDO(S*	er	sg	masc	nathan	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	lebt	VVFIN	*)	leben	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	!	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	komm	VVIMP	(S*	komm	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	zu	APPR	(PP*	zu	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	dir	PPER	*))	dir	sg	*	nathan	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	!	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	ist	VAFIN	(S*	sein	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	auch	ADV	(AP*	auch	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	wohl	ADV	*	wohl	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	nicht	PTKNEG	*	nicht	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	krank	ADJD	*))	krank	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	;	$.	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Nicht	PTKNEG	(S(VP(AP(AVP*	nicht	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	einmal	ADV	*)	einmal	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	krank	ADJD	*)))	krank	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	!	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	RECHA	NE	(VROOT(PSEUDO*	recha	-	-	recha	(LOC*)	-	-	-	(2
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	recha	-	-	-	-	2)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Gewiß	ADV	(VROOT(PSEUDO(S*)	gewiß	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	?	$.	*))	--	-	-	recha	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	nicht	PTKNEG	(CO(AVP*	nicht	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	tot	ADJD	*))	tot	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	?	$.	*))	--	-	-	recha	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	nicht	PTKNEG	(VROOT(PSEUDO(VP(AP*	nicht	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	krank	ADJD	*))	krank	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	?	$.	*))	--	-	-	recha	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Gewiß	ADV	(VROOT(PSEUDO(S*	gewiß	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	nicht	PTKNEG	(AP*	nicht	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	tot	ADJD	*))	tot	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	!	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Denn	KON	(S*	denn	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Gott	NN	*	gott	-	-	nathan	(PER*)	-	-	-	(24)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	lohnt	VVFIN	*	lohnen	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Gutes	NN	*)	gut	sg	neut	nathan	-	-	-	-	(156)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	hier	ADV	*	hier	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Getan	NE	(NP*	getan	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	auch	ADV	(CO(AVP*	auch	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	hier	ADV	*	hier	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	noch	ADV	*)))	noch	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	.	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Geh	XY	*	geh	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	!	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Begreifst	VVFIN	(S*	begreifst	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	du	PPER	*)	du	sg	masc	nathan	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	aber	ADV	(NP*	aber	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Wie	PWAV	(S*	wie	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	viel	PIS	*	viel	*	*	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	andächtig	ADJD	(VP*	andächtig	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	schwärmen	VVFIN	(S*	schwärmen	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	leichter	ADJD	*)	leicht	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	als	APPR	(PP*	als	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	Gut	NN	*)	gut	sg	neut	nathan	-	-	-	-	(156
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	handeln	VVINF	*)	handeln	-	-	nathan	-	-	-	-	156)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	ist	VAFIN	*))	sein	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	?	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	wie	PWAV	*	wie	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	gern	ADV	*	gern	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	der	ART	*	der	sg	masc	nathan	-	-	-	-	(157
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	schlaffste	ADJA	*	schlaff	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Mensch	NN	*	mensch	sg	masc	nathan	-	-	-	-	157)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Andächtig	ADJD	*	andächtig	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	schwärmt	VVFIN	*	schwärmen	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	um	KOUI	*	um	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	nur	ADV	*	nur	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	–	$(	*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	ist	VAFIN	*	sein	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	er	PPER	*	er	sg	masc	nathan	-	-	-	-	(157)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	zu	APPR	*	zu	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	Zeiten	NN	*	zeit	pl	fem	nathan	-	-	-	-	(158)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	Sich	PRF	*	sich	pl	-	nathan	-	-	-	-	(157)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	schon	ADV	*	schon	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	der	ART	*	der	sg	fem	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	Absicht	NN	*	absicht	sg	fem	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	deutlich	ADJD	*	deutlich	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	nicht	PTKNEG	*	nicht	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	22	bewußt	ADJD	*	bewußt	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	23	–	XY	*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	24	Um	NN	*	um	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	25	nur	ADV	*	nur	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	26	gut	ADJD	*	gut	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	27	handeln	VVFIN	*	handeln	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	28	nicht	PTKNEG	*	nicht	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	29	zu	PTKZU	*	zu	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	30	dürfen	VMINF	*	dürfen	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	31	?	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	RECHA	NE	(VROOT(PSEUDO*	recha	-	-	recha	(LOC*)	-	-	-	(2
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	recha	-	-	-	-	2)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Ah	XY	(VROOT(PSEUDO*	ah	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	,	$,	*	--	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Mein	PPOSAT	(NP*	mein	sg	masc	recha	-	-	-	-	(1|(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Vater	NN	*)	vater	sg	masc	recha	-	-	-	-	1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	!	$.	*))	--	-	-	recha	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	laßt	VVIMP	(VROOT(PSEUDO(S*	lassen	pl	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	,	$,	*	--	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	laßt	VVIMP	(S*	lassen	pl	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Eure	PPOSAT	(NP*	euer	pl	fem	recha	-	-	-	-	(2|(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Recha	NE	*)	recha	-	-	recha	(PER*)	-	-	-	2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	doch	ADV	*	doch	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Nie	ADV	(AVP*	nie	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	wiederum	ADV	*	wiederum	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	allein	ADV	*)))	allein	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	!	$.	*))	--	-	-	recha	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	*	–	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Nicht	PTKNEG	*	nicht	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	wahr	PTKVZ	*	wahr	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	,	$,	*	--	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	er	PPER	*	er	sg	masc	recha	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	kann	VMFIN	*	können	sg	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Auch	ADV	*	auch	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	wohl	ADV	*	wohl	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	verreist	ADV	*	verreisen	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	nur	ADV	*	nur	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	sein	VAINF	*	sein	-	-	recha	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	?	$.	*	--	-	-	recha	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*))	–	-	-	recha	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Geht	VVFIN	*	gehen	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Allerdings	ADV	(S*)	allerdings	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	.	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Ich	PPER	*	ich	sg	*	nathan	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	seh	XY	*	seh	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	dort	ADV	*	dort	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	mustert	VVFIN	*	mustert	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	mit	APPR	*	mit	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	neugier	ADJA	*	neugi	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	'	$(	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	gem	ADJA	*	g	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	Blick	NN	*	blick	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	Ein	ART	*	ein	sg	masc	nathan	-	-	-	-	(3
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	Muselmann	NN	*	muselmann	sg	masc	nathan	-	-	-	-	3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	mir	PPER	*	sich	sg	*	nathan	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	die	ART	*	der	pl	masc	nathan	-	-	-	-	(55
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	beladenen	ADJA	*	beladen	-	-	nathan	-	-	-	-	55)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	Kamele	NN	*	kamele	pl	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	.	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Kennt	VVFIN	*	kennen	pl	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	ihr	PPER	*	ihr	sg	fem	nathan	-	-	-	-	(67)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	ihn	PPER	*	ihn	sg	masc	nathan	-	-	-	-	(3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	?	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	daja	-	-	-	-	(0
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	daja	-	-	-	-	0)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Ha	XY	*	ha	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	!	$.	*	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Euer	PPOSAT	(VROOT(PSEUDO(NP*	euer	-	-	daja	-	-	-	-	(3|(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Derwisch	NN	*)	derwisch	-	-	daja	-	-	-	-	3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	.	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Wer	PWS	*	wer	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	?	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	daja	-	-	-	-	(0
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	daja	-	-	-	-	0)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Euer	PPOSAT	(VROOT(PSEUDO(S(NP*	euer	-	-	daja	-	-	-	-	(3|(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Derwisch	NN	*)	derwisch	-	-	daja	-	-	-	-	3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	;	$.	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Euer	ADJA	(NP*	euer	-	-	daja	-	-	-	-	(3|(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Schachgesell	NN	*))	schachgesell	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	!	$.	*))	--	-	-	daja	-	-	-	-	3)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Al-Hafi	NE	(VROOT(PSEUDO(MPN*	al-hafi	-	-	nathan	(LOC*)	-	-	-	(3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	?	$.	*)))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	das	ART	(VROOT(PSEUDO(NP*	der	sg	neut	nathan	-	-	-	-	(3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Al-Hafi	NN	*)	al-hafi	sg	neut	nathan	(LOC*)	-	-	-	(159)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	?	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	daja	-	-	-	-	(0
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	daja	-	-	-	-	0)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Itzt	APPR	(VROOT(PSEUDO(PP*	itzt	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	des	ART	*	der	sg	neut	daja	-	-	-	-	(312
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Sultans	NN	*	sultan	sg	neut	daja	-	-	-	-	312)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Schatzmeister	NN	*)	schatzmeister	sg	masc	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	.	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Wie	PWAV	(VROOT(PSEUDO*	wie	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	?	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Al-Hafi	NE	(VROOT(PSEUDO(MPN*	al-hafi	-	-	nathan	(LOC*)	-	-	-	(3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	?	$.	*)))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Träumst	VVFIN	(VROOT(PSEUDO(S*	träumst	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	du	PPER	*	du	sg	*	nathan	-	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	wieder	ADV	*)	wieder	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	?	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO(S*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Er	PPER	*	er	sg	masc	nathan	-	-	-	-	(3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	ists	ADV	*)	ist	-	-	nathan	-	-	-	-	(159)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	!	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	wahrhaftig	ADJD	*	wahrhaftig	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	ists	FM	*	ists	-	-	nathan	-	-	-	-	(159)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	!	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	kömmt	VVFIN	(S*	kömmen	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	auf	APPR	(PP*	auf	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	uns	PPER	*)	uns	pl	*	nathan	-	-	-	-	(29)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	zu	PTKVZ	*)	zu	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	.	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Hinein	ADV	(VROOT(PSEUDO(CAP(AP(PP*	hinein	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	mit	APPR	*	mit	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Euch	PPER	*))	euch	pl	*	nathan	-	-	-	-	(67)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	geschwind	ADJD	*)	geschwind	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	!	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Was	PWS	*	was	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	werd	VAFIN	*	werden	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	'	$(	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	ich	PPER	*	ich	sg	*	nathan	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	hören	VVINF	*	hören	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	!	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Nathan	NE	(VROOT(PSEUDO(CNP*	nathan	-	-	_stage	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	und	KON	*	und	-	-	_stage	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	der	ART	(NP*	der	sg	masc	_stage	-	-	-	-	(3
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Derwisch	NN	*))	derwisch	sg	masc	_stage	-	-	-	-	3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	.	$.	*))	--	-	-	_stage	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DERWISCH	NE	(VROOT(PSEUDO*	derwisch	-	-	derwisch	(LOC*)	-	-	-	(3
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	derwisch	-	-	-	-	3)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Reißt	VVFIN	(VROOT(PSEUDO(S*	reißen	pl	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	nur	ADV	*	nur	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	die	ART	(NP*	der	pl	neut	derwisch	-	-	-	-	(161
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Augen	NN	*)	auge	pl	neut	derwisch	-	-	-	-	161)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	auf	PTKVZ	*	auf	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	,	$,	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	so	ADV	(S(AP*	so	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	weit	ADJD	*)	weit	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	Ihr	PPER	*	ihr	pl	*	derwisch	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	könnt	VVFIN	*))	können	pl	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	!	$.	*))	--	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Bist	VAFIN	*	sein	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	du	PPER	*	du	*	*	nathan	-	-	-	-	(308
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	'	$(	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	s	PPER	*	--	-	-	nathan	-	-	-	-	308)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	?	$.	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	bist	VAFIN	*	sein	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	du	PPER	*	du	sg	*	nathan	-	-	-	-	(3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	es	PPER	*	es	sg	neut	nathan	-	-	-	-	(159)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	nicht	PTKNEG	*	nicht	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	?	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	In	APPR	(NP(PP*	in	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	dieser	PDAT	*	dieser	sg	fem	nathan	-	-	-	-	(162
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Pracht	NN	*)	pracht	sg	fem	nathan	-	-	-	-	162)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Ein	ART	(NP*	ein	sg	neut	nathan	-	-	-	-	(163
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Derwisch	NN	*))	derwisch	sg	neut	nathan	-	-	-	-	163)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	!	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	.	$.	(VROOT(PSEUDO*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	.	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DERWISCH	NE	(VROOT(PSEUDO*	derwisch	-	-	derwisch	(LOC*)	-	-	-	(3
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	derwisch	-	-	-	-	3)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Nun	ADV	(VROOT(PSEUDO(S*)	nun	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	?	$.	*))	--	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	warum	PWAV	(VROOT(PSEUDO(S*	warum	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	denn	ADV	*	denn	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	nicht	PTKNEG	*)	nicht	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	?	$.	*))	--	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Läßt	VVFIN	(VROOT(PSEUDO(S*	lassen	sg	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	sich	PRF	*	sich	sg	-	derwisch	-	-	-	-	(163)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Aus	APPR	(CO(PP*	aus	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	einem	ART	*	ein	sg	neut	derwisch	-	-	-	-	(163
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Derwisch	NN	*)	derwisch	sg	neut	derwisch	-	-	-	-	163)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	denn	KON	*	denn	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	nichts	PIS	*)	nichts	*	neut	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	,	$,	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	gar	ADV	*	gar	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	nichts	PIS	(VP*	nichts	*	neut	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	machen	VVINF	*))	machen	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	?	$.	*))	--	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Ei	XY	*	ei	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	wohl	ADV	*	wohl	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	genug	PIAT	*	genug	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	!	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Ich	PPER	*	ich	sg	*	nathan	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	dachte	VVFIN	*	denken	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	mir	PPER	*	sich	sg	*	nathan	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	nur	ADV	*	nur	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	immer	ADV	*	immer	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Der	ART	*	der	sg	masc	nathan	-	-	-	-	(3
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	Derwisch	NN	*	derwisch	sg	masc	nathan	-	-	-	-	3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	–	ADV	*	–	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	so	ADV	*	so	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	der	ART	*	der	sg	masc	nathan	-	-	-	-	(163
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	rechte	ADJA	*	rechter	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	Derwisch	NN	*	derwisch	sg	masc	nathan	-	-	-	-	163)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	–	VVINF	*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	woll	VMFIN	*	woll	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	'	$(	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	Aus	APPR	*	aus	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	sich	PRF	*	sich	sg	-	nathan	-	-	-	-	(3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	nichts	PIS	*	nichts	*	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	machen	VVINF	*	machen	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	lassen	VVINF	*	lassen	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	22	.	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DERWISCH	NE	(VROOT(PSEUDO*	derwisch	-	-	derwisch	(LOC*)	-	-	-	(3
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	derwisch	-	-	-	-	3)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Beim	APPRART	(VROOT(PSEUDO(PP*	bei	-	-	derwisch	-	-	-	-	(164
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Propheten	NN	*)	prophet	pl	*	derwisch	-	-	-	-	164)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	!	$.	*))	--	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Daß	KOUS	(VROOT(PSEUDO(S(S*	daß	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	ich	PPER	*	ich	sg	*	derwisch	-	-	-	-	(3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	kein	PIAT	(NP*	kein	sg	masc	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	rechter	NN	*)	rechter	sg	masc	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	bin	VAFIN	*)	sein	sg	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	,	$,	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	mag	VMFIN	*	mögen	sg	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	auch	ADV	*	auch	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	wohl	ADV	*	wohl	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	wahr	ADJD	(VP*	wahr	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	sein	VAINF	*))	sein	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	.	$.	*))	--	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Zwar	ADV	*	zwar	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	wenn	KOUS	*	wenn	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	man	PIS	*	man	sg	*	derwisch	-	-	-	-	(163)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	muß	VMFIN	*	müssen	sg	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	–	XY	*	–	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Muß	VMFIN	*	müssen	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	!	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Derwisch	ADJD	(VROOT(PSEUDO*	derwisch	-	-	nathan	-	-	-	-	(163)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	!	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Derwisch	NN	*	derwisch	sg	masc	nathan	-	-	-	-	(163)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	muß	VMFIN	*	müssen	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	?	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Kein	PIAT	*	kein	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Mensch	NN	*	mensch	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	muß	VMFIN	*	müssen	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	müssen	VMFIN	*	müssen	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	und	KON	*	und	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	ein	ART	*	ein	sg	neut	nathan	-	-	-	-	(163
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Derwisch	NN	*	derwisch	sg	neut	nathan	-	-	-	-	163)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	müßte	VMFIN	*	müssen	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	?	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Was	PWS	*	was	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	müßt	VMFIN	*	müssen	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	'	$(	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	er	PPER	*	er	sg	masc	nathan	-	-	-	-	(163)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	denn	ADV	*	denn	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	?	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DERWISCH	NE	(VROOT(PSEUDO*	derwisch	-	-	derwisch	(LOC*)	-	-	-	(3
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	derwisch	-	-	-	-	3)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Warum	PWAV	(VROOT(PSEUDO(CO(S*	warum	-	-	derwisch	-	-	-	-	(165
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	man	PIS	*	man	sg	*	derwisch	-	-	-	-	(52)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	ihn	PPER	*	ihn	sg	masc	derwisch	-	-	-	-	(163)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	recht	ADV	*	recht	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	bittet	VVFIN	*)	bitten	sg	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	,	$,	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Und	KON	(S*	und	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	er	PPER	*	er	sg	masc	derwisch	-	-	-	-	(163)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	für	APPR	(PP*	für	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	gut	ADJD	*)	gut	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	erkennt	VVFIN	*))))	erkennen	-	-	derwisch	-	-	-	-	165)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Bei	APPR	(VROOT(PSEUDO(PP*	bei	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	unserm	PPOSAT	*	unser	sg	masc	nathan	-	-	-	-	(24|(166)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Gott	NN	*)	gott	sg	masc	nathan	-	-	-	-	24)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	!	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	da	ADV	(VROOT(PSEUDO(S*	da	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	sagst	VVFIN	*	sagen	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	du	PPER	*	du	sg	*	nathan	-	-	-	-	(3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	wahr	PTKVZ	*)	wahr	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	.	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Laß	VVIMP	(S*	lassen	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	dich	PRF	*	dich	sg	-	nathan	-	-	-	-	(3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Umarmen	NN	(CNP*	umarmen	pl	fem	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Mensch	NN	*))	mensch	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	.	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Du	PPER	(S*	du	sg	*	nathan	-	-	-	-	(3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	bist	VAFIN	*	sein	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	doch	ADV	*	doch	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	noch	ADV	*)	noch	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	mein	PPOSAT	(NP*	mein	sg	masc	nathan	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Freund	NN	*)	freund	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	?	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DERWISCH	NE	(VROOT(PSEUDO*	derwisch	-	-	derwisch	(LOC*)	-	-	-	(3
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	derwisch	-	-	-	-	3)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Und	KON	*	und	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	fragt	VVFIN	*	fragen	sg	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	nicht	PTKNEG	*	nicht	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	erst	ADV	*	erst	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	,	$,	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	was	PWS	*	was	sg	neut	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	ich	PPER	*	ich	sg	*	derwisch	-	-	-	-	(3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	geworden	VAPP	*	werden	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	bin	VAFIN	*	sein	sg	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	?	$.	*	--	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Trotz	APPR	*	trotz	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	dem	PDS	*	der	sg	neut	nathan	-	-	-	-	(160
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	was	PRELS	*	was	sg	neut	nathan	-	-	-	-	(160)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	du	PPER	*	du	sg	*	nathan	-	-	-	-	(3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	geworden	VAPP	*	werden	-	-	nathan	-	-	-	-	160)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	!	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DERWISCH	NE	(VROOT(PSEUDO*	derwisch	-	-	derwisch	(LOC*)	-	-	-	(3
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	derwisch	-	-	-	-	3)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Könnt	NE	*	könnt	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	'	$(	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	ich	PPER	*	ich	sg	*	derwisch	-	-	-	-	(3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	nicht	PTKNEG	*	nicht	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Ein	ART	*	ein	sg	neut	derwisch	-	-	-	-	(167
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Kerl	NN	*	kerl	sg	neut	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	im	APPRART	*	in	sg	masc	derwisch	-	-	-	-	(168
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Staat	NN	*	staat	sg	masc	derwisch	-	-	-	-	167)|168)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	geworden	VAPP	*	werden	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	sein	VAINF	*	sein	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	,	$,	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	des	ART	*	der	sg	masc	derwisch	-	-	-	-	(169|(167)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	Freundschaft	NN	*	freundschaft	sg	masc	derwisch	-	-	-	-	169)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	Euch	PPER	*	euch	pl	-	derwisch	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	ungelegen	ADJD	*	ungelegen	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	wäre	VAFIN	*	sein	sg	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	?	$.	*	--	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Wenn	KOUS	*	wenn	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	dein	PPOSAT	*	dein	sg	masc	nathan	-	-	-	-	(3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Herz	NN	*	herz	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Noch	ADV	*	noch	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Derwisch	ADJD	*	derwisch	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	ist	VAFIN	*	sein	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	so	ADV	*	so	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	wag	NE	*	wag	sg	*	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	'	$(	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	ichs	NE	*	ichs	-	-	nathan	-	-	-	-	(169)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	drauf	PTKVZ	*	drauf	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	.	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Der	ART	(VROOT(PSEUDO(S(NP*	der	sg	masc	nathan	-	-	-	-	(170
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Kerl	NN	*)	kerl	sg	masc	nathan	-	-	-	-	170)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Im	APPRART	(PP*	in	sg	masc	nathan	-	-	-	-	(168
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Staat	NN	*)	staat	sg	masc	nathan	-	-	-	-	168)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	ist	VAFIN	*	sein	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	nur	ADV	(NP*	nur	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	dein	PPOSAT	*	dein	sg	masc	nathan	-	-	-	-	(3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	Kleid	NN	*))	kleid	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	.	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DERWISCH	NE	(VROOT(PSEUDO*	derwisch	-	-	derwisch	(LOC*)	-	-	-	(3
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	derwisch	-	-	-	-	3)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Das	ART	*	der	sg	neut	derwisch	-	-	-	-	(170)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	auch	ADV	*	auch	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	geehrt	ADJD	*	ehren	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Will	VMFIN	*	wollen	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	sein	VAINF	*	sein	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	.	$.	*	--	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Was	PWS	(S*	was	sg	neut	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	meint	VVFIN	*	meinen	sg	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Ihr	PPER	*)	ihr	sg	neut	derwisch	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	?	$.	*))	--	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	ratet	VVFIN	*	raten	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	!	$.	*	--	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	*	–	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Was	PWS	*	was	sg	neut	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	wär	VAFIN	*	sein	sg	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	'	$(	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	ich	PPER	*	ich	sg	*	derwisch	-	-	-	-	(3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	An	APPR	*	an	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Eurem	PPOSAT	*	eurem	sg	masc	derwisch	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Hofe	NN	*	hof	sg	masc	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	?	$.	*	--	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Derwisch	ADJD	(VROOT(PSEUDO(S*	derwisch	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	;	$.	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	weiter	ADV	(NP*	weiter	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	nichts	PIS	*))	nichts	*	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	.	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Doch	KON	(VROOT(PSEUDO(S*	doch	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	neben	APPR	(PP*	neben	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	her	ADV	*)	her	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	wahrscheinlich	ADJD	(PP(AP*	wahrscheinlich	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	–	CARD	*)	–	*	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Koch	NN	*))	koch	sg	neut	nathan	(PER*)	-	-	-	(171)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	.	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DERWISCH	NE	(VROOT(PSEUDO*	derwisch	-	-	derwisch	(LOC*)	-	-	-	(3
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	derwisch	-	-	-	-	3)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Nun	ADV	(VROOT(PSEUDO*	nun	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	ja	ADV	*	ja	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	!	$.	*))	--	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Mein	PPOSAT	(VROOT(PSEUDO(VP(NP*	mein	sg	neut	derwisch	-	-	-	-	(3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Handwerk	NN	*	handwerk	sg	neut	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	bei	APPR	(PP*	bei	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Euch	PPER	*))	euch	sg	masc	derwisch	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	zu	PTKZU	(VZ*	zu	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	verlernen	VVINF	*))	verlernen	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	.	$.	*))	--	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Koch	NE	*	koch	-	-	derwisch	-	-	-	-	(171)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	!	$.	*))	--	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Nicht	PTKNEG	(VROOT(PSEUDO(NP*	nicht	sg	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Kellner	NN	*	kellner	sg	*	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	auch	ADV	*)	auch	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	?	$.	*))	--	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Gesteht	VVFIN	(S*	gesteht	sg	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	,	$,	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	daß	KOUS	(S*	daß	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Saladin	NE	*	saladin	sg	fem	derwisch	-	-	-	-	(7)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Mich	PPER	*	mich	sg	fem	derwisch	-	-	-	-	(3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	besser	ADJD	*))	gut	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	kennt	VVFIN	*	kennen	sg	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	.	$.	*))	--	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Schatzmeister	NN	*	schatzmeister	sg	masc	derwisch	-	-	-	-	(160)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	bin	VAFIN	(S*	sein	sg	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	ich	PPER	*	ich	sg	*	derwisch	-	-	-	-	(3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	bei	APPR	(VP(VP(PP*	bei	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Ihm	PPER	*))	ihm	-	-	derwisch	-	-	-	-	(7)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	worden	VAPP	*))	werden	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	.	$.	*))	--	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Du	PPER	*	du	sg	*	nathan	-	-	-	-	(3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	?	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	bei	APPR	(NP(PP*	bei	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	ihm	PPER	*))	ihm	sg	masc	nathan	-	-	-	-	(7)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	?	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DERWISCH	NE	(VROOT(PSEUDO*	derwisch	-	-	derwisch	(LOC*)	-	-	-	(3
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	derwisch	-	-	-	-	3)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Versteht	VVFIN	(VROOT(PSEUDO(CS(S*	verstehen	sg	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	:	$.	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Des	PPER	(S*	der	-	-	derwisch	-	-	-	-	(172
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	kleinern	VVFIN	*	kleinern	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Schatzes	NN	*))	schatz	-	-	derwisch	-	-	-	-	172)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	,	$,	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	–	NE	(S*	–	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	denn	KON	(S*	denn	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	des	ART	(NP*	der	sg	masc	derwisch	-	-	-	-	(173
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	größern	NN	*)	größern	sg	masc	derwisch	-	-	-	-	173)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	waltet	VVFIN	*)	walten	sg	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	Sein	PPOSAT	(NP*	sein	sg	masc	derwisch	-	-	-	-	(174|(7)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	Vater	NN	*)	vater	sg	masc	derwisch	-	-	-	-	174)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	noch	ADV	*	noch	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	–	NN	(NP*	–	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	des	ART	(NP*	der	sg	neut	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	Schatzes	NN	*)	schatz	sg	neut	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	für	APPR	(PP*	für	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	sein	PPOSAT	*	sein	sg	neut	derwisch	-	-	-	-	(175|(7)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	Haus	NN	*))))	haus	sg	neut	derwisch	-	-	-	-	175)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	.	$.	*))	--	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Sein	PPOSAT	(VROOT(PSEUDO(S(NP*	sein	sg	neut	nathan	-	-	-	-	(175|(7)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Haus	NN	*)	haus	sg	neut	nathan	-	-	-	-	175)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	ist	VAFIN	*	sein	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	groß	ADJD	*)	groß	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	.	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DERWISCH	NE	(VROOT(PSEUDO*	derwisch	-	-	derwisch	(LOC*)	-	-	-	(3
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	derwisch	-	-	-	-	3)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Und	KON	(VROOT(PSEUDO(CS(S*	und	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	größer	ADJD	*	groß	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	,	$,	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	als	KOUS	(S*	als	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Ihr	PPER	*	ihr	sg	neut	derwisch	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	glaubt	VVFIN	*))	glauben	sg	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	;	$.	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Denn	KON	(S*	denn	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	jeder	PIAT	(NP*	jeder	sg	masc	derwisch	-	-	-	-	(176
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	Bettler	NN	*)	bettler	sg	masc	derwisch	-	-	-	-	176)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	ist	VAFIN	*	sein	sg	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	von	APPR	(PP*	von	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	seinem	PPOSAT	*	sein	sg	neut	derwisch	-	-	-	-	(175|(7)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	Hause	NN	*)))	haus	sg	neut	derwisch	-	-	-	-	175)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	.	$.	*))	--	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Doch	KON	*	doch	-	-	nathan	-	-	-	-	(177
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	ist	VAFIN	*	sein	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	den	ART	*	der	pl	masc	nathan	-	-	-	-	(176
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Bettlern	NN	*	bettler	pl	masc	nathan	-	-	-	-	176)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Saladin	NE	*	saladin	sg	neut	nathan	-	-	-	-	(7)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	so	ADV	*	so	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	feind	ADJD	*	feind	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	–	XY	*	–	-	-	nathan	-	-	-	-	177)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DERWISCH	NE	(VROOT(PSEUDO*	derwisch	-	-	derwisch	(LOC*)	-	-	-	(3
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	derwisch	-	-	-	-	3)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Daß	KOUS	*	daß	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	er	PPER	*	er	sg	masc	derwisch	-	-	-	-	(7)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	mit	APPR	*	mit	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Strumpf	NN	*	strumpf	sg	masc	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	und	KON	*	und	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Stiel	NN	*	stiel	sg	neut	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	sie	PPER	*	sie	pl	*	derwisch	-	-	-	-	(176)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	zu	PTKZU	*	zu	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	vertilgen	VVINF	*	vertilgen	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	Sich	PRF	*	sich	pl	-	derwisch	-	-	-	-	(7)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	vorgesetzt	VVPP	*	vorsetzen	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	,	$,	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	–	$(	*	–	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	und	KON	*	und	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	sollt	VMFIN	*	sollen	sg	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	'	$(	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	er	PPER	*	er	sg	masc	derwisch	-	-	-	-	(7)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	selbst	ADV	*	selbst	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	darüber	PROAV	*	darüber	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	Zum	APPRART	*	zu	sg	neut	derwisch	-	-	-	-	(178
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	Bettler	NN	*	bettler	sg	neut	derwisch	-	-	-	-	178)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	werden	VAINF	*	werden	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	22	.	$.	*	--	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Brav	NE	(VROOT(PSEUDO*	brav	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	!	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	So	ADV	*	so	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	mein	PPOSAT	*	mein	-	-	nathan	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	'	$(	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	ichs	ADJD	*	ichs	-	-	nathan	-	-	-	-	(177)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	eben	ADV	*	eben	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	.	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DERWISCH	NE	(VROOT(PSEUDO*	derwisch	-	-	derwisch	(LOC*)	-	-	-	(3
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	derwisch	-	-	-	-	3)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Er	PPER	(VROOT(PSEUDO(S*	er	sg	masc	derwisch	-	-	-	-	(7)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	ists	ADV	*	ists	sg	-	derwisch	-	-	-	-	(178)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	auch	ADV	(AP*	auch	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	schon	ADV	(NP(AP*	schon	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	,	$,	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	trotz	APPR	*	trotz	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	einem	ART	*))))	ein	sg	neut	derwisch	-	-	-	-	(172)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	!	$.	*))	--	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Denn	KON	(S*	denn	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	sein	PPOSAT	(NP*	sein	sg	masc	derwisch	-	-	-	-	(172|(7)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Schatz	NN	*)	schatz	sg	masc	derwisch	-	-	-	-	172)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Ist	VAFIN	*	sein	sg	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	jeden	PIAT	(NP*	jeder	sg	masc	derwisch	-	-	-	-	(179
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Tag	NN	*	tag	sg	masc	derwisch	-	-	-	-	179)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	mit	APPR	(PP*	mit	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	Sonnenuntergang	NN	*)))	sonnenuntergang	sg	masc	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	Viel	ADV	(S(AP*	viel	sg	masc	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	leerer	ADJD	*)	leer	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	noch	ADV	*	noch	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	,	$,	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	als	APPR	(PP*	als	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	leer	ADJD	*))	leer	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	.	$.	*))	--	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Die	ART	(VROOT(PSEUDO(S(NP*	der	sg	fem	derwisch	-	-	-	-	(180
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Flut	NN	*	flut	sg	fem	derwisch	-	-	-	-	180)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	,	$,	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	so	ADV	(S(AP*	so	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	hoch	ADJD	*)	hoch	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Sie	PPER	*	sie	pl	*	derwisch	-	-	-	-	(180)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	morgens	ADV	*	morgens	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	eintritt	VVFIN	*))	eintreten	sg	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	,	$,	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	ist	VAFIN	*	sein	sg	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	des	ART	(NP*	der	sg	masc	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	Mittags	NN	*)	mittag	sg	masc	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	längst	ADV	*	längst	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	Verlaufen	NN	(NP*	verlaufen	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	–	CARD	*))))	–	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Weil	KOUS	(VROOT(PSEUDO(S*	weil	-	-	nathan	-	-	-	-	(181
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Kanäle	NN	*	kanal	sg	-	nathan	-	-	-	-	(182)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	sie	PPER	*	sie	sg	fem	nathan	-	-	-	-	(180)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	zum	APPRART	(CO(NP(PP*	zu	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Teil	NN	*)	teil	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Verschlingen	NN	*)	verschlingen	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	die	PRELS	(VP*	der	sg	fem	nathan	-	-	-	-	(182)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	zu	PTKZU	(VZ*	zu	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	füllen	VVINF	*))	füllen	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	oder	KON	*	oder	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	zu	APPR	(PP*	zu	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	Verstopfen	NN	*))	verstopfen	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	gleich	ADV	(AP*	gleich	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	unmöglich	ADJD	*)	unmöglich	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	ist	VAFIN	*)	sein	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	.	$.	*))	--	-	-	nathan	-	-	-	-	181)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DERWISCH	NE	(VROOT(PSEUDO*	derwisch	-	-	derwisch	(LOC*)	-	-	-	(3
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	derwisch	-	-	-	-	3)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Getroffen	VVPP	*	getroff	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	!	$.	*	--	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	nathan	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	kenne	VVFIN	*	kennen	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	das	PDS	*)	der	sg	neut	nathan	-	-	-	-	(181)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	!	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DERWISCH	NE	(VROOT(PSEUDO*	derwisch	-	-	derwisch	(LOC*)	-	-	-	(3
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	derwisch	-	-	-	-	3)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Es	PPER	(VROOT(PSEUDO(CS(S*	es	sg	neut	derwisch	-	-	-	-	(183)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	taugt	VVFIN	*	taugen	sg	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	nun	ADV	*	nun	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	freilich	ADV	*	freilich	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	nichts	PIS	*)	nichts	*	neut	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	,	$,	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Wenn	KOUS	(S*	wenn	-	-	derwisch	-	-	-	-	(183
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Fürsten	NN	(NP*	fürst	sg	masc	derwisch	-	-	-	-	(184)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	Geier	NE	*)	geier	sg	masc	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	unter	APPR	(PP*	unter	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	Äsern	NN	*)	äser	pl	masc	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	sind	VAFIN	*))	sein	pl	-	derwisch	-	-	-	-	183)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	.	$.	*))	--	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Doch	KON	(VROOT(PSEUDO(S*	doch	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	sind	VAFIN	*	sein	pl	-	derwisch	-	-	-	-	(185
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	sie	PPER	*	sie	pl	*	derwisch	-	-	-	-	(184)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Äser	NN	(NP*	äser	*	*	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	unter	APPR	(PP*	unter	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Geiern	NN	(MPN*	geier	sg	neut	derwisch	-	-	-	-	185)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	,	$,	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	taugts	FM	*)))	taugt	-	-	derwisch	-	-	-	-	(185)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	Noch	ADV	(AVP*	noch	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	zehnmal	ADV	*)	zehnmal	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	weniger	PIS	*)	weniger	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	.	$.	*))	--	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	O	KON	(VROOT(PSEUDO(S*	O	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	nicht	PTKNEG	*	nicht	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	doch	ADV	(AP*	doch	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Derwisch	ADJD	*))	derwisch	sg	neut	nathan	-	-	-	-	(3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	!	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Nicht	PTKNEG	(VROOT(PSEUDO(CO(AVP*	nicht	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	doch	ADV	*))	doch	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	!	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DERWISCH	NE	(VROOT(PSEUDO*	derwisch	-	-	derwisch	(LOC*)	-	-	-	(3
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	derwisch	-	-	-	-	3)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Ihr	PPER	*	ihr	pl	*	derwisch	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	habt	VAFIN	*	haben	pl	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	gut	ADJD	*	gut	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	reden	VVINF	*	reden	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	,	$,	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Ihr	PPER	*	ihr	pl	*	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	!	$.	*	--	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	*	–	sg	*	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Kommt	VVFIN	*	kommen	sg	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	an	PTKVZ	*	an	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	:	$.	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Was	PWS	*	was	sg	neut	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	gebt	VVFIN	*	geben	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Ihr	PPER	*	ihr	pl	*	derwisch	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	mir	PPER	*	sich	sg	*	derwisch	-	-	-	-	(3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	?	$.	*	--	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	so	ADV	*	so	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	tret	VVFIN	*	tret	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	'	$(	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	ich	PPER	*	ich	sg	*	derwisch	-	-	-	-	(3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	meine	PPOSAT	*	mein	sg	fem	derwisch	-	-	-	-	(186|(3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Stell	NN	*	stellen	sg	fem	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	'	$(	*	--	-	-	derwisch	-	-	-	-	186)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Euch	PPER	*	euch	pl	masc	derwisch	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	ab	PTKVZ	*	ab	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	.	$.	*	--	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	bringt	VVFIN	*	bringen	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	dir	PPER	*	dir	sg	fem	nathan	-	-	-	-	(3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	deine	PPOSAT	(NP*	dein	sg	fem	nathan	-	-	-	-	(186|(3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Stelle	NN	*))	stelle	sg	fem	nathan	-	-	-	-	186)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	?	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DERWISCH	NE	(VROOT(PSEUDO*	derwisch	-	-	derwisch	(LOC*)	-	-	-	(3
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	derwisch	-	-	-	-	3)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Mir	PPER	*	sich	sg	*	derwisch	-	-	-	-	(3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	?	$.	*	--	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Nicht	PTKNEG	(VROOT(PSEUDO(CO(AVP*	nicht	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	viel	ADV	*))	viel	*	*	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	.	$.	*))	--	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Doch	KON	(VROOT(PSEUDO(S*	doch	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Euch	PPER	*	euch	pl	*	derwisch	-	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	,	$,	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Euch	PPER	*	euch	pl	*	derwisch	-	-	-	-	1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	kann	VMFIN	*	können	sg	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	sie	PPER	(VP*	sie	sg	fem	derwisch	-	-	-	-	(186)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	trefflich	ADJD	*	trefflich	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	wuchern	VVINF	*))	wuchern	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	.	$.	*))	--	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Denn	KON	*	denn	-	-	derwisch	-	-	-	-	(187
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	ist	VAFIN	*	sein	sg	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	es	PPER	*	es	sg	neut	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Ebb	NE	*	ebb	-	-	derwisch	(PER*)	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	'	$(	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	im	APPRART	*	in	sg	neut	derwisch	-	-	-	-	(172
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Schatz	NN	*	schatz	sg	neut	derwisch	-	-	-	-	172)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	,	$,	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	–	NN	*	–	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	wie	KOKOM	*	wie	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	öfters	NE	*	öfter	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	ist	VAFIN	*	sein	sg	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	,	$,	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	–	KON	*	–	sg	neut	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	So	ADV	*	so	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	zieht	VVFIN	*	ziehen	sg	neut	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	Ihr	PPER	*	ihr	sg	neut	derwisch	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	Eure	PPOSAT	*	euer	pl	fem	derwisch	-	-	-	-	(188|(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	Schleusen	NN	*	schleusen	pl	fem	derwisch	-	-	-	-	188)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	auf	PTKVZ	*	auf	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	:	$.	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	schießt	VVFIN	*	schießen	sg	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	22	vor	PTKVZ	*	vor	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	23	,	$,	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	24	Und	KON	*	und	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	25	nehmt	VVFIN	*	nehmt	sg	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	26	an	APPR	*	an	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	27	Zinsen	NN	*	zins	pl	masc	derwisch	-	-	-	-	(189)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	28	,	$,	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	29	was	PWS	*	was	sg	neut	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	30	Euch	PPER	*	euch	sg	neut	derwisch	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	31	nur	ADV	*	nur	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	32	gefällt	VVPP	*	fällen	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	33	.	$.	*	--	-	-	derwisch	-	-	-	-	187)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Auch	ADV	(VROOT(PSEUDO(S*	auch	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Zins	NN	(NP*	zins	sg	*	nathan	-	-	-	-	(190
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	vom	APPRART	(PP*	von	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Zins	NN	*	zins	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	der	ART	(NP*	der	pl	fem	nathan	-	-	-	-	(189
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Zinsen	NN	*))))	zins	pl	fem	nathan	-	-	-	-	190)|189)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	?	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DERWISCH	NE	(VROOT(PSEUDO*	derwisch	-	-	derwisch	(LOC*)	-	-	-	(3
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	derwisch	-	-	-	-	3)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Freilich	ADV	(VROOT(PSEUDO(S*)	freilich	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	!	$.	*))	--	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Bis	APPR	(VROOT(PSEUDO(S*	bis	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Mein	PPOSAT	(NP*	mein	sg	neut	nathan	-	-	-	-	(35|(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Kapital	NN	*)	kapital	sg	neut	nathan	-	-	-	-	35)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	zu	APPR	(PP*	zu	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	lauter	PIAT	*	laut	*	*	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Zinsen	NN	*)	zins	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	wird	VAFIN	*)	werden	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	.	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DERWISCH	NE	(VROOT(PSEUDO*	derwisch	-	-	derwisch	(LOC*)	-	-	-	(3
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	derwisch	-	-	-	-	3)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Das	PDS	(VROOT(PSEUDO(S*	der	sg	neut	derwisch	-	-	-	-	(187)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	lockt	VVFIN	*	locken	sg	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Euch	PPER	*	euch	pl	*	derwisch	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	nicht	PTKNEG	*)	nicht	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	?	$.	*))	--	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	So	ADV	(S*	so	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	schreibet	VVFIN	*	schreiben	sg	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	unsrer	ADJA	(NP*	unsrer	sg	*	derwisch	-	-	-	-	(169|(166)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Freundschaft	NN	*	freundschaft	sg	fem	derwisch	-	-	-	-	169)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Nur	ADV	(AVP*	nur	sg	fem	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	gleich	ADV	*)))	gleich	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	den	ART	(NP*	der	sg	masc	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	Scheidebrief	NN	*)	scheidebrief	sg	masc	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	!	$.	*))	--	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Denn	KON	*	denn	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	wahrlich	ADV	*	wahrlich	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	hab	VAFIN	*	hab	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	'	$(	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Ich	PPER	*	ich	sg	*	derwisch	-	-	-	-	(3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	sehr	ADV	*	sehr	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	auf	APPR	*	auf	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Euch	PPER	*	euch	sg	neut	derwisch	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	gerechnet	VVPP	*	rechnen	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	.	$.	*	--	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Wahrlich	ADJD	(VROOT(PSEUDO*	wahrlich	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	?	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Wie	PWAV	(VROOT(PSEUDO(S*	wie	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Denn	NE	(NP*	denn	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	so	ADV	*))	so	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	?	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	wie	PWAV	(VROOT(PSEUDO(S*	wie	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	so	ADV	*	so	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	denn	ADV	*)	denn	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	?	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DERWISCH	NE	(VROOT(PSEUDO*	derwisch	-	-	derwisch	(LOC*)	-	-	-	(3
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	derwisch	-	-	-	-	3)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Daß	KOUS	(VROOT(PSEUDO(S(S*	daß	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Ihr	PPER	*	ihr	pl	*	derwisch	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	mir	PPER	*	sich	sg	*	derwisch	-	-	-	-	(3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	mein	PPOSAT	(NP*	mein	sg	neut	derwisch	-	-	-	-	(186|(3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Amt	NN	*)	amt	sg	neut	derwisch	-	-	-	-	186)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Mit	APPR	(PP*	mit	sg	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Ehren	NN	*))	ehre	pl	fem	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	würdet	VAFIN	*	würden	sg	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	führen	VVINF	(VP*	führen	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	helfen	VVINF	*	helfen	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	;	$.	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	daß	KOUS	(S*	daß	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	Ich	PPER	(NP*	ich	sg	*	derwisch	-	-	-	-	(3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	allzeit	ADV	(AP*	allzeit	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	offne	ADJA	*)	offn	-	-	derwisch	-	-	-	-	(188
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	Kasse	NN	*)	kasse	sg	-	derwisch	-	-	-	-	188)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	bei	APPR	(PP*	bei	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	Euch	PPER	*)	euch	-	-	derwisch	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	hätte	VAFIN	*)))	haben	sg	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	.	$.	*))	--	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Ihr	PPER	(S*	ihr	pl	*	derwisch	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	schüttelt	VVFIN	*)	schütteln	sg	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	?	$.	*))	--	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Nun	ADV	(VROOT(PSEUDO(S*	nun	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	verstehn	VVFIN	*	verstehn	pl	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	wir	PPER	*	wir	pl	*	nathan	-	-	-	-	(166)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	uns	PRF	*	uns	pl	-	nathan	-	-	-	-	(166)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	nur	ADV	(AP*	nur	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	recht	ADJD	*))	recht	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	!	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Hier	ADV	(VROOT(PSEUDO(VP*	hier	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	gibts	ADV	*	gibt	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	zu	PTKZU	(VZ*	zu	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	unterscheiden	VVINF	*))	unterscheiden	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	.	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Du	PPER	*	du	sg	*	nathan	-	-	-	-	(3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	?	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	warum	PWAV	*	warum	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Nicht	PTKNEG	*	nicht	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	du	PPER	*	du	sg	*	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	?	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Al-Hafi	NE	(VROOT(PSEUDO(S(MPN*	al-hafi	*	*	nathan	-	-	-	-	(3
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Derwisch	NE	*)	derwisch	sg	*	nathan	-	-	-	-	3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	ist	VAFIN	*	sein	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	zu	APPR	(PP*	zu	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	allem	PIS	*	alle	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Was	PWS	(S*	was	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	ich	PPER	*	ich	sg	*	nathan	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	vermag	VVFIN	*))	vermögen	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	mir	PPER	*	sich	sg	*	nathan	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	stets	ADV	*	stets	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	willkommen	ADJD	*)	willkommen	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	.	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Aber	KON	(NP*	aber	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Al-Hafi	NE	*	al-hafi	*	*	nathan	-	-	-	-	(170
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Defterdar	NE	*	defterdar	*	*	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	des	ART	(NP*	der	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Saladin	NN	*))	saladin	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Der	ART	(NP*	der	sg	masc	nathan	-	-	-	-	(170)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	–	NN	*)	–	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	dem	ART	(NP*	der	sg	masc	nathan	-	-	-	-	(170)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	–	NN	*)))	–	sg	masc	nathan	-	-	-	-	170)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DERWISCH	NE	(VROOT(PSEUDO*	derwisch	-	-	derwisch	(LOC*)	-	-	-	(3
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	derwisch	-	-	-	-	3)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Erriet	VVFIN	(VROOT(PSEUDO(S*	erriet	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	ichs	ADV	*	ich	-	-	derwisch	-	-	-	-	(191)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	nicht	PTKNEG	*)	nicht	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	?	$.	*))	--	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Daß	KOUS	(VROOT(PSEUDO(S*	daß	-	-	derwisch	-	-	-	-	(191
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Ihr	PPER	*	ihr	pl	*	derwisch	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	doch	ADV	*	doch	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	immer	ADV	(AP(AVP(AP(AVP*	immer	-	-	derwisch	-	-	-	-	191)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	So	ADV	*)	so	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	gut	ADJD	*	gut	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	als	KOKOM	(AP*	als	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	klug	ADJD	*))	klug	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	,	$,	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	so	ADV	*)	so	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	klug	ADJD	*	klug	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	als	KOKOM	(AVP*	als	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	weise	ADV	*))	weise	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	seid	VAFIN	*)	sein	pl	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	!	$.	*))	--	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Geduld	NN	*	geduld	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	!	$.	*))	--	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Ihr	PPER	*	ihr	sg	neut	derwisch	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	am	APPRART	(PP*	an	sg	masc	derwisch	-	-	-	-	(3
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Hafi	NE	*)	hafi	sg	masc	derwisch	-	-	-	-	3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	unterscheidet	VVFIN	*	unterscheiden	sg	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	,	$,	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Soll	VMFIN	(VP(S*	sollen	sg	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	bald	ADV	(VP*	bald	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	geschieden	VVPP	*))	scheiden	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	wieder	ADV	*	wieder	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	sein	VAINF	*))	sein	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	.	$.	*))	--	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Seht	VVFIN	*	sehen	sg	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	da	ADV	(NP*	da	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Das	ART	*	der	sg	neut	derwisch	-	-	-	-	(162
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Ehrenkleid	NN	*	ehrenkleid	sg	neut	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	,	$,	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	das	ART	(S(NP*	der	sg	neut	derwisch	-	-	-	-	(162)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Saladin	NN	*)	saladin	*	*	derwisch	-	-	-	-	(7)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	mir	PPER	*	sich	sg	*	derwisch	-	-	-	-	(3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	gab	VVFIN	*))	geben	sg	-	derwisch	-	-	-	-	162)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	.	$.	*))	--	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Eh	XY	(VROOT(PSEUDO*	eh	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	es	PPER	(NP(AVP(CS(S(VP*	es	sg	neut	derwisch	-	-	-	-	(162)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	verschossen	VVPP	*)	verschießen	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	ist	VAFIN	*)	sein	sg	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	,	$,	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	eh	ADV	(S*	eh	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	es	PPER	(NP*	es	sg	neut	derwisch	-	-	-	-	(162)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	zu	APPR	(PP*	zu	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	Lumpen	NN	*	lump	pl	fem	derwisch	-	-	-	-	(192)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	Geworden	NN	*)	geworden	pl	fem	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	,	$,	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	wie	PWAV	(S*	wie	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	sie	PPER	*	sie	pl	fem	derwisch	-	-	-	-	(192)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	einen	ART	(VP(NP*	ein	sg	masc	derwisch	-	-	-	-	(163
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	Derwisch	NN	*)	derwisch	sg	masc	derwisch	-	-	-	-	163)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	kleiden	VVINF	*)))))	kleiden	sg	masc	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	,	$,	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	Hängts	NN	(NP*	hängt	sg	masc	derwisch	-	-	-	-	(162)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	in	APPR	(PP*	in	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	Jerusalem	NE	*)))	jerusalem	sg	neut	derwisch	(LOC*)	-	-	-	(14)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	am	APPRART	(PP*	an	sg	masc	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	Nagel	NN	*))	nagel	sg	masc	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	22	,	$,	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	23	und	KON	*	und	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	24	Ich	PPER	(S*	ich	sg	*	derwisch	-	-	-	-	(3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	25	bin	VAFIN	*	sein	sg	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	26	am	APPRART	(PP*	an	-	-	derwisch	-	-	-	-	(193
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	27	Ganges	NN	*	gange	sg	neut	derwisch	-	-	-	-	193)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	28	,	$,	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	29	wo	PWAV	(S*	wo	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	30	ich	PPER	*	ich	sg	*	derwisch	-	-	-	-	(3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	31	leicht	ADJD	(CAVP*	leicht	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	32	und	KON	*	und	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	33	barfuß	ADV	*)	barfuß	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	34	Den	NE	*	der	pl	fem	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	35	heißen	VVFIN	*))	heiß	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	36	Sand	NN	*	sand	sg	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	37	mit	APPR	(PP*	mit	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	38	meinen	PPOSAT	*	mein	pl	neut	derwisch	-	-	-	-	(194|(3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	39	Lehrern	NN	*)	lehrer	pl	neut	derwisch	-	-	-	-	194)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	40	trete	VVFIN	*)	treten	sg	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	41	.	$.	*))	--	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Dir	PPER	(VROOT(PSEUDO(AP(AP*	dir	sg	*	nathan	-	-	-	-	(3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	ähnlich	ADJD	*)	ähnlich	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	gnug	ADJD	*)	gnug	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	!	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DERWISCH	NE	(VROOT(PSEUDO*	derwisch	-	-	derwisch	(LOC*)	-	-	-	(3
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	derwisch	-	-	-	-	3)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Schach	NE	*	schach	sg	neut	derwisch	-	-	-	-	(195)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	mit	APPR	(PP*	mit	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	ihnen	PPER	*)	ihnen	pl	neut	derwisch	-	-	-	-	(194)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	spiele	VVFIN	*)	spielen	sg	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	.	$.	*))	--	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Dein	PPOSAT	(VROOT(PSEUDO(NP*	dein	sg	neut	nathan	-	-	-	-	(195|(3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	höchstes	ADJA	*	hoch	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Gut	NN	*)	gut	sg	neut	nathan	-	-	-	-	195)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	!	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DERWISCH	NE	(VROOT(PSEUDO*	derwisch	-	-	derwisch	(LOC*)	-	-	-	(3
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	derwisch	-	-	-	-	3)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Denkt	VVFIN	(VROOT(PSEUDO(S*	denken	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	nur	ADV	*	nur	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	,	$,	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	was	PWS	(S*	was	sg	neut	derwisch	-	-	-	-	(196
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	mich	PPER	*	mich	sg	*	derwisch	-	-	-	-	(3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	verführte	VVFIN	*))	verführen	sg	-	derwisch	-	-	-	-	196)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	!	$.	*))	--	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Damit	PROAV	(S*	damit	sg	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	ich	PPER	*	ich	sg	*	derwisch	-	-	-	-	(3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	selbst	ADV	(AP(AVP*	selbst	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	nicht	PTKNEG	*)	nicht	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	länger	ADJD	*)	lang	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	betteln	VVINF	*	betteln	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	dürfte	VMFIN	*)	dürfen	sg	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	?	$.	*))	--	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Den	NE	(VROOT(PSEUDO(S(NP(AP*	der	pl	fem	derwisch	-	-	-	-	(160
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	reichen	ADJA	*)	reich	pl	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Mann	NN	*)	mann	pl	*	derwisch	-	-	-	-	160)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	mit	APPR	(VP(PP*	mit	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Bettlern	NN	*)	bettler	pl	masc	derwisch	-	-	-	-	(176)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	spielen	VVINF	*)	spielen	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	könnte	VMFIN	*)	können	sg	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	?	$.	*))	--	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Vermögend	ADJD	*	vermögend	-	-	derwisch	-	-	-	-	(197
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	wär	VAFIN	*	sein	sg	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	'	$(	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	im	APPRART	*	in	sg	masc	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Hui	NN	*	hui	sg	masc	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	den	ART	*	der	sg	masc	derwisch	-	-	-	-	(3
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	reichsten	ADJA	*	reich	sg	masc	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Bettler	NN	*	bettler	sg	masc	derwisch	-	-	-	-	3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	In	APPR	*	in	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	einen	ART	*	ein	sg	masc	derwisch	-	-	-	-	(160
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	armen	ADJA	*	arm	sg	masc	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	Reichen	NN	*	reiche	sg	masc	derwisch	-	-	-	-	160)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	zu	PTKZU	*	zu	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	verwandeln	VVINF	*	verwandeln	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	?	$.	*	--	-	-	derwisch	-	-	-	-	197)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Das	PDS	(VROOT(PSEUDO(S*	der	sg	neut	nathan	-	-	-	-	(197)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	nun	ADV	*	nun	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	wohl	ADV	*	wohl	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	nicht	PTKNEG	*)	nicht	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	.	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DERWISCH	NE	(VROOT(PSEUDO*	derwisch	-	-	derwisch	(LOC*)	-	-	-	(3
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	derwisch	-	-	-	-	3)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Weit	ADJD	(VROOT(PSEUDO(S*	weit	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	etwas	PIAT	(NP*	etwas	*	*	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Abgeschmackters	NN	*))	abgeschmackter	sg	*	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	!	$.	*))	--	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Ich	PPER	*	ich	sg	*	derwisch	-	-	-	-	(3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	fühlte	VVFIN	*	fühlen	sg	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	mich	PRF	*	mich	sg	*	derwisch	-	-	-	-	(3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	zum	APPRART	*	zu	sg	neut	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	erstenmal	ADV	*	erstenmal	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	geschmeichelt	VVPP	*	gesmeichelt	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	;	$.	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Durch	APPR	*	durch	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	Saladins	NE	*	saladin	-	-	derwisch	-	-	-	-	(198|(7)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	gutherz	NE	*	gutherz	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	'	$(	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	gen	APPR	*	gen	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	Wahn	NN	*	wahn	-	-	derwisch	-	-	-	-	198)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	geschmeichelt	VVPP	*	gesmeicheln	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	–	XY	*	–	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Der	PDS	*	der	sg	masc	nathan	-	-	-	-	(198)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	war	VAFIN	*	sein	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	?	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DERWISCH	NE	(VROOT(PSEUDO*	derwisch	-	-	derwisch	(LOC*)	-	-	-	(3
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	derwisch	-	-	-	-	3)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	»	XY	(VROOT(PSEUDO*	»	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Ein	ART	(S(NP*	ein	sg	masc	derwisch	-	-	-	-	(3
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Bettler	NN	*)	bettler	sg	masc	derwisch	-	-	-	-	3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	wisse	VVFIN	*	wissen	sg	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	nur	ADV	*	nur	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	,	$,	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	wie	PWAV	(S*	wie	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Bettlern	NE	(MPN*	bettler	pl	masc	derwisch	-	-	-	-	(176)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	Zu	NE	*)	zu	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	Mute	NN	*	mute	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	sei	VAFIN	*))	sein	sg	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	;	$.	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	ein	ART	(S(NP*	ein	sg	masc	derwisch	-	-	-	-	(3
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	Bettler	NN	*)	bettler	sg	masc	derwisch	-	-	-	-	3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	habe	VAFIN	*	haben	sg	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	nur	ADV	(VP*	nur	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	Gelernt	VVPP	*	gelernt	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	,	$,	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	mit	APPR	(VP(PP*	mit	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	guter	ADJA	*	gut	sg	fem	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	Weise	NN	*)	weise	sg	fem	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	Bettlern	NN	*	bettler	pl	masc	derwisch	-	-	-	-	(176)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	22	geben	VVINF	*)))	geben	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	23	.	$.	*))	--	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Dein	PPOSAT	(VROOT(PSEUDO(CS(S(NP*	dein	-	-	derwisch	-	-	-	-	(199|(3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Vorfahr	NN	*)	vorfahr	-	-	derwisch	-	-	-	-	199)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	,	$,	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	sprach	VVFIN	*	sprechen	sg	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	er	PPER	*)	er	sg	masc	derwisch	-	-	-	-	(7)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	,	$,	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	war	VAFIN	(S*	sein	sg	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	mir	PPER	*	sich	sg	*	derwisch	-	-	-	-	(3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	viel	ADV	(AP*	viel	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	zu	PTKA	*	zu	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	kalt	ADJD	*)	kalt	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	,	$,	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	Zu	PTKA	(AP*	zu	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	rauh	ADJD	*)))	rauh	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	.	$.	*))	--	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Er	PPER	*	er	sg	masc	derwisch	-	-	-	-	(199)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	gab	VVFIN	*	geben	sg	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	so	ADV	*	so	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	unhold	ADJD	*	unhold	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	,	$,	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	wenn	KOUS	*	wenn	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	er	PPER	*	er	sg	masc	derwisch	-	-	-	-	(199)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	gab	VVFIN	*	geben	sg	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	;	$.	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	Erkundigte	NN	*	erkundigte	pl	*	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	so	ADV	*	so	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	ungestüm	ADJD	*	ungestüm	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	sich	PRF	*	sich	sg	-	derwisch	-	-	-	-	(199)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	erst	ADV	*	erst	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	Nach	APPR	*	nach	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	dem	ART	*	der	sg	masc	derwisch	-	-	-	-	(176
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	Empfänger	NN	*	empfänger	sg	masc	derwisch	-	-	-	-	176)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	;	$.	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	nie	ADV	*	nie	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	zufrieden	ADJD	*	zufrieden	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	,	$,	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	daß	KOUS	*	daß	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	22	Er	PPER	*	er	sg	masc	derwisch	-	-	-	-	(199)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	23	nur	ADV	*	nur	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	24	den	ART	*	der	sg	masc	derwisch	-	-	-	-	(200
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	25	Mangel	NN	*	mangel	sg	masc	derwisch	-	-	-	-	200)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	26	kenne	VVFIN	*	kennen	sg	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	27	,	$,	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	28	wollt	VMFIN	*	wollen	pl	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	29	'	$(	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	30	er	PPER	*	er	sg	masc	derwisch	-	-	-	-	(199)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	31	auch	ADV	*	auch	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	32	Des	ART	*	der	sg	masc	derwisch	-	-	-	-	(201|(200
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	33	Mangels	NN	*	mangel	sg	masc	derwisch	-	-	-	-	200)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	34	Ursach	NN	*	ursach	-	-	derwisch	-	-	-	-	201)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	35	wissen	VVINF	*	wissen	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	36	,	$,	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	37	um	KOUI	*	um	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	38	die	ART	*	der	sg	fem	derwisch	-	-	-	-	(307
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	39	Gabe	NN	*	gabe	sg	fem	derwisch	-	-	-	-	307)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	40	Nach	APPR	*	nach	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	41	dieser	PDAT	*	dieser	sg	fem	derwisch	-	-	-	-	(201
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	42	Ursach	NN	*	ursach	sg	fem	derwisch	-	-	-	-	201)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	43	filzig	ADJD	*	filzig	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	44	abzuwägen	VVIZU	*	abwägen	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	45	.	$.	*	--	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Das	PDS	*	der	sg	neut	derwisch	-	-	-	-	(202)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	wird	VAFIN	*	werden	sg	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Al-Hafi	NE	*	al-hafi	sg	*	derwisch	-	-	-	-	(3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	nicht	PTKNEG	*	nicht	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	!	$.	*	--	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	So	ADV	*	so	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	unmild	ADJD	*	unmild	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	mild	ADJD	*	mild	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Wird	KOKOM	*	werden	sg	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Saladin	NE	*	saladin	sg	*	derwisch	-	-	-	-	(7)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	im	APPRART	*	in	sg	masc	derwisch	-	-	-	-	(3
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Hafi	NE	*	hafi	sg	masc	derwisch	-	-	-	-	3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	nicht	PTKNEG	*	nicht	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	erscheinen	VVINF	*	erscheinen	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	!	$.	*	--	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Al-Hafi	NE	*	al-hafi	sg	*	derwisch	-	-	-	-	(3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	gleicht	VVFIN	*	gleichen	sg	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	verstopften	ADJA	*	verstopft	pl	-	derwisch	-	-	-	-	(203
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Röhren	NN	*	röhren	sg	*	derwisch	-	-	-	-	203)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	nicht	PTKNEG	*	nicht	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	,	$,	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Die	NN	*	der	sg	fem	derwisch	-	-	-	-	(203|(203)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	ihre	PPOSAT	*	ihr	sg	fem	derwisch	-	-	-	-	(203)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	klar	ADJD	*	klar	-	-	derwisch	-	-	-	-	(204
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	und	KON	*	und	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	still	ADJD	*	still	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	empfangnen	ADJA	*	empfangnen	pl	masc	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	Wasser	NN	*	wasser	sg	neut	derwisch	-	-	-	-	204)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	So	ADV	*	so	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	unrein	ADJD	*	unrein	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	und	KON	*	und	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	so	ADV	*	so	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	sprudelnd	ADJD	*	sprudelnd	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	wieder	ADV	*	wieder	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	geben	VVINF	*	geben	-	-	derwisch	-	-	-	-	203)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	Al-Hafi	NE	*	al-hafi	-	-	derwisch	-	-	-	-	(3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	denkt	VVFIN	*	denken	sg	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	22	;	$.	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	23	Al-Hafi	NE	*	al-hafi	sg	*	derwisch	-	-	-	-	(3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	24	fühlt	VVFIN	*	fühlen	sg	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	25	wie	KOKOM	*	wie	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	26	ich	PPER	*	ich	sg	*	derwisch	-	-	-	-	(313)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	27	!	$.	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	28	«	XY	*	«	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	So	ADV	*	so	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	lieblich	ADJD	*	lieblich	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	klang	VVFIN	(S*	klingen	sg	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	des	ART	(NP*	der	sg	masc	derwisch	-	-	-	-	(196|(7
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Voglers	NN	*	vogler	sg	masc	derwisch	-	-	-	-	7)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Pfeife	NE	*)	pfeife	sg	-	derwisch	-	-	-	-	196)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	,	$,	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	bis	KOUS	(S*	bis	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	Der	ART	(NP*	der	sg	masc	derwisch	-	-	-	-	(3
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	Gimpel	NN	*)	gimpel	sg	masc	derwisch	-	-	-	-	3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	in	APPR	(PP*	in	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	dem	ART	*	der	sg	neut	derwisch	-	-	-	-	(186
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	Netze	NN	*)	netz	sg	neut	derwisch	-	-	-	-	186)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	war	VAFIN	*))	sein	sg	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	.	$.	*))	--	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Ich	PPER	*	ich	sg	*	derwisch	-	-	-	-	(3|(3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Geck	NE	*	geck	sg	-	derwisch	-	-	-	-	3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	!	$.	*))	--	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Ich	PPER	(VROOT(PSEUDO(NP*	ich	sg	*	derwisch	-	-	-	-	(3|(3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	eines	ART	(NP*	ein	sg	masc	derwisch	-	-	-	-	(7
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Gecken	NN	*	geck	sg	masc	derwisch	-	-	-	-	7)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Geck	NE	*))	geck	-	-	derwisch	-	-	-	-	3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	!	$.	*))	--	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Gemach	NN	(VROOT(PSEUDO(CNP*	gemach	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	mein	PPOSAT	(NP*	mein	sg	neut	nathan	-	-	-	-	(3|(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Derwisch	NN	*)	derwisch	sg	neut	nathan	-	-	-	-	3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Gemach	NN	*)	gemach	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	!	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DERWISCH	NE	(VROOT(PSEUDO*	derwisch	-	-	derwisch	(LOC*)	-	-	-	(3
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	derwisch	-	-	-	-	3)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Ei	NE	*	ei	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	was	PWS	*	was	sg	neut	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	!	$.	*	--	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	*	–	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Es	PPER	*	es	sg	neut	derwisch	-	-	-	-	(205)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	wär	VAFIN	*	sein	sg	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	'	$(	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	nicht	PTKNEG	*	nicht	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Geckerei	VVPP	*	geckerei	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	,	$,	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Bei	APPR	*	bei	-	-	derwisch	-	-	-	-	(205
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	Hunderttausenden	NN	*	hunderttausend	pl	neut	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	die	ART	*	der	pl	masc	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	Menschen	NN	*	mensch	pl	masc	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	drücken	VVINF	*	drücken	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	,	$,	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	Ausmergeln	NN	*	ausmergel	pl	masc	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	,	$,	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	plündern	VVFIN	*	plündern	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	,	$,	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	martern	VVINF	*	martern	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	,	$,	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	würgen	VVINF	*	würgen	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	;	$.	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	und	KON	*	und	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	22	Ein	ART	*	ein	sg	masc	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	23	Menschenfreund	NN	*	menschenfreund	sg	masc	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	24	an	APPR	*	an	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	25	einzeln	ADJD	*	einzeln	-	-	derwisch	-	-	-	-	(206)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	26	scheinen	VVINF	*	scheinen	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	27	wollen	VMFIN	*	wollen	pl	-	derwisch	-	-	-	-	205)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	28	Es	PPER	*	es	sg	neut	derwisch	-	-	-	-	(207)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	29	wär	VAFIN	*	sein	sg	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	30	'	$(	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	31	nicht	PTKNEG	*	nicht	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	32	Geckerei	VVPP	*	geckerei	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	33	,	$,	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	34	des	ART	*	der	sg	masc	derwisch	-	-	-	-	(207|(208|(209
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	35	Höchsten	NN	*	hoch	sg	masc	derwisch	-	-	-	-	209)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	36	Milde	NN	*	milde	sg	-	derwisch	-	-	-	-	208)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	37	,	$,	*	--	-	-	derwisch	-	-	-	-	207)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	38	Die	NN	*	der	pl	neut	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	39	sonder	KON	*	sonder	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	40	Auswahl	NN	*	auswahl	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	41	über	APPR	*	über	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	42	Bös	NE	*	bös	-	-	derwisch	-	-	-	-	(210)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	43	'	$(	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	44	und	KON	*	und	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	45	Gute	NN	*	gut	pl	*	derwisch	-	-	-	-	(211)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	46	Und	KON	*	und	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	47	Flur	NN	*	flur	sg	masc	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	48	und	KON	*	und	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	49	Wüstenei	NN	*	wüstenei	sg	fem	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	50	,	$,	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	51	in	APPR	*	in	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	52	Sonnenschein	NE	*	sonnenschein	sg	masc	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	53	Und	KON	*	und	sg	masc	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	54	Regen	APPR	*	regen	sg	masc	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	55	sich	PRF	*	sich	sg	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	56	verbreitet	VVPP	*	verbreiten	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	57	,	$,	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	58	–	NN	*	–	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	59	nachzuäffen	VVIZU	*	nachzuäffen	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	60	,	$,	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	61	Und	KON	*	und	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	62	nicht	PTKNEG	*	nicht	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	63	des	ART	*	der	sg	masc	derwisch	-	-	-	-	(212|(209
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	64	Höchsten	NN	*	hoch	sg	masc	derwisch	-	-	-	-	209)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	65	immer	ADV	*	immer	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	66	volle	ADJA	*	voll	sg	fem	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	67	Hand	NN	*	hand	sg	fem	derwisch	-	-	-	-	212)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	68	Zu	NN	*	zu	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	69	haben	VAFIN	*	haben	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	70	?	$.	*	--	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Was	PWS	*	was	sg	neut	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	?	$.	*	--	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	es	PPER	*	es	sg	neut	derwisch	-	-	-	-	(213)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	wär	VAFIN	*	sein	sg	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	'	$(	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	nicht	PTKNEG	*	nicht	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Geckerei	NN	*	geckerei	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	.	$.	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	.	$.	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	.	$.	*	--	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Genug	NN	(VROOT(PSEUDO*	genug	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	!	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	hör	XY	(VROOT(PSEUDO*	hör	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	auf	APPR	*	auf	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	!	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DERWISCH	NE	(VROOT(PSEUDO*	derwisch	-	-	derwisch	(LOC*)	-	-	-	(3
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	derwisch	-	-	-	-	3)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Laßt	VVIMP	(VROOT(PSEUDO(S*	lassen	pl	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	meiner	PPOSAT	(NP*	mein	sg	fem	derwisch	-	-	-	-	(213|(3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Geckerei	NN	*)	geckerei	sg	fem	derwisch	-	-	-	-	213)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Mich	PPER	*	mich	sg	*	derwisch	-	-	-	-	(3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	doch	ADV	*	doch	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	nur	ADV	(VP(AVP*	nur	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	auch	ADV	*)	auch	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	erwähnen	VVINF	*))	erwähnen	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	!	$.	*))	--	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	*	–	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Was	PWS	*	was	sg	neut	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	?	$.	*	--	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	es	PPER	(VROOT(PSEUDO(S*	es	sg	neut	derwisch	-	-	-	-	(213)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	wäre	VAFIN	*	sein	sg	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Nicht	PTKNEG	(VP(VP*	nicht	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Geckerei	NN	(NP*	geckerei	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	,	$,	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	an	APPR	(NP(PP*	an	-	-	derwisch	-	-	-	-	(213
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	solchen	PIAT	*	solcher	pl	fem	derwisch	-	-	-	-	(214
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Geckereien	NN	*)	geckerei	pl	fem	derwisch	-	-	-	-	213)|214)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	Die	ART	*	der	sg	fem	derwisch	-	-	-	-	(215
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	gute	ADJA	*	gut	sg	fem	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	Seite	NN	*	seite	sg	fem	derwisch	-	-	-	-	215)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	dennoch	ADV	*))	dennoch	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	auszuspüren	VVIZU	*)	ausspüren	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	,	$,	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	Um	KOUI	(VP*	um	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	Anteil	NN	*	anteil	sg	masc	derwisch	-	-	-	-	(213)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	,	$,	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	dieser	PDAT	(AP(NP*	dieser	sg	masc	derwisch	-	-	-	-	(215
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	guten	ADJA	*	gut	sg	masc	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	Seite	NN	*)	seite	sg	masc	derwisch	-	-	-	-	215)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	wegen	APPO	*)	wegen	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	,	$,	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	22	An	APPR	(PP*	an	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	23	dieser	PDAT	*	dieser	sg	fem	derwisch	-	-	-	-	(214
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	24	Geckerei	NN	*)	geckerei	sg	fem	derwisch	-	-	-	-	214)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	25	zu	PTKZU	(VZ*	zu	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	26	nehmen	VVINF	*))))	nehmen	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	27	?	$.	*))	--	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Heh	XY	*	heh	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	?	$.	*	--	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Das	PDS	*	der	sg	neut	derwisch	-	-	-	-	(213)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	nicht	PTKNEG	*	nicht	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	?	$.	*	--	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Al-Hafi	NE	(VROOT(PSEUDO(DL*	al-hafi	-	-	nathan	-	-	-	-	(3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	mache	VVFIN	(S*	machen	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	daß	KOUS	(S*	daß	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	du	PPER	*	du	sg	*	nathan	-	-	-	-	(3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	bald	ADV	(PP*	bald	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	In	APPR	*	in	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	deine	PPOSAT	*	dein	pl	masc	nathan	-	-	-	-	(104|(3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	Wüste	NN	*)	wüste	pl	masc	nathan	-	-	-	-	104)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	wieder	ADV	*	wieder	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	kömmst	VVFIN	*)))	kömmsen	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	.	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Ich	PPER	*	ich	sg	*	nathan	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	fürchte	VVFIN	*	fürchen	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Grad	NE	*	grad	-	-	nathan	-	-	-	-	(216
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	'	$(	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	unter	APPR	*	unter	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Menschen	NN	*	mensch	pl	masc	nathan	-	-	-	-	(52)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	möchtest	VMFIN	*	möchtest	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	du	PPER	*	du	sg	masc	nathan	-	-	-	-	(3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	ein	ART	*	ein	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	Mensch	NN	*	mensch	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	Zu	APPR	*	zu	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	sein	PPOSAT	*	sein	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	verlernen	ADJA	*	verlern	-	-	nathan	-	-	-	-	216)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DERWISCH	NE	(VROOT(PSEUDO*	derwisch	-	-	derwisch	(LOC*)	-	-	-	(3
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	derwisch	-	-	-	-	3)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Recht	NN	*	recht	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	,	$,	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	das	PDS	*	der	sg	neut	derwisch	-	-	-	-	(216)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	fürcht	VVFIN	*	fürcht	sg	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	'	$(	*	--	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	ich	PPER	*	ich	sg	*	derwisch	-	-	-	-	(3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	auch	ADV	*	auch	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	.	$.	*	--	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Lebt	VVPP	(VROOT(PSEUDO(VP*	leben	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	wohl	ADV	(S*))	wohl	-	-	derwisch	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	!	$.	*))	--	-	-	derwisch	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	So	ADV	(VROOT(PSEUDO(S(ISU*	so	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	hastig	ADJD	*))	hastig	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	?	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Warte	NN	*	warte	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	doch	ADV	(NP*	doch	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Al-Hafi	NE	*)	al-hafi	-	-	nathan	(LOC*)	-	-	-	(3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	.	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Entläuft	VVFIN	(VROOT(PSEUDO(S*	entlaufen	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	dir	PPER	*	dir	sg	*	nathan	-	-	-	-	(3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	denn	ADV	*	denn	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	die	ART	(NP*	der	sg	fem	nathan	-	-	-	-	(104
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Wüste	NN	*))	wüste	sg	fem	nathan	-	-	-	-	104)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	?	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Warte	NN	(NP*	warte	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	doch	ADV	*)	doch	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	!	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Daß	KOUS	(S*	daß	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	er	PPER	*	er	sg	masc	nathan	-	-	-	-	(3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	mich	PPER	*	mich	sg	*	nathan	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	hörte	VVFIN	*)	hören	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	!	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	He	NE	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Al-Hafi	NE	*	al-hafi	-	-	nathan	-	-	-	-	(3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	!	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	hier	ADV	(VROOT(PSEUDO(S*)	hier	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	!	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Weg	NN	*	weg	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	ist	VAFIN	*	sein	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	er	PPER	*	er	sg	masc	nathan	-	-	-	-	(3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	;	$.	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	und	KON	*	und	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	ich	PPER	*	ich	sg	*	nathan	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	hätt	VAFIN	*	hätt	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	'	$(	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	ihn	PPER	*	ihn	sg	masc	nathan	-	-	-	-	(3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	noch	ADV	*	noch	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	so	ADV	*	so	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	gern	ADV	*	gern	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	Nach	APPR	*	nach	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	unserm	PPOSAT	*	unser	sg	neut	nathan	-	-	-	-	(61|(29)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	Tempelherrn	NN	*	tempelherr	sg	neut	nathan	-	-	-	-	61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	gefragt	VVPP	*	fragen	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	.	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Vermutlich	ADV	(VROOT(PSEUDO(DL*	vermutlich	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Daß	KOUS	(S*	daß	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	er	PPER	*	er	sg	masc	nathan	-	-	-	-	(3)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	ihn	PPER	*	ihn	sg	masc	nathan	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	kennt	VVFIN	*))	kennen	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	.	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Daja	NE	(VROOT(PSEUDO*	daja	-	-	_stage	(PER*)	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	eilig	ADJD	(AP*	eilig	-	-	_stage	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	herbei	ADV	*)	herbei	-	-	_stage	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	.	$.	*))	--	-	-	_stage	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Nathan	NE	(VROOT(PSEUDO*	nathan	-	-	_stage	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	_stage	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	daja	-	-	-	-	(0
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	daja	-	-	-	-	0)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	O	NE	(VROOT(PSEUDO(NP(MPN*	O	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Nathan	NE	*)	nathan	-	-	daja	-	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Nathan	NE	*)	nathan	-	-	daja	-	-	-	-	1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	!	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Nun	ADV	(VROOT(PSEUDO(S*)	nun	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	?	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Was	PWS	*	was	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	gibts	ADV	*	gibt	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	?	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	daja	-	-	-	-	(0
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	daja	-	-	-	-	0)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Er	PPER	(VROOT(PSEUDO(S*	er	sg	masc	daja	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	läßt	VVFIN	*	lassen	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	sich	PRF	*	sich	sg	-	daja	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	wieder	ADV	(NP*	wieder	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	sehn	CARD	*))	sehn	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	!	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Er	PPER	(VROOT(PSEUDO(S*	er	sg	masc	daja	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	läßt	VVFIN	*	lassen	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Sich	PRF	*	sich	sg	-	daja	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	wieder	ADV	(NP*	wieder	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	sehn	CARD	*))	sehn	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	!	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Wer	PWS	*	wer	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Daja	NE	*	daja	-	-	nathan	(PER*)	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	?	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	wer	PWS	*	wer	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	?	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	daja	-	-	-	-	(0
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	daja	-	-	-	-	0)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Er	PPER	*	er	sg	masc	daja	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	!	$.	*	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	er	PPER	*	er	sg	masc	daja	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	!	$.	*	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Er	PPER	*	er	sg	masc	nathan	-	-	-	-	(22)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	?	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Er	PPER	*	er	sg	masc	nathan	-	-	-	-	(22)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	?	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	KON	*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Wann	PWAV	*	wann	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	läßt	VVFIN	*	lassen	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	sich	PRF	*	sich	sg	-	nathan	-	-	-	-	(22)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	der	ART	*	der	sg	masc	nathan	-	-	-	-	(22)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	nicht	PTKNEG	*	nicht	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	sehn	CARD	*	sehn	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	!	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Ja	PTKANT	*	ja	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	so	ADV	*	so	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Nur	ADV	*	nur	-	-	nathan	-	-	-	-	(217
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	euer	PPOSAT	*	eu	sg	masc	nathan	-	-	-	-	(99)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Er	PPER	*	er	sg	masc	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	heißt	VVFIN	*	heißen	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	er	PPER	*	er	sg	masc	nathan	-	-	-	-	217)|(22)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	.	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Das	PDS	*	der	sg	neut	nathan	-	-	-	-	(217)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	sollt	VMFIN	*	sollen	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	'	$(	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	er	PPER	*	er	sg	masc	nathan	-	-	-	-	(22)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	nicht	PTKNEG	*	nicht	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	!	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Und	KON	*	und	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	wenn	KOUS	*	wenn	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	er	PPER	*	er	sg	masc	nathan	-	-	-	-	(22)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	auch	ADV	*	auch	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	ein	ART	*	ein	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Engel	NN	*	engel	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	wäre	VAFIN	*	sein	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	nicht	PTKNEG	*	nicht	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	!	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	daja	-	-	-	-	(0
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	daja	-	-	-	-	0)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Er	PPER	(VROOT(PSEUDO(CS(S*	er	sg	masc	daja	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	wandelt	VVFIN	*	wandeln	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	untern	APPR	(PP*	untern	-	-	daja	-	-	-	-	(76
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Palmen	NN	*)	palme	pl	fem	daja	-	-	-	-	76)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	wieder	ADV	*	wieder	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	auf	APPR	(PP*	auf	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Und	NN	*)	und	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	ab	PTKVZ	*)	ab	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	;	$.	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	und	KON	*	und	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	bricht	VVFIN	(S*	brechen	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	von	APPR	(PP*	von	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	Zeit	NN	*)	zeit	sg	fem	daja	-	-	-	-	(158)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	zu	APPR	(PP*	zu	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	Zeit	NN	*)))	zeit	sg	fem	daja	-	-	-	-	(158)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	sich	PRF	*	sich	sg	-	daja	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	Datteln	NN	*	dattel	pl	neut	daja	-	-	-	-	(218)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	.	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Sie	PPER	(VROOT(PSEUDO(VP(AP*	sie	sg	fem	nathan	-	-	-	-	(218)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	essend	ADJD	*))	essend	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	?	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	und	KON	*	und	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	als	APPR	(PP*	als	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Tempelherr	NN	*)	tempelherr	sg	masc	nathan	-	-	-	-	(114)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	?	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	daja	-	-	-	-	(0
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	daja	-	-	-	-	0)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Was	PWS	*	was	sg	neut	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	quält	VVFIN	*	quälen	pl	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Ihr	PPER	*	ihr	pl	*	daja	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	mich	PPER	*	mich	sg	*	daja	-	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	?	$.	*	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	*	–	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Ihr	PPER	*	ihr	pl	*	daja	-	-	-	-	(219|(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	gierig	ADJD	*	gierig	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Aug	NN	*	aug	-	-	daja	-	-	-	-	219)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	'	$(	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	erriet	VVFIN	*	erraten	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	ihn	PPER	*	ihn	sg	masc	daja	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	hinter	APPR	*	hinter	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	Den	ART	*	der	pl	fem	daja	-	-	-	-	(76
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	dicht	ADJD	*	dicht	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	verschränkten	ADJA	*	verschränkt	pl	fem	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	Palmen	NN	*	palme	pl	fem	daja	-	-	-	-	76)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	schon	ADV	*	schon	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	;	$.	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	und	KON	*	und	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	folgt	VVFIN	*	folgen	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	Ihm	PPER	*	ihm	sg	neut	daja	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	unverrückt	ADJD	*	unverrückt	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	.	$.	*	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Sie	PPER	(VROOT(PSEUDO(S*	sie	sg	fem	daja	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	läßt	VVFIN	*	lassen	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Euch	PPER	*	euch	pl	*	daja	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	bitten	VVINF	(VP*	bitten	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	–	KOUS	(S*	–	pl	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Euch	PPER	(NP*	euch	pl	-	daja	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Beschwören	NN	*)	beschwören	pl	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	–	NN	*	–	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	ungesäumt	ADJD	(AP*	ungesäumen	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	ihn	PPER	(VP*	ihn	sg	masc	daja	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	anzugehn	VVIZU	*)))))	anzugehn	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	.	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	O	ITJ	(VROOT(PSEUDO(S*)	O	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	eilt	VVFIN	*	eilen	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	!	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Sie	PPER	(VROOT(PSEUDO(S*	sie	sg	fem	daja	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	wird	VAFIN	*	werden	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Euch	PPER	(VP*	euch	pl	*	daja	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	aus	APPR	(PP*	aus	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	dem	ART	*	der	sg	neut	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Fenster	NN	*)	fenster	sg	neut	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	winken	VVINF	*	winken	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	Ob	KOUS	(S*	ob	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	er	PPER	*	er	sg	masc	daja	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	hinauf	ADV	*	hinauf	sg	masc	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	geht	VVFIN	*	gehen	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	oder	KON	*	oder	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	weiter	ADV	(PP*	weiter	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	ab	APPR	*	ab	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	Sich	NE	*)	sich	sg	-	daja	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	schlägt	VVFIN	*)))	schlagen	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	.	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	O	ITJ	(VROOT(PSEUDO(S*)	O	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	eilt	VVFIN	*	eilen	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	!	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	So	ADV	*	so	-	-	nathan	-	-	-	-	(220
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	wie	KOKOM	*	wie	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	ich	PPER	*	ich	sg	*	nathan	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	vom	APPRART	*	von	sg	neut	nathan	-	-	-	-	(55
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Kamele	NN	*	kamel	sg	neut	nathan	-	-	-	-	55)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Gestiegen	VVPP	*	gestieg	sg	neut	nathan	-	-	-	-	220)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Ihm	PPER	*	ihm	sg	masc	nathan	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	zu	PTKVZ	*	zu	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	;	$.	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	und	KON	*	und	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	meld	ADJD	*	meld	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	'	$(	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	ihm	PPER	*	ihm	sg	masc	nathan	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	meine	PPOSAT	*	mein	sg	fem	nathan	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	Wiederkunft	NN	*	wiederkunft	sg	fem	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	.	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Gib	VVIMP	(VROOT(PSEUDO(S*	geben	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Acht	CARD	*	acht	-	-	nathan	-	-	-	-	(221)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	der	ART	(CS(S(NP*	der	sg	masc	nathan	-	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Biedermann	NE	*)	biedermann	sg	masc	nathan	(PER*)	-	-	-	61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	hat	VAFIN	*	haben	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	nur	ADV	(VP(VP(NP*	nur	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	mein	PPOSAT	*	mein	sg	masc	nathan	-	-	-	-	(19|(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	Haus	NN	*	haus	sg	neut	nathan	-	-	-	-	19)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	In	APPR	(PP*	in	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	meinem	PPOSAT	*	mein	sg	neut	nathan	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	Absein	NN	*))	absein	sg	neut	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	nicht	PTKNEG	*	nicht	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	betreten	VVINF	*)	betreten	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	wollen	VMINF	*))	wollen	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	;	$.	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	Und	KON	(S*	und	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	kömmt	VVFIN	*	kömmen	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	nicht	PTKNEG	*	nicht	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	ungern	VVINF	(VP*	ungern	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	wenn	KOUS	(S*	wenn	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	22	der	ART	(NP*	der	sg	masc	nathan	-	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	23	Vater	NN	*)	vater	sg	masc	nathan	-	-	-	-	1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	24	selbst	ADV	(VP(NP*	selbst	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	25	Ihn	PPER	*)	ihn	sg	masc	nathan	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	26	laden	VVINF	*)	laden	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	27	läßt	VVFIN	*)))))	lassen	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	28	.	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Geh	XY	*	geh	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	sag	VVFIN	*	sag	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	'	$(	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	ich	PPER	*	ich	sg	*	nathan	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	laß	VVFIN	*	lassen	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	'	$(	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	ihn	PPER	*	ihn	sg	masc	nathan	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	bitten	VVFIN	*	bitten	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	Ihn	PPER	*	ihn	sg	masc	nathan	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	herzlich	ADJD	*	herzlich	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	bitten	VVINF	*	bitten	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	.	$.	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	.	$.	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	.	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	daja	-	-	-	-	(0
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	daja	-	-	-	-	0)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	All	PIAT	*	all	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	umsonst	ADV	*	umsonst	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	!	$.	*	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Er	PPER	(VROOT(PSEUDO(S*	er	sg	masc	daja	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	kömmt	VVFIN	*	kömmen	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Euch	PPER	*	euch	pl	*	daja	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	nicht	PTKNEG	*)	nicht	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	.	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Denn	KON	(S*	denn	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	kurz	ADJD	*	kurz	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	;	$.	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	er	PPER	*	er	sg	masc	daja	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	kömmt	VVFIN	*)	kömmen	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	zu	APPR	*	zu	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	keinem	PIAT	(NP*	kein	sg	masc	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	Juden	NN	*)	Jude	sg	masc	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	.	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	nathan	(LOC*)	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	1)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	So	ADV	(VROOT(PSEUDO*	so	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	geh	XY	*	gehen	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	geh	XY	*	geh	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	wenigstens	ADV	(S*	wenigstens	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	ihn	PPER	(VP*	ihn	sg	masc	nathan	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	anzuhalten	VVIZU	*)	anhalten	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	;	$.	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	Ihn	PPER	*	ihn	sg	masc	nathan	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	wenigstens	ADV	*	wenigstens	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	mit	APPR	(PP*	mit	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	deinen	PPOSAT	*	dein	pl	neut	nathan	-	-	-	-	(222|(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	Augen	NN	*))	auge	pl	neut	nathan	-	-	-	-	222)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	zu	APPR	*	zu	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	Begleiten	NN	*	begleit	pl	fem	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	.	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Geh	XY	*	geh	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	ich	PPER	(S*	ich	sg	*	nathan	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	komme	VVFIN	*	kommen	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	gleich	ADV	*	gleich	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	dir	PPER	*	dir	sg	*	nathan	-	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	nach	PTKVZ	*)	nach	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	.	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Nathan	NE	(VROOT(PSEUDO(S(AVP(S*	nathan	-	-	nathan	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	eilet	VVFIN	*	eilet	sg	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	hinein	PTKVZ	*)	hinein	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	und	KON	*)	und	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Daja	NE	*	daja	-	-	nathan	(PER*)	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	heraus	PTKVZ	*)	heraus	-	-	nathan	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	.	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Szene	NN	(VROOT(PSEUDO(S*	szene	sg	fem	_stage	-	-	-	-	(223)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	:	$.	*	--	-	-	_stage	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	ein	ART	(NP*	ein	sg	masc	_stage	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Platz	NN	*	platz	sg	masc	_stage	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	mit	APPR	(PP*	mit	-	-	_stage	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Palmen	NN	*))	palme	pl	fem	_stage	-	-	-	-	(76
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	,	$,	*	--	-	-	_stage	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	unter	APPR	(PP*	unter	-	-	_stage	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	welchen	PWAT	*	welcher	sg	fem	_stage	-	-	-	-	(76)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	der	ART	*	der	sg	fem	_stage	-	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	Tempelherr	NN	*)	tempelherr	sg	masc	_stage	-	-	-	-	61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	auf	PTKVZ	*	auf	-	-	_stage	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	und	KON	*	und	-	-	_stage	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	nieder	ADV	*	nieder	-	-	_stage	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	geht	VVFIN	*)	gehen	sg	-	_stage	-	-	-	-	76)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	.	$.	*))	--	-	-	_stage	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Ein	ART	(VROOT(PSEUDO(S(NP*	ein	sg	masc	_stage	-	-	-	-	(5
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Klosterbruder	NN	*)	klosterbruder	sg	masc	_stage	-	-	-	-	5)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	folgt	VVFIN	*	folgen	sg	-	_stage	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	ihm	PPER	*	ihm	sg	masc	_stage	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	in	APPR	(PP*	in	-	-	_stage	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	einiger	PIAT	*	einiger	sg	fem	_stage	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Entfernung	NN	*)	entfernung	sg	fem	_stage	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	von	APPR	(PP*	von	-	-	_stage	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	der	ART	*	der	sg	fem	_stage	-	-	-	-	(224
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	Seite	NN	*)	seite	sg	fem	_stage	-	-	-	-	224)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	,	$,	*	--	-	-	_stage	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	immer	ADV	(AVP*	immer	-	-	_stage	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	als	KOKOM	(S*	als	-	-	_stage	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	ob	KOUS	*	ob	-	-	_stage	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	er	PPER	*	er	sg	masc	_stage	-	-	-	-	(5)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	ihn	PPER	*	ihn	sg	masc	_stage	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	anreden	VVINF	*	anreden	-	-	_stage	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	wolle	VMFIN	*)))	wollen	sg	-	_stage	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	.	$.	*))	--	-	-	_stage	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	tempelherr	(LOC*)	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	tempelherr	-	-	-	-	61)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Der	PDS	(VROOT(PSEUDO(S*	der	sg	masc	tempelherr	-	-	-	-	(5)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	folgt	VVFIN	*	folgen	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	mir	PPER	*	sich	sg	*	tempelherr	-	-	-	-	(4)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	nicht	PTKNEG	*	nicht	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	vor	APPR	(PP*	vor	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	langer	ADJA	*	lang	pl	masc	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Weile	NN	*))	weile	pl	masc	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	!	$.	*))	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Sieh	NE	(NP*	sieh	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	,	$,	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Wie	PWAV	(S*	wie	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	schielt	VVFIN	*	schielen	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	er	PPER	*	er	sg	masc	tempelherr	-	-	-	-	(5)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	nach	APPR	(PP*	nach	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	den	ART	*	der	pl	fem	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	Händen	NN	*)))	hand	pl	fem	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	!	$.	*))	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Guter	ADJA	(NP*	guter	*	*	tempelherr	-	-	-	-	(5
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Bruder	NN	*)	bruder	sg	*	tempelherr	-	-	-	-	5)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	,	$,	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	.	$.	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	.	$.	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	.	$.	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Ich	PPER	(S*	ich	sg	*	tempelherr	-	-	-	-	(4)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	kann	VMFIN	*	können	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	Euch	PPER	*	euch	pl	*	tempelherr	-	-	-	-	(5)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	auch	ADV	(NP*	auch	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	wohl	ADV	(CNP(NP*	wohl	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	Vater	NN	*)	vater	sg	masc	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	nennen	VVINF	*	nennen	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	;	$.	*))	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	nicht	PTKNEG	*)	nicht	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	?	$.	*))	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	klosterbruder	(LOC*)	-	-	-	(5
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	klosterbruder	-	-	-	-	5)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Nur	ADV	(VROOT(PSEUDO(VP(NP*	nur	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Bruder	NN	*	bruder	-	-	klosterbruder	-	-	-	-	(225)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	–	APPR	(PP*	–	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Laienbruder	NN	*	laienbruder	*	masc	klosterbruder	-	-	-	-	(225)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	nur	ADV	*)	nur	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	;	$.	*)	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	zu	PTKZU	(VZ*	zu	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	dienen	VVINF	*))	dienen	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	.	$.	*))	--	-	-	klosterbruder	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	tempelherr	(LOC*)	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	tempelherr	-	-	-	-	61)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Ja	PTKANT	*	ja	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	,	$,	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	guter	ADJA	*	gut	*	*	tempelherr	-	-	-	-	(5
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Bruder	NN	*	bruder	sg	*	tempelherr	-	-	-	-	5)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	,	$,	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	wer	PWS	*	wer	sg	*	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	nur	ADV	*	nur	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	selbst	ADV	*	selbst	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	was	PWS	*	was	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	hätte	VAFIN	*	haben	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	!	$.	*	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Bei	APPR	(VROOT(PSEUDO(PP*	bei	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Gott	NN	*)	gott	sg	masc	tempelherr	-	-	-	-	(22)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	!	$.	*))	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	bei	APPR	(VROOT(PSEUDO(PP*	bei	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Gott	NN	*)	gott	-	-	tempelherr	-	-	-	-	(22)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	!	$.	*))	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	ich	PPER	*	ich	sg	*	tempelherr	-	-	-	-	(4)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	habe	VAFIN	*	haben	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	nichts	PIS	*	nichts	*	neut	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	–	XY	*	–	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	klosterbruder	(LOC*)	-	-	-	(5
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	klosterbruder	-	-	-	-	5)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	doch	ADV	(NP*	doch	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Recht	NN	*)	recht	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	warmen	VVFIN	*	warm	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Dank	NN	*)	dank	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	!	$.	*))	--	-	-	klosterbruder	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Gott	NN	*	gott	-	-	klosterbruder	(PER*)	-	-	-	(22)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	geb	XY	*	geb	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	'	$(	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Euch	PPER	*	euch	-	-	klosterbruder	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	tausendfach	VVFIN	*	tausendfach	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Was	PWS	*	was	sg	neut	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Ihr	PPER	*	ihr	sg	neut	klosterbruder	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	gern	ADV	*	gern	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	geben	VVINF	*	geben	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	wolltet	VMFIN	*	wollten	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	.	$.	*	--	-	-	klosterbruder	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Denn	KON	(VROOT(PSEUDO(S*	denn	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	der	ART	(NP*	der	sg	masc	klosterbruder	-	-	-	-	(226
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Wille	NN	*	wille	sg	masc	klosterbruder	-	-	-	-	226)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Und	KON	(CNP*	und	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	nicht	PTKNEG	(NP*	nicht	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	die	ART	*	der	sg	fem	klosterbruder	-	-	-	-	(150
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Gabe	NN	*)))	gabe	sg	fem	klosterbruder	-	-	-	-	150)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	macht	VVFIN	*	machen	sg	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	den	ART	(NP*	der	sg	masc	klosterbruder	-	-	-	-	(211
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	Geber	NN	*))	geber	sg	masc	klosterbruder	-	-	-	-	211)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	.	$.	*))	--	-	-	klosterbruder	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	*	–	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Auch	ADV	*	auch	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Ward	VAFIN	*	ward	sg	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	ich	PPER	*	ich	sg	*	klosterbruder	-	-	-	-	(5)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	dem	ART	*	der	sg	neut	klosterbruder	-	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Herrn	NN	*	herr	sg	masc	klosterbruder	-	-	-	-	61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Almosens	NE	*	almosen	sg	masc	klosterbruder	(PER*)	-	-	-	(150)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	wegen	APPR	*	wegen	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	gar	ADV	*	gar	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	Nicht	PTKNEG	*	nicht	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	nachgeschickt	VVPP	*	nachschicken	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	.	$.	*	--	-	-	klosterbruder	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	tempelherr	(LOC*)	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	tempelherr	-	-	-	-	61)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Doch	KON	(VROOT(PSEUDO(S*	doch	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	aber	ADV	*	aber	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	nachgeschickt	VVFIN	*)	nachschicken	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	?	$.	*))	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	klosterbruder	(LOC*)	-	-	-	(5
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	klosterbruder	-	-	-	-	5)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Ja	PTKANT	(VROOT(PSEUDO(S*	ja	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	;	$.	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	aus	APPR	(NP(PP*	aus	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	dem	ART	*	der	sg	neut	klosterbruder	-	-	-	-	(227
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Kloster	NN	*)))	kloster	sg	neut	klosterbruder	-	-	-	-	227)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	.	$.	*))	--	-	-	klosterbruder	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	tempelherr	(LOC*)	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	tempelherr	-	-	-	-	61)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Wo	PWAV	(VROOT(PSEUDO(S*	wo	-	-	tempelherr	-	-	-	-	(227
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	ich	PPER	*	ich	sg	*	tempelherr	-	-	-	-	(4)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	eben	ADV	(AVP*	eben	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	jetzt	ADV	*)	jetzt	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Ein	ART	(VP(NP*	ein	sg	neut	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	kleines	ADJA	*	klein	sg	neut	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Pilgermahl	NN	*)	pilgermahl	sg	neut	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	zu	PTKZU	(VZ*	zu	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	finden	VVINF	*))	finden	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	hoffte	VVFIN	*)))	hoffen	sg	-	tempelherr	-	-	-	-	227)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	klosterbruder	(LOC*)	-	-	-	(5
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	klosterbruder	-	-	-	-	5)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Die	ART	*	der	sg	fem	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Tische	NN	*	tisch	sg	fem	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	waren	VAFIN	*	sein	pl	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	schon	ADV	*	schon	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	besetzt	VVPP	*	besetzen	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	:	$.	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	komm	VVIMP	*	komm	sg	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	'	$(	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	aber	KON	*	aber	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	Der	ART	*	der	sg	masc	klosterbruder	-	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	Herr	NN	*	herr	sg	masc	klosterbruder	-	-	-	-	61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	nur	ADV	*	nur	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	wieder	ADV	*	wieder	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	mit	APPR	*	mit	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	zurück	PTKVZ	*	zurück	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	.	$.	*	--	-	-	klosterbruder	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	tempelherr	(LOC*)	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	tempelherr	-	-	-	-	61)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Wozu	PWAV	(VROOT(PSEUDO*	wozu	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	?	$.	*))	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Ich	PPER	*	ich	sg	*	tempelherr	-	-	-	-	(228|(4)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	habe	VAFIN	*	haben	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Fleisch	NN	*	fleisch	sg	neut	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	wohl	ADV	*	wohl	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	lange	ADV	*	lange	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	nicht	PTKNEG	*	nicht	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	gegessen	VVPP	*	gegessen	-	-	tempelherr	-	-	-	-	228)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	:	$.	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	Allein	ADV	*	allein	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	was	PIS	*	was	*	neut	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	tuts	FM	*	tut	-	-	tempelherr	-	-	-	-	(228)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	?	$.	*	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Die	ART	(VROOT(PSEUDO(S(NP*	der	pl	*	tempelherr	-	-	-	-	(218
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Datteln	NN	*)	dattel	pl	*	tempelherr	-	-	-	-	218)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	sind	VAFIN	*	sein	pl	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	ja	ADV	(AP*	ja	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	reif	ADJD	*))	reif	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	.	$.	*))	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	klosterbruder	(LOC*)	-	-	-	(5
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	klosterbruder	-	-	-	-	5)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Nehm	NE	*	nehm	-	-	klosterbruder	-	-	-	-	(229
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	'	$(	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	sich	PRF	*	sich	sg	-	klosterbruder	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	der	ART	*	der	sg	masc	klosterbruder	-	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Herr	NN	*	herr	sg	masc	klosterbruder	-	-	-	-	61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	in	APPR	*	in	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Acht	NE	*	acht	-	-	klosterbruder	-	-	-	-	(230)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	mit	APPR	*	mit	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	dieser	PDAT	*	dieser	sg	fem	klosterbruder	-	-	-	-	(218
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	Frucht	NN	*	frucht	sg	fem	klosterbruder	-	-	-	-	218)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	.	$.	*	--	-	-	klosterbruder	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Zu	APPR	(VROOT(PSEUDO(CS(S(VP*	zu	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	viel	PIS	*	viel	*	*	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	genossen	VVPP	*)	genießen	pl	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	taugt	VVFIN	*	taugen	sg	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	sie	PPER	*	sie	-	-	klosterbruder	-	-	-	-	(218)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	nicht	PTKNEG	*)	nicht	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	;	$.	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	verstopft	VVFIN	(S*	verstopfen	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	Die	ART	(NP*	der	sg	fem	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	Milz	NN	*))	milz	sg	fem	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	;	$.	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	macht	VVFIN	(S*	machen	sg	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	melancholisches	ADJA	(NP*	melancholisch	sg	neut	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	Geblüt	NN	*)))	geblüt	sg	neut	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	.	$.	*))	--	-	-	klosterbruder	-	-	-	-	229)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	tempelherr	(LOC*)	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	tempelherr	-	-	-	-	61)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Wenn	KOUS	(VROOT(PSEUDO(S*	wenn	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	ich	PPER	*	ich	sg	*	tempelherr	-	-	-	-	(4)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	nun	ADV	*	nun	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	melancholisch	ADJD	*	melancholisch	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	gern	ADV	*	gern	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	mich	PPER	*	mich	sg	*	tempelherr	-	-	-	-	(4)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	fühlte	VVFIN	*)	fühlen	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	?	$.	*))	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Doch	KON	(S*	doch	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	dieser	PDAT	(AP(NP*	dieser	sg	fem	tempelherr	-	-	-	-	(229
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Warnung	NN	*)	warnung	sg	fem	tempelherr	-	-	-	-	229)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	wegen	APPO	*)	wegen	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	wurdet	VAFIN	*)	wurden	pl	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Ihr	PPER	(S(NP*	ihr	pl	*	tempelherr	-	-	-	-	(5)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Mir	NE	*	sich	sg	*	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	doch	ADV	*)	doch	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	nicht	PTKNEG	(VP*	nicht	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	nachgeschickt	VVPP	*))	nachgeschickt	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	?	$.	*))	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	klosterbruder	(LOC*)	-	-	-	(5
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	klosterbruder	-	-	-	-	5)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	O	ITJ	*	O	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	nein	PTKANT	*	nein	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	!	$.	*	--	-	-	klosterbruder	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Ich	PPER	(S*	ich	sg	*	klosterbruder	-	-	-	-	(231|(5)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	soll	VMFIN	*	sollen	sg	-	klosterbruder	-	-	-	-	231)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Mich	PRF	*	mich	sg	-	klosterbruder	-	-	-	-	(5)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	nur	ADV	*	nur	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	nach	APPR	(VP(PP*	nach	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Euch	PPER	*)	euch	sg	neut	klosterbruder	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	erkunden	VVINF	*))	erkunden	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	;	$.	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	auf	APPR	(S(PP*	auf	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	den	ART	*	der	sg	masc	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	Zahn	NN	*)	zahn	sg	masc	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	Euch	PPER	*	euch	pl	*	klosterbruder	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	fühlen	VVFIN	*)	fühlen	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	.	$.	*))	--	-	-	klosterbruder	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	tempelherr	(LOC*)	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	tempelherr	-	-	-	-	61)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	das	PDS	*	der	sg	neut	tempelherr	-	-	-	-	(231)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	sagt	VVFIN	*	sagen	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Ihr	PPER	*	ihr	pl	*	tempelherr	-	-	-	-	(5)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	mir	PPER	*	sich	sg	*	tempelherr	-	-	-	-	(4)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	so	ADV	(AVP*	so	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	selbst	ADV	*))	selbst	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	?	$.	*))	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	klosterbruder	(LOC*)	-	-	-	(5
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	klosterbruder	-	-	-	-	5)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Warum	PWAV	*	warum	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	nicht	PTKNEG	*	nicht	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	?	$.	*	--	-	-	klosterbruder	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	tempelherr	(LOC*)	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	tempelherr	-	-	-	-	61)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	(	$(	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Ein	ART	*	ein	sg	masc	tempelherr	-	-	-	-	(5
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	verschmitzter	ADJA	*	verschmitzt	sg	masc	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Bruder	NN	*	bruder	sg	masc	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	!	$.	*	--	-	-	tempelherr	-	-	-	-	5)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	)	$(	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	–	XY	*	–	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Hat	VAFIN	*	haben	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	Das	ART	*	der	sg	neut	tempelherr	-	-	-	-	(227
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	Kloster	NN	*	kloster	sg	neut	tempelherr	-	-	-	-	227)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	Eures	NE	*	dein	sg	masc	tempelherr	-	-	-	-	(232|(5)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	gleichen	VVFIN	*	gleichen	sg	masc	tempelherr	-	-	-	-	232)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	mehr	ADV	*	mehr	*	*	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	?	$.	*	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	klosterbruder	(LOC*)	-	-	-	(5
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	klosterbruder	-	-	-	-	5)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Weiß	NN	*	weiß	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	nicht	PTKNEG	*	nicht	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	.	$.	*	--	-	-	klosterbruder	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S(S*	ich	sg	*	klosterbruder	-	-	-	-	(5)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	muß	VMFIN	*	müssen	sg	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	gehorchen	VVINF	*)	gehorchen	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	,	$,	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	lieber	ADJA	(NP*	lieber	sg	masc	klosterbruder	-	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Herr	NN	*))	herr	sg	masc	klosterbruder	-	-	-	-	61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	.	$.	*))	--	-	-	klosterbruder	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	tempelherr	(LOC*)	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	tempelherr	-	-	-	-	61)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	da	ADV	*	da	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Gehorcht	NN	(VP*	gehorcht	pl	-	tempelherr	-	-	-	-	(233)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Ihr	PPER	*	ihr	pl	*	tempelherr	-	-	-	-	(5)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	denn	ADV	*	denn	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	auch	ADV	*	auch	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	ohne	APPR	(PP*	ohne	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	viel	ADV	*)	viel	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	zu	PTKZU	(VZ*	zu	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	klügeln	VVINF	*)))	klügeln	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	?	$.	*))	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	klosterbruder	(LOC*)	-	-	-	(5
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	klosterbruder	-	-	-	-	5)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Wär	XY	*	sein	-	-	klosterbruder	-	-	-	-	(233
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	'	$(	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	s	PPER	*	--	-	-	klosterbruder	-	-	-	-	233)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	sonst	ADV	*	sonst	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	gehorchen	VVPP	*	gehorchen	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	,	$,	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	lieber	ADJA	*	lieber	sg	masc	klosterbruder	-	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Herr	NN	*	herr	sg	masc	klosterbruder	-	-	-	-	61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	?	$.	*	--	-	-	klosterbruder	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	tempelherr	(LOC*)	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	tempelherr	-	-	-	-	61)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	(	$(	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Daß	KOUS	*	daß	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	doch	ADV	*	doch	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Die	ART	*	der	sg	fem	tempelherr	-	-	-	-	(234
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Einfalt	NN	*	einfalt	sg	fem	tempelherr	-	-	-	-	234)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	immer	ADJA	*	immer	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Recht	NN	*	recht	sg	neut	tempelherr	-	-	-	-	(37)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	behält	VVFIN	*	behalten	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	!	$.	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	)	$(	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	–	CARD	*	–	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	Ihr	PPER	*	ihr	pl	*	tempelherr	-	-	-	-	(235|(5)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	dürft	VVFIN	*	dürfen	pl	-	tempelherr	-	-	-	-	235)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	Mir	PPER	*	sich	sg	*	tempelherr	-	-	-	-	(4)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	doch	ADV	*	doch	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	auch	ADV	*	auch	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	wohl	ADV	*	wohl	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	vertrauen	VVINF	*	vertrauen	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	,	$,	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	wer	PWS	*	wer	sg	masc	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	mich	PPER	*	mich	sg	*	tempelherr	-	-	-	-	(4)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	gern	ADV	*	gern	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	22	Genauer	NN	*	genauer	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	23	kennen	VVINF	*	kennen	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	24	möchte	VMFIN	*	möchten	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	25	?	$.	*	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Daß	KOUS	(S*	daß	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Ihrs	PPER	*	ihr	-	-	tempelherr	-	-	-	-	(5)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	selbst	ADV	*)	selbst	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Nicht	PTKNEG	(S*	nicht	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	seid	VAFIN	*	sein	pl	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	,	$,	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	will	VMFIN	(S*	wollen	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	ich	PPER	(VP*	ich	sg	*	tempelherr	-	-	-	-	(4)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	wohl	ADV	*	wohl	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	schwören	VVINF	*)))	schwören	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	.	$.	*))	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	klosterbruder	(LOC*)	-	-	-	(5
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	klosterbruder	-	-	-	-	5)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Ziemte	NN	(VROOT(PSEUDO(S*	ziemen	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	mirs	VVFIN	*)	mir	-	-	klosterbruder	-	-	-	-	(235)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	?	$.	*))	--	-	-	klosterbruder	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	frommte	VVFIN	*	frommen	sg	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	mirs	APPRART	(PP*))	mir	-	-	klosterbruder	-	-	-	-	(235)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	?	$.	*))	--	-	-	klosterbruder	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	tempelherr	(LOC*)	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	tempelherr	-	-	-	-	61)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Wem	PWS	(VROOT(PSEUDO(CS(S*	wem	sg	*	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	ziemt	VVFIN	*)	ziemen	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	und	KON	*	und	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	frommt	VVFIN	(S*	frommen	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	es	PPER	*	es	sg	neut	tempelherr	-	-	-	-	(236)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	denn	ADV	*	denn	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	,	$,	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Daß	KOUS	(S*	daß	-	-	tempelherr	-	-	-	-	(236
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	er	PPER	*	er	sg	masc	tempelherr	-	-	-	-	(8)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	so	ADV	(AP*	so	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	neubegierig	ADJD	*)	neubegierig	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	ist	VAFIN	*)))	sein	sg	-	tempelherr	-	-	-	-	236)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	?	$.	*))	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Wem	PWS	*	wem	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	denn	ADV	*	denn	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	?	$.	*	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	klosterbruder	(LOC*)	-	-	-	(5
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	klosterbruder	-	-	-	-	5)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Dem	ART	(VROOT(PSEUDO(DL(NP*	der	sg	neut	klosterbruder	-	-	-	-	(8
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Patriarchen	NN	*)	patriarch	sg	neut	klosterbruder	-	-	-	-	8)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	;	$.	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	muß	VMFIN	(S*	müssen	sg	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	ich	PPER	(VP*	ich	sg	*	klosterbruder	-	-	-	-	(5)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	glauben	VVINF	*)))	glauben	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	.	$.	*))	--	-	-	klosterbruder	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Denn	KON	*	denn	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Der	PDS	(S*	der	sg	masc	klosterbruder	-	-	-	-	(8)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	sandte	VVFIN	*	senden	sg	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	mich	PPER	*	mich	sg	*	klosterbruder	-	-	-	-	(5)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Euch	PPER	*	euch	-	-	klosterbruder	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	nach	PTKVZ	*)	nach	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	.	$.	*))	--	-	-	klosterbruder	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	tempelherr	(LOC*)	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	tempelherr	-	-	-	-	61)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Der	ART	(VROOT(PSEUDO(NP*	der	sg	masc	tempelherr	-	-	-	-	(8
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Patriarch	NN	*)	patriarch	sg	masc	tempelherr	-	-	-	-	8)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	?	$.	*))	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Kennt	VVFIN	(VROOT(PSEUDO(S*	kennen	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	der	PDS	*	der	sg	masc	tempelherr	-	-	-	-	(8)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	das	ART	(NP*	der	sg	neut	tempelherr	-	-	-	-	(237
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	rote	ADJA	*	rot	sg	neut	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Kreuz	NN	*)	kreuz	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	auf	APPR	(PP*	auf	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	weißem	ADJA	*	weiß	sg	masc	tempelherr	-	-	-	-	(238
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Mantel	NN	*)	mantel	sg	masc	tempelherr	-	-	-	-	237)|238)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	Nicht	PTKNEG	(AP*	nicht	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	besser	ADJD	*))	gut	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	?	$.	*))	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	klosterbruder	(LOC*)	-	-	-	(5
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	klosterbruder	-	-	-	-	5)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Kenn	NE	*	kenn	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	'	$(	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	ja	ADV	*	ja	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	ichs	CARD	*	ich	-	-	klosterbruder	-	-	-	-	(237)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	!	$.	*	--	-	-	klosterbruder	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	tempelherr	(LOC*)	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	tempelherr	-	-	-	-	61)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Nun	ADV	(VROOT(PSEUDO*	nun	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	,	$,	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Bruder	NN	*	bruder	-	-	tempelherr	-	-	-	-	(5)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	?	$.	*))	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	nun	ADV	(VROOT(PSEUDO(S*)	nun	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	?	$.	*))	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	*	–	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Ich	PPER	*	ich	sg	*	tempelherr	-	-	-	-	(4)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	bin	VAFIN	*	sein	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	ein	ART	*	ein	sg	masc	tempelherr	-	-	-	-	(239
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Tempelherr	NN	*	tempelherr	sg	masc	tempelherr	-	-	-	-	239)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	;	$.	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	und	KON	*	und	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	ein	ART	*	ein	-	-	tempelherr	-	-	-	-	(240
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	gefang	FM	*	gefingen	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	'	$(	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	ner	PTKVZ	*	ner	-	-	tempelherr	-	-	-	-	240)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	.	$.	*	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	*	–	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Setz	NN	*	setz	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	'	$(	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	ich	PPER	*	ich	sg	*	tempelherr	-	-	-	-	(4)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	hinzu	PTKVZ	*	hinzu	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	:	$.	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	gefangen	ADJD	*	fangen	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	bei	APPR	*	bei	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	Tebnin	NE	*	tebnin	-	-	tempelherr	-	-	-	-	(241)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	,	$,	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	Der	ART	*	der	sg	masc	tempelherr	-	-	-	-	(241
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	Burg	NN	*	burg	sg	masc	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	,	$,	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	die	PRELS	*	der	sg	fem	tempelherr	-	-	-	-	(241)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	mit	APPR	*	mit	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	des	ART	*	der	sg	masc	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	Stillstands	NN	*	stillstand	sg	masc	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	letzter	ADJA	*	letzter	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	Stunde	NN	*	stunde	sg	fem	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	Wir	PPER	*	wir	pl	*	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	gern	ADV	*	gern	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	erstiegen	VVPP	*	erstiegen	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	22	hätten	VAFIN	*	haben	pl	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	23	,	$,	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	24	um	KOUI	*	um	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	25	sodann	ADV	*	sodann	*	*	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	26	Auf	APPR	*	auf	*	*	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	27	Sidon	NE	*	sidon	*	*	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	28	los	PTKVZ	*	los	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	29	zu	APPR	*	zu	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	30	gehn	CARD	*	gehn	-	-	tempelherr	-	-	-	-	241)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	31	Selbzwanzigster	NN	*	selbzwanzigster	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	32	gefangen	VVPP	*	gefangen	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	33	und	KON	*	und	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	34	allein	ADV	*	allein	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	35	Vom	APPRART	*	von	sg	neut	tempelherr	-	-	-	-	(7
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	36	Saladin	NN	*	saladin	sg	neut	tempelherr	-	-	-	-	7)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	37	begnadiget	VVPP	*	begnadigen	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	38	:	$.	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	39	so	ADV	*	so	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	40	weiß	VVFIN	*	weiß	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	41	Der	ART	*	der	sg	masc	tempelherr	-	-	-	-	(8
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	42	Patriarch	NN	*	patriarch	sg	masc	tempelherr	-	-	-	-	8)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	43	,	$,	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	44	was	PWS	*	was	sg	neut	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	45	er	PPER	*	er	sg	masc	tempelherr	-	-	-	-	(8)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	46	zu	PTKZU	*	zu	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	47	wissen	VVINF	*	wissen	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	48	braucht	VVFIN	*	brauchen	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	49	;	$.	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	50	–	XY	*	–	*	*	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	51	Mehr	PIS	*	mehr	*	*	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	52	,	$,	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	53	als	KOKOM	*	als	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	54	er	PPER	*	er	sg	masc	tempelherr	-	-	-	-	(8)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	55	braucht	VVFIN	*	brauchen	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	56	.	$.	*	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*))	–	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	klosterbruder	(LOC*)	-	-	-	(5
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	klosterbruder	-	-	-	-	5)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Wohl	ADV	(VROOT(PSEUDO(S(AP*	wohl	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	aber	ADV	*	aber	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	schwerlich	ADJD	(AP*	schwerlich	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	mehr	ADV	*))	mehr	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	,	$,	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Als	KOUS	(S*	als	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	er	PPER	*	er	sg	masc	klosterbruder	-	-	-	-	(8)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	schon	ADV	*	schon	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	weiß	VVFIN	*))	weiß	sg	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	.	$.	*))	--	-	-	klosterbruder	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	*	–	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Er	PPER	*	er	sg	masc	klosterbruder	-	-	-	-	(8)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	wüßt	VVFIN	*	wüssen	sg	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	'	$(	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	auch	ADV	*	auch	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	gern	ADV	*	gern	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	,	$,	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	warum	PWAV	*	warum	-	-	klosterbruder	-	-	-	-	(242)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	Der	ART	*	der	sg	masc	klosterbruder	-	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	Herr	NN	*	herr	sg	masc	klosterbruder	-	-	-	-	61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	vom	APPRART	*	von	sg	masc	klosterbruder	-	-	-	-	(7
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	Saladin	NN	*	saladin	sg	masc	klosterbruder	-	-	-	-	7)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	begnadigt	VVPP	*	begnadigen	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	worden	VAPP	*	werden	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	;	$.	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	Er	PPER	*	er	sg	masc	klosterbruder	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	ganz	ADV	*	ganz	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	allein	ADV	*	allein	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	.	$.	*	--	-	-	klosterbruder	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	tempelherr	(LOC*)	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	tempelherr	-	-	-	-	61)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Weiß	VVFIN	*	weiß	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	ich	PPER	*	ich	sg	*	tempelherr	-	-	-	-	(4)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	das	PDS	*	der	sg	neut	tempelherr	-	-	-	-	(242)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	selber	ADV	*	selber	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	?	$.	*	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	*	–	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Schon	NN	*	schon	-	-	tempelherr	-	-	-	-	(243)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Den	NE	*	der	*	*	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Hals	NE	*	hals	sg	*	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	entblößt	VVFIN	*	entbloßen	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	,	$,	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	kniet	VVFIN	*	knaten	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	'	$(	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	ich	PPER	*	ich	sg	*	tempelherr	-	-	-	-	(4)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	auf	APPR	*	auf	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	meinem	PPOSAT	*	mein	sg	masc	tempelherr	-	-	-	-	(69|(4)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	Mantel	NN	*	mantel	sg	masc	tempelherr	-	-	-	-	69)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	,	$,	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	Den	NE	*	der	sg	masc	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	Streich	NE	*	streich	sg	masc	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	erwartend	ADJD	*	erwartend	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	:	$.	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	als	KOKOM	*	als	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	mich	PPER	*	mich	sg	*	tempelherr	-	-	-	-	(4)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	schärfer	ADJA	*	scharf	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	Saladin	NN	*	saladin	sg	masc	tempelherr	-	-	-	-	(7)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	Ins	NE	*	in	sg	neut	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	22	Auge	NE	*	auge	sg	neut	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	23	faßt	VVFIN	*	fassen	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	24	,	$,	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	25	mir	PPER	*	sich	sg	*	tempelherr	-	-	-	-	(4)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	26	näher	ADJD	*	nah	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	27	springt	VVFIN	*	springen	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	28	,	$,	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	29	und	KON	*	und	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	30	winkt	VVFIN	*	winken	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	31	.	$.	*	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Man	PIS	*	man	sg	*	tempelherr	-	-	-	-	(244)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	hebt	VVFIN	*	heben	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	mich	PPER	*	mich	sg	*	tempelherr	-	-	-	-	(4)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	auf	PTKVZ	*	auf	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	;	$.	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	ich	PPER	*	ich	sg	*	tempelherr	-	-	-	-	(4)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	bin	VAFIN	*	sein	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	entfesselt	VVPP	*	entfesseln	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	;	$.	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	will	VMFIN	*	wollen	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	Ihm	PPER	*	ihm	sg	neut	tempelherr	-	-	-	-	(7)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	danken	VVINF	*	danken	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	;	$.	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	seh	XY	*	seh	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	'	$(	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	sein	PPOSAT	*	sein	-	-	tempelherr	-	-	-	-	(245|(7)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	Aug	NN	*	aug	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	'	$(	*	--	-	-	tempelherr	-	-	-	-	245)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	in	APPR	*	in	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	Tränen	NN	*	träne	pl	fem	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	:	$.	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	stumm	ADJD	*	stumm	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	22	Ist	VVFIN	*	sein	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	23	er	PPER	*	er	sg	masc	tempelherr	-	-	-	-	(7)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	24	,	$,	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	25	bin	VAFIN	*	sein	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	26	ich	PPER	*	ich	sg	*	tempelherr	-	-	-	-	(4)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	27	;	$.	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	28	er	PPER	*	er	sg	masc	tempelherr	-	-	-	-	(7)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	29	geht	VVFIN	*	gehen	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	30	,	$,	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	31	ich	PPER	*	ich	sg	*	tempelherr	-	-	-	-	(4)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	32	bleibe	VVFIN	*	bleiben	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	33	.	$.	*	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Wie	PWAV	(S*	wie	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Nun	ADV	*	nun	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	das	PDS	*	der	sg	neut	tempelherr	-	-	-	-	(243)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	zusammenhängt	VVFIN	*	zusammenhängen	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	,	$,	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	enträtsle	VVFIN	(S*	enträtslen	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	sich	PRF	*))	sich	sg	-	tempelherr	-	-	-	-	(8)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	Der	ART	(NP*	der	sg	masc	tempelherr	-	-	-	-	(8
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	Patriarche	NN	*	patriarche	sg	masc	tempelherr	-	-	-	-	8)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	selbst	ADV	*)	selbst	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	.	$.	*))	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	klosterbruder	(LOC*)	-	-	-	(5
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	klosterbruder	-	-	-	-	5)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Er	PPER	*	er	sg	masc	klosterbruder	-	-	-	-	(8)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	schließt	VVFIN	*	schließen	sg	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	daraus	PROAV	*	daraus	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	,	$,	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Daß	KOUS	*	daß	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Gott	NN	*	gott	sg	masc	klosterbruder	-	-	-	-	(22)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	zu	PTKZU	*	zu	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	großen	ADJA	*	groß	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	,	$,	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	großen	ADJA	*	groß	pl	*	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	Dingen	NN	*	ding	pl	fem	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	Euch	PPER	*	euch	pl	*	klosterbruder	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	Müß	NN	*	müß	*	*	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	'	$(	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	aufbehalten	VVPP	*	aufbehalten	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	haben	VAFIN	*	haben	pl	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	.	$.	*	--	-	-	klosterbruder	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	tempelherr	(LOC*)	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	tempelherr	-	-	-	-	61)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Ja	PTKANT	(VROOT(PSEUDO(S*	ja	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	,	$,	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	zu	APPR	(PP*	zu	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	großen	ADJA	*))	groß	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	!	$.	*))	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Ein	ART	*	ein	sg	neut	tempelherr	-	-	-	-	(2
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Judenmädchen	NN	*	judenmädchen	sg	neut	tempelherr	-	-	-	-	2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	aus	APPR	*	aus	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	dem	ART	*	der	sg	neut	tempelherr	-	-	-	-	(62
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Feur	NN	*	feur	sg	neut	tempelherr	-	-	-	-	62)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	zu	PTKZU	*	zu	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	retten	VVINF	*	retten	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	;	$.	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	Auf	APPR	*	auf	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	Sinai	NE	*	sinai	sg	masc	tempelherr	-	-	-	-	(246)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	neugier	FM	*	neugier	-	-	tempelherr	-	-	-	-	(247
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	'	$(	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	ge	ADJA	*	GE	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	Pilger	NN	*	pilger	-	-	tempelherr	-	-	-	-	247)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	zu	APPR	*	zu	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	Geleiten	NN	*	geleit	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	;	$.	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	und	KON	*	und	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	dergleichen	VVFIN	*	dergleichen	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	mehr	ADV	*	mehr	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	.	$.	*	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	klosterbruder	(LOC*)	-	-	-	(5
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	klosterbruder	-	-	-	-	5)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Wird	VAFIN	(VROOT(PSEUDO(S*	werden	sg	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	schon	ADV	*	schon	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Noch	ADV	*	noch	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	kommen	VVINF	*)	kommen	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	!	$.	*))	--	-	-	klosterbruder	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Ist	VAFIN	(S*	sein	sg	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	inzwischen	ADV	*	inzwischen	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	auch	ADV	(AP(AVP*	auch	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	nicht	PTKNEG	*)	nicht	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	übel	ADJD	*))	übel	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	.	$.	*))	--	-	-	klosterbruder	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	*	–	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Vielleicht	ADV	*	vielleicht	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	hat	VAFIN	*	haben	sg	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	selbst	ADV	*	selbst	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	der	ART	*	der	sg	masc	klosterbruder	-	-	-	-	(8
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Patriarch	NN	*	patriarch	sg	masc	klosterbruder	-	-	-	-	8)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	bereits	ADV	*	bereits	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Weit	ADJD	*	weit	-	-	klosterbruder	-	-	-	-	(248
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	wicht	PTKNEG	*	wichen	sg	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	'	$(	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	gere	ADJA	*	g	pl	neut	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	Geschäfte	NN	*	geschäft	pl	neut	klosterbruder	-	-	-	-	248)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	für	APPR	*	für	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	den	ART	*	der	sg	masc	klosterbruder	-	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	Herrn	NN	*	herr	sg	masc	klosterbruder	-	-	-	-	61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	.	$.	*	--	-	-	klosterbruder	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	tempelherr	(LOC*)	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	tempelherr	-	-	-	-	61)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	So	ADV	(VROOT(PSEUDO(S*)	so	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	?	$.	*))	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	meint	VVFIN	(VROOT(PSEUDO(S*	meinen	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Ihr	PPER	(NP*	ihr	sg	masc	tempelherr	-	-	-	-	(5
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	,	$,	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Bruder	NN	(S*)))	bruder	sg	masc	tempelherr	-	-	-	-	5)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	?	$.	*))	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	*	–	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Hat	VAFIN	*	haben	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	er	PPER	*	er	sg	masc	tempelherr	-	-	-	-	(8)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	gar	ADV	*	gar	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Euch	PPER	*	euch	pl	*	tempelherr	-	-	-	-	(5)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	schon	ADV	*	schon	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Was	PWS	*	was	sg	neut	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	merken	VVINF	*	merken	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	lassen	VVINF	*	lassen	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	?	$.	*	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	klosterbruder	(LOC*)	-	-	-	(5
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	klosterbruder	-	-	-	-	5)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Ei	XY	(VROOT(PSEUDO*	ei	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	,	$,	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	ja	ADV	(AP*	ja	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	wohl	ADV	*)	wohl	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	!	$.	*))	--	-	-	klosterbruder	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Ich	PPER	(S*	ich	sg	*	klosterbruder	-	-	-	-	(5)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	soll	VMFIN	*	sollen	sg	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Den	ART	(NP*	der	pl	masc	klosterbruder	-	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Herrn	NN	*)	herr	pl	masc	klosterbruder	-	-	-	-	61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	nur	ADV	(AVP*	nur	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	erst	ADV	*)	erst	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	ergründen	VVINF	(VP*	ergründen	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	,	$,	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	ob	KOUS	(S*	ob	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	er	PPER	*	er	sg	masc	klosterbruder	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	so	ADV	(AVP*	so	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	Der	ART	(S(NP*	der	sg	masc	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	Mann	NN	*)	mann	sg	masc	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	wohl	ADV	*))	wohl	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	ist	VAFIN	*)))	sein	sg	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	.	$.	*))	--	-	-	klosterbruder	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	tempelherr	(LOC*)	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	tempelherr	-	-	-	-	61)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Nun	ADV	(VROOT(PSEUDO*	nun	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	ja	PTKANT	(S*	ja	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	;	$.	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	ergründet	VVFIN	*	ergründen	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	nur	ADV	*)	nur	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	!	$.	*))	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	(	$(	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Ich	PPER	*	ich	sg	*	tempelherr	-	-	-	-	(4)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	will	VMFIN	*	wollen	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	doch	ADV	*	doch	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	sehn	CARD	*	sehn	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	,	$,	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	wie	PWAV	*	wie	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	der	ART	*	der	sg	masc	tempelherr	-	-	-	-	(5)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	ergründet	VVPP	*	ergründen	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	!	$.	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	)	$(	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	–	$.	*	–	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	Nun	ADV	*	nun	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	?	$.	*	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	klosterbruder	(LOC*)	-	-	-	(5
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	klosterbruder	-	-	-	-	5)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Das	ART	(VROOT(PSEUDO(S(NP*	der	sg	neut	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	kürzste	ADJA	*)	kürzsen	sg	neut	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	wird	VAFIN	*	werden	sg	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	wohl	ADV	(VP*	wohl	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	sein	VAINF	*	sein	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	,	$,	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	daß	KOUS	(S*	daß	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	ich	PPER	*	ich	sg	*	klosterbruder	-	-	-	-	(5)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	dem	ART	(NP*	der	sg	masc	klosterbruder	-	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	Herrn	NN	*)	herr	sg	masc	klosterbruder	-	-	-	-	61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	Ganz	ADV	(AP*	ganz	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	grade	ADJD	*)	grade	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	zu	APPR	(PP*	zu	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	des	ART	*	der	sg	masc	klosterbruder	-	-	-	-	(248|(8
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	Patriarchen	ADJA	*	patriarch	sg	masc	klosterbruder	-	-	-	-	8)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	Wunsch	NN	*	wunsch	sg	masc	klosterbruder	-	-	-	-	248)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	Eröffne	NE	*))))	eröffne	sg	masc	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	.	$.	*))	--	-	-	klosterbruder	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	tempelherr	(LOC*)	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	tempelherr	-	-	-	-	61)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Wohl	ADV	(VROOT(PSEUDO(S*)	wohl	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	!	$.	*))	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	klosterbruder	(LOC*)	-	-	-	(5
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	klosterbruder	-	-	-	-	5)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Er	PPER	(VROOT(PSEUDO(S*	er	sg	masc	klosterbruder	-	-	-	-	(249
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	hätte	VAFIN	*	haben	sg	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	durch	APPR	(VP(PP*	durch	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	den	ART	*	der	pl	masc	klosterbruder	-	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Herrn	NN	*	herr	pl	masc	klosterbruder	-	-	-	-	61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Ein	ART	(NP*	ein	sg	neut	klosterbruder	-	-	-	-	(250
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Briefchen	NN	*)	briefchen	sg	neut	klosterbruder	-	-	-	-	250)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	gern	ADV	*)	gern	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	bestellt	VVPP	*))))	bestellen	-	-	klosterbruder	-	-	-	-	249)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	tempelherr	(LOC*)	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	tempelherr	-	-	-	-	61)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Durch	APPR	(VROOT(PSEUDO(PP*	durch	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	mich	PPER	*)	mich	sg	*	tempelherr	-	-	-	-	(4)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	?	$.	*))	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	tempelherr	-	-	-	-	(4)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	bin	VAFIN	*	sein	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Kein	PIAT	(NP*	kein	sg	neut	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Bote	NN	*))	bote	sg	neut	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	.	$.	*))	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Das	PDS	(CNP(NP*	der	sg	neut	tempelherr	-	-	-	-	(249)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	,	$,	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	das	PDS	(S*	der	sg	neut	tempelherr	-	-	-	-	(249)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	wäre	VAFIN	*	sein	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	das	ART	(NP*	der	sg	neut	tempelherr	-	-	-	-	(251
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Geschäft	NN	*)))	geschäft	sg	neut	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	,	$,	*	--	-	-	tempelherr	-	-	-	-	251)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	Das	NN	*)	der	sg	neut	tempelherr	-	-	-	-	(251)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	weit	ADJD	*	weit	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	glorreicher	ADJD	(S*	glorreich	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	sei	VAFIN	*	sein	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	,	$,	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	als	KOKOM	(VP*	als	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	Judenmädchen	NN	(NP*	judenmädch	sg	neut	tempelherr	-	-	-	-	(252)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	Dem	ART	(NP*	der	sg	neut	tempelherr	-	-	-	-	(253
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	Feur	NN	*))	feur	sg	neut	tempelherr	-	-	-	-	253)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	entreißen	VVINF	*))	entreißen	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	?	$.	*))	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	klosterbruder	(LOC*)	-	-	-	(5
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	klosterbruder	-	-	-	-	5)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Muß	VMFIN	(VROOT(PSEUDO(S*	müssen	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	doch	ADV	*	doch	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	wohl	ADV	*)	wohl	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	!	$.	*))	--	-	-	klosterbruder	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Denn	KON	(VROOT(PSEUDO(S(S*	denn	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	–	PPER	*	–	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	sagt	VVFIN	*	sagen	sg	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Der	ART	(NP*	der	sg	masc	klosterbruder	-	-	-	-	(8
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Patriarch	NN	*	patriarch	sg	masc	klosterbruder	-	-	-	-	8)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	–	NE	*)	–	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	an	APPR	(PP*	an	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	diesem	PDAT	*	dieser	sg	masc	klosterbruder	-	-	-	-	(250
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	Briefchen	NN	*))	briefchen	sg	masc	klosterbruder	-	-	-	-	250)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	sei	VAFIN	*	sein	sg	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	Der	ART	(VP(NP*	der	sg	masc	klosterbruder	-	-	-	-	(99
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	ganzen	ADJA	*	ganz	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	Christenheit	NN	*)	christenheit	sg	fem	klosterbruder	-	-	-	-	99)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	sehr	ADV	(AP*	sehr	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	viel	PIS	*)	viel	*	*	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	gelegen	VVPP	*))	liegen	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	.	$.	*))	--	-	-	klosterbruder	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Dies	PDAT	*	dieser	sg	neut	klosterbruder	-	-	-	-	(250
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Briefchen	NN	*	briefchen	sg	neut	klosterbruder	-	-	-	-	250)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	wohl	ADV	*	wohl	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	bestellt	VVPP	*	bestellen	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	zu	PTKZU	*	zu	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	haben	VAINF	*	haben	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	,	$,	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	–	PPER	*	–	sg	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	sagt	VVFIN	*	sagen	sg	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	Der	ART	*	der	sg	masc	klosterbruder	-	-	-	-	(8
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	Patriarch	NN	*	patriarch	sg	masc	klosterbruder	-	-	-	-	8)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	,	$,	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	–	$.	*	–	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	werd	VAFIN	*	werden	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	'	$(	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	einst	ADV	*	einst	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	im	APPRART	*	in	sg	masc	klosterbruder	-	-	-	-	(254
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	Himmel	NN	*	himmel	sg	masc	klosterbruder	-	-	-	-	254)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	Gott	NN	*	gott	sg	masc	klosterbruder	-	-	-	-	(22)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	Mit	APPR	*	mit	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	einer	ART	*	ein	sg	fem	klosterbruder	-	-	-	-	(255
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	ganz	ADV	*	ganz	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	22	besondern	ADJA	*	besondern	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	23	Krone	NN	*	krone	-	-	klosterbruder	-	-	-	-	255)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	24	lohnen	VVFIN	*	lohnen	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	25	.	$.	*	--	-	-	klosterbruder	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Und	KON	*	und	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	dieser	PDAT	*	dieser	sg	masc	klosterbruder	-	-	-	-	(255
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Krone	NN	*	krone	sg	masc	klosterbruder	-	-	-	-	255)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	,	$,	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	–	PPER	*	–	sg	masc	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	sagt	VVFIN	*	sagen	sg	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	der	ART	*	der	sg	masc	klosterbruder	-	-	-	-	(8
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Patriarch	NN	*	patriarch	sg	masc	klosterbruder	-	-	-	-	8)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	,	$,	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	–	$.	*	–	sg	neut	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	Sei	NN	*	sein	sg	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	niemand	PIS	*	niemand	sg	masc	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	würd	VAFIN	*	würd	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	'	$(	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	ger	ADJD	*	g	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	,	$,	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	als	KOKOM	*	als	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	mein	PPOSAT	*	mein	sg	masc	klosterbruder	-	-	-	-	(61|(5)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	Herr	NN	*	herr	sg	masc	klosterbruder	-	-	-	-	61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	.	$.	*	--	-	-	klosterbruder	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	tempelherr	(LOC*)	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	tempelherr	-	-	-	-	61)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Als	KOUS	*	als	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	ich	PPER	*	ich	sg	*	tempelherr	-	-	-	-	(4)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	?	$.	*	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	klosterbruder	(LOC*)	-	-	-	(5
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	klosterbruder	-	-	-	-	5)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Denn	KON	(VROOT(PSEUDO(S*	denn	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	diese	PDAT	(VP(NP*	dieser	sg	fem	klosterbruder	-	-	-	-	(255
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Krone	NN	*)	krone	sg	fem	klosterbruder	-	-	-	-	255)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	zu	PTKZU	(VZ*	zu	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	verdienen	VVINF	*))	verdienen	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	,	$,	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	–	PPER	(S*	–	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	sagt	VVFIN	*	sagen	sg	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	Der	ART	(NP*	der	sg	masc	klosterbruder	-	-	-	-	(8
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	Patriarch	NN	*))	patriarch	sg	masc	klosterbruder	-	-	-	-	8)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	,	$,	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	–	$.	*	–	sg	neut	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	sei	VAFIN	*	sein	sg	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	schwerlich	ADJD	*	schwerlich	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	jemand	PIS	*	jemand	sg	masc	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	auch	ADV	(NP*	auch	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	Geschickter	NN	*)	geschickter	sg	masc	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	,	$,	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	als	KOKOM	(NP*	als	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	mein	PPOSAT	*	mein	sg	masc	klosterbruder	-	-	-	-	(61|(5)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	Herr	NN	*))	herr	sg	masc	klosterbruder	-	-	-	-	61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	.	$.	*))	--	-	-	klosterbruder	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	tempelherr	(LOC*)	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	tempelherr	-	-	-	-	61)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Als	KOUS	*	als	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	ich	PPER	*	ich	sg	*	tempelherr	-	-	-	-	(4)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	?	$.	*	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	klosterbruder	(LOC*)	-	-	-	(5
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	klosterbruder	-	-	-	-	5)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Er	PPER	*	er	sg	masc	klosterbruder	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	sei	VAFIN	*	sein	sg	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Hier	ADV	*	hier	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	frei	ADJD	*	frei	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	;	$.	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	könn	VMFIN	*	könn	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	'	$(	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	überall	ADV	*	überall	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	sich	PRF	*	sich	sg	-	klosterbruder	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	hier	ADV	*	hier	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	besehn	ADJD	*	besehn	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	;	$.	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	Versteh	NE	*	versteh	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	'	$(	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	,	$,	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	wie	PWAV	*	wie	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	eine	ART	*	ein	sg	fem	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	Stadt	NN	*	stadt	sg	fem	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	zu	PTKZU	*	zu	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	stürmen	VVINF	*	stürmen	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	und	KON	*	und	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	Zu	PPER	*	zu	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	22	schirmen	VVINF	*	schirma	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	23	;	$.	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	24	könne	VMFIN	*	können	sg	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	25	,	$,	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	26	–	PPER	*	–	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	27	sagt	VVFIN	*	sagen	sg	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	28	der	ART	*	der	sg	masc	klosterbruder	-	-	-	-	(8
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	29	Patriarch	NN	*	patriarch	sg	masc	klosterbruder	-	-	-	-	8)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	30	,	$,	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	31	–	$.	*	–	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	32	Die	ART	*	der	sg	fem	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	33	Stärk	NN	*	stärk	sg	fem	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	34	'	$(	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	35	und	KON	*	und	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	36	Schwäche	NN	*	schwäche	sg	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	37	der	ART	*	der	sg	masc	klosterbruder	-	-	-	-	(256
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	38	von	APPR	*	von	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	39	Saladin	NE	*	saladin	*	*	klosterbruder	-	-	-	-	256)|(7)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	40	Neu	ADJD	*	neu	sg	*	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	41	aufgeführten	ADJA	*	aufgeführen	pl	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	42	,	$,	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	43	innern	ADJA	*	innern	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	44	,	$,	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	45	zweiten	ADJA	*	zweiter	pl	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	46	Mauer	NN	*	mauer	*	*	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	47	Am	PTKA	*	an	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	48	besten	ADJD	*	gut	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	49	schätzen	VVINF	*	schätzen	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	50	,	$,	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	51	sie	PPER	*	sie	-	-	klosterbruder	-	-	-	-	(256)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	52	am	APPRART	*	an	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	53	deutlichsten	ADJA	*	deutlich	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	54	Den	ART	*	der	pl	masc	klosterbruder	-	-	-	-	(121
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	55	Streitern	NN	*	streiter	pl	masc	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	56	Gottes	NN	*	gott	sg	masc	klosterbruder	(LOC*)	-	-	-	121)|(22)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	57	,	$,	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	58	–	PPER	*	–	sg	masc	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	59	sagt	VVFIN	*	sagen	sg	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	60	der	ART	*	der	sg	masc	klosterbruder	-	-	-	-	(8
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	61	Patriarch	NN	*	patriarch	sg	masc	klosterbruder	-	-	-	-	8)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	62	,	$,	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	63	–	$.	*	–	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	64	Beschreiben	NN	*	beschreiben	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	65	.	$.	*	--	-	-	klosterbruder	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	tempelherr	(LOC*)	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	tempelherr	-	-	-	-	61)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Guter	ADJA	(VROOT(PSEUDO(S(NP*	gut	sg	masc	tempelherr	-	-	-	-	(5
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Bruder	NN	*)	bruder	sg	masc	tempelherr	-	-	-	-	5)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	,	$,	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	wenn	KOUS	*	wenn	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	ich	PPER	*	ich	sg	*	tempelherr	-	-	-	-	(4)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	doch	ADV	(VP*	doch	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Nun	ADV	*	nun	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	auch	ADV	*	auch	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	des	ART	(NP*	der	sg	masc	tempelherr	-	-	-	-	(257|(250
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	Briefchens	NN	*)	briefchen	sg	masc	tempelherr	-	-	-	-	250)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	nähern	VVINF	*)	nähern	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	Inhalt	NN	*	inhalt	sg	masc	tempelherr	-	-	-	-	257)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	wüßte	VVFIN	*)	wissen	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	.	$.	*))	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	klosterbruder	(LOC*)	-	-	-	(5
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	klosterbruder	-	-	-	-	5)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Ja	PTKANT	(VROOT(PSEUDO(S*	ja	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	den	ART	(NP*	der	sg	masc	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	,	$,	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	–	PPER	(S*	–	sg	masc	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	den	ART	(S*	der	sg	masc	klosterbruder	-	-	-	-	(257)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	weiß	VVFIN	*	weiß	sg	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	ich	PPER	*	ich	sg	*	klosterbruder	-	-	-	-	(5)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	nun	ADV	*)	nun	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	wohl	ADV	*	wohl	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	nicht	PTKNEG	*))	nicht	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	so	ADV	*	so	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	recht	ADJD	*)	recht	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	.	$.	*))	--	-	-	klosterbruder	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Das	ART	(VROOT(PSEUDO(S(NP*	der	sg	neut	klosterbruder	-	-	-	-	(250
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Briefchen	NN	*)	briefchen	sg	neut	klosterbruder	-	-	-	-	250)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	aber	ADV	*	aber	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	ist	VAFIN	*	sein	sg	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	an	APPR	(PP*	an	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	König	NN	*	könig	sg	masc	klosterbruder	-	-	-	-	(258
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Philipp	NE	*))	philipp	sg	masc	klosterbruder	(PER*)	-	-	-	258)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	.	$.	*))	--	-	-	klosterbruder	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	*	–	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Der	ART	*	der	sg	masc	klosterbruder	-	-	-	-	(8
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Patriarch	NN	*	patriarch	sg	masc	klosterbruder	-	-	-	-	8)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	.	$.	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	.	$.	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	.	$.	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Ich	PPER	*	ich	sg	*	klosterbruder	-	-	-	-	(5)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	hab	VAFIN	*	hab	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	'	$(	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	mich	PPER	*	mich	sg	*	klosterbruder	-	-	-	-	(5)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	oft	ADV	*	oft	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	gewundert	VVPP	*	wundern	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	,	$,	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	Wie	PWAV	*	wie	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	doch	ADV	*	doch	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	ein	ART	*	ein	sg	masc	klosterbruder	-	-	-	-	(8
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	Heiliger	NN	*	heilige	sg	masc	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	,	$,	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	der	PRELS	*	der	sg	masc	klosterbruder	-	-	-	-	(8)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	sonst	ADV	*	sonst	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	so	ADV	*	so	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	ganz	ADV	*	ganz	-	-	klosterbruder	-	-	-	-	8)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	22	Im	APPRART	*	in	sg	neut	klosterbruder	-	-	-	-	(259
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	23	Himmel	NN	*	himmel	sg	neut	klosterbruder	-	-	-	-	259)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	24	lebt	VVFIN	*	leben	sg	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	25	,	$,	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	26	zugleich	ADV	*	zugleich	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	27	so	ADV	*	so	-	-	klosterbruder	-	-	-	-	(260
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	28	unterrichtet	VVFIN	*	unterrichten	-	-	klosterbruder	-	-	-	-	260)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	29	Von	APPR	*	von	-	-	klosterbruder	-	-	-	-	(261
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	30	Dingen	NN	*	dingen	sg	fem	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	31	dieser	PDAT	*	dieser	sg	fem	klosterbruder	-	-	-	-	(262
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	32	Welt	NN	*	welt	sg	fem	klosterbruder	-	-	-	-	261)|262)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	33	zu	PTKZU	*	zu	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	34	sein	VAINF	*	sein	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	35	herab	ADV	*	herab	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	36	Sich	PRF	*	sich	sg	-	klosterbruder	-	-	-	-	(8)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	37	lassen	VVINF	*	lassen	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	38	kann	VMFIN	*	können	sg	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	39	.	$.	*	--	-	-	klosterbruder	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Es	PPER	(VROOT(PSEUDO(S*	es	sg	neut	klosterbruder	-	-	-	-	(260)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	muß	VMFIN	*	müssen	sg	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	ihm	PPER	*	ihm	sg	masc	klosterbruder	-	-	-	-	(8)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	sauer	ADJD	(VP*	sauer	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	werden	VAINF	*))	werden	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	.	$.	*))	--	-	-	klosterbruder	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	tempelherr	(LOC*)	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	tempelherr	-	-	-	-	61)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Nun	ADV	(VROOT(PSEUDO*	nun	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	dann	ADV	*	dann	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	?	$.	*))	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	der	ART	(VROOT(PSEUDO(NP*	der	sg	masc	tempelherr	-	-	-	-	(8
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Patriarch	NN	*)	patriarch	sg	masc	tempelherr	-	-	-	-	8)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	?	$.	*))	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*))	–	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	klosterbruder	(LOC*)	-	-	-	(5
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	klosterbruder	-	-	-	-	5)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Weiß	NN	*	weiß	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	ganz	ADV	*	ganz	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	genau	ADJD	*	genau	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	,	$,	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Ganz	ADV	*	ganz	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	zuverlässig	ADJD	*	zuverlässig	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	,	$,	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	wie	KOKOM	*	wie	-	-	klosterbruder	-	-	-	-	(263
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	und	KON	*	und	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	wo	PWAV	*	wo	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	,	$,	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	wie	PWAV	*	wie	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	stark	ADJD	*	stark	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	,	$,	*	--	-	-	klosterbruder	-	-	-	-	263)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	Von	APPR	*	von	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	welcher	PWAT	*	welcher	sg	fem	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	Seite	NN	*	seite	sg	fem	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	Saladin	NE	*	saladin	sg	masc	klosterbruder	(PER*)	-	-	-	(7)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	,	$,	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	im	APPRART	*	in	sg	masc	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	Fall	NN	*	fall	sg	masc	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	Es	PPER	*	es	sg	neut	klosterbruder	-	-	-	-	(264)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	22	völlig	ADJD	*	völlig	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	23	wieder	ADV	*	wieder	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	24	losgeht	VVFIN	*	losgehen	sg	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	25	,	$,	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	26	seinen	PPOSAT	*	sein	sg	masc	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	27	Feldzug	NN	*	feldzug	sg	masc	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	28	Eröffnen	NN	*	eröffnen	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	29	wird	VAFIN	*	werden	sg	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	30	.	$.	*	--	-	-	klosterbruder	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	tempelherr	(LOC*)	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	tempelherr	-	-	-	-	61)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Das	PDS	(VROOT(PSEUDO(S*	der	sg	neut	tempelherr	-	-	-	-	(263)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	weiß	VVFIN	*	weiß	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	er	PPER	*)	er	sg	masc	tempelherr	-	-	-	-	(8)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	?	$.	*))	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	klosterbruder	(LOC*)	-	-	-	(5
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	klosterbruder	-	-	-	-	5)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Ja	PTKANT	*	ja	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	,	$,	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	und	KON	*	und	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	möcht	VMFIN	*	möchen	sg	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	'	$(	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Es	PPER	*	es	sg	neut	klosterbruder	-	-	-	-	(263)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	gern	ADV	*	gern	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	dem	ART	*	der	sg	masc	klosterbruder	-	-	-	-	(258
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	König	NN	*	könig	sg	masc	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	Philipp	NE	*	philipp	sg	masc	klosterbruder	(PER*)	-	-	-	258)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	wissen	VVINF	*	wissen	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	lassen	VVINF	*	lassen	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	:	$.	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	Damit	PROAV	*	damit	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	der	ART	*	der	sg	fem	klosterbruder	-	-	-	-	(258)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	ungefähr	ADJD	*	ungefähr	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	ermessen	VVINF	*	ermessen	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	könne	VMFIN	*	können	sg	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	,	$,	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	Ob	KOUS	*	ob	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	die	ART	*	der	sg	fem	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	Gefahr	NN	*	gefahr	sg	fem	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	22	denn	ADV	*	denn	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	23	gar	ADV	*	gar	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	24	so	ADV	*	so	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	25	schrecklich	ADJD	*	schrecklich	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	26	,	$,	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	27	um	APPR	*	um	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	28	Mit	APPR	*	mit	sg	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	29	Saladin	NN	*	saladin	sg	*	klosterbruder	-	-	-	-	(7)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	30	den	ART	*	der	sg	masc	klosterbruder	-	-	-	-	(310
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	31	Waffenstillestand	NN	*	waffenstillestand	sg	masc	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	32	,	$,	*	--	-	-	klosterbruder	-	-	-	-	310)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	33	Den	NE	*	der	sg	masc	klosterbruder	-	-	-	-	(266)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	34	Euer	NE	*	euer	*	*	klosterbruder	-	-	-	-	(267|(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	35	Orden	NE	*	orden	pl	fem	klosterbruder	-	-	-	-	267)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	36	schon	ADV	*	schon	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	37	so	ADV	*	so	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	38	brav	ADJD	*	brav	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	39	gebrochen	VVPP	*	brechen	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	40	,	$,	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	41	Es	PPER	*	es	sg	neut	klosterbruder	-	-	-	-	(265)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	42	koste	VVFIN	*	kosten	sg	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	43	was	PIS	*	was	sg	neut	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	44	es	PPER	*	es	sg	neut	klosterbruder	-	-	-	-	(265)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	45	wolle	VMFIN	*	wollen	sg	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	46	,	$,	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	47	wieder	ADV	*	wieder	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	48	her	ADV	*	her	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	49	Zu	PTKZU	*	zu	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	50	stellen	VVINF	*	stellen	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	51	.	$.	*	--	-	-	klosterbruder	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	tempelherr	(LOC*)	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	tempelherr	-	-	-	-	61)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Welch	PWAT	(VROOT(PSEUDO(NP*	welch	-	-	tempelherr	-	-	-	-	(8
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	ein	ART	*	ein	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Patriarch	NN	*)	patriarch	-	-	tempelherr	-	-	-	-	8)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	!	$.	*))	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	*	–	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Ja	PTKANT	*	ja	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	so	ADV	*	so	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	!	$.	*	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Der	ART	*	der	sg	masc	tempelherr	-	-	-	-	(8
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	liebe	ADJA	*	liebe	sg	masc	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	tapfre	ADJA	*	tapfr	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Mann	NN	*	mann	*	masc	tempelherr	-	-	-	-	8)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	will	VMFIN	*	wollen	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	mich	PPER	*	mich	sg	*	tempelherr	-	-	-	-	(4)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	zu	APPR	*	zu	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	keinem	PIAT	*	kein	sg	masc	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	Gemeinen	ADJA	*	gemein	sg	masc	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	Boten	NN	*	bote	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	;	$.	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	will	VMFIN	*	wollen	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	mich	PPER	*	mich	sg	*	tempelherr	-	-	-	-	(4)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	–	$(	*	–	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	zum	APPRART	*	zu	sg	neut	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	Spion	NN	*	spion	sg	neut	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	.	$.	*	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	*	–	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Sagt	VVFIN	*	sagen	*	*	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Euerm	PPOSAT	*	euerm	*	*	tempelherr	-	-	-	-	(8|(5)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Patriarchen	NN	*	patriarch	pl	fem	tempelherr	-	-	-	-	8)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	,	$,	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	guter	ADJA	*	gut	*	*	tempelherr	-	-	-	-	(5
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Bruder	NN	*	bruder	sg	*	tempelherr	-	-	-	-	5)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	,	$,	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	So	ADV	*	so	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	viel	ADV	*	viel	*	*	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	Ihr	PPER	*	ihr	pl	*	tempelherr	-	-	-	-	(5)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	mich	PRF	*	mich	sg	*	tempelherr	-	-	-	-	(4)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	ergründen	VVINF	*	ergründen	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	können	VMFIN	*	können	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	,	$,	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	wär	VAFIN	*	sein	sg	-	tempelherr	-	-	-	-	(268
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	'	$(	*	--	-	-	tempelherr	-	-	-	-	268)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	Das	ART	*	der	sg	neut	tempelherr	-	-	-	-	(248)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	meine	PPOSAT	*	mein	sg	neut	tempelherr	-	-	-	-	(4)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	Sache	NN	*	sache	sg	neut	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	nicht	PTKNEG	*	nicht	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	.	$.	*	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Ich	PPER	(S*	ich	sg	*	tempelherr	-	-	-	-	(4)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	müsse	VMFIN	*	müssen	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	mich	PRF	(VP*	mich	sg	-	tempelherr	-	-	-	-	(4)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Noch	ADV	*	noch	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	als	APPR	(PP*	als	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Gefangenen	NN	*)	gefangener	pl	*	tempelherr	-	-	-	-	(240)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	betrachten	VVINF	*))	betrachten	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	;	$.	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	und	KON	(VP*	und	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	Der	ART	(NP*	der	sg	fem	tempelherr	-	-	-	-	(269|(121
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	Tempelherren	NN	*)	tempelherr	pl	masc	tempelherr	-	-	-	-	121)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	einziger	ADJA	(NP*	einzig	sg	masc	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	Beruf	NN	*	beruf	sg	masc	tempelherr	-	-	-	-	269)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	Sei	NN	*	sei	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	mit	APPR	(PP*	mit	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	dem	ART	*	der	sg	masc	tempelherr	-	-	-	-	(270
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	Schwerte	NN	*))	schwert	sg	masc	tempelherr	(LOC*)	-	-	-	270)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	drein	ADV	*	drein	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	zu	PTKZU	(VZ*	zu	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	schlagen	VVINF	*)	schlagen	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	,	$,	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	22	nicht	PTKNEG	(VP*	nicht	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	23	Kundschafterei	NN	*	kundschafterei	sg	fem	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	24	zu	PTKZU	(VZ*	zu	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	25	treiben	VVINF	*)))	treiben	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	26	.	$.	*))	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	klosterbruder	(LOC*)	-	-	-	(5
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	klosterbruder	-	-	-	-	5)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Dacht	NN	*	dacht	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	'	$(	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	ichs	APPRART	*	ichs	-	-	klosterbruder	-	-	-	-	(268)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	doch	ADV	*	doch	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	!	$.	*	--	-	-	klosterbruder	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Wills	NE	*	wills	-	-	klosterbruder	-	-	-	-	(268)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	auch	ADV	(VP(NP*	auch	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	dem	ART	*	der	sg	masc	klosterbruder	-	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Herrn	NN	*)	herr	sg	masc	klosterbruder	-	-	-	-	61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	nicht	PTKNEG	(AVP*	nicht	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	eben	ADV	*)	eben	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	sehr	ADV	*	sehr	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	verübeln	VVINF	*)	verübeln	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	.	$.	*))	--	-	-	klosterbruder	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Zwar	ADV	*	zwar	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	kömmt	VVFIN	*	kömmen	sg	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	das	ART	(NP*	der	sg	neut	klosterbruder	-	-	-	-	(271
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Beste	NN	*	gut	sg	neut	klosterbruder	-	-	-	-	271)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	noch	ADV	*)	noch	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	.	$.	*))	--	-	-	klosterbruder	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Der	ART	(S(NP*	der	sg	masc	klosterbruder	-	-	-	-	(8
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Patriarch	NN	*	patriarch	sg	masc	klosterbruder	-	-	-	-	8)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Hiernächst	NN	*)	hiernächst	sg	masc	klosterbruder	(PER*)	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	hat	VAFIN	*	haben	sg	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	ausgegattert	VVPP	(VP*	ausgattern	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	,	$,	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	wie	PWAV	(CS(S*	wie	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	die	ART	(NP*	der	sg	fem	klosterbruder	-	-	-	-	(272
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	Feste	NN	*)	fest	sg	fem	klosterbruder	-	-	-	-	272)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	Sich	NE	*	sich	sg	-	klosterbruder	-	-	-	-	(272)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	nennt	VVFIN	*)	nennen	sg	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	,	$,	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	und	KON	*	und	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	wo	PWAV	(S*	wo	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	auf	APPR	(PP*	auf	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	Libanon	NE	*)	libanon	sg	masc	klosterbruder	-	-	-	-	(273)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	sie	PPER	*	sie	sg	fem	klosterbruder	-	-	-	-	(272)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	liegt	VVFIN	*))))	liegen	sg	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	,	$,	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	In	APPR	*	in	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	der	PRELS	(CNP(NP*	der	sg	fem	klosterbruder	-	-	-	-	(272)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	22	die	ART	(VP(NP*	der	pl	masc	klosterbruder	-	-	-	-	(274
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	23	ungeheuern	ADJD	*	ungeheuern	pl	fem	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	24	Summen	NN	*)	summe	pl	fem	klosterbruder	-	-	-	-	274)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	25	stecken	VVINF	*	stecken	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	26	,	$,	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	27	Mit	APPR	(S(PP*	mit	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	28	welchen	PWAT	*	welcher	sg	fem	klosterbruder	-	-	-	-	(274)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	29	Saladins	NE	*	saladin	sg	masc	klosterbruder	-	-	-	-	(174
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	30	vorsichtger	ADJA	*	vorsichtg	sg	masc	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	31	Vater	NN	*)	vater	sg	masc	klosterbruder	-	-	-	-	174)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	32	Das	ART	(NP*	der	sg	neut	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	33	Heer	NN	*)	heer	sg	neut	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	34	besoldet	VVFIN	*)))	besolden	sg	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	35	,	$,	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	36	und	KON	*	und	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	37	die	ART	(NP*	der	pl	fem	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	38	Zurüstungen	NN	*	zurüstung	pl	fem	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	39	Des	NE	(MPN*	der	sg	masc	klosterbruder	-	-	-	-	(264
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	40	Kriegs	NE	*)))	krieg	sg	masc	klosterbruder	-	-	-	-	264)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	41	bestreitet	VVFIN	*	bestreiten	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	42	.	$.	*))	--	-	-	klosterbruder	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Saladin	NE	(VROOT(PSEUDO(S*	saladin	sg	*	klosterbruder	(PER*)	-	-	-	(7)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	verfügt	VVFIN	*	verfügen	sg	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Von	APPR	(PP*	von	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Zeit	NN	*	zeit	sg	fem	klosterbruder	-	-	-	-	(158)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	zu	APPR	(PP*	zu	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Zeit	NN	*	zeit	sg	fem	klosterbruder	-	-	-	-	(158)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	auf	APPR	(PP*	auf	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	abgelegnen	ADJA	*	abgelegn	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	Wegen	NN	*)))	weg	pl	masc	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	Nach	APPR	(PP*	nach	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	dieser	PDAT	*	dieser	sg	fem	klosterbruder	-	-	-	-	(272
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	Feste	NN	*)	feste	sg	fem	klosterbruder	-	-	-	-	272)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	sich	PRF	*	sich	sg	-	klosterbruder	-	-	-	-	(7)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	,	$,	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	nur	ADV	(VP*	nur	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	kaum	ADV	*	kaum	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	begleitet	VVPP	*))	begleiten	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	.	$.	*))	--	-	-	klosterbruder	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Ihr	PPER	(S*	ihr	pl	*	klosterbruder	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	merkt	VVFIN	*)	merken	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	doch	ADV	*	doch	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	?	$.	*))	--	-	-	klosterbruder	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	tempelherr	(LOC*)	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	tempelherr	-	-	-	-	61)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Nimmermehr	ADV	(VROOT(PSEUDO(S*)	nimmermehr	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	!	$.	*))	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	klosterbruder	(LOC*)	-	-	-	(5
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	klosterbruder	-	-	-	-	5)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	wäre	VAFIN	*	sein	sg	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	da	ADV	*	da	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Wohl	ADV	*	wohl	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	leichter	ADJD	(AP*	leicht	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	,	$,	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	als	KOKOM	(NP*	als	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	des	ART	*	der	sg	neut	klosterbruder	-	-	-	-	(7
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	Saladins	NN	*))	saladin	sg	neut	klosterbruder	-	-	-	-	7)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	sich	PRF	*	sich	sg	-	klosterbruder	-	-	-	-	(8)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	zu	APPR	(PP*	zu	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	Bemächtigen	NN	*))	bemächtigen	pl	*	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	?	$.	*))	--	-	-	klosterbruder	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	den	ART	(VROOT(PSEUDO(NP*	der	sg	masc	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Garaus	NN	*	garaus	sg	masc	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	ihm	PPER	(VP*	ihm	sg	masc	klosterbruder	-	-	-	-	(7)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	zu	PTKZU	(VZ*	zu	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	machen	VVINF	*)))	machen	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	?	$.	*))	--	-	-	klosterbruder	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Ihr	PPER	(S*	ihr	pl	*	klosterbruder	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	schaudert	VVFIN	*)	schaudern	sg	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	?	$.	*))	--	-	-	klosterbruder	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	O	XY	*	O	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	es	PPER	(NP(CS(S*	es	sg	neut	klosterbruder	-	-	-	-	(275)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	haben	VAFIN	*	haben	pl	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	schon	ADV	*	schon	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	ein	ART	(NP*	ein	*	*	klosterbruder	-	-	-	-	(275
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Paar	NN	*)	paar	*	*	klosterbruder	-	-	-	-	275)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Gottsfürchtge	NN	(NP*	gottsfürchtge	*	*	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	Maroniten	NN	*)	maronit	pl	fem	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	sich	PRF	*	sich	pl	-	klosterbruder	-	-	-	-	(275)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	erboten	VVFIN	*)	erboten	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	,	$,	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	Wenn	KOUS	(S*	wenn	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	nur	ADV	(NP*	nur	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	ein	ART	*	ein	sg	masc	klosterbruder	-	-	-	-	(276
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	wackrer	ADJA	*	wackr	sg	masc	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	Mann	NN	*)	mann	sg	masc	klosterbruder	-	-	-	-	276)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	sie	PPER	*	sie	pl	masc	klosterbruder	-	-	-	-	(275)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	führen	VVINF	*	führen	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	wolle	VMFIN	*))	wollen	sg	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	,	$,	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	Das	ART	(VP(NP*	der	sg	neut	klosterbruder	-	-	-	-	(271
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	22	Stück	NN	*)	stück	sg	neut	klosterbruder	-	-	-	-	271)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	23	zu	PTKZU	(VZ*	zu	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	24	wagen	VVINF	*)))	wagen	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	25	.	$.	*))	--	-	-	klosterbruder	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	tempelherr	(LOC*)	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	tempelherr	-	-	-	-	61)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Und	KON	*	und	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	der	ART	*	der	sg	masc	tempelherr	-	-	-	-	(8
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Patriarch	NN	*	patriarch	sg	masc	tempelherr	-	-	-	-	8)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Hätt	NE	*	hätt	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	'	$(	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	auch	ADV	*	auch	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	zu	APPR	*	zu	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	diesem	PDAT	*	dieser	sg	masc	tempelherr	-	-	-	-	(277
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	wackern	NN	*	wackern	sg	masc	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	Manne	NN	*	manne	sg	-	tempelherr	-	-	-	-	277)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	mich	APPR	*	mich	sg	*	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	Ersehn	NN	*	ersehn	*	*	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	?	$.	*	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	klosterbruder	(LOC*)	-	-	-	(5
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	klosterbruder	-	-	-	-	5)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Er	PPER	(VROOT(PSEUDO(S*	er	sg	masc	klosterbruder	-	-	-	-	(8)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	glaubt	VVFIN	*	glauben	sg	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	,	$,	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	daß	KOUS	(S*	daß	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	König	NN	(NP*	könig	sg	masc	klosterbruder	-	-	-	-	(258
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Philipp	NE	*)	philipp	sg	masc	klosterbruder	(PER*)	-	-	-	258)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	wohl	ADV	*	wohl	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Von	APPR	(PP*	von	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	Ptolemais	NE	*	ptolemais	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	aus	APZR	*)	aus	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	die	ART	(NP*	der	sg	fem	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	Hand	NN	*)	hand	sg	fem	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	hierzu	PROAV	*	hierzu	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	Am	PTKA	(VP(AP*	an	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	besten	ADJD	*)	gut	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	bieten	VVINF	*)	bieten	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	könne	VMFIN	*))	können	sg	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	.	$.	*))	--	-	-	klosterbruder	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	tempelherr	(LOC*)	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	tempelherr	-	-	-	-	61)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Mir	PPER	*	sich	sg	*	tempelherr	-	-	-	-	(4)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	?	$.	*	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	mir	PPER	(VROOT(PSEUDO(S(NP*	sich	sg	*	tempelherr	-	-	-	-	(4)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	,	$,	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Bruder	NN	*))	bruder	*	*	tempelherr	-	-	-	-	(5)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	?	$.	*))	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Mir	PPER	*	sich	sg	*	tempelherr	-	-	-	-	(4)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	?	$.	*	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Habt	VAFIN	(VROOT(PSEUDO(S*	haben	pl	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Ihr	PPER	(VP*	ihr	pl	*	tempelherr	-	-	-	-	(5)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	nicht	PTKNEG	*	nicht	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	gehört	VVPP	*))	gehören	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	?	$.	*))	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	nur	ADV	(VROOT(PSEUDO(S(AP*	nur	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	erst	ADV	*)	erst	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	gehört	VVFIN	*	gehören	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	,	$,	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Was	PWS	(S*	was	sg	neut	tempelherr	-	-	-	-	(278|(279
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	für	APPR	(NP(PP*	für	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Verbindlichkeit	NN	*)	verbindlichkeit	-	-	tempelherr	-	-	-	-	279)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	dem	ART	*	der	sg	neut	tempelherr	-	-	-	-	(7
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	Saladin	NN	*)	saladin	sg	neut	tempelherr	-	-	-	-	7)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	Ich	PPER	*	ich	sg	*	tempelherr	-	-	-	-	(4)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	habe	VAFIN	*))))	haben	sg	-	tempelherr	-	-	-	-	278)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	klosterbruder	(LOC*)	-	-	-	(5
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	klosterbruder	-	-	-	-	5)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Wohl	ADV	(VROOT(PSEUDO(S*	wohl	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	hab	VAFIN	*	hab	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	ichs	NE	(VP*	ichs	-	-	klosterbruder	-	-	-	-	(314)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	gehört	VVPP	*))	gehören	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	.	$.	*))	--	-	-	klosterbruder	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	tempelherr	(LOC*)	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	tempelherr	-	-	-	-	61)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	doch	ADV	*)	doch	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	?	$.	*))	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	klosterbruder	(LOC*)	-	-	-	(5
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	klosterbruder	-	-	-	-	5)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Ja	PTKANT	*	ja	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	,	$,	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	–	PPER	*	–	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	meint	VVFIN	*	meinen	sg	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	der	ART	*	der	sg	masc	klosterbruder	-	-	-	-	(8
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Patriarch	NN	*	patriarch	sg	masc	klosterbruder	-	-	-	-	8)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	,	$,	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	–	KON	*	–	sg	neut	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	das	PDS	*	der	sg	neut	klosterbruder	-	-	-	-	(279)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	wär	VAFIN	*	sein	sg	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	'	$(	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	schon	ADV	*	schon	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	gut	ADJD	*	gut	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	:	$.	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	Gott	NN	*	gott	-	-	klosterbruder	-	-	-	-	(22)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	aber	ADV	*	aber	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	und	KON	*	und	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	der	ART	*	der	sg	fem	klosterbruder	-	-	-	-	(267
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	Orden	NN	*	orden	-	-	klosterbruder	-	-	-	-	267)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	.	$.	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	.	$.	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	.	$.	*	--	-	-	klosterbruder	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	tempelherr	(LOC*)	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	tempelherr	-	-	-	-	61)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Ändern	KON	*	and	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	nichts	PIS	*	nichts	*	neut	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	!	$.	*	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Gebieten	NN	(VROOT(PSEUDO(S*	gebiet	pl	neut	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	mir	PPER	*	sich	sg	*	tempelherr	-	-	-	-	(4)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	kein	PIAT	(NP*	kein	sg	neut	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Bubenstück	NN	*))	bubenstück	sg	neut	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	!	$.	*))	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	klosterbruder	(LOC*)	-	-	-	(5
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	klosterbruder	-	-	-	-	5)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Gewiß	ADV	(VROOT(PSEUDO(CO(AVP*	gewiß	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	nicht	PTKNEG	*))	nicht	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	!	$.	*))	--	-	-	klosterbruder	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Nur	ADV	(S*	nur	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	,	$,	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	–	CARD	*	–	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	meint	VVFIN	*	meinen	sg	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	der	ART	(NP*	der	sg	masc	klosterbruder	-	-	-	-	(8
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Patriarch	NN	*)	patriarch	sg	masc	klosterbruder	-	-	-	-	8)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	,	$,	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	–	$.	*	–	sg	neut	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	sei	VAFIN	(S*	sein	sg	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	Bubenstück	NN	*	bubenstück	sg	neut	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	Vor	APPR	(PP*	vor	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	Menschen	NN	*)))	mensch	pl	masc	klosterbruder	-	-	-	-	(52)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	,	$,	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	nicht	PTKNEG	(NP(AVP*	nicht	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	auch	ADV	*)	auch	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	Bubenstück	NN	*	bubenstück	sg	neut	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	vor	APPR	(PP*	vor	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	Gott	NN	*))	gott	sg	masc	klosterbruder	(PER*)	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	.	$.	*))	--	-	-	klosterbruder	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	tempelherr	(LOC*)	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	tempelherr	-	-	-	-	61)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Ich	PPER	*	ich	sg	*	tempelherr	-	-	-	-	(4)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	wär	VAFIN	*	sein	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	'	$(	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	dem	ART	*	der	sg	neut	tempelherr	-	-	-	-	(7
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Saladin	NN	*	saladin	sg	neut	tempelherr	-	-	-	-	7)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	mein	PPOSAT	*	mein	sg	neut	tempelherr	-	-	-	-	(63|(4)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Leben	NN	*	leben	sg	neut	tempelherr	-	-	-	-	63)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	schuldig	ADJD	*	schuldig	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	:	$.	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	Und	KON	*	und	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	raubt	VVFIN	*	rauben	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	ihm	PPER	*	ihm	sg	masc	tempelherr	-	-	-	-	(7)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	seines	PPOSAT	*	sein	sg	neut	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	?	$.	*	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	klosterbruder	(LOC*)	-	-	-	(5
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	klosterbruder	-	-	-	-	5)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Pfui	NE	(VROOT(PSEUDO(MPN*	pfui	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	!	$.	*)))	--	-	-	klosterbruder	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Doch	KON	(S*	doch	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	bliebe	VVFIN	*	bleiben	sg	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	,	$,	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	–	PPER	(S*	–	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	meint	VVFIN	*))	meinen	sg	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Der	ART	(S(NP*	der	sg	masc	klosterbruder	-	-	-	-	(8
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Patriarch	NN	*)	patriarch	sg	masc	klosterbruder	-	-	-	-	8)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	,	$,	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	–	$.	*	–	sg	masc	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	noch	ADV	(AVP*	noch	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	immer	ADV	*)	immer	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	Saladin	NN	(NP*	saladin	sg	neut	klosterbruder	-	-	-	-	(7)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	Ein	ART	(NP*	ein	sg	neut	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	Feind	NN	*	feind	sg	masc	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	der	ART	(NP*	der	sg	masc	klosterbruder	-	-	-	-	(99
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	Christenheit	NN	*)))	christenheit	sg	masc	klosterbruder	-	-	-	-	99)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	,	$,	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	der	ART	(VP(NP*	der	sg	masc	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	Euer	ADJA	*	euer	sg	masc	klosterbruder	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	Freund	NN	*	freund	sg	masc	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	Zu	NE	*)	zu	sg	masc	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	22	sein	VAINF	*)	sein	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	23	,	$,	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	24	kein	PIAT	(S(NP*	kein	sg	neut	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	25	Recht	NN	*)	recht	sg	neut	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	26	erwerben	VVINF	*	erwerben	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	27	könne	VMFIN	*))	können	sg	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	28	.	$.	*))	--	-	-	klosterbruder	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	tempelherr	(LOC*)	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	tempelherr	-	-	-	-	61)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Freund	NN	(VROOT(PSEUDO*	freund	-	-	tempelherr	-	-	-	-	(280)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	?	$.	*))	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	An	APPR	(VROOT(PSEUDO*	an	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	dem	ART	*	der	sg	masc	tempelherr	-	-	-	-	(280)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	ich	PPER	(S*	ich	sg	*	tempelherr	-	-	-	-	(4)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	bloß	ADV	(AVP*	bloß	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	nicht	PTKNEG	*)	nicht	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	will	VMFIN	*	wollen	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	zum	APPRART	(VP(PP*	zu	sg	neut	tempelherr	-	-	-	-	(281
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Schurken	NN	*)	schurke	sg	neut	tempelherr	-	-	-	-	281)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	werden	VAINF	*))	werden	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	;	$.	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	Zum	APPRART	(PP*	zu	sg	neut	tempelherr	-	-	-	-	(281
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	undankbaren	ADJA	*	undankbar	sg	neut	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	Schurken	NN	*)	schurke	sg	neut	tempelherr	-	-	-	-	281)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	?	$.	*))	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	klosterbruder	(LOC*)	-	-	-	(5
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	klosterbruder	-	-	-	-	5)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Allerdings	ADV	(VROOT(PSEUDO(S*)	allerdings	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	!	$.	*))	--	-	-	klosterbruder	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Zwar	ADV	(S(AVP*	zwar	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	,	$,	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	–	CARD	*)	–	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	meint	VVFIN	*	meinen	sg	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	der	ART	(NP*	der	sg	masc	klosterbruder	-	-	-	-	(8
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Patriarch	NN	*)	patriarch	sg	masc	klosterbruder	-	-	-	-	8)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	,	$,	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	–	NN	(NP*	–	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	des	ART	(NP*	der	sg	masc	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	Dankes	NN	*))	dank	sg	masc	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	sei	VAFIN	*)	sein	sg	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	Man	PIS	(S*	man	sg	*	klosterbruder	-	-	-	-	(52)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	quitt	ADJD	(AP*	quitt	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	,	$,	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	vor	APPR	(PP*	vor	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	Gott	NN	(CNP*	gott	sg	masc	klosterbruder	-	-	-	-	(22)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	und	KON	*	und	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	Menschen	NN	*)))	mensch	sg	masc	klosterbruder	-	-	-	-	(52)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	quitt	VVFIN	*	quitt	sg	masc	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	,	$,	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	wenn	KOUS	(S*	wenn	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	22	uns	PPER	*	uns	pl	*	klosterbruder	-	-	-	-	(52)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	23	Der	ART	(NP*	der	sg	masc	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	24	Dienst	NN	*)	dienst	sg	masc	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	25	um	APPR	(PP*	um	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	26	unsertwillen	PIS	*)	unsertwillen	sg	masc	klosterbruder	-	-	-	-	(52)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	27	nicht	PTKNEG	*	nicht	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	28	geschehen	VVINF	*))	geschehen	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	29	.	$.	*))	--	-	-	klosterbruder	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Und	KON	*	und	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	da	ADV	*	da	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	verlauten	VVINF	*	verlauten	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	wolle	VMFIN	*	wollen	sg	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	,	$,	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	–	NN	*	–	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	meint	VVFIN	*	meinen	sg	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	der	ART	*	der	sg	masc	klosterbruder	-	-	-	-	(8
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	Patriarch	NN	*	patriarch	sg	masc	klosterbruder	-	-	-	-	8)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	,	$,	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	–	$.	*	–	sg	masc	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	Daß	KOUS	*	daß	sg	masc	klosterbruder	-	-	-	-	(130
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	Euch	PPER	*	euch	sg	masc	klosterbruder	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	nur	ADV	*	nur	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	darum	PROAV	*	darum	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	Saladin	NN	*	saladin	*	*	klosterbruder	-	-	-	-	(7)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	begnadet	VVPP	*	begnaden	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	,	$,	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	Weil	KOUS	*	weil	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	ihm	PPER	*	ihm	sg	masc	klosterbruder	-	-	-	-	(7)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	in	APPR	*	in	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	Eurer	PPOSAT	*	eurer	sg	fem	klosterbruder	-	-	-	-	(112|(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	22	Mien	NN	*	mie	pl	fem	klosterbruder	-	-	-	-	112)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	23	'	$(	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	24	,	$,	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	25	in	APPR	*	in	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	26	Euerm	PPOSAT	*	euerm	sg	neut	klosterbruder	-	-	-	-	(282|(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	27	Wesen	NN	*	wesen	sg	neut	klosterbruder	-	-	-	-	282)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	28	,	$,	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	29	So	ADV	*	so	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	30	was	PIS	*	was	*	neut	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	31	von	APPR	*	von	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	32	seinem	PPOSAT	*	sein	sg	masc	klosterbruder	-	-	-	-	(131|(7)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	33	Bruder	NN	*	bruder	sg	masc	klosterbruder	-	-	-	-	131)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	34	eingeleuchtet	VVPP	*	eingeuchten	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	35	.	$.	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	36	.	$.	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	37	.	$.	*	--	-	-	klosterbruder	-	-	-	-	130)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	tempelherr	(LOC*)	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	tempelherr	-	-	-	-	61)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Auch	ADV	(VROOT(PSEUDO(S(AP*	auch	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	dieses	PDAT	*)	dieser	sg	neut	tempelherr	-	-	-	-	(130)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	weiß	VVFIN	*	weiß	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	der	ART	(NP*	der	sg	masc	tempelherr	-	-	-	-	(8
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Patriarch	NN	*))	patriarch	sg	masc	tempelherr	-	-	-	-	8)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	;	$.	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	und	KON	(S*	und	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	doch	ADV	*)	doch	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	?	$.	*))	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Ah	NE	*	ah	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	!	$.	*))	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	wäre	VAFIN	*	sein	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	das	PDS	*	der	sg	neut	tempelherr	-	-	-	-	(130)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	gewiß	ADV	*	gewiß	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	!	$.	*	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Ah	NE	(VROOT(PSEUDO(NP*	ah	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	,	$,	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Saladin	NE	*)	saladin	sg	neut	tempelherr	-	-	-	-	(7)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	!	$.	*))	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	*	–	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Wie	PWAV	*	wie	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	?	$.	*	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	die	ART	*	der	sg	fem	tempelherr	-	-	-	-	(38
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Natur	NN	*	natur	sg	fem	tempelherr	-	-	-	-	38)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	hätt	VAFIN	*	hätt	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	'	$(	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	auch	ADV	*	auch	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	nur	ADV	*	nur	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Einen	ART	*	ein	sg	masc	tempelherr	-	-	-	-	(283
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Zug	NN	*	zug	sg	masc	tempelherr	-	-	-	-	283)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	Von	APPR	*	von	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	mir	PPER	*	sich	sg	*	tempelherr	-	-	-	-	(4)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	in	APPR	*	in	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	deines	PPOSAT	*	dein	sg	masc	tempelherr	-	-	-	-	(284|(131|(7)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	Bruders	NN	*	bruder	sg	masc	tempelherr	-	-	-	-	131)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	Form	NN	*	form	sg	fem	tempelherr	-	-	-	-	284)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	gebildet	VVPP	*	bilden	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	:	$.	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	Und	KON	*	und	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	dem	PDS	*	der	sg	masc	tempelherr	-	-	-	-	(283)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	entspräche	VVFIN	*	entsprechen	sg	masc	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	nichts	PIS	*	nichts	*	neut	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	in	APPR	*	in	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	meiner	PPOSAT	*	mein	sg	fem	tempelherr	-	-	-	-	(282|(4)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	22	Seele	NN	*	seele	sg	fem	tempelherr	-	-	-	-	282)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	23	?	$.	*	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Was	PWS	(VROOT(PSEUDO(S(S*	was	sg	neut	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	dem	PDS	*	der	sg	masc	tempelherr	-	-	-	-	(283)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	entspräche	VVFIN	*)	entsprechen	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	,	$,	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	könnt	VVFIN	*	können	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	ich	PPER	*	ich	sg	*	tempelherr	-	-	-	-	(4)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	unterdrücken	VVINF	*	unterdrücken	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	,	$,	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	Um	KOUI	(VP*	um	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	einem	ART	(NP*	ein	sg	neut	tempelherr	-	-	-	-	(285
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	Patriarchen	NN	*)	patriarch	sg	neut	tempelherr	-	-	-	-	285)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	zu	PTKZU	(VZ*	zu	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	gefallen	VVINF	*)))	fallen	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	?	$.	*))	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Natur	NN	(NP*	natur	sg	fem	tempelherr	-	-	-	-	(38)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	,	$,	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	so	ADV	(S*	so	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	leugst	VVFIN	*	leugst	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	du	PPER	*	du	sg	*	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	nicht	PTKNEG	*))	nicht	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	!	$.	*))	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	So	ADV	(VROOT(PSEUDO(S*	so	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	widerspricht	VVFIN	*	widersprechen	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Sich	NE	(NP*	sich	sg	masc	tempelherr	-	-	-	-	(22)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Gott	NN	*	gott	sg	masc	tempelherr	(PER*)	-	-	-	(22)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	in	APPR	(PP*	in	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	seinen	PPOSAT	*	sein	pl	neut	tempelherr	-	-	-	-	(52|(22)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Werken	NN	*))	werk	pl	neut	tempelherr	-	-	-	-	52)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	nicht	PTKNEG	*)	nicht	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	!	$.	*))	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Geht	VVFIN	*	gehen	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Bruder	NN	*	bruder	sg	masc	tempelherr	-	-	-	-	(5)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	!	$.	*))	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Erregt	VVFIN	(S*	erregen	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	mir	PPER	*	sich	sg	*	tempelherr	-	-	-	-	(4)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	meine	PPOSAT	(NP*	mein	sg	fem	tempelherr	-	-	-	-	(286|(4)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Galle	NN	*)	galle	sg	fem	tempelherr	-	-	-	-	286)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	nicht	PTKNEG	*)	nicht	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	!	$.	*))	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Geht	VVFIN	*	gehen	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	!	$.	*))	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	geht	VVFIN	*	gehen	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	!	$.	*	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	klosterbruder	(LOC*)	-	-	-	(5
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	klosterbruder	-	-	-	-	5)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Ich	PPER	*	ich	sg	*	klosterbruder	-	-	-	-	(5)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	geh	XY	*	geh	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	'	$(	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	;	$.	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	und	KON	*	und	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	geh	XY	*	geh	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	'	$(	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	vergnügter	ADJD	*	vergnügt	sg	masc	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	,	$,	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	als	KOKOM	*	als	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	ich	PPER	*	ich	sg	*	klosterbruder	-	-	-	-	(5)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	kam	VVFIN	*	kommen	sg	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	.	$.	*	--	-	-	klosterbruder	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Verzeihe	VVFIN	(VROOT(PSEUDO(S*	verzeihe	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	mir	PPER	*	sich	sg	*	klosterbruder	-	-	-	-	(5)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	der	ART	(NP*	der	sg	masc	klosterbruder	-	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Herr	NN	*))	herr	sg	masc	klosterbruder	-	-	-	-	61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	.	$.	*))	--	-	-	klosterbruder	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Wir	PPER	(VROOT(PSEUDO(S*	wir	pl	*	klosterbruder	-	-	-	-	(287
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Klosterleute	NN	*	klosterleute	pl	*	klosterbruder	-	-	-	-	287)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Sind	VAFIN	*	sein	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	schuldig	ADJD	*	schuldig	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	,	$,	*	--	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	unsern	PPOSAT	(VP(NP*	unsern	pl	masc	klosterbruder	-	-	-	-	(287)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Obern	NN	*)	ober	pl	masc	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	zu	PTKZU	(VZ*	zu	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	gehorchen	VVINF	*)))	gehorchen	-	-	klosterbruder	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	.	$.	*))	--	-	-	klosterbruder	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Der	ART	(VROOT(PSEUDO(CNP(NP*	der	sg	masc	_stage	-	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Tempelherr	NN	*)	tempelherr	sg	masc	_stage	-	-	-	-	61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	und	KON	*	und	-	-	_stage	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Daja	NE	(NP*	daja	-	-	_stage	(PER*)	-	-	-	(0
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	,	$,	*	--	-	-	_stage	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	die	PRELS	(CS(S*	der	sg	fem	_stage	-	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	den	ART	(VP(NP*	der	pl	masc	_stage	-	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Tempelherrn	NN	*)	tempelherr	pl	masc	_stage	-	-	-	-	61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	schon	ADV	(AP(NP*	schon	-	-	_stage	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	eine	ART	*	ein	sg	fem	_stage	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	Zeit	NN	*)	zeit	sg	fem	_stage	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	lang	ADJD	*)	lang	-	-	_stage	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	von	APPR	(PP*	von	-	-	_stage	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	weiten	NN	*)	weit	-	-	_stage	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	beobachtet	VVPP	*)	beobachten	-	-	_stage	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	hatte	VAFIN	*)	haben	sg	-	_stage	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	,	$,	*	--	-	-	_stage	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	und	KON	*	und	-	-	_stage	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	sich	PRF	(S*	sich	sg	-	_stage	-	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	nun	ADV	*	nun	-	-	_stage	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	ihm	PPER	*	ihm	sg	neut	_stage	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	nähert	VVFIN	*))))	nähern	sg	-	_stage	-	-	-	-	0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	22	.	$.	*))	--	-	-	_stage	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	daja	-	-	-	-	(0
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	daja	-	-	-	-	0)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Der	ART	*	der	sg	masc	daja	-	-	-	-	(5
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Klosterbruder	NN	*	klosterbruder	sg	masc	daja	-	-	-	-	5)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	wie	PWAV	*	wie	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	mich	PPER	*	mich	sg	*	daja	-	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	dünkt	VVFIN	*	dünken	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	ließ	VVFIN	*	lassen	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	in	APPR	*	in	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	Der	ART	*	der	sg	fem	daja	-	-	-	-	(288
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	besten	ADJA	*	gut	sg	fem	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	Laun	NN	*	laun	sg	fem	daja	-	-	-	-	288)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	'	$(	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	ihn	PPER	*	ihn	sg	masc	daja	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	nicht	PTKNEG	*	nicht	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	.	$.	*	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Doch	KON	(S*	doch	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	muß	VMFIN	*	müssen	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	ich	PPER	*	ich	sg	*	daja	-	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	mein	PPOSAT	(VP(NP*	mein	sg	neut	daja	-	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Paket	NN	*)	paket	sg	neut	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	nur	ADV	*	nur	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	wagen	VVINF	*))	wagen	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	.	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	tempelherr	(LOC*)	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	tempelherr	-	-	-	-	61)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Nun	ADV	(VROOT(PSEUDO(S(ISU*	nun	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	,	$,	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	vortrefflich	ADJD	*))	vortrefflich	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	!	$.	*))	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Lügt	VVFIN	(S*	lügen	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Das	ART	(NP*	der	sg	neut	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Sprichwort	NN	*)	sprichwort	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	wohl	ADV	*	wohl	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	:	$.	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	daß	KOUS	(S(AVP(S*	daß	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Mönch	NN	(CNP*	mönch	-	-	tempelherr	-	-	-	-	(287)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	und	KON	*	und	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	Weib	NN	*))	weib	-	-	tempelherr	-	-	-	-	(289)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	,	$,	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	und	KON	*)	und	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	Weib	NN	*))	weib	sg	masc	tempelherr	-	-	-	-	(289)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	Und	KON	(NP*	und	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	Mönch	NN	*	mönch	sg	masc	tempelherr	-	-	-	-	(287)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	des	ART	(NP*	der	sg	masc	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	Teufels	NN	*))	teufel	sg	masc	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	beide	PIAT	(S(NP*	beide	pl	masc	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	Krallen	NN	*)	kralle	pl	masc	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	sind	VAFIN	*)	sein	pl	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	?	$.	*))	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Er	PPER	(VROOT(PSEUDO(S*	er	sg	masc	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	wirft	VVFIN	*	werfen	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	mich	PPER	*	mich	sg	*	tempelherr	-	-	-	-	(4)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	heut	ADV	*	heut	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	aus	APPR	(PP*	aus	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	einer	PIS	*)	ein	sg	fem	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	in	APPR	(PP*	in	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	die	ART	*	der	sg	fem	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	andre	ADJA	*))	andre	sg	fem	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	.	$.	*))	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	daja	-	-	-	-	(0
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	daja	-	-	-	-	0)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Was	PWS	*	was	sg	neut	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	seh	XY	*	seh	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	'	$(	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	ich	PPER	*	ich	sg	*	daja	-	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	?	$.	*	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	*	–	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Edler	NE	*	edler	pl	masc	daja	-	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Ritter	NE	*	ritter	pl	masc	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Euch	PPER	*	euch	pl	*	daja	-	-	-	-	61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	?	$.	*	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Gott	NN	*	gott	sg	masc	daja	-	-	-	-	(22)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Dank	FM	*	dank	sg	masc	daja	-	-	-	-	(23)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	!	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Gott	NN	(VROOT(PSEUDO*	gott	sg	masc	daja	-	-	-	-	(22)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	tausend	CARD	(NP*	tausend	-	-	daja	-	-	-	-	(23
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Dank	NN	*)	dank	-	-	daja	-	-	-	-	23)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	!	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Wo	PWAV	(S*	wo	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	habt	VAFIN	*	haben	pl	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Ihr	PPER	*	ihr	pl	*	daja	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	denn	ADV	*)	denn	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Die	ART	(S(NP*	der	sg	fem	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	ganze	ADJA	*	ganz	sg	fem	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Zeit	NN	*)	zeit	sg	fem	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	gesteckt	VVPP	*)	stecken	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	?	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Ihr	PPER	(S*	ihr	pl	*	daja	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	seid	VAFIN	*	sein	pl	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	doch	ADV	(VP(AVP*	doch	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	wohl	ADV	*)	wohl	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Nicht	PTKNEG	(AP*	nicht	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	krank	ADJD	*)	krank	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	gewesen	VAPP	*))	sein	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	?	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	tempelherr	(LOC*)	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	tempelherr	-	-	-	-	61)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Nein	PTKANT	*	nein	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	daja	-	-	-	-	(0
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	daja	-	-	-	-	0)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Gesund	ADJD	(VROOT(PSEUDO*	gesund	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	doch	ADV	*	doch	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	?	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	tempelherr	(LOC*)	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	tempelherr	-	-	-	-	61)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Ja	PTKANT	*	ja	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	daja	-	-	-	-	(0
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	daja	-	-	-	-	0)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Wir	PPER	(VROOT(PSEUDO(S*	wir	pl	*	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	waren	VAFIN	*	sein	pl	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Euertwegen	NN	(VP*	euertwegen	pl	masc	daja	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	wahrlich	ADJD	*	wahrlich	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	ganz	ADV	*	ganz	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Bekümmert	VVPP	*))	bekümmert	sg	neut	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	.	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	tempelherr	(LOC*)	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	tempelherr	-	-	-	-	61)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	So	ADV	(VROOT(PSEUDO(S*)	so	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	?	$.	*))	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	daja	-	-	-	-	(0
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	daja	-	-	-	-	0)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Ihr	PPER	(VROOT(PSEUDO(S*	ihr	pl	*	daja	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	wart	VVFIN	*	sein	pl	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	gewiß	ADV	(AP*	gewiß	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	verreist	VVPP	*))	verreisen	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	?	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	tempelherr	(LOC*)	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	tempelherr	-	-	-	-	61)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Erraten	NN	(VROOT(PSEUDO*	erraten	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	!	$.	*))	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	daja	-	-	-	-	(0
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	daja	-	-	-	-	0)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	kamt	VVFIN	*	kamen	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	heut	ADV	*	heut	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	erst	ADV	*	erst	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	wieder	ADV	*)	wieder	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	?	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	tempelherr	(LOC*)	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	tempelherr	-	-	-	-	61)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Gestern	ADV	(VROOT(PSEUDO*	gestern	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	daja	-	-	-	-	(0
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	daja	-	-	-	-	0)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Auch	ADV	(VROOT(PSEUDO(S(NP*	auch	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Rechas	NE	*	rechas	sg	*	daja	-	-	-	-	(1|(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Vater	NN	*)	vater	sg	masc	daja	-	-	-	-	1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	ist	VAFIN	*	sein	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	heut	ADV	(VP*	heut	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	angekommen	VVPP	*))	ankommen	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	.	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	nun	ADV	*	nun	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	darf	VMFIN	*	dürfen	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Recha	NE	*	recha	sg	neut	daja	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	doch	ADV	*	doch	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	wohl	ADV	(VP*	wohl	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	hoffen	VVINF	*))	hoffen	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	?	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	tempelherr	(LOC*)	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	tempelherr	-	-	-	-	61)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Was	PWS	*	was	sg	neut	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	?	$.	*	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	daja	-	-	-	-	(0
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	daja	-	-	-	-	0)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Warum	PWAV	(VROOT(PSEUDO(S*	warum	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	sie	PPER	*	sie	pl	*	daja	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Euch	PPER	(NP*	euch	pl	*	daja	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	so	ADV	*)	so	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	öfters	ADJD	(VP*	öfters	sg	neut	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	bitten	VVINF	*	bitten	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	lassen	VVINF	*))	lassen	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	.	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Ihr	PPOSAT	(VROOT(PSEUDO(S(NP*	ihr	sg	masc	daja	-	-	-	-	(1|(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Vater	NN	*)	vater	sg	masc	daja	-	-	-	-	1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	ladet	VVFIN	*	laden	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Euch	PPER	*	euch	pl	*	daja	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	nun	ADV	*	nun	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	selber	ADV	*	selber	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	bald	ADV	*	bald	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Aufs	NN	*	auf	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	dringlichste	VVFIN	*)	dringlich	pl	neut	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	.	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Er	PPER	(VROOT(PSEUDO(S*	er	sg	masc	daja	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	kömmt	VVFIN	*	kömmen	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	von	APPR	(PP*	von	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Babylon	NE	*	babylon	-	-	daja	-	-	-	-	(25)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	;	$.	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Mit	APPR	(CO(PP*	mit	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	zwanzig	CARD	*	zwanzig	-	-	daja	-	-	-	-	(55
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	hochbeladenen	ADJA	*	hochbeladen	pl	*	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	Kamelen	NN	*)	kamelen	pl	*	daja	-	-	-	-	55)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	Und	KON	(S*	und	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	allem	PIS	(NP*	alle	sg	neut	daja	-	-	-	-	(290
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	was	PRELS	(S*	was	*	neut	daja	-	-	-	-	(290)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	an	APPR	(PP*	an	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	edeln	PPOSAT	*	edeln	-	-	daja	-	-	-	-	(291
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	Spezereien	NN	*)	spezerei	pl	fem	daja	-	-	-	-	291)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	,	$,	*	--	-	-	daja	-	-	-	-	290)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	An	APPR	(CPP(PP*	an	pl	fem	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	Steinen	NN	*)	stein	pl	fem	daja	-	-	-	-	(292)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	und	KON	*	und	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	an	APPR	(PP*	an	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	22	Stoffen	NN	(CNP*	stoff	pl	masc	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	23	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	24	Indien	NE	(MPN*	indien	sg	neut	daja	(LOC*)	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	25	Und	NE	*	und	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	26	Persien	NE	*)	persien	sg	neut	daja	(LOC*)	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	27	und	KON	*	und	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	28	Syrien	NE	*)))	syrien	sg	neut	daja	(LOC*)	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	29	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	30	gar	ADV	*	gar	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	31	Sina	NE	(VP(MPN*	sina	sg	neut	daja	(PER*)	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	32	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	33	Kostbares	NE	*)	kostbar	sg	neut	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	34	nur	ADV	*	nur	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	35	gewähren	VVINF	*)))))))	gewähren	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	36	.	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	tempelherr	(LOC*)	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	tempelherr	-	-	-	-	61)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Kaufe	VVFIN	*	kaufe	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	nichts	PIS	*	nichts	*	neut	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	.	$.	*	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	daja	-	-	-	-	(0
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	daja	-	-	-	-	0)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Sein	PPOSAT	(VROOT(PSEUDO(S(NP*	sein	sg	neut	daja	-	-	-	-	(293|(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Volk	NN	*)	volk	sg	neut	daja	-	-	-	-	293)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	verehret	VVFIN	*	verehren	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	ihn	PPER	*	ihn	sg	masc	daja	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	als	APPR	(PP*	als	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	einen	ART	*	ein	sg	masc	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Fürsten	NN	*))	fürst	sg	masc	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	.	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Doch	KON	(VROOT(PSEUDO(S*	doch	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	daß	KOUS	(S*	daß	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	es	PPER	*	es	sg	neut	daja	-	-	-	-	(293)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	ihn	PPER	*	ihn	sg	masc	daja	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	den	ART	(NP*	der	sg	masc	daja	-	-	-	-	(294
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Weisen	NN	*	weise	sg	masc	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Nathan	NE	*)	nathan	sg	masc	daja	-	-	-	-	294)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	nennt	VVFIN	*)	nennen	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	Und	KON	(S*	und	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	nicht	PTKNEG	(NP*	nicht	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	vielmehr	ADV	*	vielmehr	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	den	ART	*	der	pl	fem	daja	-	-	-	-	(295
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	Reichen	NN	*)	reiche	pl	fem	daja	-	-	-	-	295)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	hat	VAFIN	*	haben	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	mich	PPER	(VP*	mich	sg	*	daja	-	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	oft	ADV	*	oft	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	Gewundert	VVPP	*)))	gewundert	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	.	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	tempelherr	(LOC*)	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	tempelherr	-	-	-	-	61)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Seinem	PPOSAT	(VROOT(PSEUDO(S(NP*	sein	sg	masc	tempelherr	-	-	-	-	(293|(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Volk	NN	*)	volk	sg	masc	tempelherr	-	-	-	-	293)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	ist	VAFIN	*	sein	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	reich	ADJD	(CO*	reich	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	und	KON	*	und	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	weise	ADV	*)	weise	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Vielleicht	ADV	*	vielleicht	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	das	ART	(NP*	der	sg	neut	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	nämliche	ADJA	*))	nämlich	sg	neut	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	.	$.	*))	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	daja	-	-	-	-	(0
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	daja	-	-	-	-	0)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Vor	APPR	*	vor	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	allen	PIS	*	aller	pl	masc	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	aber	ADV	*	aber	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Hätt	NN	*	hätt	-	-	daja	-	-	-	-	(293
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	'	$(	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	s	PPER	*	--	-	-	daja	-	-	-	-	293)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	ihn	PPER	*	ihn	sg	masc	daja	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	den	ART	*	der	sg	masc	daja	-	-	-	-	(44
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	Guten	NN	*	gute	sg	masc	daja	-	-	-	-	44)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	nennen	VVINF	*	nennen	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	müssen	VMINF	*	müssen	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	.	$.	*	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Denn	KON	(VROOT(PSEUDO(S*	denn	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Ihr	PPER	*	ihr	pl	*	daja	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	stellt	VVFIN	*	stellen	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Euch	PPER	*	euch	pl	*	daja	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	gar	ADV	(AVP*	gar	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	nicht	PTKNEG	*)	nicht	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	vor	PTKVZ	*	vor	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	wie	PWAV	(S(AP*	wie	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	gut	ADJD	*)	gut	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	er	PPER	*	er	sg	masc	daja	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	ist	VAFIN	*))	sein	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	.	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Als	KOUS	*	als	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	er	PPER	*	er	sg	masc	daja	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	erfuhr	VVFIN	*	erfahren	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	wie	PWAV	*	wie	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	viel	PIAT	*	viel	*	*	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Euch	PPER	*	euch	pl	*	daja	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Recha	NE	*	recha	-	-	daja	-	-	-	-	(2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	schuldig	ADJD	*	schuldig	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	:	$.	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	Was	PWS	*	was	sg	neut	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	hätt	VAFIN	*	hätt	sg	neut	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	'	$(	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	in	APPR	*	in	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	diesem	PDAT	*	dieser	sg	masc	daja	-	-	-	-	(296
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	Augenblicke	NN	*	augenblick	sg	masc	daja	-	-	-	-	296)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	nicht	PTKNEG	*	nicht	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	Er	PPER	*	er	sg	masc	daja	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	alles	PIS	*	alle	sg	neut	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	Euch	PPER	*	euch	sg	neut	daja	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	22	getan	VVPP	*	tun	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	23	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	24	gegeben	VVPP	*	geben	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	25	!	$.	*	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	tempelherr	(LOC*)	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	tempelherr	-	-	-	-	61)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Ei	XY	*	ei	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	!	$.	*	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	daja	-	-	-	-	(0
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	daja	-	-	-	-	0)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Versuchts	NN	(VROOT(PSEUDO(CS*	versucht	-	-	daja	-	-	-	-	(297)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	und	KON	*	und	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	kommt	VVFIN	*	kommen	sg	-	daja	-	-	-	-	(297
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	und	KON	*	und	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	seht	VVFIN	*)	sehen	sg	-	daja	-	-	-	-	297)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	!	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	tempelherr	(LOC*)	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	tempelherr	-	-	-	-	61)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Was	PWS	*	was	sg	neut	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	denn	ADV	*	denn	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	?	$.	*	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	wie	PWAV	(VROOT(PSEUDO(S*	wie	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	schnell	ADJD	(PP*	schnell	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Ein	ART	*	ein	sg	masc	tempelherr	-	-	-	-	(296
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Augenblick	NN	*	augenblick	sg	masc	tempelherr	-	-	-	-	296)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	vorüber	APPO	*)	vorüber	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	ist	VAFIN	*)	sein	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	?	$.	*))	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	daja	-	-	-	-	(0
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	daja	-	-	-	-	0)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Hätt	NN	*	hätt	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	'	$(	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	ich	PPER	*	ich	sg	*	daja	-	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Wenn	KOUS	*	wenn	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	er	PPER	*	er	sg	masc	daja	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	so	ADV	*	so	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	gut	ADV	*	gut	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	nicht	PTKNEG	*	nicht	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	wär	ADJD	*	sein	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	'	$(	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	es	PPER	*	es	sg	neut	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	mir	PPER	*	sich	sg	*	daja	-	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	so	ADV	*	so	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	lange	ADJA	*	lang	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	Bei	NN	*	bei	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	ihm	PPER	*	ihm	sg	masc	daja	-	-	-	-	(1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	gefallen	VVINF	*	gefallen	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	lassen	VVINF	*	lassen	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	?	$.	*	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Meint	VVFIN	(VROOT(PSEUDO(S*	meint	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Ihr	PPER	*	ihr	pl	*	daja	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	etwa	ADV	*	etwa	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Ich	PPER	(S*	ich	sg	*	daja	-	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	fühle	VVFIN	*	fühlen	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	meinen	PPOSAT	(NP*	mein	sg	masc	daja	-	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Wert	NN	*	wert	sg	masc	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	als	APPR	(PP*	als	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	Christin	NN	*))	christin	sg	fem	daja	-	-	-	-	(298)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	nicht	PTKNEG	*))	nicht	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	?	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Auch	ADV	*	auch	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	mir	PPER	*	sich	sg	*	daja	-	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	wards	VAFIN	*	ward	-	-	daja	-	-	-	-	(299)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	vor	APPR	*	vor	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	der	ART	*	der	sg	fem	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Wiege	NN	*	wiege	sg	fem	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	nicht	PTKNEG	*	nicht	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	gesungen	VVPP	*	singen	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	Daß	KOUS	*	daß	-	-	daja	-	-	-	-	(299
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	ich	PPER	*	ich	sg	*	daja	-	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	nur	ADV	*	nur	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	darum	PROAV	*	darum	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	meinem	PPOSAT	*	mein	sg	masc	daja	-	-	-	-	(300|(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	Ehgemahl	NN	*	ehgemahl	sg	masc	daja	-	-	-	-	300)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	Nach	APPR	*	nach	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	Palästina	NE	*	palästina	sg	neut	daja	(MISC*)	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	folgen	VVINF	*	folgen	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	würd	VAFIN	*	würd	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	'	$(	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	um	KOUI	*	um	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	22	da	ADV	*	da	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	23	Ein	ART	*	ein	sg	neut	daja	-	-	-	-	(2
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	24	Judenmädchen	NN	*	judenmädchen	sg	neut	daja	-	-	-	-	2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	25	zu	PTKZU	*	zu	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	26	erziehn	VVINF	*	erziehn	-	-	daja	-	-	-	-	299)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	27	Mein	PPOSAT	*	mein	sg	-	daja	-	-	-	-	(300|(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	28	lieber	ADJA	*	lieber	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	29	Ehgemahl	NN	*	ehgemahl	sg	fem	daja	-	-	-	-	300)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	30	ein	ART	*	ein	sg	masc	daja	-	-	-	-	(302
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	31	edler	ADJA	*	edel	sg	masc	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	32	Knecht	NN	*	knecht	sg	masc	daja	-	-	-	-	302)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	33	In	APPR	*	in	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	34	Kaiser	NN	*	kaiser	*	*	daja	-	-	-	-	(303
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	35	Friedrichs	NE	*	friedrich	sg	masc	daja	-	-	-	-	303)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	36	Heere	NE	*	heer	pl	neut	daja	-	-	-	-	301)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	tempelherr	(LOC*)	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	tempelherr	-	-	-	-	61)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Von	APPR	*	von	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Geburt	NN	*	geburt	sg	masc	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Ein	ART	*	ein	sg	masc	tempelherr	-	-	-	-	(302
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Schweizer	NN	*	schweizer	sg	masc	tempelherr	(MISC*)	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	,	$,	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	dem	PRELS	*	der	sg	masc	tempelherr	-	-	-	-	(302)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	die	ART	*	der	sg	fem	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Ehr	NN	*	ehr	sg	fem	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	'	$(	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	und	KON	*	und	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	Gnade	NN	*	gnade	sg	fem	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	ward	VVFIN	*	werden	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	Mit	APPR	*	mit	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	Seiner	PPOSAT	*	sein	sg	fem	tempelherr	-	-	-	-	(303|(302)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	Kaiserlichen	NN	*	kaiserlich	sg	fem	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	Majestät	NE	*	majestät	sg	fem	tempelherr	-	-	-	-	303)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	In	APPR	*	in	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	einem	ART	*	ein	sg	neut	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	Flusse	NN	*	flusse	sg	neut	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	zu	PTKZU	*	zu	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	ersaufen	VVINF	*	ersaufen	-	-	tempelherr	-	-	-	-	302)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	Wie	KOKOM	*	wie	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	22	vielmal	ADV	*	vielmal	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	23	habt	VAFIN	*	haben	pl	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	24	Ihr	PPER	*	ihr	pl	*	tempelherr	-	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	25	mir	PPER	*	sich	sg	*	tempelherr	-	-	-	-	(4)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	26	das	PDS	*	der	sg	neut	tempelherr	-	-	-	-	(301)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	27	schon	ADV	*	schon	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	28	erzählt	VVFIN	*	erzählen	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	29	?	$.	*	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Hört	VVFIN	(VROOT(PSEUDO(S*	hören	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Ihr	PPER	*	ihr	pl	*	tempelherr	-	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	denn	ADV	(VP*	denn	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	gar	ADV	(AVP*	gar	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	nicht	PTKNEG	*)	nicht	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	auf	APPR	(PP*	auf	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	mich	PPER	*)	mich	sg	*	tempelherr	-	-	-	-	(4)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	zu	PTKZU	(VZ*	zu	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	verfolgen	VVINF	*)))	verfolgen	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	?	$.	*))	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	daja	-	-	-	-	(0
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	daja	-	-	-	-	0)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Verfolgen	NN	(VROOT(PSEUDO*	verfolgen	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	!	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	lieber	ADJA	(VROOT(PSEUDO(NP*	lieb	-	-	daja	-	-	-	-	(22
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Gott	NN	*)	gott	-	-	daja	-	-	-	-	22)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	!	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	tempelherr	(LOC*)	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	tempelherr	-	-	-	-	61)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Ja	PTKANT	*	ja	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	,	$,	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	ja	PTKANT	*	ja	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	,	$,	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	verfolgen	VVINF	*	verfolgen	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	.	$.	*	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	tempelherr	-	-	-	-	(4)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	will	VMFIN	*	wollen	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	nun	ADV	(AVP*	nun	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	einmal	ADV	*)	einmal	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Euch	PPER	*	euch	-	-	tempelherr	-	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	nicht	PTKNEG	*	nicht	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	weiter	ADV	(NP*	weiter	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	sehn	CARD	*))	sehn	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	!	$.	*))	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Nicht	PTKNEG	(VROOT(PSEUDO(VP*	nicht	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	hören	VVINF	*)	hören	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	!	$.	*))	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Will	VMFIN	*	wollen	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	von	APPR	*	von	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Euch	PPER	*	euch	sg	*	tempelherr	-	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	an	APPR	*	an	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	eine	ART	*	ein	sg	fem	tempelherr	-	-	-	-	(72
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Tat	NN	*	tat	sg	fem	tempelherr	-	-	-	-	72)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Nicht	PTKNEG	*	nicht	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	fort	PTKVZ	*	fort	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	und	KON	*	und	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	fort	VVFIN	*	fort	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	erinnert	VVFIN	*	erinnern	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	sein	VAINF	*	sein	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	,	$,	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	bei	APPR	*	bei	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	der	PRELS	*	der	sg	fem	tempelherr	-	-	-	-	(72)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	Ich	PPER	*	ich	sg	*	tempelherr	-	-	-	-	(4)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	nichts	PIS	*	nichts	*	neut	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	gedacht	VVPP	*	denken	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	;	$.	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	die	ART	*	der	pl	*	tempelherr	-	-	-	-	(72)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	,	$,	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	wenn	KOUS	*	wenn	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	22	ich	PPER	*	ich	sg	*	tempelherr	-	-	-	-	(4)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	23	drüber	PROAV	*	drüber	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	24	denke	VVFIN	*	denken	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	25	,	$,	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	26	Zum	APPRART	*	zu	sg	neut	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	27	Rätsel	NN	*	rätsel	sg	neut	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	28	von	APPR	*	von	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	29	mir	PPER	*	sich	sg	*	tempelherr	-	-	-	-	(4)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	30	selbst	ADV	*	selbst	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	31	mir	PPER	*	sich	sg	*	tempelherr	-	-	-	-	(4)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	32	wird	VAFIN	*	werden	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	33	.	$.	*	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Zwar	ADV	*	zwar	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	möcht	VMFIN	*	möchen	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	'	$(	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Ich	PPER	*	ich	sg	*	tempelherr	-	-	-	-	(4)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	sie	PPER	*	sie	*	*	tempelherr	-	-	-	-	(72)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	nicht	PTKNEG	*	nicht	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	gern	ADV	*	gern	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	bereuen	VVINF	*	bereuen	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	.	$.	*	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Aber	KON	*	aber	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	seht	VVFIN	*	sehen	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	;	$.	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Eräugnet	NN	*	eräugnet	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	so	ADV	*	so	-	-	tempelherr	-	-	-	-	(147
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	ein	ART	*	ein	sg	masc	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Fall	NN	*	fall	sg	masc	tempelherr	-	-	-	-	147)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	sich	PRF	*	sich	sg	-	tempelherr	-	-	-	-	(147)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	wieder	ADV	*	wieder	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	:	$.	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	Ihr	PPER	*	ihr	pl	*	tempelherr	-	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	Seid	NN	*	sein	pl	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	Schuld	NN	*	schuld	sg	fem	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	,	$,	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	wenn	KOUS	*	wenn	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	ich	PPER	*	ich	sg	*	tempelherr	-	-	-	-	(4)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	16	so	ADV	*	so	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	17	rasch	ADJD	*	rasch	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	18	nicht	PTKNEG	*	nicht	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	19	handle	PTKVZ	*	handeln	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	20	;	$.	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	21	wenn	KOUS	*	wenn	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	22	Ich	PPER	*	ich	sg	*	tempelherr	-	-	-	-	(4)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	23	mich	PRF	*	mich	sg	-	tempelherr	-	-	-	-	(4)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	24	vorher	ADV	*	vorher	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	25	erkund	ADJD	*	erkund	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	26	'	$(	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	27	,	$,	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	28	–	$(	*	–	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	29	und	KON	*	und	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	30	brennen	VVFIN	*	brennen	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	31	lasse	VVFIN	*	lassen	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	32	,	$,	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	33	Was	PWS	*	was	sg	neut	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	34	brennt	VVFIN	*	brennen	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	35	.	$.	*	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	daja	-	-	-	-	(0
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	daja	-	-	-	-	0)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Bewahre	ADJA	(VROOT(PSEUDO(NP*	bewahr	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Gott	NN	*	gott	-	-	daja	-	-	-	-	(22)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	!	$.	*)))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	tempelherr	(LOC*)	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	tempelherr	-	-	-	-	61)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Von	APPR	*	von	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	heut	ADV	*	heut	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	'	$(	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	an	APPR	*	an	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	tut	VVFIN	*	tun	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Mir	NE	*	sich	sg	*	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	den	ART	*	der	sg	masc	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Gefallen	NN	*	gefalle	sg	masc	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	wenigstens	ADV	*	wenigstens	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	,	$,	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	und	KON	*	und	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	kennt	VVFIN	*	kennen	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	Mich	PPER	*	mich	sg	*	tempelherr	-	-	-	-	(4)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	weiter	ADV	*	weiter	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	nicht	PTKNEG	*	nicht	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	.	$.	*	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Ich	PPER	*	ich	sg	*	tempelherr	-	-	-	-	(4)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	bitt	VVFIN	*	bitt	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	'	$(	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Euch	PPER	*	euch	pl	*	tempelherr	-	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	drum	ADV	*	drum	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	.	$.	*	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Auch	ADV	(VROOT(PSEUDO(S*	auch	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	laßt	VVFIN	*	lassen	pl	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Den	NE	(NP*	der	sg	masc	tempelherr	-	-	-	-	(1
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Vater	NN	*)	vater	sg	masc	tempelherr	-	-	-	-	1)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	mir	PPER	*	sich	sg	*	tempelherr	-	-	-	-	(4)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	vom	APPRART	(PP*	von	sg	masc	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Halse	NN	*))	halse	sg	masc	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	.	$.	*))	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Jud	NE	*	jud	-	-	tempelherr	-	-	-	-	(98)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	'	$(	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	ist	VAFIN	*	sein	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Jude	NN	*	jude	sg	fem	tempelherr	-	-	-	-	(304)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	.	$.	*	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	tempelherr	-	-	-	-	(4)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	bin	VAFIN	*	sein	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	ein	ART	(NP*	ein	sg	masc	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	plumper	ADJA	*	plumper	sg	masc	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	Schwab	NN	*))	schwab	sg	masc	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	.	$.	*))	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Des	ART	(VROOT(PSEUDO(S(NP*	der	-	-	tempelherr	-	-	-	-	(305|(2
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Mädchens	NE	*	mädchen	sg	*	tempelherr	-	-	-	-	2)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Bild	NN	*)	bild	sg	neut	tempelherr	-	-	-	-	305)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Ist	VAFIN	*	sein	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	längst	ADV	*	längst	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	aus	APPR	(PP*	aus	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	meiner	PPOSAT	*	mein	sg	fem	tempelherr	-	-	-	-	(282|(4)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Seele	NN	*)	seele	sg	fem	tempelherr	-	-	-	-	282)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	;	$.	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	wenn	KOUS	(S*	wenn	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	es	PPER	*	es	sg	neut	tempelherr	-	-	-	-	(305)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	je	ADV	*	je	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	Da	ADV	*	da	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	war	VAFIN	*))	sein	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	.	$.	*))	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	daja	-	-	-	-	(0
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	daja	-	-	-	-	0)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Doch	KON	*	doch	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Eures	NE	*	dein	sg	neut	daja	-	-	-	-	(316)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	ist	VAFIN	*	sein	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	aus	APPR	*	aus	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	ihrer	PPOSAT	*	ihr	sg	fem	daja	-	-	-	-	(60)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	nicht	PTKNEG	*	nicht	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	.	$.	*	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	tempelherr	(LOC*)	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	tempelherr	-	-	-	-	61)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	solls	VMFIN	*	solls	-	-	tempelherr	-	-	-	-	(306)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	nun	ADV	*	nun	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	aber	ADV	*	aber	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	da	PTKVZ	*)	da	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	?	$.	*))	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	was	PWS	(VROOT(PSEUDO(S*	was	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	solls	VMFIN	*)	solls	-	-	tempelherr	-	-	-	-	(306)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	?	$.	*))	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	daja	-	-	-	-	(0
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	daja	-	-	-	-	0)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Wer	PWS	(VROOT(PSEUDO(S*	wer	sg	masc	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	weiß	VVFIN	*)	weiß	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	!	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Die	ART	(VROOT(PSEUDO(S(NP*	der	pl	fem	daja	-	-	-	-	(52
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Menschen	NN	*)	mensch	pl	fem	daja	-	-	-	-	52)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	sind	VAFIN	*	sein	pl	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	nicht	PTKNEG	(AVP*	nicht	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	immer	ADV	*)	immer	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	wie	PWAV	(S*	wie	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	sie	PPER	*	sie	pl	*	daja	-	-	-	-	(52)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	scheinen	VVFIN	*))	scheinen	pl	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	.	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	tempelherr	(LOC*)	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	tempelherr	-	-	-	-	61)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Doch	KON	(VROOT(PSEUDO(S*	doch	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	selten	ADJD	(NP*	selten	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	etwas	PIAT	*	etwas	*	neut	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Bessers	NN	*))	besser	sg	masc	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	.	$.	*))	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Er	PPER	(VROOT(PSEUDO(S*	er	sg	masc	tempelherr	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	geht	VVFIN	*)	gehen	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	.	$.	*))	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	daja	-	-	-	-	(0
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	daja	-	-	-	-	0)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Wartet	VVIMP	(VROOT(PSEUDO(S*	warten	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	doch	ADV	*)	doch	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	!	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	eilt	VVFIN	*	eilen	pl	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	Ihr	PPER	*)	ihr	pl	*	daja	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	?	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	tempelherr	(LOC*)	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	tempelherr	-	-	-	-	61)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Weib	NN	(VROOT(PSEUDO(S*	weib	-	-	tempelherr	-	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	,	$,	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	macht	VVFIN	*	machen	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	mir	PPER	*	sich	sg	*	tempelherr	-	-	-	-	(4)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	die	ART	(NP*	der	pl	fem	tempelherr	-	-	-	-	(76
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	Palmen	NN	*)	palme	pl	fem	tempelherr	-	-	-	-	76)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	nicht	PTKNEG	*	nicht	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	Verhaßt	NN	*	verhaßt	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	,	$,	*	--	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	worunter	PWS	(S*	worunter	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	ich	PPER	*	ich	sg	*	tempelherr	-	-	-	-	(4)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	so	ADV	*	so	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	12	gern	ADV	(AVP*	gern	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	13	sonst	ADV	*)	sonst	-	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	14	wandle	VVFIN	*))	wandeln	sg	-	tempelherr	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	15	.	$.	*))	--	-	-	tempelherr	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	daja	-	-	-	-	(0
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	daja	-	-	-	-	0)

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	So	ADV	*	so	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	geh	XY	*	geh	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	'	$(	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	,	$,	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	du	PPER	*	du	sg	masc	daja	-	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	deutscher	ADJA	*	deutsch	sg	masc	daja	(MISC*)	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Bär	NN	*	bär	sg	masc	daja	-	-	-	-	61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	!	$.	*	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	so	ADV	*	so	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	geh	XY	*	geh	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	'	$(	*	--	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	!	$.	*	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	Und	KON	(S*	und	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	doch	ADV	*	doch	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	Muß	VMFIN	*	müssen	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	ich	PPER	*	ich	sg	*	daja	-	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	die	ART	(NP*	der	sg	fem	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	Spur	NN	*))	Spur	sg	fem	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	7	des	ART	(VP(NP*	der	sg	masc	daja	-	-	-	-	(61
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	8	Tieres	NN	*)	tier	sg	masc	daja	-	-	-	-	61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	9	nicht	PTKNEG	*	nicht	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	10	verlieren	VVINF	*)	verlieren	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	11	.	$.	*))	--	-	-	daja	-	-	-	-	-

Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	0	Sie	PPER	(VROOT(PSEUDO(S*	sie	sg	fem	daja	-	-	-	-	(0)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	1	geht	VVFIN	*	gehen	sg	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	2	ihm	PPER	*	ihm	sg	masc	daja	-	-	-	-	(61)
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	3	von	APPR	(PP*	von	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	4	weiten	PIS	*)	weiten	pl	fem	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	5	nach	PTKVZ	*)	nach	-	-	daja	-	-	-	-	-
Nathan_Act1.part.xml.rkpt.0.Dirndl.conll	000	6	.	$.	*))	--	-	-	daja	-	-	-	-	-

#end document
