#begin document (Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll); part 000
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(NP*	der	sg	masc	-	(15
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	Tempelherr	NN	*)	tempelherr	sg	masc	-	15)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	und	KON	*	und	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	bald	ADV	(S(AVP*	bald	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	darauf	PROAV	*)	darauf	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	Daja	NE	*)	daja	-	-	(PER*)	(0)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Schon	ADV	(VROOT(PSEUDO(S*	schon	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	mehr	PIS	*	mehr	*	*	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	als	KOKOM	(AP*	als	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	gnug	ADJD	*))	gnug	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	Des	ART	(NP*	der	sg	*	-	(16|(17
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	Menschen	ADJA	*	mensch	pl	masc	-	17)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	Hirn	NN	*)	hirn	-	-	-	16)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	faßt	VVFIN	*	fassen	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	so	ADV	(NP(AP*	so	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	Unendlich	ADJD	*)	unendlich	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	viel	PIS	*)	viel	*	*	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	8	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	9	und	KON	(S*	und	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	10	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	11	doch	ADV	*	doch	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	12	manchmal	ADV	(AP*	manchmal	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	13	auch	ADV	*	auch	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	14	So	ADV	(AP*	so	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	15	plötzlich	ADJD	*)	plötzlich	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	16	voll	ADJD	*))	voll	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	17	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	von	APPR	(VROOT(PSEUDO(PP*	von	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	einer	ART	*	ein	sg	fem	-	(18
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	Kleinigkeit	NN	*	kleinigkeit	sg	fem	-	18)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	So	ADV	(AP(AP*	so	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	plötzlich	ADJD	*)	plötzlich	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	voll	ADJD	*))	voll	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	Taugt	VVFIN	*	taugt	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	nichts	PIS	(S(S*	nichts	*	neut	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	taugt	VVFIN	*	taugen	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	nichts	PIS	*)	nichts	*	neut	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	es	PPER	*	es	sg	neut	-	(19)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	8	sei	VAFIN	*	sein	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	9	Auch	ADV	(AP*	auch	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	10	voll	ADJD	*))	voll	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	11	wovon	PWAV	(S*	wovon	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	12	es	PPER	*	es	sg	neut	-	(19)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	13	will	VMFIN	*)	wollen	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	14	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	Doch	KON	(NP*	doch	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	nur	ADV	*	nur	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	Geduld	NN	*)	geduld	-	-	-	(20)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Die	ART	(VROOT(PSEUDO(CS(S(NP*	der	sg	fem	-	(21
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	Seele	NN	*)	seele	sg	fem	-	21)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	wirkt	VVFIN	*	wirken	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	den	ART	(NP*	der	sg	masc	-	(18
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	aufgedunsnen	ADJA	*	aufgedunsn	sg	masc	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	Stoff	NN	*	stoff	sg	masc	-	18)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	Bald	ADV	*	bald	sg	masc	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	in	APPR	(PP*	in	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	8	einander	PRF	*)	einander	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	10	schafft	VVFIN	(S*	schaffen	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	11	sich	PRF	*))	sich	sg	-	-	(21)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	12	Raum	NN	*)	raum	sg	*	-	(22)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	14	und	KON	*	und	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	15	Licht	NN	(S(MPN*	licht	sg	neut	-	(23)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	16	Und	KON	*	und	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	17	Ordnung	NN	*)	ordnung	sg	fem	-	(23)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	18	kommen	VVFIN	*	kommen	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	19	wieder	PTKVZ	*))	wieder	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	20	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	Lieb	NE	*	lieb	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	denn	KON	*	denn	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	Zum	APPRART	*	zu	sg	neut	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	erstenmale	ADJA	*	erstenmal	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	?	$.	*	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	Oder	NE	(S*	oder	sg	fem	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	war	VAFIN	*	sein	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	was	PRELS	(S*	was	sg	neut	-	(24
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	ich	PPER	*	ich	sg	*	-	24)|(4)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	Als	APPR	(NP(S*	als	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	Liebe	NN	*	liebe	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	8	kenne	VVFIN	*)	kennen	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	10	Liebe	NN	*)	liebe	pl	*	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	11	nicht	PTKNEG	*))	nicht	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	12	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	Liebe	NN	*	liebe	sg	fem	-	(24)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	Nur	ADV	*	nur	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	was	PWS	*	was	sg	neut	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	itzt	VVFIN	*	itzen	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	empfinde	VVFIN	*	empfinden	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	8	?	$.	*	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	.	$.	(VROOT(PSEUDO*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*))	daja	-	-	-	(0)

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	die	ART	(VROOT(PSEUDO(VP(NP*	der	sg	fem	-	(0)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	sich	PRF	(AP*	sich	sg	-	-	(0)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	von	APPR	*	von	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	der	ART	*)	der	sg	fem	-	(25
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	Seite	NN	*)	seite	sg	fem	-	25)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	herbeigeschlichen	VVIZU	*)	herbeigeschlich	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ritter	NN	(VROOT(PSEUDO*	ritter	-	-	-	(15)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ritter	NN	(VROOT(PSEUDO*	ritter	-	-	-	(15)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wer	PWS	(VROOT(PSEUDO(S*	wer	sg	*	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	ruft	VVFIN	*)	rufen	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ha	NE	*	ha	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	Daja	NE	*	daja	-	-	(PER*)	(0
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	Ihr	PPER	*	ihr	pl	*	-	0)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	?	$.	*	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(0)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	habe	VAFIN	*	haben	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	mich	PRF	(VP*	mich	sg	-	-	(0)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	Bei	APPR	(PP*	bei	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	ihm	PPER	*)	ihm	sg	masc	-	(1)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	vorbei	ADV	*	vorbei	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	geschlichen	VVPP	*))	schleichen	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Aber	KON	*	aber	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	noch	ADV	*	noch	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	Könnt	NE	*	könnt	*	*	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	'	$(	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	er	PPER	*	er	sg	masc	-	(1)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	uns	PPER	*	uns	pl	*	-	(26)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	sehn	CARD	*	sehn	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	8	wo	PWAV	*	wo	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	9	Ihr	PPER	*	ihr	pl	*	-	(15)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	10	da	ADV	*	da	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	11	steht	VVFIN	*	stehen	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	12	.	$.	*	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	Drum	NN	*	drum	sg	neut	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	kommt	VVFIN	*	kommen	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	Doch	NN	(NP*	doch	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	näher	ADJD	(AP*	nah	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	zu	APPR	(PP*	zu	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	mir	PPER	*))	sich	sg	*	-	(0)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	8	hinter	APPR	(PP*	hinter	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	9	diesen	PDAT	*	dieser	sg	masc	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	10	Baum	NN	*))	baum	sg	masc	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	gibts	ADV	*	gibt	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	denn	ADV	*)	denn	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	So	ADV	(S(ISU*	so	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	geheimnisvoll	ADJD	*))	geheimnisvoll	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	Was	PWS	*	was	sg	neut	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	ists	FM	*	ist	-	-	-	(27)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	?	$.	*	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ja	PTKANT	(VROOT(PSEUDO(CS(S*	ja	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	wohl	ADV	*	wohl	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	betrifft	VVFIN	*	betreffen	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	es	PPER	(NP*	es	sg	neut	-	(27)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	ein	ART	(NP*	ein	sg	neut	-	(28
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	Geheimnis	NN	*))	geheimnis	sg	neut	-	28)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	was	PWS	(S*	was	sg	neut	-	(27)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	8	Mich	PPER	*	mich	sg	*	-	(0)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	9	zu	APPR	(PP*	zu	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	10	Euch	PPER	*)	euch	sg	neut	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	11	bringt	VVFIN	*))	bringen	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	12	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	13	und	KON	*	und	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	14	zwar	ADV	(S*	zwar	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	15	ein	ART	(NP*	ein	sg	neut	-	(28
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	16	doppeltes	ADJA	*)))	doppelt	sg	neut	-	28)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	17	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Das	ART	(VROOT(PSEUDO(CS(S(NP*	der	sg	neut	-	(29
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	eine	PIS	*)	ein	sg	fem	-	29)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	weiß	VVFIN	*	weiß	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	nur	ADV	(NP*	nur	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	ich	PPER	*))	ich	sg	*	-	(0)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	das	ART	(S(NP*	der	sg	neut	-	(30
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	andre	ADJA	*)	andre	sg	neut	-	30)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	8	wißt	VVFIN	*	wissen	sg	neut	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	9	Nur	ADV	(NP*	nur	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	10	Ihr	PPER	*)))	ihr	pl	*	-	(15)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	Wie	PWAV	(S*	wie	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	wär	VAFIN	*	sein	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	es	PPER	*	es	sg	neut	-	(31)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	wenn	KOUS	(S*	wenn	-	-	-	(31
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	wir	PPER	*	wir	pl	*	-	(26)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	tauschten	VVFIN	*))	tauschen	pl	-	-	31)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	8	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Vertraut	ADJD	*	vertraut	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	mir	PPER	*	sich	sg	*	-	(0)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	Euers	NE	*	euer	sg	masc	-	(84)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	:	$.	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	so	ADV	*	so	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	vertrau	ADJD	*	vertrau	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	'	$(	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	ich	PPER	*	ich	sg	*	-	(0)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	8	Euch	PPER	*	euch	sg	-	-	(15)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	9	Das	PDS	*	der	sg	neut	-	(29
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	10	meine	VVFIN	*	mein	sg	-	-	29)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	11	.	$.	*	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Mit	APPR	(VROOT(PSEUDO(PP*	mit	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	Vergnügen	NN	*)	vergnügen	sg	neut	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	Wenn	KOUS	(S*	wenn	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	nur	ADV	*)	nur	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	Erst	ADV	(S*	erst	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	weiß	VVFIN	*	weiß	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	was	PWS	(S*	was	sg	neut	-	(32
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	8	Ihr	PPER	*	ihr	sg	neut	-	(0)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	9	für	APPR	(PP*	für	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	10	meines	PIS	*)	mein	sg	neut	-	(4)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	11	achtet	VVFIN	*))	achten	-	-	-	32)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Doch	KON	(VROOT(PSEUDO*	doch	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	Das	PDS	(S*	der	sg	neut	-	(32)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	wird	VAFIN	*	werden	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	aus	APPR	(VP(PP*	aus	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	Euerm	NE	*)	euerm	-	-	-	(85)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	wohl	ADV	*	wohl	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	erhellen	VVINF	*))	erhellen	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	Fangt	VVFIN	*	fangen	pl	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	Nur	ADV	(S*	nur	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	immer	ADV	*	immer	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	an	PTKVZ	*)	an	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ei	PPER	(VROOT(PSEUDO(S*	ei	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	denkt	VVFIN	*	denken	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	doch	ADV	*)	doch	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	Nein	PTKANT	(S*	nein	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	Herr	NN	(NP*	herr	sg	masc	-	(15
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	Ritter	NE	*)	ritter	sg	masc	(PER*)	15)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	:	$.	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	Erst	ADV	(S*	erst	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	Ihr	PPER	*	ihr	-	-	-	(15)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	8	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	9	ich	PPER	*	ich	sg	*	-	(0)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	10	folge	VVFIN	*))	folgen	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	Denn	KON	(S*	denn	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	versichert	VVFIN	*	versichern	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	mein	PPOSAT	(NP*	mein	sg	neut	-	(85)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	Geheimnis	NN	*))	geheimnis	sg	neut	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	kann	VMFIN	(CS(S*	können	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	Euch	PPER	*	euch	pl	*	-	(15)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	8	gar	ADV	*	gar	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	9	nichts	PIS	(VP*	nichts	*	neut	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	10	nutzen	VVINF	*))	nutzen	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	12	wenn	KOUS	(S*	wenn	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	13	Ich	PPER	*	ich	sg	*	-	(0)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	14	nicht	PTKNEG	(AVP*	nicht	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	15	zuvor	ADV	*)	zuvor	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	16	das	ART	(NP*	der	sg	neut	-	(30
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	17	Eure	NN	*)	euer	-	-	-	30)|(15)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	18	habe	VAFIN	*))	haben	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	19	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	Nur	ADV	(NP*	nur	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	Geschwind	NN	*)	geschwind	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	Denn	KON	*	denn	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	frag	VVFIN	*	frag	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	'	$(	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	ichs	APPRART	*	ichs	-	-	-	(30)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	Euch	PPER	*	euch	pl	*	-	(15)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	erst	ADV	*	erst	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	ab	PTKVZ	*	ab	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	8	:	$.	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	9	so	ADV	*	so	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	10	habt	VAFIN	*	haben	pl	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	11	Ihr	PPER	*	ihr	pl	*	-	(15)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	12	nichts	PIS	*	nichts	*	neut	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	13	vertrauet	VVPP	*	vertrauen	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	14	.	$.	*	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Mein	PPOSAT	(VROOT(PSEUDO(CS(S(NP*	mein	sg	neut	-	(29|(0)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	Geheimnis	NN	*	geheimnis	sg	neut	-	29)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	dann	ADV	*)	dann	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	Bleibt	VVFIN	*	bleiben	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	mein	PPOSAT	(NP*	mein	sg	neut	-	(0)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	Geheimnis	NN	*))	geheimnis	sg	neut	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	und	KON	*	und	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	8	das	ART	(S(NP*	der	sg	neut	-	(30
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	9	Eure	NN	*)	euer	sg	neut	-	30)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	10	seid	VAFIN	*	sein	sg	neut	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	11	Ihr	PPER	*	ihr	sg	neut	-	(15)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	12	los	PTKVZ	*))	los	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	13	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	Doch	KON	(NP*	doch	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	armer	ADJA	*	arm	-	-	-	(15
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	Ritter	NN	*)	ritter	-	-	-	15)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	Daß	KOUS	(S(PP*	daß	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	ihr	PPOSAT	*	ihr	sg	fem	-	(33
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	Männer	NN	*)	mann	*	*	-	33)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	Ein	ART	(NP*	ein	sg	masc	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	solch	PIAT	(NP*	solch	*	*	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	Geheimnis	NN	*	geheimnis	sg	neut	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	vor	APPR	(PP*	vor	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	8	uns	PPER	*))))	uns	pl	*	-	(34
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	9	Weibern	NN	(S*	weiber	pl	masc	-	34)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	10	haben	VAFIN	*	haben	pl	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	11	Zu	NN	(VP*	zu	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	12	können	VMINF	*	können	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	14	auch	ADV	(VP*	auch	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	15	nur	ADV	*	nur	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	16	glaubt	VVPP	*)))	glauben	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	17	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Das	PDS	(VROOT(PSEUDO(VP*	der	sg	neut	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	wir	PPER	*	wir	pl	*	-	(33)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	haben	VAINF	*)	haben	pl	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	Oft	NN	*	oft	sg	fem	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	selbst	ADV	*	selbst	-	-	-	(33)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	wissen	VVINF	*)	wissen	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Kann	ADV	(VROOT(PSEUDO(VP*	können	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	wohl	ADV	*	wohl	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	sein	VAINF	*)	sein	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Drum	ADV	(VROOT(PSEUDO(S*	drum	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	muß	VMFIN	*	müssen	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	Ich	PPER	(VP(CNP(NP*	ich	sg	*	-	(0)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	freilich	ADV	*	freilich	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	erst	ADV	*	erst	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	Euch	PPER	(VP*	euch	-	-	-	(15)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	selbst	ADV	*	selbst	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	8	damit	PROAV	(AP*	damit	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	9	bekannt	ADJD	*)	bekannt	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	10	Zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	11	machen	VVINF	*)))	machen	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	13	schon	ADV	(NP*	schon	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	14	die	ART	*	der	sg	fem	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	15	Freundschaft	NN	*))	freundschaft	sg	fem	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	16	haben	VAINF	*))	haben	pl	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	17	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	Sagt	NN	*	sagen	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	:	$.	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	Was	PWS	(S*	was	sg	neut	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	hieß	VVFIN	*	heißen	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	denn	ADV	*	denn	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	das	PDS	(NP*	der	sg	neut	-	(35)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	8	daß	KOUS	(S*	daß	-	-	-	(35
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	9	Ihr	PPER	(CNP(NP*	ihr	pl	*	-	(15)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	10	so	ADV	*)	so	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	11	Knall	NN	*	knall	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	12	und	KON	*	und	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	13	Fall	NN	*)	fall	pl	-	-	35)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	14	Euch	PPER	*	euch	pl	*	-	(15)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	15	aus	APPR	(PP*	aus	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	16	dem	ART	*	der	sg	neut	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	17	Staube	NN	*)	staube	sg	neut	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	18	machtet	VVFIN	*)))	machten	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	19	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	daß	KOUS	(VROOT(PSEUDO(S*	daß	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ihr	PPER	*	ihr	pl	*	-	(15)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	uns	PPER	(VP*	uns	pl	*	-	(36)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	So	ADV	*	so	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	sitzen	VVINF	*)	sitzen	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	ließet	VVFIN	*)	ließen	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	daß	KOUS	*	daß	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	Ihr	PPER	*	ihr	pl	*	-	(15)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	nun	ADV	*	nun	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	mit	APPR	*	mit	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	Nathan	NN	*	nathan	sg	neut	(PER*)	(1)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	Nicht	PTKNEG	*	nicht	sg	neut	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	wiederkommt	VVFIN	*	wiederkommen	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	8	?	$.	*	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	Hat	VAFIN	(S*	haben	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	Recha	NE	*	recha	sg	masc	(PER*)	(2)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	denn	ADV	*	denn	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	so	ADV	*)	so	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	wenig	PIAT	(NP*	wenig	*	*	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	Auf	NN	*	auf	*	*	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	Euch	PPER	(VP*	euch	sg	*	-	(15)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	8	gewirkt	VVPP	*))	wirken	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	9	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	wie	PWAV	(VROOT(PSEUDO*	wie	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	oder	KON	(VROOT(PSEUDO(S*	oder	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	auch	ADV	*	auch	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	so	ADV	(NP*	so	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	viel	PIS	*))	viel	*	*	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	So	ADV	(NP*	so	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	viel	PIS	*)	viel	*	*	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	so	ADV	(VROOT(PSEUDO(NP*	so	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	viel	PIS	*)	viel	*	*	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	Lehrt	VVFIN	*	lehrt	pl	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	Ihr	PPER	(NP*	ihr	pl	*	-	(15)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	des	ART	(NP*	der	sg	masc	-	(2
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	armen	ADJA	*	arm	sg	masc	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	Vogels	NN	*)	vogel	sg	masc	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	2)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	Der	PRELS	(S*	der	sg	masc	-	(2)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	8	an	APPR	(PP*	an	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	9	der	ART	*	der	sg	fem	-	(37
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	10	Rute	NN	*)	rute	sg	fem	-	37)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	11	klebt	VVFIN	*))	kleben	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	13	Geflattre	NN	(S*	geflattre	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	14	mich	PPER	(VP*	mich	sg	*	-	(0)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	15	Doch	NN	*	doch	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	16	kennen	VVINF	*))	kennen	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	17	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	Kurz	NN	*	kurz	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	:	$.	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	gesteht	VVFIN	*	gestehen	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	es	PPER	*	es	sg	neut	-	(38)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	mir	PPER	*	sich	sg	*	-	(0)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	nur	ADV	*	nur	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	gleich	ADV	*	gleich	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	9	Daß	KOUS	*	daß	-	-	-	(38
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	10	Ihr	PPER	*	ihr	pl	*	-	(15)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	11	sie	PPER	*	sie	sg	fem	-	(2)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	12	liebt	VVFIN	*	lieben	sg	-	-	38)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	14	liebt	VVFIN	*	lieben	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	15	bis	APPR	*	bis	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	16	zum	APPRART	*	zu	sg	masc	-	(39
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	17	Unsinn	NN	*	unsinn	sg	masc	-	39)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	18	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	19	und	KON	*	und	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	20	Ich	PPER	*	ich	sg	*	-	(0)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	21	sag	VVFIN	*	sögen	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	22	'	$(	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	23	Euch	PPER	*	euch	pl	*	-	(15)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	24	was	PIS	*	was	sg	neut	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	25	.	$.	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	26	.	$.	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	27	.	$.	*	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Zum	APPRART	(VROOT(PSEUDO(PP*	zu	sg	masc	-	(39
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	Unsinn	NN	*)	unsinn	sg	masc	-	39)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wahrlich	ADJD	(VROOT(PSEUDO(S*	wahrlich	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	Ihr	PPER	(S*	ihr	pl	*	-	(0)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	Versteht	VVFIN	*	verstehen	pl	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	Euch	PPER	*	euch	pl	*	-	(0)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	trefflich	ADJD	*	trefflich	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	drauf	PTKVZ	*))	drauf	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nun	ADV	(VROOT(PSEUDO(CS(S*	nun	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	gebt	VVFIN	*	geben	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	mir	PPER	*	sich	sg	*	-	(0)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	nur	ADV	(NP*	nur	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	Die	ART	*	der	sg	fem	-	(18
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	Liebe	NN	*)	liebe	sg	fem	-	18)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	zu	PTKVZ	*)	zu	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	8	den	ART	(S(NP*	der	sg	masc	-	(39
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	9	Unsinn	NN	*)	unsinn	sg	masc	-	39)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	10	will	VMFIN	*	wollen	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	11	ich	PPER	*	ich	sg	*	-	(0)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	12	Euch	PRF	(VP*	euch	pl	*	-	(15)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	13	Erlassen	VVINF	*)))	erlaß	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	14	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Weil	KOUS	(VROOT(PSEUDO(S*	weil	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	er	PPER	*	er	sg	masc	-	(39)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	sich	PRF	*	sich	sg	-	-	(39)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	von	APPR	(PP*	von	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	selbst	ADV	*)	selbst	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	versteht	VVFIN	*)	verstehen	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ein	ART	(NP*	ein	sg	masc	-	(40
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	Tempelherr	NN	*	tempelherr	sg	masc	-	40)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	ein	ART	(VP(NP*	ein	sg	neut	-	(41
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	Judenmädchen	NN	*)	judenmädchen	sg	neut	-	41)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	lieben	VVINF	*))	lieben	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	.	$.	(VROOT(PSEUDO*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Scheint	VVFIN	(VROOT(PSEUDO(S*	scheint	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	freilich	ADV	*	freilich	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	wenig	PIAT	(VP(VP(NP*	wenig	*	*	-	(42
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	Sinn	NN	*))	sinn	sg	masc	-	42)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	haben	VAINF	*)))	haben	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	Doch	KON	(S*	doch	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	Zuweilen	NN	*	zuweilen	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	des	ART	(NP*	der	sg	neut	-	(42
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	Sinns	NN	*	sinn	sg	neut	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	in	APPR	(PP*	in	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	einer	ART	*	ein	sg	fem	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	8	Sache	NN	*)))	sache	sg	fem	-	42)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	9	Auch	ADV	(NP(AP*	auch	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	10	mehr	ADV	(AP*	mehr	*	*	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	12	als	KOKOM	(S*	als	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	13	wir	PPER	*	wir	pl	*	-	(17)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	14	vermuten	VVFIN	*	vermuten	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	15	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	16	und	KON	(S*	und	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	17	es	PPER	*	es	sg	neut	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	18	wäre	VAFIN	*	sein	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	19	So	ADV	(AP*	so	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	20	unerhört	ADJD	*)	unerhört	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	21	doch	ADV	(AVP*	doch	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	22	nicht	PTKNEG	*)	nicht	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	23	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	24	daß	KOUS	(S*	daß	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	25	uns	PPER	*	uns	pl	*	-	(17)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	26	der	ART	(NP*	der	sg	masc	-	(43
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	27	Heiland	NE	*)	heiland	sg	neut	-	43)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	28	Auf	APPR	(PP*	auf	sg	neut	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	29	Wegen	NN	*	wegen	-	-	-	(44)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	30	zu	APPR	(PP*	zu	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	31	sich	PRF	*)))))))	sich	pl	-	-	(43)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	32	zöge	FM	*	zögen	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	33	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	34	die	PRELS	(S*	der	sg	fem	-	(44)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	35	der	ART	(VP(NP*	der	sg	masc	-	(45
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	36	Kluge	NN	*)	kluge	sg	masc	-	45)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	37	Von	APPR	(PP*	von	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	38	selbst	ADV	*)	selbst	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	39	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	40	leicht	ADJD	*	leicht	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	41	betreten	VVINF	*)	betreten	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	42	würde	VAFIN	*))	werden	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	43	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Das	ART	(VROOT(PSEUDO(S(VP(AP(AVP*	der	sg	neut	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	So	ADV	*)	so	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	feierlich	ADJD	*)))	feierlich	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	(	$(	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	Und	KON	*	und	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	setz	FM	*	setz	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	'	$(	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	statt	APPR	*	statt	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	des	ART	*	der	sg	neut	-	(43
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	8	Heilands	NE	*	heiland	sg	neut	-	43)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	9	Die	ART	*	der	sg	fem	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	10	Vorsicht	NN	*	vorsicht	sg	fem	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	11	:	$.	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	12	hat	VAFIN	*	haben	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	13	sie	PPER	*	sie	sg	fem	-	(0)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	14	denn	ADV	*	denn	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	15	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	16	Recht	NN	*	recht	-	-	-	(46)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	17	?	$.	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	18	)	$(	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	19	–	XY	*	–	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	20	Ihr	PPER	*	ihr	pl	*	-	(0)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	21	macht	VVFIN	*	machen	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	22	Mich	PPER	*	mich	sg	masc	-	(4)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	23	neubegieriger	ADJD	*	neubegierig	sg	masc	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	24	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	25	als	KOUS	*	als	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	26	ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	27	wohl	ADV	*	wohl	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	28	sonst	ADV	*	sonst	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	29	Zu	NN	*	zu	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	30	sein	PPOSAT	*	sein	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	31	gewohnt	VVPP	*	wohnen	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	32	bin	VAFIN	*	sein	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	33	.	$.	*	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	O	$.	*	O	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	das	PDS	*	der	sg	neut	-	(47)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	das	ART	*	der	sg	neut	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	Land	NN	*	land	sg	neut	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	Der	ART	*	der	sg	masc	-	(48
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	Wunder	NN	*	wunder	sg	masc	-	48)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	8	!	$.	*	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	(	$(	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	Nun	ADV	*	nun	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	KON	(VROOT(PSEUDO(PP*	–	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	des	ART	*	der	sg	masc	-	(48
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	Wunderbaren	NN	*)	wunderbare	sg	masc	-	48)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Kann	VMFIN	(VROOT(PSEUDO(VP(S*	können	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	Es	PPER	*	es	sg	neut	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	auch	ADV	*)	auch	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	wohl	ADV	*	wohl	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	anders	ADV	*	anders	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	sein	VAINF	*)	sein	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Die	ART	*	der	sg	fem	-	(17
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	ganze	ADJA	*	ganz	sg	fem	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	Welt	NN	*	welt	sg	fem	-	17)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	Drängt	VVFIN	*	drängen	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	sich	PRF	*	sich	sg	-	-	(17)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	ja	ADV	*	ja	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	hier	ADV	*	hier	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	zusammen	PTKVZ	*	zusammen	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	8	.	$.	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	9	)	$(	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	10	–	ADJA	*	–	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	11	Liebe	NN	*	liebe	sg	fem	-	(0
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	12	Daja	NE	*	daja	sg	fem	(PER*)	0)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	14	Nehmt	NN	*	nehmt	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	15	für	APPR	*	für	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	16	gestanden	ADJD	*	gestehen	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	17	an	PTKVZ	*	an	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	18	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	19	was	PWS	*	was	sg	neut	-	(30
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	20	Ihr	PPER	*	ihr	pl	*	-	(0)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	21	verlangt	VVFIN	*	verlangen	-	-	-	30)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	22	:	$.	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	23	Daß	KOUS	*	daß	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	24	ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	25	sie	PPER	*	sie	sg	fem	-	(2)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	26	liebe	VVFIN	*	lieben	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	27	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	28	daß	KOUS	*	daß	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	29	ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	30	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	31	begreife	VVFIN	*	begreifen	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	32	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	33	Wie	PWAV	*	wie	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	34	ohne	APPR	*	ohne	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	35	sie	PPER	*	sie	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	36	ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	37	leben	VVINF	*	leben	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	38	werde	VAFIN	*	werden	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	39	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	40	daß	KOUS	*	daß	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	41	.	$.	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	42	.	$.	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	43	.	$.	*	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Gewiß	ADV	(VROOT(PSEUDO(S*)	gewiß	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	gewiß	ADV	(VROOT(PSEUDO(S*)	gewiß	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	So	ADV	(S*	so	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	schwört	VVFIN	*	schwören	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	mir	PPER	(NP*	sich	sg	*	-	(0)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	Ritter	NN	*)	ritter	*	masc	-	(15)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	sie	PPER	*	sie	sg	fem	-	(82)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	8	Zur	APPRART	(PP*	zu	sg	fem	-	(50
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	9	Eurigen	NN	*)	eurige	sg	fem	-	50)|(15)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	10	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	11	machen	VVINF	*)	machen	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	12	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	13	sie	PPER	(VP*	sie	-	-	-	(2)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	14	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	15	retten	VVINF	*)))	retten	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	16	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	17	Sie	PPER	(S*	sie	pl	*	-	(2)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	18	zeitlich	ADJD	(AP*	zeitlich	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	19	hier	ADV	*)	hier	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	20	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	21	sie	PPER	(VP*	sie	pl	neut	-	(2)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	22	ewig	ADJD	*	ewig	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	23	dort	ADV	*	dort	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	24	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	25	retten	VVINF	*)))	retten	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	26	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Und	KON	*	und	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	wie	PWAV	*	wie	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	Wie	PWAV	*	wie	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	kann	VMFIN	*	können	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	?	$.	*	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	Kann	VMFIN	(S*	können	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	schwören	VVINF	*	schwören	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	was	PWS	(S*	was	sg	neut	-	(49)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	In	APPR	(PP*	in	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	meiner	PPOSAT	*	mein	sg	fem	-	(51|(4)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	8	Macht	NN	*)	macht	sg	fem	-	51)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	9	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	10	steht	VVFIN	*))	stehen	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	11	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	In	APPR	(VROOT(PSEUDO(S(PP*	in	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	Eurer	PPOSAT	*	eurer	sg	fem	-	(51|(15)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	Macht	NN	*)	macht	sg	fem	-	51)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	Steht	VVFIN	*	stehen	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	es	PPER	*)	es	sg	neut	-	(49)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	*	ich	sg	*	-	(0)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	bring	VVFIN	*	bring	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	es	PPER	*	es	-	-	-	(49)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	durch	APPR	*	durch	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	ein	ART	*	ein	sg	neut	-	(29
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	einzig	ADJD	*	einzig	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	Wort	NN	*	wort	-	-	-	29)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	8	In	APPR	*	in	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	9	Eure	PPOSAT	*	euer	sg	fem	-	(51|(15)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	10	Macht	NN	*	macht	sg	fem	-	51)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	11	.	$.	*	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Daß	KOUS	(VROOT(PSEUDO(S*	daß	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	selbst	ADV	(NP*	selbst	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	der	ART	*	der	sg	masc	-	(1
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	Vater	NN	*)	vater	sg	masc	-	1)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	nichts	PIS	*	nichts	*	neut	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	Dawider	NN	*	dawider	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	hätte	VAFIN	*)	haben	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ei	XY	*	ei	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	was	PWS	*	was	sg	neut	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	Vater	NN	*	vater	sg	masc	-	(52)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	!	$.	*	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Vater	NN	(VROOT(PSEUDO*	vater	sg	masc	-	(1)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Der	ART	*	der	sg	masc	-	(1
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	Vater	NN	*	vater	sg	masc	-	1)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	soll	VMFIN	*	sollen	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	schon	ADV	*	schon	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	müssen	VMFIN	*	müssen	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	.	$.	*	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Müssen	NE	(VROOT(PSEUDO(CNP*	müssen	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	Daja	NE	*)	daja	-	-	(PER*)	(0)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	Noch	ADV	(S*	noch	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	er	PPER	*	er	sg	masc	-	(1)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	unter	APPR	(VP(PP*	unter	-	-	-	(53
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	Räuber	NN	*)	räuber	-	-	-	53)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	gefallen	VVPP	*))	fallen	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	Er	PPER	*	er	sg	masc	-	(1)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	muß	VMFIN	*	müssen	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	müssen	VMFIN	*	müssen	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	.	$.	*	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nun	ADV	(VROOT(PSEUDO(CS(S*	nun	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	so	ADV	*	so	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	muß	VMFIN	*	müssen	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	er	PPER	*	er	sg	masc	-	(1)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	wollen	VMFIN	*)	wollen	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	Muß	NN	(S*	müssen	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	8	gern	ADV	(PP*	gern	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	9	am	APPRART	*	an	sg	neut	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	10	Ende	NN	*)	ende	sg	neut	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	11	wollen	VMFIN	*))	wollen	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Muß	NN	(VROOT(PSEUDO*	müssen	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	und	KON	*	und	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	gern	ADV	*	gern	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	Doch	NE	*	doch	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	Daja	NE	*	daja	-	-	(PER*)	(0)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	wenn	KOUS	*	wenn	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	Euch	PRF	*	euch	pl	*	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	8	nun	ADV	*	nun	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	9	sage	VVFIN	*	sagen	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	11	daß	KOUS	*	daß	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	12	Ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	13	selber	ADV	*	selber	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	14	diese	PDAT	*	dieser	sg	fem	-	(54
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	15	Sait	NN	*	sait	sg	fem	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	16	'	$(	*	--	-	-	-	54)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	17	ihm	PPER	*	ihm	sg	masc	-	(1)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	18	anzuschlagen	VVIZU	*	anschlagen	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	19	Bereits	ADV	*	bereits	sg	masc	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	20	versucht	VVPP	*	versuchen	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	21	?	$.	*	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Was	PWS	*	was	sg	neut	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	?	$.	*	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	er	PPER	*	er	sg	masc	-	(1)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	fiel	VVFIN	*	fallen	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	ein	PTKVZ	*)	ein	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Er	PPER	(VROOT(PSEUDO(S*	er	sg	masc	-	(1)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	fiel	VVFIN	*	fallen	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	mit	APPR	(PP*	mit	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	einem	ART	*	ein	sg	neut	-	(55
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	Mißlaut	NN	*)	mißlaut	sg	neut	-	55)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	ein	PTKVZ	*	ein	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	der	PRELS	(S*	der	sg	masc	-	(55)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	8	mich	PPER	*	mich	sg	*	-	(4)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	9	–	APPR	(PP*	–	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	10	Beleidigte	NN	*)))	beleidigter	pl	*	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	sagt	VVFIN	*	sagen	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	Ihr	PPER	*)	ihr	sg	neut	-	(15)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	Wie	PWAV	*	wie	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ihr	PPER	*	ihr	sg	neut	-	(15)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	hättet	VVFIN	*	hätten	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	Den	ART	*	der	pl	masc	-	(54
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	Schatten	NN	*	schatten	pl	masc	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	eines	ART	*	ein	sg	masc	-	(56
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	Wunsches	NN	*	wunsch	sg	masc	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	nur	ADV	*	nur	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	nach	APPR	*	nach	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	8	Recha	NE	*	recha	sg	neut	-	54)|56)|(2)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	9	Ihm	PPER	*	ihm	sg	neut	-	(1)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	10	blicken	VVINF	*	blicken	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	11	lassen	VVINF	*	lassen	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	12	:	$.	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	13	und	KON	*	und	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	14	er	PPER	*	er	sg	masc	-	(1)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	15	wär	VAFIN	*	sein	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	16	'	$(	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	17	vor	APPR	*	vor	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	18	Freuden	NN	*	freud	pl	masc	-	(57)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	19	Nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	20	aufgesprungen	VVPP	*	aufgpringen	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	21	?	$.	*	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	hätte	VAFIN	(VROOT(PSEUDO(S*	haben	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	frostig	ADJD	*	frostig	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	sich	PRF	(VP*	sich	pl	-	-	(1)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	Zurückgezogen	VVPP	*))	zurückgezogen	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	hätte	VAFIN	(VROOT(PSEUDO(S*	haben	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	Schwierigkeiten	NN	(VP*	schwierigkeit	pl	fem	-	(55)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	Gemacht	VVPP	*))	gemacht	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	So	ADV	(VROOT(PSEUDO(AVP*	so	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	ungefähr	ADJD	*)	ungefähr	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	So	ADV	(VROOT(PSEUDO(S*	so	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	will	VMFIN	*	wollen	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(0)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	denn	ADV	*	denn	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	Mich	PRF	*	mich	sg	-	-	(0)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	länger	ADJD	*	lang	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	keinen	PIAT	(VP(NP*	kein	sg	masc	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	Augenblick	NN	*)	augenblick	sg	masc	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	8	bedenken	VVINF	*))	bedenken	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	9	–	$.	*))	–	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Pause	NN	(VROOT(PSEUDO*	pause	sg	fem	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ihr	PPER	*	ihr	pl	*	-	(0)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	bedenkt	VVFIN	*	bedenken	pl	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	Euch	PPER	*	euch	pl	*	-	(0)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	doch	ADV	*)	doch	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(S(NP*	der	sg	masc	-	(1
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	Mann	NN	*)	mann	sg	masc	-	1)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	sonst	ADV	(AP*	sonst	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	So	ADV	*	so	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	gut	ADJD	*))	gut	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ich	PPER	(S(NP*	ich	sg	*	-	(0)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	selber	ADV	*)	selber	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	bin	VAFIN	*)	sein	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	so	ADV	(S*	so	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	viel	PIS	*	viel	*	*	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	ihm	PPER	(AP*	ihm	sg	masc	-	(1)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	schuldig	ADJD	*))	schuldig	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	8	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	Daß	KOUS	(S*	daß	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	er	PPER	*	er	sg	masc	-	(1)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	doch	ADV	*)	doch	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	gar	ADV	(S(AVP*	gar	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	nicht	PTKNEG	*)	nicht	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	hören	VVINF	*	hören	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	will	VMFIN	*)	wollen	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	8	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	sg	masc	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	Gott	NN	*	gott	sg	masc	(PER*)	(43)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	weiß	VVFIN	(S*	weiß	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	Das	ART	(S(NP*	der	sg	neut	-	(58
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	Herze	NN	*)	herze	sg	neut	-	58)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	blutet	VVFIN	*	bluten	sg	neut	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	mir	PPER	*	sich	sg	*	-	(0)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	9	ihn	PPER	(VP*	ihn	sg	masc	-	(1)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	10	so	ADV	*	so	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	11	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	12	zwingen	VVINF	*))))	zwingen	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	13	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	*	ich	sg	*	-	(59|(4)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	bitt	VVFIN	*	bitt	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	Euch	PPER	*	euch	pl	*	-	(0
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	Daja	NE	*	daja	-	-	(PER*)	0)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	setzt	VVFIN	*	setzen	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	8	mich	PPER	*	mich	sg	*	-	(4)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	9	kurz	ADJD	*	kurz	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	10	und	KON	*	und	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	11	gut	ADJD	*	gut	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	12	Aus	NN	*	aus	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	13	dieser	PDAT	*	dieser	sg	fem	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	14	Ungewißheit	NN	*	ungewißheit	sg	fem	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	15	.	$.	*	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Seid	VAFIN	(VROOT(PSEUDO(CS(S*	sein	pl	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ihr	PPER	*	ihr	pl	*	-	(0)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	aber	ADV	*	aber	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	Noch	ADV	*	noch	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	selber	ADV	(AP*	selber	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	ungewiß	ADJD	*)	ungewiß	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	ob	KOUS	(S*	ob	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	9	was	PWS	(S*	was	sg	neut	-	(60
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	10	Ihr	PPER	*	ihr	pl	*	-	(0)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	11	vorhabt	VVFIN	*)))	vorhaben	-	-	-	60)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	13	Gut	ADJD	(S(CAP*	gut	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	14	oder	KON	*	oder	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	15	böse	ADJD	*)	böse	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	16	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	17	schändlich	ADJD	(CAP*	schändlich	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	18	oder	KON	*	oder	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	19	löblich	ADJD	*)	löblich	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	20	Zu	NN	*	zu	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	21	nennen	VVFIN	*	nennen	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	22	:	$.	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	23	–	PPER	(S*	–	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	24	schweigt	VVFIN	*)))	schweigen	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	25	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(4)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	will	VMFIN	*	wollen	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	vergessen	VVINF	(VP*	vergessen	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	daß	KOUS	(S*	daß	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	Ihr	PPER	*	ihr	pl	*	-	(0)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	etwas	PIS	(VP*	etwas	*	neut	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	8	verschweigen	VVINF	*))	verschweigen	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	9	habt	VAFIN	*)))	haben	pl	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	59)

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Das	PDS	(VROOT(PSEUDO(S*	der	sg	neut	-	(59)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	spornt	VVFIN	*	spornen	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	Anstatt	NE	(VP*	anstatt	sg	masc	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	halten	VVINF	*)))	halten	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nun	ADV	(VROOT(PSEUDO(S*	nun	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	so	ADV	*	so	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	wißt	VVFIN	*	wissen	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	denn	ADV	*	denn	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	:	$.	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	Recha	NE	(S(MPN*	recha	sg	neut	-	(86)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	Ist	NE	*)	sein	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	8	keine	PIAT	(NP*	kein	sg	fem	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	9	Jüdin	NN	*)	jüdin	sg	fem	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	10	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	11	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	12	–	PPER	(S*	–	sg	fem	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	13	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	14	eine	ART	(NP*	ein	sg	fem	-	(62
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	15	Christin	NN	*))))	christin	sg	fem	-	62)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	16	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*))	tempelherr	-	-	-	(15)

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	kalt	ADJD	(VROOT(PSEUDO*	kalt	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	So	ADV	(VROOT(PSEUDO(S*)	so	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wünsch	NN	*	wünsch	sg	masc	-	(63
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	'	$(	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	Euch	PPER	*	euch	sg	neut	-	(0)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	Glück	NN	*	glück	sg	neut	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	!	$.	*	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Hats	NE	(VROOT(PSEUDO(S*	hat	-	-	-	(61)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	schwer	ADJD	(VP*	schwer	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	gehalten	VVPP	*))	halten	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Laßt	VVIMP	(VROOT(PSEUDO(S*	lassen	pl	-	-	63)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	Euch	PPER	*	euch	pl	*	-	(0)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	die	ART	(VP(NP*	der	pl	fem	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	Wehen	NN	*)	wehe	pl	fem	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	schrecken	VVINF	*))	schrecken	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	Fahret	NN	*	fahret	pl	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	ja	ADV	(S*	ja	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	Mit	APPR	(PP*	mit	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	Eifer	NN	*)	eifer	sg	neut	-	(64)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	fort	PTKVZ	*	fort	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	den	ART	(VP(NP*	der	sg	masc	-	(65
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	8	Himmel	NN	*)	himmel	sg	masc	-	65)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	9	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	10	bevölkern	VVINF	*)))	bevölkern	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	11	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	12	Wenn	KOUS	(S*	wenn	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	13	Ihr	PPER	(NP*	ihr	pl	*	-	(0)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	14	die	ART	*	der	sg	fem	-	(66
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	15	Erde	NN	*)	erde	sg	fem	-	66)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	16	nicht	PTKNEG	(AVP*	nicht	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	17	mehr	ADV	*)	mehr	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	18	könnt	VVFIN	*)	können	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	19	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wie	PWAV	(VROOT(PSEUDO(S*	wie	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	Ritter	NN	*)	ritter	-	-	-	(15)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Verdienet	VVFIN	(VROOT(PSEUDO(S*	verdienet	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	meine	PPOSAT	(NP*	mein	sg	fem	-	(61|(0)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	Nachricht	NN	*)	nachricht	sg	fem	-	61)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	diesen	PDAT	(NP*	dieser	sg	masc	-	(63
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	Spott	NN	*))	spott	sg	masc	-	63)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Daß	KOUS	(VROOT(PSEUDO(S(NP(S*	daß	-	-	-	(61
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	Recha	NE	*	recha	sg	fem	-	(2)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	eine	ART	(NP*	ein	sg	fem	-	(62
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	Christin	NN	*)	christin	sg	fem	-	62)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	ist	VAFIN	*)	sein	sg	-	-	61)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	:	$.	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	das	PDS	*)	der	sg	neut	-	(61)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	freuet	VVFIN	*	freuet	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	8	Euch	PPER	*	euch	pl	*	-	(15
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	10	einen	ART	(NP*	ein	sg	masc	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	11	Christen	NN	*)	christ	sg	masc	(MISC*)	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	13	einen	ART	(NP*	ein	sg	masc	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	14	Tempelherrn	NN	*	tempelherr	sg	masc	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	15	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	16	Der	PRELS	(S*	der	sg	masc	-	(15)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	17	Ihr	PPER	*	ihr	sg	masc	-	(15)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	18	sie	PPER	*	sie	pl	neut	-	(2)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	19	liebt	VVFIN	*)))))	lieben	sg	-	-	15)

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Besonders	ADV	(VROOT(PSEUDO(S*	besonders	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	da	KOUS	*	da	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	Sie	PPER	*	sie	sg	fem	-	(2)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	eine	ART	(NP*	ein	sg	fem	-	(62
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	Christin	NN	*)	christin	sg	fem	-	62)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	von	APPR	(PP*	von	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	8	Eurer	PPOSAT	*	eurer	sg	fem	-	(64|(0)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	9	Mache	NN	*))	mache	sg	fem	-	64)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ah	NE	(VROOT(PSEUDO(MPN*	ah	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*)))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	so	ADV	(VROOT(PSEUDO(S*	so	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	versteht	VVFIN	*	verstehen	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	Ihrs	NN	*)	ihr	sg	*	-	(83)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	So	ADV	(VROOT(PSEUDO(VP*	so	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	mags	ADV	*	mags	-	-	-	(63)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	gelten	VVINF	*)	gelten	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	Nein	PTKANT	*	nein	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Den	NE	*	der	-	-	-	(67)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	will	VMFIN	*	wollen	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(0)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	sehn	CARD	*	sehn	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	der	PRELS	*	der	sg	masc	-	(67)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	die	ART	*	der	pl	fem	-	(2)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	bekehren	VVINF	*	bekehren	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	8	soll	VMFIN	*	sollen	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	9	!	$.	*	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ihr	PPOSAT	*	ihr	sg	neut	-	(2)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	Glück	NN	*	glück	sg	neut	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	längst	ADV	*	längst	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	zu	PTKZU	*	zu	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	sein	VAINF	*	sein	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	8	was	PWS	*	was	sg	neut	-	(62
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	9	sie	PPER	*	sie	sg	fem	-	(2)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	10	zu	PTKZU	*	zu	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	11	werden	VAINF	*	werden	-	-	-	62)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	12	Verdorben	NN	*	verdorbe	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	13	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	14	.	$.	*	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Erklärt	VVFIN	(VROOT(PSEUDO(S*	erklären	pl	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	Euch	PPER	*	euch	pl	*	-	(0)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	oder	KON	(S*	oder	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	–	PPER	*	–	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	geht	VVFIN	*))	gehen	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(DL(S*	sie	sg	fem	-	(2)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	ein	ART	(NP*	ein	sg	masc	-	(68
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	Christenkind	NN	*)	christenkind	sg	masc	-	68)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	von	APPR	(VP(PP*	von	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	Christeneltern	NN	*)	christenelter	pl	masc	(MISC*)	(69)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	Geboren	VVPP	*))	gebor	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	8	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	9	ist	VAFIN	(S*	sein	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	10	getauft	VVPP	*))	taufen	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	11	.	$.	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	12	.	$.	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	13	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*))	tempelherr	-	-	-	(15)

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	hastig	ADJD	(VROOT(PSEUDO*	hastig	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO*	und	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	Nathan	NE	*	nathan	-	-	-	(1)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nicht	PTKNEG	(VROOT(PSEUDO(NP*	nicht	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ihr	PPOSAT	*	ihr	sg	masc	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	Vater	NN	*)	vater	sg	masc	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nathan	NE	(VROOT(PSEUDO(S*	nathan	-	-	-	(1)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	nicht	PTKNEG	(NP*	nicht	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	ihr	PPOSAT	*	ihr	sg	masc	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	Vater	NN	*))	vater	sg	masc	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	Wißt	VVFIN	*	wissen	pl	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	Ihr	PPER	(NP*	ihr	pl	*	-	(0)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	was	PWS	(S*	was	-	-	-	(29
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	Ihr	PPER	*	ihr	pl	*	-	(0)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	sagt	VVFIN	*))	sagen	sg	-	-	29)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Die	ART	(VROOT(PSEUDO(S(NP*	der	sg	fem	-	(29
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	Wahrheit	NN	*	wahrheit	sg	fem	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	die	PRELS	(S*	der	sg	fem	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	so	ADV	(AVP*	so	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	oft	ADV	*)	oft	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	Mich	PPER	(VP*	mich	sg	*	-	(0)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	blutge	ADJA	(NP*	blutg	pl	fem	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	8	Tränen	NN	*)	träne	pl	fem	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	9	weinen	VVINF	*)	weinen	sg	masc	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	10	machen	VVFIN	*))	machen	pl	-	-	29)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	11	Er	PPER	*	er	sg	masc	-	(1)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	12	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	13	ihr	PPOSAT	(NP*	ihr	sg	masc	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	14	Vater	NN	*)	vater	sg	masc	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	15	nicht	PTKNEG	*)	nicht	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	16	.	$.	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	17	.	$.	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	18	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	hätte	VAFIN	*	haben	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	sie	PPER	*	sie	sg	fem	-	(2)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	Als	APPR	(VP*	als	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	seine	PPOSAT	(NP*	sein	sg	fem	-	(70|(1)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	Tochter	NN	*)	tochter	sg	fem	-	70)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	nur	ADV	*	nur	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	8	erzogen	VVPP	*))	erziehen	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	9	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	hätte	VAFIN	(VROOT(PSEUDO(S*	haben	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	Das	ART	(NP*	der	sg	neut	-	(2
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	Christenkind	NN	*)	christenkind	sg	neut	-	2)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	als	APPR	(PP*	als	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	eine	ART	*	ein	sg	fem	-	(71
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	Jüdin	NN	*))	jüdin	sg	fem	-	71)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	sich	PRF	*	sich	sg	-	-	(1)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	Erzogen	NN	*	erzogen	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	8	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ganz	ADV	(VROOT(PSEUDO(AP*	ganz	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	gewiß	ADJD	*)	gewiß	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(S*	sie	sg	fem	-	(2)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	wüßte	VVFIN	*	wissen	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	Was	PWS	(S*	was	sg	neut	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	sie	PPER	*	sie	pl	masc	-	(2)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	geboren	VVPP	*	gebären	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	sei	VAFIN	*))	sein	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	8	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	Sie	PPER	*	sie	pl	*	-	(2)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	hätt	VAFIN	*	hätt	pl	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	'	$(	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	es	PPER	*	es	sg	neut	-	(29)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	nie	ADV	*	nie	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	Von	APPR	*	von	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	ihm	PPER	*	ihm	sg	masc	-	(1)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	8	erfahren	VVINF	*	erfahren	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	10	daß	KOUS	*	daß	-	-	-	(29
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	11	sie	PPER	*	sie	sg	fem	-	(2)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	12	eine	ART	*	ein	sg	fem	-	(62
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	13	Christin	NN	*	christin	sg	fem	-	29)|62)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	14	Geboren	VVPP	*	gebären	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	15	sei	VAFIN	*	sein	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	16	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	17	und	KON	*	und	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	18	keine	PIAT	*	kein	sg	fem	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	19	Jüdin	NN	*	jüdin	sg	fem	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	20	?	$.	*	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nie	ADV	(VROOT(PSEUDO(S*)	nie	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Er	PPER	*	er	sg	masc	-	(1)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	hätt	VVFIN	*	hätt	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	in	APPR	*	in	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	diesem	PDAT	*	dieser	sg	masc	-	(72
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	Wahne	NN	*	wahne	sg	masc	-	72)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	das	ART	*	der	sg	neut	-	(2
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	8	Kind	NN	*	kind	sg	neut	-	2)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	9	Bloß	ADV	*	bloß	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	10	auferzogen	VVPP	*	auferehen	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	11	?	$.	*	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	ließ	VVFIN	(VROOT(PSEUDO(S*	lassen	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	das	ART	(NP*	der	sg	neut	-	(2
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	Mädchen	NN	*)	mädchen	sg	neut	-	2)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	noch	ADV	(PP*	noch	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	In	APPR	*	in	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	diesem	PDAT	*	dieser	sg	masc	-	(72
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	Wahne	NN	*))	wahne	sg	masc	-	72)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Leider	ADV	(VROOT(PSEUDO(S*)	leider	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nathan	NE	(VROOT(PSEUDO(NP*	nathan	-	-	-	(1)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	–	CARD	*	–	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	Wie	NN	*)	wie	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	Der	ART	(S(NP*	der	sg	masc	-	(1
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	weise	ADV	(AP*	weise	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	gute	ADJA	*)	gut	pl	fem	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	Nathan	NN	*)	nathan	-	-	-	1)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	hätte	VAFIN	*	haben	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	sich	PRF	(VP*	sich	sg	-	-	(1)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	Erlaubt	VVPP	*))	erlauben	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	9	die	ART	(CNP(NP*	der	sg	fem	-	(73
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	10	Stimme	NN	*	stimme	sg	fem	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	11	der	ART	(NP*	der	sg	fem	-	(74
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	12	Natur	NN	*)	natur	sg	fem	-	73)|74)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	13	so	ADV	*)	so	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	14	zu	APPR	*	zu	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	15	Verfälschen	NN	*)	verfälschen	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	16	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	Die	ART	(NP*	der	sg	fem	-	(75
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	Ergießung	NN	*)	ergießung	sg	fem	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	eines	ART	(NP*	ein	sg	masc	-	(73
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	Herzens	NN	*	Herz	sg	masc	-	75)|73)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	So	ADV	(S(CVP(VP(NP(VP*	so	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	verlenken	VVINF	*))	verlenken	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	9	die	PDS	*)	der	sg	fem	-	(75)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	11	sich	PRF	(NP*	sich	sg	-	-	(75)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	12	selbst	ADV	*)	selbst	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	13	gelassen	VVPP	*)	lassen	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	15	Ganz	ADV	(VP*	ganz	-	-	-	(44
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	16	andre	ADJA	(NP*	andr	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	17	Wege	NN	*)	weg	-	-	-	44)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	18	nehmen	VVINF	*))	nehmen	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	19	würde	VAFIN	*))	werden	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	20	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	Daja	NE	*	daja	-	-	(PER*)	(0
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	0)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	Ihr	PPER	*	ihr	pl	*	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	habt	VAFIN	*	haben	pl	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	mir	PPER	*	sich	sg	*	-	(4)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	allerdings	ADV	*	allerdings	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	etwas	ADV	*	etwas	*	neut	-	(29)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	8	vertraut	ADJD	*	vertraut	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	9	–	$(	*	–	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	10	Von	APPR	*	von	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	11	Wichtigkeit	NN	*	wichtigkeit	sg	fem	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	13	–	NN	*	–	sg	fem	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	14	was	APPR	*	was	*	neut	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	15	Folgen	NN	*	folge	pl	fem	-	(76)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	16	haben	VAINF	*	haben	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	17	kann	VMFIN	*	können	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	18	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	19	–	XY	*	–	sg	neut	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	20	Was	PWS	*	was	sg	neut	-	(29)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	21	mich	PPER	*	mich	sg	*	-	(4)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	22	verwirrt	VVFIN	*	verwirrt	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	23	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	24	–	XY	*	–	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	25	worauf	PROAV	*	worauf	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	26	ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	27	gleich	ADV	*	gleich	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	28	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	29	weiß	VVFIN	*	weiß	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	30	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	31	Was	PWS	*	was	sg	neut	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	32	mir	PPER	*	sich	sg	*	-	(4)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	33	zu	PTKZU	*	zu	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	34	tun	VVINF	*	tun	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	35	.	$.	*	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	Drum	NN	*	drum	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	laßt	VVFIN	(S*	lassen	pl	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	mir	PPER	*)	sich	sg	*	-	(4)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	Zeit	NN	*	zeit	sg	fem	-	(77)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	Drum	NN	(S*	drum	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	geht	VVFIN	*)	gehen	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Er	PPER	(VROOT(PSEUDO(S*	er	sg	masc	-	(1)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	kömmt	VVFIN	*	kömmen	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	hier	ADV	*	hier	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	wiederum	ADV	*	wiederum	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	vorbei	PTKVZ	*)	vorbei	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Er	PPER	*	er	sg	masc	-	(1)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	möcht	VMFIN	*	möchen	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	Uns	NN	*	uns	pl	*	-	(26)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	überfallen	VVPP	*	überfallen	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	.	$.	*	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Geht	VVFIN	*	gehen	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	*	ich	sg	*	-	(0)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	wär	VAFIN	*	sein	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	des	ART	*	der	sg	masc	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	Todes	NN	*	tod	sg	masc	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	!	$.	*	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(4)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	bin	VAFIN	*	sein	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	ihn	PPER	(VP*	ihn	sg	masc	-	(1)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	itzt	ADJD	*	itzen	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	sprechen	VVINF	*))	sprechen	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	ganz	ADV	*	ganz	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	und	KON	*	und	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	8	gar	ADV	*	gar	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	9	Nicht	PTKNEG	(AP*	nicht	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	10	fähig	ADJD	*))	fähig	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wenn	KOUS	(VROOT(PSEUDO(S(S*	wenn	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ihr	PPER	*	ihr	pl	*	-	(0)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	ihm	PPER	*	ihm	sg	masc	-	(1)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	begegnet	VVFIN	*)	begegnen	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	sagt	VVFIN	*	sagen	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	Ihm	PPER	(NP*	ihm	sg	masc	-	(1)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	nur	ADV	*	nur	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	9	daß	KOUS	(S*	daß	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	10	wir	PPER	*	wir	pl	*	-	(78)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	11	einander	PRF	(VP*	einander	-	-	-	(78)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	12	bei	APPR	(PP*	bei	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	13	dem	ART	*	der	sg	masc	-	(7
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	14	Sultan	NN	*)	sultan	sg	masc	-	7)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	15	Schon	ADV	*	schon	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	16	finden	VVINF	*)	finden	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	17	würden	VAFIN	*)))	werden	pl	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	18	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Aber	KON	(VROOT(PSEUDO(S*	aber	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	laßt	VVIMP	*	lassen	pl	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	Euch	PPER	*	euch	pl	*	-	(15)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	ja	ADV	*	ja	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	Nichts	PIS	(VP*	nichts	*	neut	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	merken	VVINF	*	merken	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	gegen	APPR	(PP*	gegen	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	ihn	PPER	*)))	ihn	sg	masc	-	(1)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	Das	PDS	(CS(S*	der	sg	neut	-	(29)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	soll	VMFIN	*	sollen	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	nur	ADV	(AVP*	nur	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	so	ADV	*)	so	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	Den	ART	(VP(NP*	der	sg	masc	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	letzten	ADJA	*	letzter	sg	masc	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	Druck	NN	*)	druck	sg	masc	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	8	dem	ART	(NP*	der	sg	neut	-	(79
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	9	Dinge	NN	*)	ding	sg	neut	-	79)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	10	geben	VVINF	*))	geben	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	11	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	12	soll	VMFIN	(S*	sollen	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	13	Euch	PPER	*	euch	pl	*	-	(15)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	15	Rechas	NE	(PP*	rechas	-	-	(LOC*)	(2)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	16	wegen	APPO	*)	wegen	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	17	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	18	alle	PIAT	(NP*	aller	pl	*	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	19	Skrupel	NN	*)))	skrupel	pl	masc	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	20	nur	ADV	(NP*	nur	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	21	Benehmen	NN	*)	benehmen	pl	neut	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	22	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	Wenn	KOUS	(S*	wenn	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	Ihr	PPER	*	ihr	pl	*	-	(15)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	aber	ADV	(AVP*	aber	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	dann	ADV	*)	dann	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	6	sie	PPER	*	sie	sg	fem	-	(2)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	7	nach	APPR	(PP*	nach	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	8	Europa	NE	*)	europa	sg	neut	(LOC*)	(80)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	9	führt	VVFIN	*)	führen	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	10	:	$.	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	11	so	ADV	(S*	so	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	12	laßt	VVIMP	*	lassen	pl	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	13	Ihr	PPER	*	ihr	pl	*	-	(15)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	14	doch	ADV	(NP*	doch	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	15	mich	PPER	*)	mich	sg	*	-	(0)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	16	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	17	Zurück	PTKVZ	*)	zurück	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	18	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Das	PDS	(VROOT(PSEUDO(S*	der	sg	neut	-	(81)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	wird	VAFIN	*	werden	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	sich	PRF	(VP*	sich	sg	-	-	(81)
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	finden	VVINF	*))	finden	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	0	Geht	VVFIN	(VROOT(PSEUDO(S*	gehen	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	1	nur	ADV	*	nur	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	3	geht	VVFIN	*)	gehen	sg	-	-	-
Nathan_Act3_Scene10.part.xml.rkpt.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

#end document
