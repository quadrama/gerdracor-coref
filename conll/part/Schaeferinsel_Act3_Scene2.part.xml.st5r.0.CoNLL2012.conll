#begin document (Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll); part 000
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	Silvander	NN	(VROOT(PSEUDO*	silvander	-	-	-	(3)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	2	Montan	NE	*	montan	sg	neut	-	(0)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	4	Corydon	NE	*	corydon	sg	neut	-	(7)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	(LOC*)	(3|(3)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	Montan	NE	(VROOT(PSEUDO(DL*	montan	sg	neut	-	(0)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	2	nun	ADV	(S*	nun	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	3	muß	VMFIN	*	müssen	sg	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	4	ich	PPER	*	ich	sg	*	-	(3)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	5	fort	PTKVZ	*))	fort	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	6	!	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	Sieht	VVFIN	*	sehen	sg	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	den	ART	*	der	sg	masc	-	(7
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	2	Corydon	NN	*	corydon	sg	masc	-	7)|(7)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	3	und	KON	*	und	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	4	erschrickt	VVPP	*	erschricken	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	5	.	$.	*	--	-	-	-	-

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	-	(0|(0)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	Hab	ADV	(VROOT(PSEUDO(S*	hab	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	ichs	ADV	*	ich	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	2	nicht	PTKNEG	(AP*	nicht	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	3	prophezeihet	ADJD	*))	prophezeihen	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	Du	PPER	(VROOT(PSEUDO(S*	du	sg	*	-	(3)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	siehst	VVFIN	*	sehen	sg	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	2	nun	ADV	*	nun	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	4	daß	KOUS	(S*	daß	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	5	dein	PPOSAT	(NP*	dein	sg	masc	-	(3)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	6	Schluß	NN	*)	schluß	sg	masc	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	7	dich	PRF	(VP*	dich	sg	-	-	(3)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	8	nur	ADV	(AP*	nur	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	9	zu	PTKA	*	zu	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	10	früh	ADJD	*)	früh	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	11	gereuet	VVPP	*)))	reuen	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	Nimmt	NE	*	nehmen	sg	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	dich	PRF	*	dich	sg	-	-	(3)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	2	so	ADV	*	so	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	3	bald	ADV	*	bald	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	4	der	ART	*	der	sg	masc	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	5	Trieb	NE	*	trieb	sg	masc	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	6	zur	APPRART	*	zu	sg	fem	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	7	Ehre	NN	*	ehre	sg	fem	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	8	wieder	ADV	*	wieder	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	9	ein	PTKVZ	*	ein	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	11	So	ADV	*	so	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	12	würd	ADJD	*	würd	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	13	'	$[	*	--	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	14	st	VMFIN	*	--	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	15	du	PPER	*	du	sg	*	-	(3)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	16	dir	PPER	*	dir	sg	*	-	(3)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	17	und	KON	*	und	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	18	mir	PPER	*	sich	sg	*	-	(0)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	19	zur	APPRART	*	zu	sg	fem	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	20	Last	NN	*	last	sg	fem	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	21	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	22	ein	ART	*	ein	sg	masc	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	23	Schäfer	NE	*	schäfer	sg	masc	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	24	seyn	VVFIN	*	seyn	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	25	.	$.	*	--	-	-	-	-

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	(LOC*)	(3|(3)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	Das	PDS	(VROOT(PSEUDO(CS(S*	der	sg	neut	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	2	es	PPER	*	es	sg	neut	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*)	nicht	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	5	Montan	NE	(S*	montan	sg	neut	-	(0)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	7	was	PWS	(S*	was	sg	neut	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	8	meinen	PPOSAT	(NP*	mein	sg	masc	-	(3)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	9	Schluß	NN	*)	schluß	sg	masc	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	10	verhindert	VVFIN	*	verhindern	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	11	;	$.	*	--	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	12	Ich	PPER	(S*	ich	sg	*	-	(3)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	13	thu	VVFIN	*	thu	sg	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	14	es	PPER	*)))	es	sg	neut	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	15	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	16	daß	KOUS	(S*	daß	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	17	sich	PRF	*	sich	sg	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	18	mein	PPOSAT	(NP*	mein	sg	masc	-	(3)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	19	und	KON	(NP(S*	und	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	20	Doris	NE	(MPN*	doris	sg	masc	-	(2)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	21	Schmerz	NN	*)	schmerz	sg	masc	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	22	vermindert	VVFIN	*	vermindern	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	23	;	$.	*	--	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	24	Das	ART	(S(NP*	der	sg	neut	-	(2
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	25	arme	ADJA	*	arm	sg	neut	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	26	Kind	NN	*)	kind	sg	neut	-	2)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	27	schwört	VVFIN	*	schwören	sg	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	28	mir	PPER	*	sich	sg	*	-	(3)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	29	bey	VVFIN	*))	bey	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	30	der	ART	*	der	sg	fem	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	31	ihr	PPOSAT	*	ihr	sg	fem	-	(2)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	32	heilgen	ADJA	*	heilgen	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	33	Flur	NN	*)	flur	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	34	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	35	Daß	KOUS	(S*	daß	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	36	sie	PPER	*	sie	pl	*	-	(2)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	37	mich	PRF	(NP(AP*	mich	sg	*	-	(3)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	38	lieben	ADJA	*))	lieben	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	39	muß	VMFIN	*))))	müssen	sg	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	40	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	-	(0|(0)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	O	NE	(VROOT(PSEUDO(NP*	O	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	Unschuld	NN	*)	unschuld	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	O	NE	(VROOT(PSEUDO(NP*	O	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	Natur	NN	*)	natur	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	(LOC*)	(3|(3)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	Du	PPER	(VROOT(PSEUDO(S*	du	sg	*	-	(0)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	siehst	VVFIN	*	sehen	sg	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	3	mein	PPOSAT	(S(NP*	mein	sg	neut	-	(3)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	4	Schicksal	NN	*)	schicksal	sg	neut	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	5	will	VMFIN	*	wollen	sg	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	7	ich	PPER	(CS(S*	ich	sg	*	-	(3)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	8	muß	VMFIN	*	müssen	sg	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	9	den	ART	(VP(NP*	der	sg	masc	-	(8
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	10	Ort	NN	*)	ort	sg	masc	-	8)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	11	verlassen	VVINF	*))	verlassen	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	12	;	$.	*	--	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	13	Eh	NN	(S*	eh	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	14	sie	PPER	*	sie	-	-	-	(2)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	15	als	APPR	(PP*	als	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	16	Schwester	NN	*)	schwester	sg	fem	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	17	liebt	VVFIN	*	lieben	sg	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	18	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	19	ists	ADV	(VP(AP*	ist	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	20	besser	ADJD	*)	gut	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	21	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	22	mich	PRF	*	mich	sg	*	-	(3)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	23	zu	PTKZU	(VZ*	zu	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	24	hassen	VVINF	*))))))	hassen	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	25	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	Drum	PROAV	(VROOT(PSEUDO(S*	drum	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	lebe	VVFIN	*	leben	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	2	wohl	ADV	(NP*	wohl	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	3	Montan	NE	*))	montan	-	-	-	(0)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	4	–	XY	*	–	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	5	Montan	NE	*	montan	-	-	-	(0)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	6	–	XY	*	–	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	7	Freund	NN	(NP*	freund	-	-	-	(0)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	9	lebe	VVFIN	(S*	leben	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	10	wohl	ADV	*	wohl	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	12	Es	PPER	(S*	es	sg	neut	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	13	wartet	VVFIN	*	warten	sg	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	14	schon	ADV	*	schon	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	15	das	ART	(NP*	der	sg	neut	-	(9
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	16	Boot	NN	*	boot	sg	neut	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	17	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	18	das	PRELS	(S*	der	sg	neut	-	(9)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	19	mich	PPER	(VP*	mich	sg	*	-	(3)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	20	entfernen	VVINF	*)	entfernen	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	21	soll	VMFIN	*)))))	sollen	sg	-	-	9)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	22	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(CS(S*	ich	sg	*	-	(3)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	will	VMFIN	*	wollen	sg	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	2	dir	PRF	*	dir	sg	*	-	(0)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	3	wo	PWAV	(S*	wo	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	4	ich	PPER	*	ich	sg	*	-	(3)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	5	bin	VAFIN	*)	sein	sg	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	7	von	APPR	(PP*	von	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	8	meinem	PPOSAT	*	mein	sg	masc	-	(3)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	9	Glück	NN	(CNP*	glück	sg	masc	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	10	und	KON	*	und	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	11	Leben	NN	*)))	leben	sg	neut	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	13	Ach	ITJ	(S*))	ach	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	14	!	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	könnt	ADJD	(VROOT(PSEUDO(S*	können	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	ichs	ADV	*	ich	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	2	mündlich	ADJD	(AP*	mündlich	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	3	thun	ADJD	*))	thun	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	zum	APPRART	(VROOT(PSEUDO(VP(PP*	zu	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	östern	NN	*)	östern	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	2	Nachricht	NN	*	nachricht	sg	neut	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	3	geben	VVINF	*)	geben	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	Wenn	KOUS	(VROOT(PSEUDO(CS(S(AVP(S*	wenn	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	meines	PPOSAT	(NP*	mein	sg	masc	-	(7|(3)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	2	Vaters	NN	*)	vater	sg	masc	-	7)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	3	Bund	NN	*	bund	sg	masc	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	5	wenn	KOUS	(S*	wenn	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	6	dich	PPER	*	dich	sg	*	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	7	sein	PPOSAT	(NP*	sein	-	-	-	(7)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	8	Sohn	NN	*)	sohn	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	9	noch	ADV	*	noch	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	10	rührt	VVFIN	*))	rühren	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	12	So	ADV	*)	so	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	13	mach	VVFIN	*	machen	sg	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	15	daß	KOUS	(S*	daß	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	16	sich	PRF	*	sich	sg	-	-	(10)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	17	der	ART	(NP*	der	sg	masc	-	(10
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	18	Schmerz	NN	*	schmerz	sg	masc	-	10)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	19	aus	APPR	(PP*	aus	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	20	Doris	NE	*))	doris	sg	neut	-	(2)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	21	Brust	NN	*	brust	sg	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	22	verliert	VVFIN	*))	verlieren	sg	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	23	;	$.	*	--	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	24	Eh	NN	(S*	eh	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	25	das	ART	*	der	sg	neut	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	26	geschieht	VVFIN	*	geschehen	sg	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	27	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	28	find	VVFIN	(S*	find	sg	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	29	ich	PPER	*	ich	sg	*	-	(3)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	30	nie	ADV	*	nie	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	31	meine	PPOSAT	(NP*	mein	sg	-	-	(3)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	32	Ruhe	NN	*)	ruhe	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	33	wieder	ADV	*)))	wieder	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	34	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	Noch	ADV	(VROOT(PSEUDO(S(AVP*	noch	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	einmal	ADV	*)	einmal	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	2	lebe	VVFIN	*	leben	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	3	wohl	ADV	*)	wohl	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	die	ART	(VROOT(PSEUDO(S(NP*	der	sg	fem	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	Angst	NN	*)	angst	sg	fem	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	2	schwächt	VVFIN	*	schwächen	sg	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	3	Geist	NN	(CNP*	geist	sg	*	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	4	und	KON	*	und	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	5	Glieder	NN	*))	glied	sg	*	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	Er	PPER	(VROOT(PSEUDO(S*	er	sg	masc	-	(3)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	will	VMFIN	*	wollen	sg	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	2	gehen	VVINF	*)	gehen	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	-	(0|(0)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	Silvander	ADV	(VROOT(PSEUDO(S*	silvander	sg	masc	-	(3)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	warte	VVFIN	*	warten	sg	masc	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	2	noch	ADV	*	noch	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	4	sieh	VVIMP	(S*	sieh	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	5	deinen	PPOSAT	(NP*	dein	sg	masc	-	(7|(3)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	6	Vater	NN	*)	vater	sg	masc	-	7)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	7	hier	ADV	*))	hier	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	(LOC*)	(3|(3)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	Wen	PWS	*	wen	sg	*	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	?	$.	*	--	-	-	-	-

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	(LOC*)	(7|(7)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	Wie	PWAV	(VROOT(PSEUDO*	wie	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	-	(0|(0)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	Den	ART	*	der	sg	masc	-	(7
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	Vater	NN	*	vater	sg	masc	-	7)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	3	ja	ADV	*	ja	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	4	;	$.	*	--	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	5	der	ART	*	der	sg	masc	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	6	Himmel	NN	*	himmel	sg	masc	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	7	schenkt	VVFIN	*	schenken	sg	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	8	ihn	PPER	*	ihn	sg	masc	-	(7)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	9	dir	PPER	*	dir	sg	*	-	(3)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	10	.	$.	*	--	-	-	-	-

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	(LOC*)	(7|(7)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	Mein	PPOSAT	(VROOT(PSEUDO(NP*	mein	sg	masc	-	(3|(7)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	Sohn	NN	*)	sohn	sg	masc	-	3)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	(LOC*)	(3|(3)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	Mein	PPOSAT	(VROOT(PSEUDO(NP*	mein	sg	masc	-	(7|(3)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	Vater	NN	*)	vater	sg	masc	-	7)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	-	(0|(0)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	Ja	NN	(VROOT(PSEUDO*	ja	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	(LOC*)	(7|(7)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	Pfuy	NE	(VROOT(PSEUDO(S*	pfuy	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	2	hab	VAFIN	*	hab	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	3	uns	PPER	*	uns	pl	*	-	(11)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	4	nicht	PTKNEG	*	nicht	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	5	zum	APPRART	(PP*	zu	sg	masc	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	6	Narren	NN	*))	narr	sg	masc	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	7	!	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	(LOC*)	(3|(3)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	Muß	VMFIN	(VROOT(PSEUDO(S*	müssen	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	für	APPR	(PP*	für	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	2	Erstaunen	NN	*)	erstaunen	sg	neut	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*	nicht	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	4	das	ART	(VP(NP*	der	sg	neut	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	5	Blut	NN	*	blut	sg	neut	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	6	in	APPR	(PP*	in	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	7	mir	PPER	*))	sich	sg	*	-	(3)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	8	erstarren	VVINF	*))	erstarren	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	9	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	Montan	NE	(VROOT(PSEUDO(S*	montan	-	-	-	(0)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	belügt	VVFIN	*	belügen	sg	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	2	mich	PPER	*	mich	sg	*	-	(3)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*)	nicht	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	(LOC*)	(7|(7)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	Das	PDS	(VROOT(PSEUDO(S*	der	sg	neut	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	soll	VMFIN	*	sollen	sg	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	2	Leander	ADV	*	leander	sg	masc	(PER*)	(3)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	3	seyn	ADJD	*)	seyn	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	(LOC*)	(3|(3)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	Leander	ADV	(VROOT(PSEUDO(S*	leander	-	-	(PER*)	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	bin	VAFIN	*	sein	sg	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	2	ich	PPER	(NP*	ich	sg	*	-	(3)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	4	ja	ADV	*))	ja	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	Entzückung	NN	(VROOT(PSEUDO(S*	entzückung	sg	fem	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	nimmt	VVFIN	*	nehmen	sg	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	2	mich	PPER	*	mich	sg	*	-	(3)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	3	ein	PTKVZ	*)	ein	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	Mein	PPOSAT	(VROOT(PSEUDO(S(NP*	mein	sg	masc	-	(3)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	Herz	NN	*)	herz	sg	masc	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	2	spricht	VVFIN	*	sprechen	sg	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	3	ja	ADV	*	ja	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	5	so	ADV	(S*	so	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	6	viel	ADV	(AVP(S(AVP*	viel	*	*	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	7	auch	ADV	*)	auch	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	8	Zweifel	NN	*	zweifel	pl	masc	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	9	widersprechen	VVFIN	*)	widersprechen	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	11	So	ADV	*)	so	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	12	will	VMFIN	*	wollen	sg	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	13	der	ART	(NP*	der	sg	masc	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	14	Himmel	NN	*)	himmel	sg	masc	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	15	noch	ADV	*	noch	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	16	mein	PPOSAT	(VP(NP*	mein	sg	neut	-	(3)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	17	hartes	ADJA	*	hart	sg	neut	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	18	Schicksal	NN	*)	schicksal	sg	neut	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	19	rächen	VVINF	*)))	rächen	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	20	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	(LOC*)	(7|(7)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	Wer	PWS	(VROOT(PSEUDO(S*	wer	sg	masc	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	Henker	NN	*	henker	pl	masc	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	2	führt	VVFIN	*	führen	sg	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	3	dich	PPER	*	dich	sg	-	-	(3)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	4	denn	ADV	*	denn	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	5	in	APPR	(PP*	in	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	6	dieses	PDAT	*	dieser	sg	neut	-	(8
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	7	leere	ADJA	*	leer	sg	neut	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	8	Land	NN	*))	land	sg	neut	-	8)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	9	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	Wenn	KOUS	(VROOT(PSEUDO(S(S*	wenn	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	du	PPER	*	du	sg	*	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	2	mein	PPOSAT	(NP*	mein	sg	masc	-	(3|(7)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	3	Sohn	NN	*)	sohn	sg	masc	-	3)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	4	nun	ADV	*	nun	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	5	bist	VAFIN	*)	sein	sg	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	7	kennst	VVFIN	*	kennen	sg	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	8	du	PPER	*	du	sg	*	-	(3)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	9	hier	ADV	*	hier	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	10	diese	PDAT	(NP*	dieser	sg	fem	-	(12
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	11	Hand	NN	*))	hand	sg	fem	-	12)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	12	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	Zeigt	VVFIN	(VROOT(PSEUDO(S*	zeigen	sg	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	ihm	PPER	*	ihm	sg	masc	-	(3)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	2	einen	ART	(NP*	ein	sg	masc	-	(13
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	3	Brief	NN	*))	brief	sg	masc	-	13)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	(LOC*)	(3|(3)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	Gerechter	ADJA	(VROOT(PSEUDO(NP*	gerecht	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	Himmel	NN	*)	himmel	sg	masc	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	ja	ADV	*	ja	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	–	XY	*	–	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	2	ja	PTKANT	*	ja	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	3	–	XY	*	–	sg	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	4	das	PDS	*	der	sg	neut	-	(13)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	5	hab	VAFIN	*	hab	sg	neut	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	6	ich	PPER	*	ich	sg	*	-	(3)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	7	geschrieben	VVPP	*	schreiben	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	8	.	$.	*	--	-	-	-	-

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	(LOC*)	(7|(7)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	Dieß	NE	(VROOT(PSEUDO(S(S*	dieß	-	-	-	(13
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	liebe	VVFIN	*	lieb	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	2	Blatt	NN	*)	blatt	-	-	-	13)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	3	ist	VAFIN	*	sein	sg	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	4	nie	ADV	(VP*	nie	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	5	von	APPR	(PP*	von	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	6	meiner	PPOSAT	*	mein	sg	fem	-	(7)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	7	Brust	NN	*)	brust	sg	fem	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	8	geblieben	VVPP	*))	bleiben	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	(LOC*)	(3|(3)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	Ach	ITJ	(VROOT(PSEUDO(S*)	ach	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	Glück	NN	*	glück	sg	neut	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	ach	PPER	*	ach	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	2	Vater	NN	*	vater	-	-	-	(7)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	ach	ITJ	(S*)	ach	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	gelangt	VVFIN	(VROOT(PSEUDO(S*	gelangen	sg	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	es	PPER	*	es	sg	neut	-	(13)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	2	doch	ADV	*	doch	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	3	an	APPR	(PP*	an	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	4	euch	PPER	*))	euch	pl	*	-	(7)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	(LOC*)	(7|(7)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	Bekamst	ADV	(VROOT(PSEUDO(S*	bekamst	sg	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	du	PPER	*	du	sg	*	-	(3)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	2	Antwort	NN	*)	antwort	sg	fem	-	(14)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	(LOC*)	(3|(3)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	Nein	PTKANT	*	nein	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	(LOC*)	(7|(7)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	Das	PDS	(VROOT(PSEUDO(S*	der	sg	neut	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	2	ein	ART	(NP*	ein	sg	masc	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	3	Teufelsstreich	NN	*))	teufelsstreich	sg	masc	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(7)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	schrieb	VVFIN	*	schreiben	sg	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	2	dir	PRF	*	dir	sg	*	-	(3)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	3	mit	APPR	(PP*	mit	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	4	dem	ART	*	der	sg	masc	-	(15
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	5	Fuchs	NE	*))	fuchs	sg	masc	-	15)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	(LOC*)	(3|(3)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	Dieß	ART	(VROOT(PSEUDO(S(NP*	dieß	sg	masc	-	(15
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	Schiff	NN	*)	schiff	sg	masc	-	15)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	2	ist	VAFIN	*	sein	sg	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	3	untergangen	VVPP	*)	unterhen	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	(LOC*)	(7|(7)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	Ja	PTKANT	(VROOT(PSEUDO(S*	ja	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	2	so	ADV	*	so	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	3	kömmt	VVFIN	*	kömmen	sg	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	4	es	PPER	*	es	sg	neut	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	5	heraus	PTKVZ	*	heraus	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	7	daß	KOUS	(S*	daß	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	8	du	PPER	*	du	sg	*	-	(3)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	9	sie	PPER	(VP*	sie	pl	*	-	(14)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	10	nicht	PTKNEG	*	nicht	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	11	empfangen	VVPP	*)))	empfangen	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	Umarme	NN	(VROOT(PSEUDO*	umarme	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	mich	PPER	(NP(AP*	mich	sg	*	-	(7)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	2	mein	PPOSAT	*)	mein	sg	masc	-	(3|(7)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	3	Sohn	NN	*)	sohn	sg	masc	-	3)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	Umarmt	VVFIN	(VROOT(PSEUDO(S*	umarmen	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	ihn	PPER	*)	ihn	sg	masc	-	(3)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	(LOC*)	(3|(3)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	Mein	PPOSAT	(VROOT(PSEUDO(NP*	mein	sg	masc	-	(7|(3)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	Vater	NN	*)	vater	sg	masc	-	7)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	Küßt	VVFIN	(VROOT(PSEUDO(S*	küßen	pl	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	ihm	PPER	*	ihm	sg	masc	-	(7)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	2	weinend	ADJD	*	weinend	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	3	die	ART	(NP*	der	sg	fem	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	4	Hand	NN	*))	hand	sg	fem	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*))	corydon	-	-	-	(7)

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	weinend	ADJD	(VROOT(PSEUDO*	weinend	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	Welche	PWAT	(VROOT(PSEUDO(NP*	welcher	sg	fem	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	Lust	NN	*)	lust	sg	fem	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	-	(0|(0)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	Seht	VVFIN	(VROOT(PSEUDO(S*	sehen	sg	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	hier	ADV	*	hier	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	2	des	ART	(NP*	der	sg	neut	-	(3
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	3	besten	ADJA	*	gut	sg	neut	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	4	Sohns	NN	*	sohn	sg	neut	-	3)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	6	des	ART	(NP*	der	sg	neut	-	(7
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	7	besten	ADJA	*	gut	sg	neut	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	8	Vaters	NN	*	vater	sg	neut	-	7)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	9	Brust	NN	*)))	brust	sg	fem	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	10	!	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	Doch	KON	(VROOT(PSEUDO(S*	doch	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	ich	PPER	*	ich	sg	*	-	(0)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	2	seh	VVFIN	*	seh	sg	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	3	Doris	NE	*	doris	sg	-	(PER*)	(2)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	4	dort	ADV	*	dort	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	6	ich	PPER	(S*	ich	sg	*	-	(0)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	7	muß	VMFIN	*	müssen	sg	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	8	gleich	ADV	(PP*	gleich	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	9	zu	APPR	*	zu	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	10	ihr	PPOSAT	*	ihr	sg	fem	-	(2)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	11	eilen	ADJA	(AP*	eilen	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	13	Und	KON	(S(VP*	und	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	14	machen	VVINF	*	machen	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	15	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	16	daß	KOUS	(S*	daß	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	17	sie	PPER	*	sie	sg	fem	-	(2)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	18	sich	PRF	*	sich	sg	-	-	(2)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	19	noch	ADV	(AVP*	noch	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	20	etwas	ADV	*)	etwas	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	21	muß	VMFIN	*	müssen	sg	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	22	verweilen	VVINF	*))	verweilen	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	23	;	$.	*	--	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	24	Bleibt	VVFIN	(S*	bleiben	sg	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	25	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	26	Freunde	NN	*	freund	pl	masc	-	(11)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	27	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	28	hier	ADV	*	hier	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	29	allein	ADV	*	allein	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	30	;	$.	*	--	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	31	ich	PPER	(S*	ich	sg	*	-	(0)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	32	halte	VVFIN	*	halten	sg	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	33	sie	PPER	*	sie	sg	fem	-	(2)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	34	dort	ADV	*	dort	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	35	auf	PTKVZ	*))	auf	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	36	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	37	Laßt	VVFIN	*	lassen	pl	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	38	eurer	ADJA	(NP*	eurer	sg	masc	-	(11)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	39	Zärtlichkeit	NN	(CNP*	zärtlichkeit	sg	fem	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	40	und	KON	*	und	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	41	Freude	NN	*))))	freude	sg	fem	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	42	vollen	ADJA	*	voll	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	43	Lauf	NN	*)))	lauf	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	44	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(0)
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	komme	VVFIN	*	kommen	sg	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	2	bald	ADV	*	bald	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	3	zurück	PTKVZ	*)	zurück	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	0	Ab	APPR	(VROOT(PSEUDO*	ab	-	-	-	-
Schaeferinsel_Act3_Scene2.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

#end document
