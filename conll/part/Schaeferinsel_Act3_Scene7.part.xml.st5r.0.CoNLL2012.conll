#begin document (Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll); part 000
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	Mops	NE	(VROOT(PSEUDO(CNP*	mops	-	-	(PER*)	(4)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	2	Corydon	NE	*	corydon	-	-	-	(7)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	4	Montan	NE	*	montan	-	-	-	(0)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	6	Silvander	NE	*	silvander	-	-	-	(3)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	8	Damöt	NE	*	damöt	-	-	-	(6)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	10	Sylvia	NE	*	sylvia	sg	neut	(PER*)	(5)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	12	Chloe	NE	*)	chloe	sg	neut	(PER*)	(1)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	13	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	MOPS	NE	(VROOT(PSEUDO*))	mops	-	-	-	(4)

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	in	APPR	(VROOT(PSEUDO(AP(PP*	in	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	ordentlicher	ADJA	*	ordentlich	sg	fem	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	2	Schäfertracht	NN	*)	schäfertracht	sg	fem	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	3	laufend	ADJD	*)	laufend	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	Herr	NN	(VROOT(PSEUDO(S(ISU*	herr	sg	masc	-	(3)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	2	geschwind	ADJD	*))	geschwind	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	(LOC*)	(3
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	Was	PWS	*	was	sg	neut	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	giebts	ADV	*	giebt	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	MOPS	NE	(VROOT(PSEUDO*	mops	-	-	-	(4
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	4)

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	Geschwind	NN	(VROOT(PSEUDO(NP*	geschwind	sg	neut	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	aufs	APPRART	(PP*	auf	sg	neut	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	2	Boot	NN	*))	boot	sg	neut	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	(LOC*)	(3
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	Warum	PWAV	(VROOT(PSEUDO*	warum	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	treibt	VVFIN	*	treiben	sg	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	2	uns	PPER	*	uns	pl	*	-	(8)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	3	denn	ADV	*)	denn	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	MOPS	NE	(VROOT(PSEUDO*	mops	-	-	-	(4
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	4)

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	Ach	ITJ	(VROOT(PSEUDO(S*)	ach	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	eine	ART	(VROOT(PSEUDO(NP*	ein	sg	fem	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	große	ADJA	*	groß	sg	fem	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	2	Noth	NN	*)	noth	sg	fem	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	(LOC*)	(3
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	denn	ADV	*	denn	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	2	für	APPR	(PP*	für	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	3	Noth	NE	*))	noth	sg	*	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	MOPS	NE	(VROOT(PSEUDO*	mops	-	-	-	(4
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	4)

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	Nur	ADV	(VROOT(PSEUDO(VP(AP*	nur	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	fort	PTKVZ	*))	fort	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	(LOC*)	(3
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	Wohin	PWAV	(VROOT(PSEUDO*	wohin	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	MOPS	NE	(VROOT(PSEUDO*	mops	-	-	-	(4
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	4)

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	Geschwind	NN	(VROOT(PSEUDO*	geschwind	sg	masc	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	(LOC*)	(7
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	Zum	APPRART	(VROOT(PSEUDO(PP*	zu	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	Teufel	NN	*)	teufel	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	lermt	VVFIN	*	lermen	sg	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	2	der	ART	(NP*	der	sg	masc	-	(4
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	3	Narre	NN	*)	narre	sg	masc	-	4)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	4	denn	ADV	*)	denn	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	MOPS	NE	(VROOT(PSEUDO*	mops	-	-	-	(4
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	4)

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	Wir	PPER	*	wir	pl	*	-	(8)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	müßten	VMFIN	*	müssen	pl	-	-	-

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	(LOC*)	(3
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	Ohne	APPR	(VROOT(PSEUDO(S(PP*	ohne	pl	masc	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	Zweifel	NN	*)	zweifel	pl	masc	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	2	Hat	VAFIN	*	haben	sg	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	3	dich	PPER	*	dich	sg	-	-	(4)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	4	ein	ART	(NP*	ein	sg	neut	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	5	Wild	NN	*)	wild	sg	neut	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	6	erschreckt	VVFIN	*)	erschrecken	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	7	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	MOPS	NE	(VROOT(PSEUDO*	mops	-	-	-	(4
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	4)

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	Fort	NN	(VROOT(PSEUDO(S(CNP*	fort	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	2	fort	NN	*)	fort	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	4	geschwind	ADJD	(S*	geschwind	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	5	packt	VVFIN	*	packen	sg	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	6	ein	PTKVZ	*))	ein	sg	neut	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	7	!	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	(LOC*)	(3
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	Sprich	VVIMP	(VROOT(PSEUDO(CS(S*	sprich	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	doch	ADV	*)	doch	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	3	was	PWS	(S*	was	sg	neut	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	4	willst	VMFIN	*	wollen	sg	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	5	du	PPER	*	du	sg	*	-	(4)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	6	denn	ADV	*))	denn	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	7	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	MOPS	NE	(VROOT(PSEUDO*	mops	-	-	-	(4
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	4)

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	Fort	NN	(VROOT(PSEUDO(S*	fort	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	2	fort	PTKVZ	*)	fort	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	(LOC*)	(3
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	Hör	XY	(VROOT(PSEUDO*	hör	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	auf	APPR	*	auf	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	2	zu	PTKZU	(VP(VZ*	zu	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	3	schreyn	VVINF	*)	schreyn	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	5	Und	KON	(S*	und	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	6	sage	VVFIN	*	sagen	sg	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	8	was	PWS	(S*	was	sg	neut	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	9	du	PPER	*	du	sg	*	-	(4)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	10	willst	VVFIN	*)))	wollen	sg	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	MOPS	NE	(VROOT(PSEUDO*	mops	-	-	-	(4
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	4)

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	Ich	PPER	*	ich	sg	*	-	(4)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	will	VMFIN	*	wollen	sg	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	3	–	NN	*	–	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	4	–	$(	*	–	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	5	daß	KOUS	*	daß	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	6	ihr	PPER	*	ihr	pl	*	-	(8)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	7	müßt	VMFIN	*	müssen	pl	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	8	gehen	VVINF	*	gehen	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	9	.	$.	*	--	-	-	-	-

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	(LOC*)	(3
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	Warum	PWAV	(VROOT(PSEUDO*	warum	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	MOPS	NE	(VROOT(PSEUDO*	mops	-	-	-	(4
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	4)

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	Man	PIS	(VROOT(PSEUDO(S*	man	sg	*	-	(9)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	kann	VMFIN	*	können	sg	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	2	schon	ADV	*	schon	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	3	dort	ADV	*	dort	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	4	des	ART	(NP*	der	sg	masc	-	(10
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	5	Feindes	NN	*	feind	sg	masc	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	6	Flotte	NN	*)	flotte	sg	fem	-	10)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	7	sehen	VVFIN	*)	sehen	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	(LOC*)	(3
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	Hast	VAFIN	(VROOT(PSEUDO(S*	haben	sg	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	du	PPER	*	du	sg	*	-	(4)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	2	sie	PPER	*	sie	*	*	-	(10)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	3	denn	ADV	(AP*	denn	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	4	gesehn	ADJD	*))	gesehn	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	MOPS	NE	(VROOT(PSEUDO*	mops	-	-	-	(4
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	4)

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	Nein	PTKANT	*	nein	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*	--	-	-	-	-

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	Doch	KON	(VROOT(PSEUDO(S*	doch	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	sie	PPER	*	sie	sg	fem	-	(10)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	2	kommt	VVFIN	*	kommen	sg	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	3	gewiß	ADV	*)	gewiß	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	(LOC*)	(3
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	Wer	PWS	(VROOT(PSEUDO(S*	wer	sg	masc	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	sagts	ADV	*	sagts	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	2	denn	ADV	*)	denn	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	MOPS	NE	(VROOT(PSEUDO*	mops	-	-	-	(4
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	4)

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	Ich	PPER	*	ich	sg	*	-	(4)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	–	VVFIN	*	–	sg	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(4)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	3	–	XY	*	–	sg	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	4	ich	PPER	*	ich	sg	*	-	(4)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	5	.	$.	*	--	-	-	-	-

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	(LOC*)	(3
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	Ein	ART	(VROOT(PSEUDO(NP*	ein	sg	masc	-	(4
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	Narr	NN	*)	narr	sg	masc	-	4)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	MOPS	NE	(VROOT(PSEUDO*	mops	-	-	-	(4
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	4)

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	Nein	PTKANT	*	nein	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	2	lest	VVIMP	*	lest	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	3	–	$.	*	–	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	4	lies	PDS	*	leisen	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	5	–	XY	*	–	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	6	lies	VVFIN	*	leisen	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	7	.	$.	*	--	-	-	-	-

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	Giebt	VVFIN	(VROOT(PSEUDO(S*	gieben	sg	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	Silvander	NE	*	silvander	*	*	-	(3)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	2	einen	ART	(NP*	ein	sg	masc	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	3	Brief	NN	*))	brief	sg	masc	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*))	silvander	-	-	-	(3)

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	liest	VVFIN	*	lesen	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*	--	-	-	-	-

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	Ja	PTKANT	(VROOT(PSEUDO(S*	ja	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	2	es	PPER	*	es	sg	neut	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	3	ist	VAFIN	*	sein	sg	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	4	wahr	ADJD	*)	wahr	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	MOPS	NE	(VROOT(PSEUDO*	mops	-	-	-	(4
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	4)

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	Da	KOUS	*	da	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	sieh	FM	*	sieh	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	(LOC*)	(3
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(CO(NP(NM*	der	sg	masc	-	(10
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	Feinde	NN	*)	feind	sg	masc	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	2	Schiffe	NN	*)	schiff	sg	masc	-	10)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	3	kommen	VVINF	*	kommen	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	5	Und	KON	(S*	und	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	6	diese	PDAT	(NP*	dieser	sg	fem	-	(11
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	7	Insel	NN	*)	insel	sg	fem	-	11)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	8	wird	VAFIN	*	werden	sg	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	9	von	APPR	(VP(PP*	von	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	10	ihnen	PPER	*)	ihnen	pl	*	-	(10)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	11	eingenommen	VVPP	*)))	einnehmen	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	Jedoch	ADV	(VROOT(PSEUDO(S(NP*	jedoch	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	sie	PPER	*)	sie	pl	*	-	(10)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	2	kommen	VVFIN	*	kommen	pl	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	3	erst	ADV	*	erst	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	4	in	APPR	(PP*	in	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	5	zwey	NE	*	zwey	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	7	drey	CARD	(NP*	drey	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	8	Tagen	NN	*))	tag	pl	masc	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	9	an	PTKVZ	*)	an	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	Wir	PPER	(VROOT(PSEUDO(S*	wir	pl	*	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	haben	VAFIN	*	haben	pl	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	2	Zeit	NN	*)	zeit	sg	fem	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	3	genug	PIAT	*	genug	*	*	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	4	;	$.	*	--	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	5	was	PWS	(S*	was	sg	neut	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	6	thust	VVFIN	*	thust	sg	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	7	du	PPER	*	du	sg	*	-	(0)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	8	nun	ADV	*	nun	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	10	Montan	NN	*)	montan	sg	neut	-	(0)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	11	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	-	(0
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	Ach	ITJ	(VROOT(PSEUDO(S*)	ach	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	(LOC*)	(7
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	Ja	PTKANT	(VROOT(PSEUDO(CS(S*	ja	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	2	der	PDS	*	der	sg	masc	-	(0)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	3	wird	VAFIN	*	werden	sg	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	4	nun	ADV	(VP*	nun	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	5	wohl	ADV	*	wohl	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	6	mit	APPR	(PP*	mit	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	7	wollichten	ADJA	*	wollicht	pl	neut	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	8	Armeen	NN	*)	armee	pl	neut	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	10	Dem	ART	(NP*	der	sg	neut	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	11	feindlichen	ADJA	*	feindlich	sg	masc	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	12	Geschütz	NN	*)	geschütz	sg	masc	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	13	beherzt	ADJD	(AP*	beherzt	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	14	entgegen	PROAV	*)	entgegen	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	15	gehen	VVINF	*))	gehen	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	16	;	$.	*	--	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	17	Denn	KON	(S*	denn	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	18	er	PPER	*	er	sg	masc	-	(0)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	19	weicht	VVFIN	*	weichen	sg	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	20	nicht	PTKNEG	*	nicht	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	21	vom	APPRART	(PP*	von	sg	masc	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	22	Fleck	NN	*)))	fleck	sg	masc	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	23	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	-	(0
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	Ach	ITJ	(VROOT(PSEUDO(S*	ach	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	spotte	VVFIN	*	spoten	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	2	nicht	PTKNEG	*	nicht	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	4	mein	PPOSAT	(NP*	mein	sg	masc	-	(7|(0)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	5	Freund	NN	*))	freund	sg	masc	-	7)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	6	!	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	Jetzt	ADV	(VROOT(PSEUDO(CS(S*	jetzt	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	2	da	KOUS	*	da	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	3	das	ART	(NP*	der	sg	neut	-	(12
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	4	größte	ADJA	*	groß	sg	neut	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	5	Glück	NN	*)	glück	sg	neut	-	12)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	6	mich	PPER	(VP*	mich	sg	*	-	(0)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	7	noch	ADV	*	noch	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	8	zu	PTKZU	(VZ*	zu	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	9	trösten	VVINF	*))	trösen	sg	neut	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	10	scheint	VVFIN	*)	scheinen	sg	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	11	;	$.	*	--	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	12	Jagt	VVFIN	(S*	jagt	sg	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	13	mich	PPER	*	mich	sg	*	-	(0)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	14	das	ART	(NP*	der	sg	neut	-	(12
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	15	Glück	NN	*)	glück	sg	neut	-	12)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	16	von	APPR	(PP*	von	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	17	hier	ADV	*)	hier	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	18	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	19	wohin	PWAV	(S*	wohin	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	20	es	PPER	*	es	sg	neut	-	(12)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	21	mich	PPER	*	mich	sg	*	-	(0)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	22	getrieben	VVPP	*	treiben	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	23	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	24	Mich	PPER	(NP*	mich	sg	*	-	(0)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	25	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	26	wo	PWAV	(S*	wo	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	27	michs	PPER	*	michs	-	-	-	(12)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	28	erst	ADV	*	erst	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	29	verfolgt	VVFIN	*	verfolgen	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	30	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	31	aufs	APPRART	(VP(PP*	auf	sg	neut	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	32	neue	ADJA	*)	neu	sg	neut	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	33	zu	PTKZU	(VZ*	zu	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	34	betrüben	VVINF	*)))))))	betrüben	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	35	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	(LOC*)	(3
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	Verzage	NN	(VROOT(PSEUDO(S*	verzage	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	nicht	PTKNEG	(PP*	nicht	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	3	du	PPER	(S*	du	sg	*	-	(0)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	4	weißt	VVFIN	*	weißen	sg	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	6	aus	APPR	(S(PP*	aus	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	7	dem	PRELS	*)	der	sg	neut	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	9	was	PWS	(S*	was	sg	neut	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	10	ich	PPER	*	ich	sg	*	-	(3)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	11	gesagt	VVPP	*	sagen	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	12	:	$.	*	--	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	13	Daß	KOUS	(S*	daß	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	14	dich	PPER	*	dich	sg	*	-	(0)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	15	kein	PIAT	(NP*	kein	sg	neut	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	16	Unglück	NN	*	unglück	sg	neut	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	17	mehr	ADV	*)	mehr	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	18	vom	APPRART	(PP*	von	sg	masc	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	19	festen	ADJA	*	fest	sg	masc	-	(13
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	20	Lande	NN	*)	land	sg	masc	-	13)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	21	jagt	VVFIN	*))))))	jagen	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	22	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	Die	ART	(VROOT(PSEUDO(CS(S(NP*	der	sg	fem	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	Sach	NN	*)	sach	sg	fem	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	2	ist	VAFIN	*	sein	sg	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	3	beygelegt	VVPP	*)	beylegen	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	5	du	PPER	(S*	du	sg	*	-	(0)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	6	kannst	VVFIN	*	können	sg	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	7	dort	ADV	*	dort	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	8	ruhig	ADJD	(VP*	ruhig	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	9	leben	VVINF	*))	leben	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	10	;	$.	*	--	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	11	Du	PPER	(S*	du	sg	*	-	(0)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	12	siehst	VVFIN	*	sehen	sg	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	14	uns	PPER	(CS(S*	uns	pl	*	-	(8)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	15	zwingt	VVFIN	*	zwingen	sg	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	16	die	ART	(NP*	der	sg	fem	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	17	Noth	NE	*))	noth	sg	fem	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	18	:	$.	*	--	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	19	du	PPER	(S*	du	sg	*	-	(0)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	20	mußt	VVFIN	*	mussen	sg	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	21	dich	PRF	(S*	dich	sg	-	-	(0)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	22	drein	ADJD	*	drein	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	23	ergeben	VVFIN	*)))))	ergeben	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	24	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	-	(0
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	Ich	PPER	*	ich	sg	*	-	(0)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	muß	VMFIN	*	müssen	sg	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	So	ADV	(VROOT(PSEUDO(S*	so	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	will	VMFIN	*	wollen	sg	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(0)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	3	auch	ADV	*)	auch	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	(LOC*)	(7
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	Das	PDS	(VROOT(PSEUDO(S*	der	sg	neut	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	war	VAFIN	*	sein	sg	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	2	ein	ART	(NP*	ein	sg	neut	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	3	kluges	ADJA	*	klug	sg	neut	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	4	Wort	NN	*))	wort	sg	neut	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	-	(0
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	Mein	PPOSAT	(VROOT(PSEUDO(S(NP*	mein	sg	neut	-	(0)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	Unglück	NN	*)	unglück	sg	neut	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	2	trieb	VVFIN	*	treiben	sg	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	3	mich	PPER	*	mich	sg	*	-	(0)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	4	her	PTKVZ	*	her	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	5	;	$.	*	--	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	6	mein	PPOSAT	(S(NP*	mein	sg	neut	-	(12|(0)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	7	Glück	NN	*)	glück	sg	neut	-	12)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	8	führt	VVFIN	*	führen	sg	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	9	mich	PPER	*	mich	sg	*	-	(0)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	10	nun	ADV	*	nun	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	11	fort	PTKVZ	*))	fort	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	(LOC*)	(3
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	Man	PIS	(VROOT(PSEUDO(S*	man	sg	*	-	(9)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	sagte	VVFIN	*	sagen	sg	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	2	mir	PPER	*	sich	sg	*	-	(3)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	4	mein	PPOSAT	(NP*	mein	sg	masc	-	(14|(3)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	5	Schiff	NN	*	schiff	sg	masc	-	14)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	6	sey	NE	*)	sey	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	7	noch	ADV	(PP*	noch	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	8	im	APPRART	*	in	sg	neut	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	9	guten	ADJA	*	gut	sg	neut	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	10	Stande	NN	*)	stande	sg	neut	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	11	;	$.	*	--	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	12	Wir	PPER	(S*	wir	pl	*	-	(8)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	13	setzen	VVFIN	*	setzen	pl	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	14	uns	PRF	*	uns	pl	-	-	(8)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	15	darauf	PROAV	*	darauf	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	16	und	KON	*	und	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	17	ziehn	CARD	*	ziehn	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	18	aus	APPR	(PP*	aus	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	19	einem	ART	*	ein	sg	neut	-	(11
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	20	Lande	NN	*	land	sg	neut	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	21	,	$,	*	--	-	-	-	11)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	22	Das	PRELS	(S*	der	sg	neut	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	23	doch	ADV	*	doch	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	24	für	APPR	(PP*	für	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	25	Schäfer	NE	*)	schäfer	pl	masc	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	26	nun	ADV	*	nun	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	27	kein	PIAT	(NP*	kein	sg	masc	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	28	Aufenthalt	NN	*	aufenthalt	sg	masc	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	29	mehr	ADV	*)	mehr	*	*	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	30	ist	VAFIN	*))))	sein	sg	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	31	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	CHLOE	NE	(VROOT(PSEUDO*))	chloe	-	-	-	(1)

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	zu	APPR	(VROOT(PSEUDO(MPN*	zu	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	Doris	NE	*)	doris	-	-	(PER*)	(2)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	Ich	PPER	*	ich	sg	*	-	(1)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	seh	XY	*	seh	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	2	wohl	ADV	*	wohl	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	4	keine	PIAT	*	kein	sg	fem	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	5	List	NN	*	list	sg	fem	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	6	ist	VAFIN	*	sein	sg	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	7	über	APPR	*	über	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	8	Weiberlist	NN	*	weiberlist	sg	*	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	9	.	$.	*	--	-	-	-	-

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	Du	PPER	(VROOT(PSEUDO(NP*	du	sg	*	-	(2)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	2	Doris	NE	*)	doris	-	-	-	(2)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	dank	APPR	*	dank	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	es	PPER	*	es	sg	neut	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	2	mir	PPER	*	sich	sg	*	-	(1)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	3	.	$.	*	--	-	-	-	-

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	(LOC*)	(7
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	Wir	PPER	(VROOT(PSEUDO(S*	wir	pl	*	-	(8)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	reisen	VVFIN	*	reisen	pl	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	2	also	ADV	*	also	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	3	morgen	ADV	*)	morgen	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	(LOC*)	(3
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	Ja	PTKANT	(VROOT(PSEUDO(S*	ja	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	2	und	KON	(S*	und	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(3)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	4	will	VMFIN	*	wollen	sg	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	5	sogleich	ADV	(VP(NP*	sogleich	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	6	das	ART	*	der	sg	neut	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	7	nöthige	ADJA	*)	nöthig	sg	neut	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	8	besorgen	VVINF	*)))	besorgen	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	-	(0
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	Nun	ADV	(VROOT(PSEUDO(S*	nun	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	lern	VVFIN	*	lern	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(0)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	4	daß	KOUS	(CS(S*	daß	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	5	ein	ART	(NP*	ein	sg	masc	-	(15
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	6	Mensch	NN	*)	mensch	sg	masc	-	15)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	7	dem	ART	(NP*	der	sg	masc	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	8	Schicksal	NN	*)	schicksal	sg	masc	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	9	nicht	PTKNEG	*	nicht	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	10	entgeht	VVFIN	*	entgehen	sg	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	12	Und	KON	(CO(S*	und	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	13	daß	KOUS	*	daß	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	14	der	PDS	*	der	sg	masc	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	15	thöricht	ADJD	*	thörechen	sg	masc	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	16	ist	VAFIN	*)	sein	sg	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	17	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	18	der	ART	(VP(NP*	der	sg	masc	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	19	murrt	TRUNC	*))))	murren	sg	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	20	und	KON	*	und	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	21	widersteht	VVFIN	*))	widerstehen	sg	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	22	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	Mein	PPOSAT	(VROOT(PSEUDO(S(NP*	mein	sg	masc	-	(0)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	Schicksal	NN	*)	schicksal	sg	masc	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	2	lehrt	VVFIN	*	lehren	sg	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	4	man	PIS	(S*	man	sg	*	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	5	kann	VMFIN	*	können	sg	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	6	an	APPR	(PP*	an	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	7	Höfen	NN	*	hof	pl	masc	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	8	Heerden	NE	*)	heerden	pl	masc	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	9	Unglücklich	ADJD	(VP(CAP*	unglücklich	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	10	und	KON	*	und	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	11	beglückt	ADJD	*)	beglücken	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	13	doch	ADV	*	doch	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	14	nirgends	ADV	*	nirgends	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	15	werden	VAINF	*)))	werden	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	16	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	Corydon	NE	(VROOT(PSEUDO(S*	corydon	-	-	-	(7)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	winkt	VVFIN	*	winken	sg	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	3	daß	KOUS	(S(VP(AP(CO*	daß	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	4	warten	VVINF	*	warten	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	6	und	KON	*	und	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	7	mit	APPR	(PP*	mit	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	8	ihm	PPER	*))	ihm	sg	masc	-	(7)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	9	lustig	ADJD	*)	lustig	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	10	seyn	VAINF	*)	seyn	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	11	sollen	VMFIN	*))	sollen	pl	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	Darauf	PROAV	(VROOT(PSEUDO(S*	darauf	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	singt	VVFIN	*	singen	sg	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	2	er	PPER	*	er	sg	masc	-	(7)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	3	folgende	ADJA	(NP*	folgend	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	4	Aria	NE	*))	aria	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	Durch	APPR	(VROOT(PSEUDO(CS(PP*	durch	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	Sorgen	NN	(CNP*	sorge	pl	fem	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	2	und	KON	*	und	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	3	Grillen	NN	*))	grille	pl	*	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	4	Sein	PPOSAT	(S(VP(NP*	sein	sg	neut	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	5	Schicksal	NN	*)	schicksal	sg	neut	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	6	erfüllen	VVINF	*)	erfüllen	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	7	;	$.	*	--	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	8	Heißt	NN	(NP*	heißt	pl	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	9	ohne	APPR	(PP*	ohne	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	10	Verstand	NN	*)))	verstand	sg	masc	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	12	Sein	PPOSAT	(S(NP*	sein	sg	neut	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	13	Leben	NN	*)	leben	sg	neut	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	14	verwand	VVFIN	*))	verwinden	sg	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	15	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	Im	APPRART	(VROOT(PSEUDO(S(PP*	in	sg	neut	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	murrischen	ADJA	*	murrisch	sg	neut	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	2	Herzen	NN	*)	herz	sg	neut	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	3	Entspringen	VVFIN	*	entspringen	sg	neut	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	4	nur	ADV	*	nur	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	5	Schmerzen	NN	*)	schmerz	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	Die	ART	(VROOT(PSEUDO(NP*	der	sg	fem	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	edelste	ADJA	*	edel	sg	fem	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	2	Brust	NN	*	brust	sg	fem	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	3	Zeugt	NE	(CNP(MPN*	zeugt	sg	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	4	Hofnung	NE	*)	hofnung	sg	fem	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	5	und	KON	*	und	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	6	Lust	NE	*))	lust	sg	fem	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	Wer	PWS	(VROOT(PSEUDO(S*	wer	sg	masc	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	hat	VAFIN	*	haben	sg	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	2	uns	PPER	(VP*	uns	pl	*	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	3	das	ART	(NP*	der	sg	neut	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	4	Leben	NN	*)	leben	sg	neut	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	5	Zur	APPRART	(PP*	zu	sg	fem	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	6	Strafe	NN	*)	strafe	sg	fem	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	7	gegeben	VVPP	*))	geben	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	8	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	Vergnügen	NN	(VROOT(PSEUDO(NP(CNP*	vergnügen	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	und	KON	*	und	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	2	Scherz	NN	*)	scherz	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	3	Beleben	NE	*	beleben	pl	fem	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	4	das	ART	(NP*	der	sg	neut	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	5	Herz	NN	*))	herz	sg	neut	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	Nach	APPR	(VROOT(PSEUDO(S(PP*	nach	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	jedem	PIAT	*	jeder	sg	masc	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	2	Verse	NN	*)	vers	sg	masc	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	3	singen	VVFIN	*	singen	pl	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	4	die	ART	(NP*	der	pl	*	-	(8
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	5	übrigen	ADJA	*)	übrig	pl	*	-	8)
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	6	zusammen	ADV	(NP*	zusammen	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	7	folgendes	ADJA	*))	folgend	sg	neut	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	Es	PPER	(VROOT(PSEUDO(S*	es	sg	neut	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	lebe	VVFIN	*	leben	sg	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	2	die	ART	(NP*	der	sg	fem	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	3	Quelle	NN	*	quelle	sg	fem	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	4	der	ART	(CNP(NP*	der	pl	fem	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	5	süssesten	ADJA	*	süst	pl	neut	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	6	Triebe	NN	*)	trieb	sg	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	8	Die	ART	(NP*	der	sg	fem	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	9	Liebe	NN	*)	liebe	sg	fem	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	11	der	ART	(NP*	der	sg	masc	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	12	Gipfel	NN	*	gipfel	sg	masc	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	13	der	ART	(NP*	der	sg	masc	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	14	Wollust	NN	*))	wollust	sg	masc	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	15	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	16	die	ART	(NP*	der	sg	fem	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	17	Liebe	NN	*))))	liebe	sg	fem	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	18	!	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	Hierauf	PROAV	(VROOT(PSEUDO(S*	hierauf	sg	masc	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	macht	VVFIN	*	machen	sg	-	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	2	ein	ART	(NP*	ein	sg	neut	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	3	Schäferballet	NN	*)	schäferballet	sg	neut	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	4	den	ART	(NP*	der	sg	masc	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	5	Beschluß	NN	*))	beschluß	sg	masc	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	0	Ende	NN	(VROOT(PSEUDO*	ende	sg	neut	-	-
Schaeferinsel_Act3_Scene7.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

#end document
