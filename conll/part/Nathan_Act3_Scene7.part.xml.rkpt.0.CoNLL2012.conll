#begin document (Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll); part 000
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Saladin	NE	(VROOT(PSEUDO(CNP*	saladin	sg	*	-	(7)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	und	KON	*	und	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Nathan	NE	*)	nathan	sg	*	-	(1)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	(	$(	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	So	ADV	*	so	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	das	ART	*	der	sg	neut	-	(15
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Feld	NN	*	feld	sg	neut	-	15)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	hier	ADV	*	hier	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	rein	ADJD	*	rein	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	!	$.	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	)	$(	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	–	$(	*	–	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	Ich	PPER	*	ich	sg	*	-	(7)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	komm	VVIMP	*	kommen	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	'	$(	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	dir	PPER	*	dir	sg	*	-	(1)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	doch	ADV	*	doch	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	Nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	zu	PTKA	*	zu	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	geschwind	ADJD	*	geschwind	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	zurück	PTKVZ	*	zurück	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	19	?	$.	*	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Du	PPER	(VROOT(PSEUDO(S*	du	sg	*	-	(1)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	bist	VAFIN	*	sein	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	zu	APPR	(PP*	zu	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Rande	NN	*	rand	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Mit	APPR	(PP*	mit	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	deiner	PPOSAT	*	dein	sg	fem	-	(16|(1)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	Überlegung	NN	*)))	überlegung	sg	fem	-	16)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO(S*	–	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Nun	ADV	*	nun	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	so	ADV	*	so	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	rede	VVFIN	*)	reden	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Es	PPER	(VROOT(PSEUDO(S*	es	sg	neut	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	hört	VVFIN	*	hören	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	uns	PPER	*	uns	pl	*	-	(17)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	keine	PIAT	(NP*	kein	sg	fem	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Seele	NN	*))	seele	sg	fem	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Möcht	VVIMP	(VROOT(PSEUDO(S*	möcht	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	auch	ADV	*	auch	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	doch	ADV	*	doch	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Die	ART	(NP*	der	sg	fem	-	(18
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	ganze	ADJA	*	ganz	sg	fem	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Welt	NN	*)	welt	sg	fem	-	18)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	uns	PPER	(VP*	uns	pl	*	-	(17)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	hören	VVINF	*))	hören	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	So	ADV	(VROOT(PSEUDO(S(AP*	so	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	gewiß	ADJD	*)	gewiß	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Nathan	NE	(NP*	nathan	-	-	-	(1)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	seiner	PPOSAT	(NP*	sein	sg	fem	-	(16|(1)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Sache	NN	*)))	sache	sg	fem	-	16)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ha	XY	*	ha	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	das	PDS	*	der	sg	neut	-	(19)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	nenn	VVFIN	*	nenn	sg	neut	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Ich	PPER	*	ich	sg	*	-	(7)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	einen	ART	*	ein	sg	masc	-	(20
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Weisen	NN	*	weise	sg	masc	-	20)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	!	$.	*	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nie	ADV	(VROOT(PSEUDO(NP*	nie	sg	fem	-	(19
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	die	ART	*	der	sg	fem	-	(21
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Wahrheit	NN	*	wahrheit	sg	fem	-	21)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	zu	APPR	(PP*	zu	-	-	-	19)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Verhehlen	NN	*))	verhehlen	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	für	APPR	(VROOT(PSEUDO(VP(PP*	für	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	sie	PPER	*)	sie	pl	*	-	(20)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	alles	PIS	(NP*	alle	sg	neut	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	auf	APPR	(PP*	auf	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	das	ART	*	der	sg	neut	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Spiel	NN	*))	spiel	sg	neut	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	Zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	setzen	VVINF	*))	setzen	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Leib	NN	(VROOT(PSEUDO(CNP*	leib	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	und	KON	*	und	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Leben	NN	*)	leben	sg	neut	-	(22)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Gut	ADJD	(VROOT(PSEUDO(S*	gut	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	und	KON	*	und	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Blut	NN	*)	blut	-	-	-	(23)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ja	PTKANT	*	ja	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	ja	ADV	(VROOT(PSEUDO(S*)	ja	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	wanns	ADV	(VROOT(PSEUDO(CS(S(VP(AP*	wanns	-	-	-	(19)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	nötig	ADJD	*))	nötig	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	ist	VAFIN	*)	sein	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	und	KON	*	und	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	nutzt	VVFIN	*)	nutzen	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Von	APPR	(VROOT(PSEUDO(S(PP*	von	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	nun	ADV	*)	nun	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	An	APPR	(PP*	an	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	darf	VMFIN	(CNP(NP(S*	dürfen	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	ich	PPER	*	ich	sg	*	-	(7)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	hoffen	VVINF	*	hoffen	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	einen	PIS	(NP*	ein	sg	masc	-	(24
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	meiner	PPOSAT	(NP*	mein	pl	masc	-	(7)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	Titel	NN	*)))	titel	pl	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	24)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	Verbesserer	NN	(NP*	verbesserer	pl	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	der	ART	(NP*	der	sg	fem	-	(25
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	Welt	NN	*)))	welt	sg	fem	-	25)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	und	KON	*	und	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	des	ART	(NP*	der	sg	masc	-	(26
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	Gesetzes	NN	*)))	gesetz	sg	masc	-	26)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	Mit	APPR	(VP(PP*	mit	*	*	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	19	Recht	NN	*)	recht	sg	neut	-	(27)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	20	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	21	führen	VVINF	*)))	führen	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	22	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Traun	NE	(VROOT(PSEUDO(NP*	traun	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	ein	ART	(NP*	ein	sg	masc	-	(24
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	schöner	ADJA	*	schön	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Titel	NN	*))	titel	sg	masc	-	24)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Doch	KON	*	doch	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Sultan	NE	*	sultan	sg	neut	-	(7)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	eh	XY	*	eh	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	ich	PPER	*	ich	sg	*	-	(1)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	mich	PRF	*	mich	sg	-	-	(1)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	dir	PPER	*	dir	sg	*	-	(7)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	ganz	ADV	*	ganz	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	vertraue	VVFIN	*	vertrauen	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	Erlaubst	NN	*	erlaubst	sg	-	-	(28
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	du	PPER	*	du	sg	*	-	(7)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	wohl	ADV	*	wohl	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	dir	PPER	*	dir	sg	*	-	(7)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	ein	ART	*	ein	sg	neut	-	(29
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	Geschichtchen	NN	*	geschichtchen	sg	neut	-	29)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	zu	APPR	*	zu	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	19	Erzählen	NN	*	erzählen	-	-	-	28)

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Warum	PWAV	*	warum	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	das	PDS	*	der	sg	neut	-	(28)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	?	$.	*	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(7)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	bin	VAFIN	*	sein	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	stets	ADV	(VP*	stets	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Ein	ART	(NP*	ein	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Freund	NN	*)	freund	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	gewesen	VAPP	*)	sein	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	von	APPR	(PP*	von	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	Geschichtchen	NN	*)	geschichtchen	pl	neut	-	(30)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	gut	ADJD	*	gut	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	Erzählt	VVFIN	*)	erzählen	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ja	PTKANT	(VROOT(PSEUDO(CS(S*	ja	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	gut	ADJD	(VP*	gut	-	-	-	(31
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	erzählen	VVINF	*))	erzählen	-	-	-	31)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	das	PDS	(S*	der	sg	neut	-	(31)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	nun	ADV	*	nun	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	Wohl	ADV	(AVP*	wohl	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	eben	ADV	*)	eben	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	meine	PPOSAT	(NP*	mein	sg	fem	-	(1)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	Sache	NN	*)	sache	sg	fem	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	nicht	PTKNEG	*))	nicht	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Schon	ADV	(VROOT(PSEUDO(VP(AVP*	schon	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	wieder	ADV	*	wieder	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	So	ADV	*)	so	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	stolz	ADJD	*	stolz	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	bescheiden	VVINF	*)	bescheiden	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Mach	NE	*	mach	pl	*	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	erzähl	ADJD	*	erzähl	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	'	$(	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	erzähle	VVIMP	*	erzählen	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	!	$.	*	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Vor	APPR	*	vor	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	grauen	ADJA	*	grau	pl	neut	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Jahren	NN	*	jahr	pl	neut	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	lebt	VVFIN	*	leben	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	'	$(	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	ein	ART	*	ein	sg	masc	-	(32
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	Mann	NN	*	mann	sg	masc	-	32)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	in	APPR	*	in	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	Osten	NN	*	osten	sg	masc	-	(33)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	Der	PRELS	*	der	sg	masc	-	(32)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	einen	ART	*	ein	sg	masc	-	(34
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	Ring	NN	*	ring	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	von	APPR	*	von	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	unschätzbarem	ADJA	*	unschätzbar	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	Wert	NN	*	wert	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	'	$(	*	--	-	-	-	34)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	Aus	APPR	*	aus	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	lieber	ADJA	*	lieber	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	19	Hand	NN	*	hand	sg	fem	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	20	besaß	VVFIN	*	besitzen	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	21	.	$.	*	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(CS(S(NP*	der	sg	masc	-	(35
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Stein	NN	*)	stein	sg	masc	-	35)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	war	VAFIN	*	sein	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	ein	ART	(NP*	ein	sg	masc	-	(36)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Opal	NN	*))	opal	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	der	ART	(S(NP*	der	sg	masc	-	(36)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	hundert	CARD	*	hundert	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	schöne	ADJA	*	schön	pl	fem	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	Farben	NN	*)	farbe	pl	fem	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	spielte	VVFIN	*	spielen	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	Und	KON	(S*	und	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	hatte	VAFIN	*	haben	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	die	ART	(NP*	der	sg	fem	-	(37
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	geheime	ADJA	*	geheim	sg	fem	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	Kraft	NN	*)	kraft	sg	fem	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	vor	APPR	(VP(PP*	vor	-	-	-	(38
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	19	Gott	NN	(CNP*	gott	sg	masc	-	37)|38)|(39)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	20	Und	KON	*	und	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	21	Menschen	NN	*))	mensch	sg	masc	-	(18)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	22	angenehm	ADJD	*	angenehm	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	23	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	24	machen	VVINF	*))	machen	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	25	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	26	wer	PWS	(S*	wer	sg	*	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	27	In	APPR	(PP*	in	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	28	dieser	PDAT	*	dieser	sg	fem	-	(38
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	29	Zuversicht	NN	*)	zuversicht	sg	fem	-	38)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	30	ihn	PPER	*	ihn	sg	masc	-	(35)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	31	trug	VVFIN	*))))	tragen	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	32	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Wunder	NN	*	wunder	sg	neut	-	(40)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Daß	KOUS	(S*	daß	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	ihn	PPER	*	ihn	sg	masc	-	(35)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	der	ART	(NP*	der	sg	masc	-	(32
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	Mann	NN	*)	mann	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	in	APPR	(PP*	in	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	Osten	NN	*)	osten	pl	masc	-	32)|(33)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	darum	PROAV	*	darum	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	nie	ADV	*	nie	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	Vom	APPRART	(PP*	von	sg	neut	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	Finger	NN	*)	finger	*	*	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	ließ	VVFIN	*	lassen	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	und	KON	(S*	und	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	die	ART	(NP*	der	sg	fem	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	Verfügung	NN	*)	verfügung	sg	fem	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	traf	VVFIN	*	treffen	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	19	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	20	Auf	APPR	(S*	auf	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	21	ewig	ADJD	*	ewig	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	22	ihn	PPER	*	ihn	sg	masc	-	(35)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	23	bei	APPR	(PP*	bei	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	24	seinem	PPOSAT	*	sein	sg	neut	-	(41|(32)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	25	Hause	NN	*)	haus	sg	neut	-	41)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	26	zu	APPR	(PP*	zu	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	27	Erhalten	NN	*)))))	erhalten	sg	neut	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	28	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nämlich	ADV	(VROOT(PSEUDO(AVP*	nämlich	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	so	ADV	*)	so	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Er	PPER	*	er	sg	masc	-	(32)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	ließ	VVFIN	*	lassen	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	den	ART	*	der	sg	masc	-	(34
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Ring	NN	*	ring	sg	masc	-	34)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Von	APPR	*	von	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	seinen	PPOSAT	*	sein	pl	fem	-	(42|(32)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	Söhnen	NN	*	söhnen	pl	fem	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	dem	ART	*	der	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	geliebtesten	ADJA	*	geliebt	-	-	-	42)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	Und	KON	*	und	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	setzte	VVFIN	*	setzen	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	fest	PTKVZ	*	fest	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	daß	KOUS	*	daß	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	dieser	PDS	*	dieser	sg	masc	-	(42)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	wiederum	ADV	*	wiederum	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	Den	ART	*	den	sg	masc	-	(34
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	Ring	NN	*	ring	sg	masc	-	34)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	19	von	APPR	*	von	-	-	-	(43
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	20	seinen	PPOSAT	*	sein	pl	fem	-	(42)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	21	Söhnen	NN	*	söhnen	pl	fem	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	22	dem	ART	*	der	sg	masc	-	43)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	23	vermache	ADJA	*	vermachen	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	24	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	25	Der	PRELS	*	der	sg	masc	-	(43)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	26	ihm	PPER	*	ihm	sg	masc	-	(42)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	27	der	ART	*	der	sg	fem	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	28	liebste	ADJA	*	lieb	sg	fem	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	29	sei	VAFIN	*	sein	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	30	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	31	und	KON	*	und	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	32	stets	ADV	*	stets	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	33	der	ART	*	der	sg	masc	-	(44
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	34	liebste	ADJA	*	lieb	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	35	,	$,	*	--	-	-	-	44)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	36	Ohn	NE	*	ohn	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	37	'	$(	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	38	Ansehn	NN	*	ansehn	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	39	der	ART	*	der	sg	masc	-	(45
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	40	Geburt	NN	*	geburt	sg	-	-	45)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	41	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	42	in	APPR	*	in	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	43	Kraft	NN	*	kraft	sg	fem	-	(46
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	44	allein	ADV	*	allein	-	-	-	46)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	45	Des	ART	*	der	-	-	-	(35
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	46	Rings	NN	*	ring	-	-	-	35)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	47	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	48	das	ART	*	der	sg	neut	-	(47
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	49	Haupt	NN	*	haupt	sg	neut	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	50	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	51	der	ART	*	der	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	52	Fürst	NN	*	fürst	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	53	des	ART	*	der	sg	neut	-	(41
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	54	Hauses	NN	*	haus	sg	neut	-	47)|41)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	55	werde	VAFIN	*	werden	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	56	.	$.	*	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Versteh	NE	*	versteh	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	mich	PPER	*	mich	sg	*	-	(1)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Sultan	NN	*	sultan	sg	*	-	(7)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(7)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	versteh	VVFIN	*	verstehn	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	dich	PRF	*)	dich	sg	-	-	(1)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Weiter	ADV	(VROOT(PSEUDO(S*)	weiter	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	So	ADV	(VROOT(PSEUDO(S*	so	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	kam	VVFIN	*	kommen	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	nun	ADV	*	nun	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	dieser	PDAT	(NP*	dieser	sg	masc	-	(34
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Ring	NN	*)	ring	sg	masc	-	34)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	von	APPR	(S(PP*	von	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	Sohn	NN	*)	sohn	sg	masc	-	(44)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	zu	APPR	(AP(PP*	zu	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	Sohn	NN	*	sohn	sg	masc	-	(44)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	Auf	APPR	(S(PP*	auf	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	einen	ART	*	ein	sg	masc	-	(48
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	Vater	NN	*)	vater	sg	masc	-	48)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	endlich	ADV	*	endlich	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	von	APPR	(PP*	von	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	drei	CARD	(AP(NP*	drei	-	-	-	(49
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	Söhnen	NN	*	söhne	pl	fem	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	;	$.	*)	--	-	-	-	49)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	19	Die	ART	*	der	-	-	-	(49)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	20	alle	PIAT	(NM*	aller	pl	*	-	(49
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	21	drei	CARD	*)))	drei	-	-	-	49)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	22	ihm	PPER	*	ihm	sg	masc	-	(48)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	23	gleich	ADV	(AP*	gleich	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	24	gehorsam	ADJD	*)	gehorsam	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	25	waren	VAFIN	*))	sein	pl	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	26	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	27	Die	ART	*	der	pl	*	-	(49)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	28	alle	PIAT	(NM*	aller	pl	*	-	(49
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	29	drei	CARD	*)))	drei	-	-	-	49)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	30	er	PPER	*	er	sg	masc	-	(48)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	31	folglich	ADV	(VP*	folglich	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	32	gleich	ADV	*	gleich	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	33	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	34	lieben	VVINF	*))	lieben	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	35	Sich	PRF	(VP*	sich	sg	-	-	(48)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	36	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	37	entbrechen	VVINF	*)	entbrechen	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	38	konnte	VMFIN	*)	können	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	39	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nur	ADV	(VROOT(PSEUDO(S(PP*	nur	-	-	-	(50
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	von	APPR	*	von	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Zeit	NN	*	zeit	sg	fem	-	50)|(51)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Zu	APPR	(PP*	zu	sg	fem	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Zeit	NN	*))	zeit	sg	fem	-	(51)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	schien	VVFIN	*	scheinen	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	ihm	PPER	*	ihm	sg	masc	-	(48)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	bald	ADV	*	bald	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	der	PDS	(NP*	der	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	bald	ADV	(AP(S*	bald	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	dieser	PDS	(NP*	dieser	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	bald	ADV	(CS(S*	bald	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	Der	ART	(NP*	der	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	dritte	ADJA	*))	dritter	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	–	KON	*	–	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	so	ADV	(CS(S(AVP*	so	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	19	wie	KOKOM	(NP*	wie	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	20	jeder	PIS	*))	jeder	sg	masc	-	(49)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	21	sich	PRF	*	sich	sg	-	-	(49)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	22	mit	APPR	(PP*	mit	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	23	ihm	PPER	*)	ihm	sg	masc	-	(48)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	24	Allein	ADV	*	allein	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	25	befand	VVFIN	*)	befinden	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	26	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	27	und	KON	*	und	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	28	sein	PPOSAT	(S(NP*	sein	-	-	-	(48)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	29	ergießend	ADJD	*	ergießend	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	30	Herz	NN	*)	herz	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	31	Die	ART	(NP*	der	pl	masc	-	(52
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	32	andern	PIS	*))))))	anderer	pl	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	33	zwei	CARD	*))	zwei	-	-	-	52)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	34	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	35	teilten	VVFIN	*)	teilen	pl	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	36	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	37	–	XY	*	–	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	38	würdiger	ADJA	*	würdig	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	39	Des	ART	(NP*	der	sg	masc	-	(34
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	40	Ringes	NN	*	ring	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	41	;	$.	*)	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	42	den	ART	*	der	sg	masc	-	(34)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	43	er	PPER	(S(VP*	er	sg	masc	-	(48)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	44	denn	ADV	(S*	denn	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	45	auch	ADV	(NP*	auch	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	46	einem	ART	*	ein	sg	neut	-	(49
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	47	jeden	PIAT	(AP*	jeder	sg	masc	-	49)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	48	Die	ART	(AP*	der	sg	fem	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	49	fromme	ADJA	*))	fromm	sg	fem	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	50	Schwachheit	NN	*)	schwachheit	sg	fem	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	51	hatte	VAFIN	*)	haben	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	52	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	53	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	54	versprechen	VVINF	*))	versprechen	-	-	-	34)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	55	Das	PDS	(AP(AVP(S*	der	sg	neut	-	(50)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	56	ging	VVFIN	*	gehen	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	57	nun	ADV	*	nun	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	58	so	ADV	*)	so	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	59	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	60	so	ADV	*)	so	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	61	lang	ADJD	*)	lang	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	62	es	PPER	*	es	sg	neut	-	(50)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	63	ging	VVFIN	*)	gehen	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	64	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Allein	ADV	(S*	allein	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Es	PPER	*	es	sg	neut	-	(48)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	kam	VVFIN	*	kommen	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	zum	APPRART	(PP*	zu	sg	neut	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Sterben	NN	*))	sterben	sg	neut	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	und	KON	*	und	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	der	ART	(NP*	der	sg	masc	-	(48
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	gute	ADJA	*	gut	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	Vater	NN	*	vater	sg	masc	-	48)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	Kömmt	NE	*	kömmt	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	in	APPR	(PP*	in	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	Verlegenheit	NN	*))	verlegenheit	sg	fem	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Es	PPER	(VROOT(PSEUDO(S*	es	sg	neut	-	(53)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	schmerzt	VVFIN	*	schmerzen	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	ihn	PPER	*	ihn	sg	masc	-	(48)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	zwei	CARD	(AP*	zwei	-	-	-	(113)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Von	APPR	(PP*	von	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	seinen	PPOSAT	*	sein	pl	fem	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	Söhnen	NN	*	söhnen	pl	fem	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	die	PRELS	(S*	der	pl	fem	-	(52)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	sich	PRF	*	sich	pl	-	-	(52)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	auf	APPR	(PP*	auf	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	sein	PPOSAT	*	sein	sg	neut	-	(54
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	Wort	NN	*)	wort	sg	neut	-	54)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	Verlassen	NN	*	verlassen	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	so	ADV	(VP*	so	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	kränken	VVINF	*))))))	kränken	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	19	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Was	PWS	*	was	sg	neut	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	zu	PTKZU	*	zu	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	tun	VVINF	*	tun	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	?	$.	*	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Er	PPER	*	er	sg	masc	-	(48)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	sendet	VVFIN	*	senden	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	in	APPR	*	in	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	geheim	ADJD	*	geheim	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	zu	APPR	*	zu	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	einem	ART	*	ein	sg	masc	-	(55
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	Künstler	NN	*	künstler	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	55)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	Bei	APPR	*	bei	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	dem	PRELS	*	der	sg	masc	-	(55)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	er	PPER	*	er	sg	masc	-	(48)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	nach	APPR	*	nach	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	dem	ART	*	der	sg	neut	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	Muster	NN	*	muster	sg	neut	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	seines	PPOSAT	*	sein	sg	neut	-	(34|(48)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	Ringes	NN	*	ring	sg	neut	-	34)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	19	Zwei	CARD	*	zwei	-	-	-	(56
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	20	andere	PIS	*	anderer	pl	*	-	56)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	21	bestellt	VVFIN	*	bestellen	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	22	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	23	und	KON	*	und	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	24	weder	KON	*	weder	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	25	Kosten	NN	*	kosten	pl	*	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	26	Noch	KON	*	noch	pl	*	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	27	Mühe	NN	*	mühe	sg	fem	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	28	sparen	VVINF	*	sparen	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	29	heißt	VVFIN	*	heißen	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	30	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	31	sie	PPER	*	sie	sg	fem	-	(57|(56)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	32	jenem	PDAT	*	jener	sg	masc	-	(34)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	33	gleich	ADV	*	gleich	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	34	,	$,	*	--	-	-	-	57)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	35	Vollkommen	NN	*	vollkommen	pl	neut	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	36	gleich	ADV	*	gleich	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	37	zu	PTKZU	*	zu	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	38	machen	VVINF	*	machen	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	39	.	$.	*	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Das	PDS	(VROOT(PSEUDO(S*	der	sg	neut	-	(57)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	gelingt	VVFIN	*	gelingen	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Dem	ART	(NP*	der	sg	neut	-	(55
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Künstler	NN	*))	künstler	*	*	-	55)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Da	KOUS	*	da	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	er	PPER	*	er	sg	masc	-	(55)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	ihm	PPER	*	ihm	sg	masc	-	(48)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	die	ART	*	der	sg	fem	-	(58
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Ringe	NN	*	ring	sg	fem	-	58)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	bringt	VVFIN	*	bringen	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	Kann	NE	*	können	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	selbst	ADV	*	selbst	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	der	ART	*	der	sg	masc	-	(48
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	Vater	NN	*	vater	sg	masc	-	48)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	seinen	PPOSAT	*	sein	sg	masc	-	(34|(48)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	Musterring	NN	*	musterring	sg	masc	-	34)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	Nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	unterscheiden	VVINF	*	unterscheiden	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	.	$.	*	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Froh	ADJD	(VROOT(PSEUDO(S(CAP*	froh	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	und	KON	*	und	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	freudig	ADJD	*)	freudig	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	ruft	VVFIN	*	rufen	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Er	PPER	(NP*	er	sg	masc	-	(48)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	seine	PPOSAT	(NP*	sein	sg	fem	-	(49|(48)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	Söhne	NN	*))	sohn	sg	fem	-	49)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	jeden	PIAT	(S(NP*	jeder	sg	masc	-	(49)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	ins	APPRART	(AP(PP*)	in	sg	neut	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	besondre	ADJA	*))	besondre	sg	neut	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	Gibt	NE	(NP*	geben	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	jedem	PIAT	(NP*	jeder	sg	masc	-	(49)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	ins	APPRART	(AP(PP*)	in	sg	neut	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	besondre	ADJA	*)	besondre	sg	neut	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	seinen	PPOSAT	(NP*	sein	sg	masc	-	(48)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	Segen	NN	*)))	segen	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	19	–	$.	*	–	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	20	Und	KON	(CS(CO(NP*	und	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	21	seinen	PPOSAT	*	sein	sg	masc	-	(58|(49)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	22	Ring	NN	*)	ring	sg	masc	-	58)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	23	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	24	–	NN	*)	–	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	25	und	KON	*	und	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	26	stirbt	VVFIN	*)))	sterben	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	27	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Du	PPER	(NP*	du	sg	*	-	(7)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	hörst	ADV	*	hörst	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	doch	ADV	*	doch	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Sultan	NN	*)	sultan	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*))	saladin	-	-	-	(7)

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	der	ART	(VROOT(PSEUDO(S*	der	sg	masc	-	(7)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	sich	PRF	*	sich	sg	-	-	(7)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	betroffen	ADJD	*	betreffen	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	von	APPR	(VP(PP*	von	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	ihm	PPER	*)	ihm	sg	masc	-	(1)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	gewandt	VVPP	*))	wenden	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(7)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	hör	VVFIN	*	hör	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	ich	PPER	(S*	ich	sg	*	-	(7)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	höre	VVFIN	*))	hören	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Komm	NN	(NP*	komm	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	mit	APPR	(PP*	mit	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	deinem	PPOSAT	*	dein	sg	masc	-	(29|(1)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Märchen	NN	*))	märchen	sg	masc	-	29)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Nur	ADV	(AVP*	nur	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	bald	ADV	*)	bald	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	zu	APPR	(PP*	zu	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	Ende	NN	*)	ende	sg	neut	-	(59)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Wirds	NN	*	wird	-	-	-	(59)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(1)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	bin	VAFIN	*	sein	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	zu	APPR	(PP*	zu	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Ende	NN	*))	ende	sg	neut	-	(59)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Denn	KON	(VROOT(PSEUDO(S*	denn	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	was	PWS	(S*	was	sg	neut	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	noch	ADV	*	noch	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	folgt	VVFIN	*)	folgen	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	versteht	VVFIN	*	verstehen	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	sich	PRF	*	sich	sg	-	-	(18)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	ja	ADV	(PP*	ja	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	von	APPR	*	von	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	selbst	ADV	*))	selbst	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Kaum	ADV	*	kaum	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	war	VAFIN	*	sein	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	der	ART	*	der	sg	masc	-	(48
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Vater	NN	*	vater	sg	masc	-	48)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	tot	ADJD	*	tot	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	so	ADV	*	so	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	kömmt	VVFIN	*	kömmen	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	ein	ART	*	ein	sg	masc	-	(49
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	jeder	PIAT	*	jeder	sg	masc	-	49)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	Mit	APPR	*	mit	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	seinem	PPOSAT	*	sein	sg	masc	-	(58|(49)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	Ring	NN	*	ring	sg	masc	-	58)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	'	$(	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	und	KON	*	und	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	jeder	PIS	*	jeder	sg	masc	-	(49)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	will	VMFIN	*	wollen	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	19	der	ART	*	der	sg	masc	-	(47
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	20	Fürst	NN	*	fürst	sg	masc	-	47)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	21	Des	NE	*	der	sg	neut	-	(41
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	22	Hauses	NE	*	haus	sg	neut	-	41)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	23	sein	VAINF	*	sein	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	24	.	$.	*	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Man	PIS	(VROOT(PSEUDO(S*	man	sg	*	-	(49)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	untersucht	VVFIN	*	untersuchen	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	man	PIS	(S*	man	sg	*	-	(49)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	zankt	VVFIN	*	zanken	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	Man	PIS	*	man	sg	*	-	(49)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	klagt	VVFIN	*))	klagen	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Umsonst	ADV	*	umsonst	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	der	ART	*	der	sg	masc	-	(34
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	rechte	ADJA	*	rechter	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Ring	NN	*	ring	sg	masc	-	34)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	war	VAFIN	*	sein	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	Erweislich	ADJD	*	erweislich	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	–	XY	*	–	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	Nach	APPR	*	nach	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	einer	ART	*	ein	sg	fem	-	(60
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	Pause	NN	*	pause	sg	fem	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	in	APPR	*	in	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	welcher	PRELS	*	welcher	sg	fem	-	(60)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	er	PPER	*	er	sg	masc	-	(1)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	des	ART	*	der	sg	neut	-	(7
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	Sultans	NN	*	sultan	sg	neut	-	7)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	19	Antwort	NN	*	antwort	sg	fem	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	20	erwartet	VVPP	*	erwarten	-	-	-	60)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	21	.	$.	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	22	Fast	ADV	*	fast	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	23	so	ADV	*	so	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	24	unerweislich	ADJD	*	unerweislich	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	25	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	26	als	APPR	*	als	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	27	Uns	NN	*	uns	pl	*	-	(17)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	28	itzt	VVFIN	*	itzen	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	29	–	NN	*	–	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	30	der	ART	*	der	sg	fem	-	(61
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	31	rechte	ADJA	*	rechter	sg	fem	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	32	Glaube	NN	*	glaube	sg	*	-	61)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	33	.	$.	*	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nach	APPR	(VROOT(PSEUDO(PP*	nach	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	einer	ART	*	ein	sg	fem	-	(60
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Pause	NN	*	pause	sg	fem	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	in	APPR	(S(PP*	in	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	welcher	PRELS	*)	welcher	sg	fem	-	(60)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	er	PPER	*	er	sg	masc	-	(1)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	des	ART	(NP*	der	sg	neut	-	(7
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	Sultans	NN	*	sultan	sg	neut	-	7)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	Antwort	NN	*)	antwort	sg	fem	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	erwartet	VVPP	*))	erwarten	-	-	-	60)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wie	PWAV	(VROOT(PSEUDO*	wie	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	das	PDS	(VROOT(PSEUDO(S*	der	sg	neut	-	(29)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	soll	VMFIN	*	sollen	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Die	ART	(VP(NP*	der	sg	fem	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Antwort	NN	*)	antwort	sg	fem	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	sein	VAINF	*	sein	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	auf	APPR	(PP*	auf	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	meine	PPOSAT	*	mein	sg	fem	-	(62|(7)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	Frage	NN	*)))	frage	sg	fem	-	62)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	.	$.	(VROOT(PSEUDO*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Soll	VMFIN	(VROOT(PSEUDO(S*	sollen	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Mich	PPER	*	mich	sg	*	-	(1)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	bloß	ADV	(VP*	bloß	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	entschuldigen	VVINF	*	entschuldigen	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	wenn	KOUS	(S*	wenn	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	ich	PPER	*	ich	sg	*	-	(1)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	die	ART	(NP*	der	sg	fem	-	(61
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	Ringe	NN	*	ring	sg	fem	-	61)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	Mir	NE	*)	sich	sg	*	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	getrau	ADJD	*	getrau	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	zu	PTKZU	(VP(VZ*	zu	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	unterscheiden	VVINF	*)	unterscheiden	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	die	PRELS	(S*	der	sg	fem	-	(61)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	Der	ART	(VP(NP*	der	sg	masc	-	(39
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	Vater	NN	*)	vater	sg	masc	-	39)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	19	in	APPR	(PP*	in	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	20	der	ART	*	der	sg	fem	-	(63
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	21	Absicht	NN	*)	absicht	sg	fem	-	63)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	22	machen	VVINF	*)	machen	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	23	ließ	VVFIN	*	lassen	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	24	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	25	Damit	KOUS	(S*	damit	sg	-	-	(63
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	26	sie	PPER	(VP*	sie	sg	fem	-	(61)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	27	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	28	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	29	unterscheiden	VVINF	*))	unterscheiden	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	30	wären	VAFIN	*))))))	sein	pl	-	-	63)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	31	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Die	ART	(VROOT(PSEUDO(NP*	der	sg	fem	-	(61
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ringe	NN	*)	ring	sg	fem	-	61)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Spiele	NN	(NP*	spiel	pl	neut	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	nicht	PTKNEG	(PP*	nicht	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	mit	APPR	*	mit	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	mir	PPER	*))	sich	sg	*	-	(7)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ich	PPER	(S*	ich	sg	*	-	(7)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	dächte	VVFIN	*	dächen	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Daß	KOUS	(S*	daß	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	die	ART	(NP*	der	pl	fem	-	(64
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	Religionen	NN	*	religion	pl	fem	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	die	PRELS	(S*	der	sg	fem	-	(64)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	ich	PPER	*	ich	sg	*	-	(7)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	dir	PPER	*	dir	sg	*	-	64)|(1)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	Genannt	NN	*))	nennen	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	doch	ADV	(VP*	doch	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	wohl	ADV	*	wohl	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	unterscheiden	VVINF	*))	unterscheiden	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	wären	VAFIN	*))	sein	pl	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Bis	APPR	(VROOT(PSEUDO(PP*	bis	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	auf	APPR	*	auf	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	die	ART	*	der	sg	fem	-	(65
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Kleidung	NN	*)	kleidung	sg	fem	-	65)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	bis	APPR	(PP*	bis	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	auf	APPR	*	auf	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	Speis	NN	(CNP*	speise	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	und	KON	*	und	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	Trank	NN	*))	trank	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	nur	ADV	*	nur	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	von	APPR	(PP*	von	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Seiten	NN	*	seite	pl	fem	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	ihrer	PPOSAT	(NP*	ihr	sg	fem	-	(66|(64)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Gründe	NN	*))	grund	sg	-	-	66)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	nicht	PTKNEG	*)	nicht	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Denn	KON	(S*	denn	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	gründen	VVFIN	*	gründen	pl	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	alle	PIS	*)	alle	pl	*	-	(64)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	sich	PRF	(S*	sich	pl	-	-	(64)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	auf	APPR	(PP*	auf	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	Geschichte	NN	*))	geschichte	sg	fem	-	(67)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Geschrieben	VVPP	(VROOT(PSEUDO(S(CVP*	geschrieben	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	oder	KON	*	oder	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	überliefert	VVPP	*))	überliefern	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Und	KON	*	und	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Geschichte	NN	(S*	geschichte	sg	fem	-	(67)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	muß	VMFIN	*	müssen	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	doch	ADV	*	doch	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	wohl	ADV	*	wohl	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	allein	ADV	*	allein	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	auf	APPR	(VP(VP(PP*	auf	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	Treu	NN	(CNP*	treu	-	-	-	(68)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	Und	KON	*	und	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	Glauben	NN	*))	glaube	pl	fem	-	(61)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	angenommen	VVPP	*)	annehmen	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	werden	VAINF	*))	werden	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Nun	ADV	*	nun	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	wessen	VVFIN	*	wessen	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Treu	NN	*	treu	-	-	-	(69)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	und	KON	*	und	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Glauben	NN	(S*	glaube	sg	masc	-	(61)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	zieht	VVFIN	*	ziehen	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	man	PIS	*	man	sg	*	-	(18)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	denn	ADV	*	denn	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	Am	APPRART	(CPP(PP*	an	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	wenigsten	PIS	*)	wenig	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	in	APPR	(PP*	in	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	Zweifel	NN	*)))	zweifel	sg	neut	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Doch	KON	*	doch	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	der	ART	*	der	sg	fem	-	(70
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Seinen	PPOSS	*	sein	sg	fem	-	70)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	?	$.	*	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Doch	KON	(VROOT(PSEUDO(S*	doch	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	deren	PRELAT	(NP*	der	*	*	-	(70
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Blut	NN	*)	blut	sg	neut	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	wir	PPER	*	wir	pl	*	-	(18)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	sind	VAFIN	*)	sein	pl	-	-	70)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	doch	KON	(VROOT(PSEUDO(S*	doch	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	deren	PDS	(NP*	der	pl	masc	-	(70
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	die	PRELS	(S*	der	sg	fem	-	70)|(70)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Von	APPR	(PP*	von	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Kindheit	NN	*)	kindheit	sg	-	-	(71)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	an	APPR	(NP(PP*	an	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	uns	PPER	*)	uns	pl	*	-	(18)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	Proben	NN	*))))	probe	pl	fem	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	ihrer	PPOSAT	(NP*	ihr	sg	fem	-	(70)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	Liebe	NN	*	liebe	sg	fem	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	Gegeben	NN	*)	gegeben	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	die	ART	(VROOT(PSEUDO(S*	der	sg	fem	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	uns	PPER	*	uns	pl	*	-	(18)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	nie	ADV	*	nie	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	getäuscht	VVPP	*	täuschen	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	als	KOKOM	(S*	als	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	wo	PWAV	(VP*	wo	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	Getäuscht	NN	*	getäuscht	sg	neut	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	werden	VAINF	*))	werden	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	uns	PPER	*	uns	pl	*	-	(18)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	heilsamer	ADJD	*	heilsam	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	war	VAFIN	*))	sein	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Wie	PWAV	*	wie	-	-	-	(72
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	kann	VMFIN	*	können	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(1)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	meinen	PPOSAT	*	mein	pl	masc	-	(73|(1)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Vätern	NN	*	Vater	pl	masc	-	73)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	weniger	ADV	*	weniger	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	Als	KOUS	*	als	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	du	PPER	*	du	sg	*	-	(7)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	den	ART	*	der	sg	masc	-	(74
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	deinen	PPOSAT	*	dein	sg	masc	-	74)|(7)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	glauben	VVINF	*	glauben	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	?	$.	*	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Oder	KON	(VROOT(PSEUDO(VP(AP*	oder	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	umgekehrt	ADJD	*))	umgekehrt	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Kann	VMFIN	(S*	können	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(1)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	von	APPR	(VP(PP*	von	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	dir	PPER	*)	dir	sg	*	-	(7)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	verlangen	VVINF	*))	verlangen	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	daß	KOUS	(S*	daß	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	du	PPER	*	du	sg	*	-	(7)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	deine	PPOSAT	(VP(NP*	dein	pl	fem	-	(112)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	Vorfahren	NN	*)	vorfahr	pl	fem	-	72)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	Zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	widersprechen	VVINF	*)))	widersprechen	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Oder	KON	(VROOT(PSEUDO(VP(AP*	oder	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	umgekehrt	ADJD	*))	umgekehrt	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Das	ART	(VROOT(PSEUDO(S(NP*	der	sg	neut	-	(72
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	nämliche	ADJA	*)	nämlich	sg	neut	-	72)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	gilt	VVFIN	*	gelten	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	von	APPR	(PP*	von	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	den	ART	*	der	pl	*	-	(75
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Christen	NN	*))	christ	pl	*	(MISC*)	75)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	?	$.	*	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*))	–	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	(	$(	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Bei	APPR	*	bei	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	dem	ART	*	der	sg	neut	-	(76
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Lebendigen	NN	*	lebendige	sg	neut	-	76)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	!	$.	*	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(S(NP*	der	sg	masc	-	(1
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Mann	NN	*)	mann	sg	masc	-	1)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	hat	VAFIN	*	haben	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Recht	NN	*)	recht	sg	neut	-	(27)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	*	ich	sg	*	-	(7)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	muß	VMFIN	*	müssen	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	verstummen	VVINF	*	verstummen	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	.	$.	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	)	$(	*	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Laß	NN	*	lassen	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	auf	APPR	*	auf	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	unsre	ADJA	*	unsr	sg	fem	-	(58|(17)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Ring	NN	*	ring	sg	fem	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	'	$(	*	--	-	-	-	58)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Uns	NE	*	uns	-	-	-	(17)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	wieder	ADV	*	wieder	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	kommen	VVINF	*	kommen	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	.	$.	*	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wie	PWAV	(VROOT(PSEUDO(S(VP*	wie	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	gesagt	VVPP	*)	sagen	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	:	$.	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	die	ART	(NP*	der	sg	fem	-	(49
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Söhne	NN	*	sohn	sg	fem	-	49)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Verklagten	NN	*)	verklagter	pl	*	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	sich	PRF	*	sich	sg	-	-	(49)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	und	KON	(S*	und	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	jeder	PIS	*	jeder	sg	fem	-	(49)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	schwur	VVFIN	*	schwur	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	dem	ART	(NP*	der	sg	masc	-	(77
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	Richter	NN	*)	richter	sg	masc	-	77)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	Unmittelbar	ADJD	(VP(AP*	unmittelbar	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	aus	APPR	(PP*	aus	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	seines	PPOSAT	*	sein	sg	masc	-	(48|(49)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	Vaters	NN	*	vater	sg	masc	-	48)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	Hand	NN	(NP*	hand	*	*	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	19	Den	NE	(MPN*	der	*	*	-	(58
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	20	Ring	NE	*))))	ring	sg	*	-	58)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	21	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	22	haben	VAINF	*))))	haben	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	23	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Wie	NN	(S*	wie	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	auch	ADV	*	auch	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	wahr	PTKVZ	*)	wahr	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Nachdem	KOUS	(S*	nachdem	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Er	PPER	(NP*	er	sg	masc	-	(49)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	von	APPR	(PP*	von	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	ihm	PPER	*)	ihm	sg	masc	-	(48)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	lange	ADV	*	lange	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	das	ART	*	der	sg	neut	-	(54
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	Versprechen	NN	*)	versprechen	sg	neut	-	54)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	schon	ADV	(NP*	schon	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	Gehabt	NN	*)	haben	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	des	ART	(NP*	der	sg	masc	-	(46|(34
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	Ringes	ADJA	*	ring	sg	masc	-	34)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	Vorrecht	NN	*))	vorrecht	-	-	-	46)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	einmal	ADV	(S*	einmal	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	zu	APPR	(PP*	zu	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	Genießen	NN	*))	genießen	sg	neut	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Wie	PWAV	(S*	wie	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	minder	ADV	(AP*	minder	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	wahr	ADJD	*))	wahr	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Der	ART	*	der	sg	masc	-	(48
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Vater	NN	*	vater	sg	masc	-	48)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Beteu	NN	*	beteu	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	'	$(	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	rte	VVFIN	*	ren	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	jeder	PIS	*	jeder	sg	masc	-	(49)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	könne	VMFIN	*	können	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	gegen	APPR	*	gegen	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	ihn	PPER	*	ihn	sg	masc	-	(49)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	Nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	falsch	ADJD	*	falsch	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	gewesen	VAPP	*	sein	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	sein	VAINF	*	sein	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	und	KON	*	und	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	eh	XY	*	eh	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	19	'	$(	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	20	er	PPER	*	er	sg	masc	-	(49)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	21	dieses	PDAT	*	dieser	sg	neut	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	22	Von	APPR	*	von	sg	neut	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	23	ihm	PPER	*	ihm	sg	masc	-	(48)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	24	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	25	von	APPR	*	von	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	26	einem	ART	*	ein	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	27	solchen	PIAT	*	solcher	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	28	lieben	ADJA	*	lieb	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	29	Vater	NN	*	vater	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	30	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	31	Argwohnen	NN	*	argwohnen	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	32	laß	VVFIN	*	lassen	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	33	'	$(	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	34	:	$.	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	35	eh	XY	*	eh	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	36	'	$(	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	37	müß	VMFIN	*	müß	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	38	'	$(	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	39	er	PPER	*	er	sg	masc	-	(49)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	40	seine	PPOSAT	*	sein	pl	neut	-	(52|(49)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	41	Brüder	NN	*	Bruder	pl	neut	-	52)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	42	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	43	So	ADV	*	so	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	44	gern	ADV	*	gern	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	45	er	PPER	*	er	sg	masc	-	(49)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	46	sonst	ADV	*	sonst	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	47	von	APPR	*	von	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	48	ihnen	PPER	*	ihnen	pl	masc	-	(52)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	49	nur	ADV	*	nur	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	50	das	ART	*	der	sg	neut	-	(78
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	51	Beste	NN	*	gut	sg	neut	-	78)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	52	Bereit	ADJD	*	bereit	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	53	zu	PTKZU	*	zu	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	54	glauben	VVINF	*	glauben	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	55	sei	VAFIN	*	sein	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	56	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	57	des	ART	*	der	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	58	falschen	ADJA	*	falsch	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	59	Spiels	NN	*	spiel	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	60	Bezeihen	NN	*	bezeihen	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	61	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	62	und	KON	*	und	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	63	er	PPER	*	er	sg	masc	-	(49)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	64	wolle	VMFIN	*	wollen	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	65	die	ART	*	der	pl	masc	-	(52
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	66	Verräter	NN	*	verräter	pl	masc	-	52)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	67	Schon	ADV	*	schon	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	68	auszufinden	VVIZU	*	ausfinden	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	69	wissen	VVINF	*	wissen	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	70	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	71	sich	PRF	*	sich	sg	-	-	(49)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	72	schon	ADV	*	schon	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	73	rächen	VVINF	*	rächen	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	74	.	$.	*	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	nun	ADV	*	nun	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	der	ART	(NP*	der	sg	masc	-	(77
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Richter	NN	*))	richter	sg	masc	-	77)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Mich	PPER	(S*	mich	sg	*	-	(7)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	verlangt	VVFIN	*	verlangen	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	zu	PTKZU	(VP(VZ*	zu	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	hören	VVINF	*)	hören	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	Was	PWS	(S*	was	sg	neut	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	du	PPER	*	du	sg	*	-	(1)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	den	ART	(VP(NP*	der	sg	masc	-	(77
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	Richter	NN	*)	richter	sg	masc	-	77)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	sagen	VVINF	*))))	sagen	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	lässest	VVFIN	*	lässest	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Sprich	NE	(VROOT(PSEUDO(MPN*	sprich	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*)))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Der	ART	*	der	sg	masc	-	(77
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Richter	NN	*	richter	sg	masc	-	77)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	sprach	VVFIN	*	sprechen	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	:	$.	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	wenn	KOUS	*	wenn	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	ihr	PPER	*	ihr	sg	fem	-	(49)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	mir	PPER	*	sich	sg	*	-	(114)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	nun	ADV	*	nun	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	den	ART	*	der	sg	masc	-	(48
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	Vater	NN	*	vater	sg	masc	-	48)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	Nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	bald	ADV	*	bald	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	zur	APPRART	*	zu	sg	fem	-	(79
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	Stelle	NN	*	stelle	sg	fem	-	79)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	schafft	VVFIN	*	schaffen	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	so	ADV	*	so	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	weis	ADJD	*	weis	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	'	$(	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	19	ich	PPER	*	ich	sg	*	-	(114)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	20	euch	PRF	*	euch	pl	*	-	(49)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	21	Von	APPR	*	von	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	22	meinem	PPOSAT	*	mein	sg	masc	-	(79|(1)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	23	Stuhle	NN	*	stuhle	sg	masc	-	79)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	24	.	$.	*	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Denkt	VVFIN	(VROOT(PSEUDO(S*	denken	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	ihr	PPER	(NP*	ihr	sg	fem	-	(49)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	daß	KOUS	(S*	daß	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	ich	PPER	*	ich	sg	*	-	(114)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Rätsel	NN	*	rätsel	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	Zu	NN	*	zu	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	lösen	VVFIN	*))	lösen	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	da	ADV	*	da	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	bin	VAFIN	*)	sein	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Oder	KON	(VROOT(PSEUDO(S*	oder	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	harret	VVFIN	*	harret	pl	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	ihr	PPER	*	ihr	pl	*	-	(49)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Bis	KOUS	(S*	bis	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	daß	KOUS	*	daß	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	der	ART	(NP*	der	sg	masc	-	(34
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	rechte	ADJA	*	rechter	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	Ring	NN	*)	ring	sg	masc	-	34)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	den	ART	(NP*	der	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	Mund	NN	*)	mund	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	eröffne	VVFIN	*))	eröffnen	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Doch	KON	*	doch	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	halt	ADV	*	halt	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(114)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	höre	VVFIN	*	hören	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	ja	ADV	(NP*	ja	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	der	ART	(S(NP*	der	sg	masc	-	(34
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	rechte	ADJA	*	rechter	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	Ring	NN	*)	ring	sg	masc	-	34)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	Besitzt	VVFIN	*	besitzt	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	die	ART	(VP(NP*	der	sg	fem	-	(37
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	Wunderkraft	NN	*)	wunderkraft	sg	fem	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	beliebt	ADJD	*	beliebt	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	machen	VVINF	*))	machen	-	-	-	37)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	Vor	APPR	(PP*	vor	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	Gott	NN	(CNP*	gott	sg	masc	-	(39)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	und	KON	*	und	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	Menschen	NN	*))))	mensch	sg	masc	-	(18)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	angenehm	ADJD	*)	angenehm	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	19	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Das	PDS	*	der	sg	neut	-	(37)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	muß	VMFIN	*	müssen	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Entscheiden	NN	*	entscheiden	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Denn	KON	*	denn	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	die	ART	*	der	pl	fem	-	(56
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	falschen	ADJA	*	falsch	pl	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Ringe	NN	*	ring	pl	masc	-	56)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	werden	VAFIN	*	werden	pl	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Doch	KON	*	doch	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	das	PDS	*	der	sg	neut	-	(37)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	können	VMFIN	*	können	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	!	$.	*	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Nun	ADV	*	nun	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	wen	PWS	*	wen	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	lieben	VVFIN	*	lieben	pl	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	zwei	CARD	*	zwei	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	Von	APPR	*	von	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	euch	PPER	*	euch	pl	*	-	(49)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	am	PTKA	*	an	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	meisten	PIS	*	meister	*	*	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	?	$.	*	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Macht	NN	(NP*	macht	sg	fem	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	sagt	VVFIN	(S*	sagen	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	an	PTKVZ	*))	an	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ihr	PPER	(VROOT(PSEUDO(S*	ihr	pl	*	-	(49)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	schweigt	VVFIN	*)	schweigen	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Die	ART	(VROOT(PSEUDO(S(NP*	der	sg	fem	-	(58
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ringe	NN	*)	ring	sg	fem	-	58)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	wirken	VVFIN	*	wirken	pl	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	nur	ADV	*	nur	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	zurück	PTKVZ	*)	zurück	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Nach	APPR	(PP*	nach	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	außen	ADV	*))	außen	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Jeder	PIS	(VROOT(PSEUDO(S*	jeder	sg	masc	-	(49)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	liebt	VVFIN	*	lieben	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	sich	PRF	(VP*	sich	sg	-	-	(49)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	selber	ADV	(AP*	selber	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	nur	ADV	*	nur	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Am	NN	*)	an	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	meisten	VVINF	*))	meister	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	O	XY	*	O	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	so	ADV	*	so	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	seid	VAFIN	(S*	sein	pl	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	ihr	PPER	*	ihr	sg	fem	-	(49
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	alle	PIAT	(NP*	aller	pl	*	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	drei	CARD	*	drei	-	-	-	49)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	Betrogene	NN	*))	betrogener	pl	*	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	Betrieger	NN	*	betrieger	pl	*	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Eure	PPOSAT	(VROOT(PSEUDO(S(NP*	euer	pl	masc	-	(58|(49)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ringe	NN	*)	ring	pl	masc	-	58)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Sind	VAFIN	*	sein	pl	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	alle	PIAT	(AP(NM*	aller	pl	*	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	drei	CARD	*)	drei	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	echt	ADJD	*))	echt	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(VP(S(NP*	der	sg	masc	-	(34
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	echte	ADJA	*	echt	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Ring	NN	*)	ring	sg	*	-	34)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Vermutlich	ADV	*	vermutlich	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	ging	VVFIN	*)	gehen	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	verloren	VVPP	*	verlieren	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	.	$.	*)))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Den	ART	(VROOT(PSEUDO(VP(NP*	der	*	*	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Verlust	NN	*)	verlust	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	bergen	VVINF	*)	bergen	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	zu	PTKZU	(VP(VZ*	zu	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	ersetzen	VVINF	*)	ersetzen	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	ließ	VVFIN	(S*	lassen	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	der	ART	(NP*	der	sg	masc	-	(48
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	Vater	NN	*	vater	sg	masc	-	48)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	Die	ART	(NP*	der	pl	*	-	(58
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	drei	CARD	*))	drei	-	-	-	58)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	für	APPR	(VP(PP*	für	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	einen	PIS	*)	ein	sg	masc	-	(34)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	machen	VVINF	*))))	machen	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Herrlich	ADJD	(VROOT(PSEUDO*	herrlich	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	herrlich	ADJD	(VROOT(PSEUDO*	herrlich	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	also	ADV	*	also	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	fuhr	VVFIN	(S(S*	fahren	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	der	ART	(NP*	der	pl	masc	-	(77
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Richter	NN	*)	richter	pl	masc	-	77)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	fort	PTKVZ	*	fort	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	wenn	KOUS	(S*	wenn	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	ihr	PPOSAT	(NP*	ihr	sg	fem	-	(49)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	Nicht	NN	*)	nicht	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	meinen	VVFIN	*	meinen	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	Rat	NN	*	Rat	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	statt	APPR	(PP*	statt	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	meines	PPOSAT	*	mein	sg	neut	-	(114)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	Spruches	NN	*)))	spruch	sg	neut	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	wollt	VMFIN	*	wollen	pl	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	19	:	$.	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	20	Geht	NN	(NP*	gehen	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	21	nur	ADV	*)))	nur	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	22	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Mein	PPOSAT	(S(NP*	mein	sg	masc	-	(1)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Rat	NN	*)	Rat	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	aber	ADV	*	aber	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	der	ART	(S*	der	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	:	$.	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	ihr	PPER	(S*	ihr	sg	fem	-	(49)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	nehmt	VVFIN	*	nehmen	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	Die	ART	(NP*	der	sg	fem	-	(80
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	Sache	NN	*)	sache	sg	fem	-	80)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	völlig	ADJD	*)))	völlig	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	wie	KOKOM	(S*	wie	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	sie	PPER	*	sie	sg	fem	-	(80)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	liegt	VVFIN	*)	liegen	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Hat	VAFIN	(VROOT(PSEUDO(S*	haben	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	von	APPR	(PP*	von	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Euch	PPER	*)	euch	pl	*	-	(49)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	jeder	PIS	*	jeder	sg	fem	-	(49)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	seinen	PPOSAT	(NP*	sein	sg	masc	-	(58|(49)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Ring	NN	*)	ring	sg	masc	-	58)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	von	APPR	(PP*	von	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	seinem	PPOSAT	*	sein	sg	masc	-	(48|(49)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	Vater	NN	*)	vater	sg	masc	-	48)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	:	$.	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	So	ADV	(S*	so	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	glaube	VVFIN	*	glauben	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	jeder	PIS	*	jeder	sg	masc	-	(49)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	sicher	ADJD	(VP*	sicher	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	seinen	PPOSAT	(NP*	sein	sg	masc	-	(58|(49)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	Ring	NN	*	ring	-	-	-	58)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	Den	NE	*)	der	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	echten	VVINF	*)))	echt	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Möglich	ADJD	*	möglich	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	daß	KOUS	(S*	daß	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	der	ART	(NP*	der	sg	masc	-	(48
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Vater	NN	*)	vater	sg	masc	-	48)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	nun	ADV	*	nun	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	Die	ART	(NP*	der	sg	fem	-	(46
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	Tyrannei	NN	*	tyrannei	sg	fem	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	des	ART	(NP*	der	sg	masc	-	(34
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	Einen	NN	*	ein	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	Rings	NE	*))	ring	sg	masc	-	46)|34)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	länger	ADJD	(VP*	lang	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	In	APPR	(PP*	in	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	seinem	PPOSAT	*	sein	sg	neut	-	(41|(48)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	Hause	NN	*)	haus	sg	neut	-	41)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	dulden	VVINF	*)	dulden	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	wollen	VMFIN	*)	wollen	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	19	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Und	KON	(S*	und	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	gewiß	ADV	*	gewiß	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Daß	KOUS	(CS(VP(AP(S*	daß	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	er	PPER	*	er	sg	masc	-	(48)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	euch	PPER	*	euch	pl	*	-	(49
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	alle	PIS	*)	aller	pl	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	drei	CARD	*)	drei	-	-	-	49)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	geliebt	VVPP	*)	lieben	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	und	KON	*	und	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	gleich	ADV	(S*	gleich	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	Geliebt	NN	*)))	geliebt	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	:	$.	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	indem	PIS	(S*	indem	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	er	PPER	*	er	sg	masc	-	(48)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	zwei	CARD	(VP*	zwei	-	-	-	(52)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	19	drücken	VVINF	*)	drücken	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	20	mögen	VMFIN	*	mögen	pl	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	21	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	22	Um	KOUI	(VP*	um	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	23	einen	PIS	*	ein	sg	masc	-	(44)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	24	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	25	begünstigen	VVINF	*)))	begünstigen	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	26	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Wohlan	NN	*	wohlan	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Es	PPER	(VROOT(PSEUDO(S*	es	sg	neut	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	eifre	VVFIN	*	eifren	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	jeder	PIS	(NP*	jeder	sg	masc	-	(49)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	seiner	PPOSAT	(NP*	sein	pl	fem	-	(49)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	unbestochnen	ADJA	*	unbestochnen	pl	fem	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Von	APPR	(AP(PP*	von	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	Vorurteilen	NN	*)	vorurteil	pl	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	freien	ADJA	*)	frei	pl	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	Liebe	NN	*))	liebe	pl	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	nach	PTKVZ	*)	nach	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Es	PPER	*	es	sg	neut	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	strebe	VVFIN	*	streben	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	von	APPR	*	von	-	-	-	(49
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	euch	PPER	*	euch	pl	*	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	jeder	PIS	*	jeder	sg	masc	-	49)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	um	APPR	*	um	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	die	ART	*	der	sg	fem	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	Wette	NN	*	wette	sg	fem	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	Die	ART	*	der	sg	fem	-	(37
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	Kraft	NN	*	kraft	sg	fem	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	des	ART	*	der	sg	masc	-	(81
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	Steins	NE	*	stein	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	in	APPR	*	in	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	seinem	PPOSAT	*	sein	sg	masc	-	(49)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	Ring	NN	*	ring	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	'	$(	*	--	-	-	-	37)|81)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	an	APPR	*	an	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	Tag	NN	*	tag	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	19	Zu	PTKZU	*	zu	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	20	legen	VVINF	*	legen	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	21	!	$.	*	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	komme	VVFIN	*	kommen	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	dieser	PDAT	*	dieser	sg	masc	-	(37
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Kraft	NN	*	kraft	sg	masc	-	37)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	mit	APPR	*	mit	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Sanftmut	NN	*	sanftmut	sg	-	-	(82)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	Mit	APPR	*	mit	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	herzlicher	ADJA	*	herzlich	sg	fem	-	(82
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	Verträglichkeit	NN	*	verträglichkeit	sg	fem	-	82)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	mit	APPR	*	mit	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	Wohltun	NN	*	wohltun	sg	neut	-	(78)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	Mit	APPR	*	mit	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	innigster	ADJA	*	innig	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	Ergebenheit	NN	*	ergebenheit	sg	fem	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	in	APPR	*	in	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	Gott	NN	*	gott	sg	masc	(PER*)	(39)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	19	Zu	APPR	*	zu	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	20	Hülf	NE	*	hülf	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	21	'	$(	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	22	!	$.	*	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Und	KON	*	und	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	wenn	KOUS	*	wenn	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	sich	PRF	*	sich	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	dann	ADV	*	dann	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	der	ART	*	der	sg	masc	-	(37|(81
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Steine	ADJA	*	stein	sg	masc	-	81)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	Kräfte	NN	*	kraft	pl	fem	-	37)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	Bei	APPR	*	bei	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	euern	PPOSAT	*	euern	pl	neut	-	(83|(49)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	Kindes-Kindeskindern	NN	*	kindes-kindeskind	pl	neut	-	83)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	äußern	VVINF	*	äußern	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	:	$.	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	So	ADV	*	so	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	lad	ADJD	*	lad	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	'	$(	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	ich	PPER	*	ich	sg	*	-	(1)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	über	ADV	*	über	-	-	-	(84
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	tausend	CARD	*	tausend	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	tausend	CARD	*	tausend	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	19	Jahre	NN	*	jahr	pl	neut	-	84)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	20	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	21	Sie	PPER	*	sie	pl	fem	-	(83)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	22	wiederum	ADV	*	wiederum	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	23	vor	APPR	*	vor	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	24	diesen	PDAT	*	dieser	pl	fem	-	(79
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	25	Stuhl	NN	*	stuhl	pl	fem	-	79)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	26	.	$.	*	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Da	ADV	(VROOT(PSEUDO(S*	da	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	wird	VAFIN	*	werden	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Ein	ART	(NP*	ein	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	weisrer	ADJA	*	weisr	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Mann	NN	*)	mann	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	auf	APPR	(VP(PP*	auf	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	diesem	PDAT	*	dieser	sg	masc	-	(79
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	Stuhle	NN	*)	stuhle	sg	masc	-	79)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	sitzen	VVINF	*)	sitzen	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	Als	KOUS	(S*	als	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	ich	PPER	*	ich	sg	*	-	(114)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	und	KON	(CNP*	und	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	sprechen	VVINF	*	sprechen	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	.	$.	*)))))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Geht	VVFIN	*	gehen	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	So	ADV	*	so	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	sagte	VVFIN	*	sagen	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	der	ART	(NP*	der	sg	masc	-	(77)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Bescheidne	ADJA	*	bescheidne	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Richter	NN	*)	richter	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Gott	NN	(VROOT(PSEUDO*	gott	-	-	-	(85)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Gott	NN	(VROOT(PSEUDO*	gott	-	-	-	(85)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Saladin	NE	(VROOT(PSEUDO(NP*	saladin	-	-	-	(7)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Wenn	KOUS	(S*	wenn	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	du	PPER	*	du	sg	*	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	dich	PRF	*	dich	sg	-	-	(7)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	fühlest	VVFIN	*	fühlest	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	dieser	PDAT	(NP*	dieser	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	weisere	ADJA	*	weis	pl	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	Versprochne	NN	*)	versprochn	pl	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	Mann	NN	(VP*	mann	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	sein	VAINF	*))))	sein	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	:	$.	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	.	$.	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	.	$.	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*))	saladin	-	-	-	(7)

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	der	ART	(VROOT(PSEUDO(S(CS(S(NP*	der	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	auf	APPR	(PP*	auf	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	ihn	PPER	*))	ihn	sg	masc	-	(1)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	zustürzt	VVFIN	*)	stürzen	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	und	KON	*	und	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	seine	PPOSAT	(S(NP*	sein	sg	fem	-	(86|(1)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	Hand	NN	*)	hand	sg	fem	-	86)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	ergreift	VVFIN	*))	ergreifen	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	die	PRELS	(S*	der	sg	fem	-	(86)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	er	PPER	*	er	sg	masc	-	(7)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	bis	APPR	(PP*	bis	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	zu	APPR	*	zu	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	Ende	NN	*)	ende	sg	neut	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	wieder	ADV	(VP*	wieder	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	fahren	VVINF	*)	fahren	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	läßt	VVFIN	*))	lassen	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	19	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(7|(7)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Staub	VVFIN	*)	staub	sg	-	-	7)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	*	ich	sg	*	-	(7|(7)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Nichts	PIS	*	nichts	*	neut	-	7)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	O	ITJ	(VROOT(PSEUDO(S*)	O	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Gott	NN	*	gott	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	dir	PPER	(NP*	dir	sg	*	-	(7
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Sultan	NN	*))	sultan	-	-	-	7)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nathan	NE	(VROOT(PSEUDO(DL*	nathan	-	-	-	(1
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	lieber	ADV	(S*	lieber	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Nathan	NE	*))	nathan	-	-	-	1)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Die	ART	(S(NP*	der	pl	fem	-	(84
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	tausend	CARD	*	tausend	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	tausend	CARD	*	tausend	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Jahre	NN	*	jahr	pl	neut	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	deines	PPOSAT	(NP*	dein	sg	masc	-	(77|(1)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	Richters	NN	*))	richter	sg	masc	-	84)|77)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	Sind	VAFIN	*	sein	pl	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	noch	ADV	(AVP*	noch	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	nicht	PTKNEG	*)	nicht	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	um	PTKVZ	*)	um	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Sein	PPOSAT	*	sein	sg	neut	-	(79|(77)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Richterstuhl	NN	*	richterstuhl	sg	neut	-	79)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Der	ART	*	der	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	meine	PPOSAT	*	mein	sg	fem	-	(7)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	.	$.	*	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Geh	XY	*	geh	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Geh	XY	*	geh	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Aber	KON	(S*	aber	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	sei	VAFIN	*	sein	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	mein	PPOSAT	(NP*	mein	sg	masc	-	(87|(7)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Freund	NN	*))	freund	sg	masc	-	87)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	weiter	ADV	*	weiter	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	hätte	VAFIN	*	haben	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Saladin	NE	*	saladin	sg	masc	-	(7)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	mir	PPER	*	sich	sg	*	-	(1)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	nichts	PIS	(VP*	nichts	*	neut	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	Zu	NN	*	zu	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	sagen	VVINF	*))	sagen	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nichts	PIS	*	nichts	*	neut	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nichts	PIS	*	nichts	*	neut	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	?	$.	*	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Gar	ADV	(VROOT(PSEUDO(NP*	gar	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	nichts	PIS	*)	nichts	*	neut	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Und	KON	*	und	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	warum	PWAV	*	warum	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	?	$.	*	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(1)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	hätte	VAFIN	*	haben	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	noch	ADV	(VP(NP*	noch	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Gelegenheit	NN	*)	gelegenheit	sg	fem	-	(88)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	gewünscht	VVPP	*	wünschen	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	Dir	PPER	(VP*	dir	sg	fem	-	(7)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	eine	ART	(NP*	ein	sg	fem	-	(89
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	Bitte	NN	*)	bitte	sg	fem	-	89)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	vorzutragen	VVIZU	*)))	vortragen	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Brauchts	APPR	(VROOT(PSEUDO(PP*	braucht	sg	*	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Gelegenheit	NN	*	gelegenheit	sg	fem	-	(88)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	zu	APPR	(PP*	zu	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	einer	ART	*	ein	sg	fem	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Bitte	NN	*))	bitte	sg	fem	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Rede	NN	*	rede	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	*	ich	sg	*	-	(1)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	komm	VVFIN	*	kommen	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	von	APPR	*	von	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	einer	ART	*	ein	sg	fem	-	(90
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	weiten	ADJA	*	weit	pl	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	Reis	NN	*	reis	sg	*	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	'	$(	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	auf	APPR	*	auf	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	welcher	PRELS	*	welcher	sg	fem	-	90)|(90)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	Ich	PPER	*	ich	sg	*	-	(1)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	Schulden	NN	*	schuld	pl	fem	-	(91)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	eingetrieben	VVPP	*	eintreiben	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	.	$.	*	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Fast	NN	*	fast	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	hab	VAFIN	*	hab	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	'	$(	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	ich	PPER	*	ich	sg	*	-	(1)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Des	ART	*	der	sg	-	-	(92
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	baren	ADJA	*	bar	pl	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	Gelds	NN	*	geld	-	-	-	92)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	zu	PTKA	*	zu	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	viel	PIS	*	viel	*	*	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	.	$.	*	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Die	ART	*	der	sg	fem	-	(93
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Zeit	NN	*	zeit	sg	fem	-	93)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	beginnt	VVFIN	*	beginnen	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Bedenklich	ADJD	*	bedenklich	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	wiederum	ADV	*	wiederum	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	zu	PTKZU	*	zu	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	werden	VAINF	*	werden	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	–	$(	*	–	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	und	KON	*	und	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	Ich	PPER	*	ich	sg	*	-	(1)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	weiß	VVFIN	*	weiß	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	recht	ADV	*	recht	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	wo	PWAV	*	wo	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	sicher	ADJD	*	sicher	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	damit	PROAV	*	damit	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	19	hin	PTKVZ	*	hin	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	20	.	$.	*	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Da	ADV	(S*	da	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	dacht	VVFIN	*	dacht	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(1)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	ob	KOUS	(S*	ob	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	du	PPER	*	du	sg	*	-	(7)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	vielleicht	ADV	*	vielleicht	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	–	NN	(S*	–	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	weil	KOUS	*	weil	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	doch	ADV	*	doch	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	Ein	ART	(NP*	ein	sg	masc	-	(94
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	naher	ADJA	*	nah	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	Krieg	NN	*	krieg	sg	masc	-	94)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	des	ART	(NP*	der	sg	masc	-	(95
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	Geldes	NN	*)))))	geld	sg	masc	-	95)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	immer	ADV	(S(NP(AP*	immer	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	19	mehr	PIAT	*)	mehr	*	*	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	20	Erfodert	NN	*)	erfodert	sg	neut	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	21	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	22	–	$.	*	–	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	23	etwas	PIS	(VP*	etwas	*	neut	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	24	brauchen	VVINF	*)	brauchen	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	25	könntest	VMFIN	*)	könntest	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	26	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*))	saladin	-	-	-	(7)

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	ihm	PPER	(VROOT(PSEUDO(S*	ihm	sg	masc	-	(1)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	steif	VVFIN	*	steif	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	in	APPR	(AP(PP*	in	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	die	ART	*	der	pl	neut	-	(96
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Augen	NN	*)	auge	pl	neut	-	96)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	sehend	ADJD	*))	sehend	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nathan	NE	(VROOT(PSEUDO(MPN*	nathan	-	-	-	(1)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*)))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ich	PPER	(S*	ich	sg	*	-	(7)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	will	VMFIN	*	wollen	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	nicht	PTKNEG	(VP(VP*	nicht	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	fragen	VVINF	*	fragen	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	ob	KOUS	(S*	ob	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	Al-Hafi	NE	*	al-hafi	sg	*	(MISC*)	(3)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	schon	ADV	*	schon	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	Bei	APPR	(AP(PP*	bei	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	dir	PPER	*))))	dir	sg	*	-	(1)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	gewesen	VAPP	*))	sein	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	–	XY	*	–	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	will	VMFIN	(S*	wollen	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	untersuchen	VVINF	(VP*	untersuchen	-	-	-	(97)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	Ob	KOUS	(S*	ob	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	19	dich	PPER	*	dich	sg	*	-	(1)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	20	nicht	PTKNEG	(NP*	nicht	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	21	sonst	ADV	*	sonst	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	22	ein	ART	*	ein	sg	masc	-	(98
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	23	Argwohn	NN	*)	argwohn	sg	masc	-	98)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	24	treibt	VVFIN	*	treiben	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	25	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	26	mir	PPER	(VP*	sich	sg	*	-	(7)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	27	dieses	PDAT	(NP*	dieser	sg	neut	-	(89)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	28	Erbieten	NN	*	erbiet	sg	neut	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	29	freier	ADJA	(NP*	frei	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	30	Dings	NN	*))	ding	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	31	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	32	tun	VVINF	*)))))	tun	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	33	:	$.	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	34	.	$.	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	35	.	$.	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	36	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ein	ART	(VROOT(PSEUDO(NP*	ein	sg	masc	-	(98
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Argwohn	NN	*)	argwohn	sg	masc	-	98)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(7)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	bin	VAFIN	*	sein	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	ihn	PPER	(AP*	ihn	sg	masc	-	(98)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	wert	ADJD	*))	wert	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Verzeih	NN	*	verzeih	pl	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	mir	PPER	*	sich	sg	*	-	(7)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	KON	(VROOT(PSEUDO(S*	–	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	denn	ADV	*	denn	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	was	PIS	(NP*	was	sg	neut	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	hilfts	ADV	*))	hilft	-	-	-	(97)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	*	ich	sg	*	-	(7)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	muß	VMFIN	*	müssen	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	dir	PPER	*	dir	sg	*	-	(1)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	nur	ADV	*	nur	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	gestehen	VVINF	*	gestehen	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	–	PWAV	*	–	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	daß	KOUS	*	daß	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	ich	PPER	*	ich	sg	*	-	(7)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	im	APPRART	*	in	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	Begriffe	NN	*	begreifen	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	war	VAFIN	*	sein	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	–	XY	*	–	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Doch	KON	(VROOT(PSEUDO(S*	doch	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	das	ART	(VP(NP*	der	sg	neut	-	(89
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	nämliche	ADJA	*	nämlich	sg	neut	-	89)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	An	NN	*)	an	sg	neut	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	mich	PPER	*	mich	sg	*	-	(1)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	suchen	VVINF	*)))	suchen	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Allerdings	ADV	(VROOT(PSEUDO(S*)	allerdings	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	So	ADV	*	so	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	wär	VAFIN	*	sein	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Uns	NN	*	uns	pl	*	-	(17)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	beiden	PIS	*	beide	sg	fem	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	ja	ADV	*	ja	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	geholfen	VVPP	*	helfen	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	!	$.	*	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Daß	KOUS	(S*	daß	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(1)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	aber	ADV	*	aber	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Dir	PPER	*	dir	sg	*	-	(7)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	alle	PIS	*	aller	sg	-	-	(115
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	meine	PPOSAT	(NP*	mein	sg	fem	-	(1)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	Barschaft	NN	*))	barschaft	sg	fem	-	115)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	nicht	PTKNEG	(S*	nicht	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	kann	VMFIN	*	können	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	schicken	VVINF	*)	schicken	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	Das	PDS	(S*	der	sg	neut	-	(99)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	macht	VVFIN	*	machen	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	der	ART	(NP*	der	sg	masc	-	(100
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	junge	ADJA	*	jung	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	Tempelherr	NN	*))	tempelherr	sg	masc	-	100)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Du	PPER	(S*	du	sg	*	-	(7)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	kennst	VVFIN	*	kennen	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Ihn	PPER	*	ihn	sg	masc	-	(100)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	ja	ADV	*)	ja	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ihm	PPER	*	ihm	sg	masc	-	(100)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	hab	VAFIN	*	hab	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	'	$(	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	ich	PPER	*	ich	sg	*	-	(1)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	eine	ART	*	ein	sg	fem	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	große	ADJA	*	groß	sg	fem	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	Post	NN	*	post	sg	fem	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	Vorher	ADV	*	vorher	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	noch	ADV	*	noch	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	zu	PTKZU	*	zu	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	bezahlen	VVINF	*	bezahlen	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	.	$.	*	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Tempelherr	NN	(VROOT(PSEUDO*	tempelherr	-	-	-	(101)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Du	PPER	*	du	sg	*	-	(1)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	wirst	VAFIN	*	werden	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	doch	ADV	*	doch	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	meine	PPOSAT	*	mein	pl	masc	-	(101|(7)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	schlimmsten	ADJA	*	schlimm	pl	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Feinde	NN	*	feind	pl	masc	-	101)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	Mit	APPR	*	mit	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	deinem	PPOSAT	*	dein	sg	neut	-	(92|(1)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	Geld	NN	*	geld	sg	neut	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	'	$(	*	--	-	-	-	92)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	auch	ADV	*	auch	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	unterstützen	VVINF	*	unterstützen	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	wollen	VMINF	*	wollen	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	?	$.	*	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(1)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	spreche	VVFIN	*	sprechen	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	von	APPR	(PP*	von	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	dem	ART	(NP*	der	sg	masc	-	(100
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	einen	PIS	*	ein	sg	masc	-	100)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	nur	ADV	*)))	nur	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	dem	ART	*	der	sg	masc	-	(100)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	du	PPER	(S*	du	sg	*	-	(7)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	Das	ART	(NP*	der	sg	neut	-	(102
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	Leben	NN	*)	leben	sg	neut	-	102)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	spartest	VVFIN	*)	spartesen	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	.	$.	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	.	$.	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ah	NE	(VROOT(PSEUDO(MPN*	ah	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*)))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	woran	PWAV	*	woran	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	erinnerst	VVPP	*	erinnerst	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Du	PPER	*	du	sg	*	-	(1)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	mich	PPER	*	mich	sg	*	-	(7)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	!	$.	*	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Hab	XY	*	hab	*	*	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	fem	-	(7)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	doch	ADV	*	doch	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	diesen	PDAT	*	dieser	sg	masc	-	(100
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	Jüngling	NN	*	jüngling	sg	masc	-	100)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	ganz	ADV	*	ganz	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	Vergessen	VVPP	*	vergessen	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	!	$.	*	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Kennst	VVFIN	*	kennen	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	du	PPER	*	du	sg	*	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	ihn	PPER	*	ihn	sg	masc	-	(100)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	?	$.	*	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Wo	PWAV	*	wo	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	er	PPER	*	er	sg	masc	-	(100)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	?	$.	*	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wie	PWAV	(VROOT(PSEUDO*	wie	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	So	ADV	(VROOT(PSEUDO(S*	so	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	weißt	VVFIN	*	weißen	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	du	PPER	*	du	sg	*	-	(7)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	wie	PWAV	(S*	wie	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	viel	PIS	(NP*	viel	*	*	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	von	APPR	(PP*	von	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	deiner	PPOSAT	*	dein	sg	fem	-	(103|(7)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	Gnade	NN	*))	gnade	sg	fem	-	103)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	Für	APPR	(PP*	für	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	ihn	PPER	*)	ihn	sg	masc	-	(100)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	durch	APPR	(VP(PP*	durch	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	ihn	PPER	*)	ihn	sg	masc	-	(100)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	auf	APPR	(PP*	auf	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	mich	PPER	*)	mich	sg	*	-	(1)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	geflossen	VVPP	*)))	fließen	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Er	PPER	*	er	sg	masc	-	(100)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Er	PPER	*	er	sg	masc	-	(100)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	mit	APPR	*	mit	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Gefahr	NN	*	gefahr	sg	fem	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	des	ART	*	der	sg	masc	-	(102
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	neu	ADJD	*	neu	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	erhaltnen	ADJA	*	erhaltnen	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	Lebens	NN	*	leben	sg	masc	-	102)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	Hat	VAFIN	*	haben	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	meine	PPOSAT	*	mein	sg	fem	-	(104|(2|(1)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	Tochter	NN	*	tochter	sg	fem	-	2)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	aus	APPR	*	aus	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	dem	ART	*	der	sg	neut	-	(105
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	Feu	NN	*	feu	sg	neut	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	'	$(	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	r	PPER	*	--	-	-	-	105)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	gerettet	VVPP	*	retten	-	-	-	104)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	19	.	$.	*	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Er	PPER	*	er	sg	masc	-	(100)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	?	$.	*	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Hat	VAFIN	*	haben	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	er	PPER	*	er	sg	masc	-	(100)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	das	PDS	*	der	sg	neut	-	(104)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	?	$.	*	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ha	NE	*	ha	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	darnach	PROAV	(VROOT(PSEUDO(S*	darnach	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	sah	VVFIN	*	sehen	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	er	PPER	*	er	sg	masc	-	(100)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	aus	PTKVZ	*)	aus	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Das	PDS	*	der	sg	neut	-	(104)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	hätte	VAFIN	*	haben	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	traun	VVFIN	*	traun	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	mein	PPOSAT	*	mein	sg	masc	-	(106|(7)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Bruder	NN	*	bruder	sg	masc	-	106)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	auch	ADV	*	auch	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	getan	VVPP	*	tun	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	Dem	PWS	*	der	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	er	PPER	*	er	sg	masc	-	(100)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	so	ADV	*	so	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	ähnelt	VVFIN	*	ähneln	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	!	$.	*	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ist	VAFIN	(S*	sein	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	er	PPER	*	er	sg	masc	-	(100)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	denn	ADV	*	denn	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	noch	ADV	*)	noch	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	hier	ADV	*	hier	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	So	ADV	(VROOT(PSEUDO(S*	so	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	bring	VVFIN	*	bring	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	ihn	PPER	*	ihn	sg	masc	-	(100)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	her	PTKVZ	*)	her	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ich	PPER	(S*	ich	sg	*	-	(7)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	habe	VAFIN	*	haben	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	meiner	PPOSAT	(NP*	mein	pl	masc	-	(107|(7)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Schwester	NN	*))	schwester	pl	masc	-	107)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Von	APPR	(PP*	von	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	diesem	PDAT	*	dieser	sg	masc	-	(106
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	ihren	PPOSAT	(NP*	ihr	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	Bruder	NN	*)	bruder	sg	masc	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	den	PRELS	(S*	der	sg	masc	-	(106)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	sie	PPER	*	sie	pl	masc	-	(107)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	nicht	PTKNEG	*	nicht	-	-	-	106)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	Gekannt	NN	(VP(VP(NP*	gekannt	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	so	ADV	(S*	so	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	viel	PIS	*	viel	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	erzählet	VVPP	(CVP*	erzählet	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	19	daß	KOUS	(S*	daß	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	20	ich	PPER	*	ich	sg	*	-	(7)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	21	sie	PPER	*	sie	sg	fem	-	(107)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	22	Sein	PPOSAT	(NP*	sein	sg	neut	-	(100|(106)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	23	Ebenbild	NN	*)	ebenbild	sg	neut	-	100)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	24	doch	ADV	*	doch	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	25	auch	ADV	*))	auch	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	26	muß	VMFIN	*))	müssen	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	27	sehen	VVINF	*)	sehen	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	28	lassen	VVINF	*)))	lassen	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	29	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Geh	XY	*	geh	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	hol	XY	*	hol	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	ihn	PPER	*	ihn	sg	masc	-	(100)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	!	$.	*	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Wie	PWAV	(S*	wie	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	aus	APPR	(PP*	aus	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Einer	ART	(CO(NP*	einer	sg	fem	-	(103
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	guten	ADJA	*	gut	sg	fem	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Tat	NN	*)	tat	sg	fem	-	103)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	Gebar	NN	*))	gebar	sg	neut	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	sie	PPER	*	sie	sg	fem	-	(103)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	auch	ADV	*	auch	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	schon	ADV	*)	schon	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	bloße	ADJA	(NP*	bloß	sg	fem	-	(108
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	Leidenschaft	NN	*)	leidenschaft	sg	fem	-	108)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	Doch	KON	(S*	doch	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	so	ADV	(VP*	so	-	-	-	(78
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	viel	PIAT	(NP*	viel	*	*	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	andre	ADJA	*	andre	pl	*	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	gute	ADJA	*	gut	pl	*	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	19	Taten	NN	*)	tat	pl	fem	-	78)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	20	fließen	VVINF	*))	fließen	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	21	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Geh	XY	*	geh	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	hol	VAFIN	*	hol	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	ihn	PPER	*	ihn	sg	masc	-	(100)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	!	$.	*	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*))	nathan	-	-	-	(1)

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	indem	KOUS	(VROOT(PSEUDO(S*	indem	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	er	PPER	*	er	sg	masc	-	(1)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Saladins	NE	(VP(NP*	saladin	sg	*	-	(109|(7)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Hand	NN	*)	hand	sg	fem	-	109)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	fahren	VVINF	*)	fahren	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	läßt	VVFIN	*)	lassen	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Augenblicks	NN	(VROOT(PSEUDO*	augenblick	-	-	-	(110)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	bei	APPR	(PP*	bei	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	dem	ART	*	der	sg	neut	-	(89
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	andern	ADJA	*	anderer	sg	neut	-	89)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Bleibt	NN	*)	bleiben	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	es	PPER	*	es	sg	neut	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	doch	ADV	*	doch	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	auch	ADV	*)	auch	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ab	NN	(VROOT(PSEUDO*	ab	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ah	NE	(VROOT(PSEUDO(MPN*	ah	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*)))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	daß	KOUS	(VROOT(PSEUDO(S*	daß	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	ich	PPER	*	ich	sg	*	-	(7)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	meine	PPOSAT	(NP*	mein	sg	-	-	(107|(7)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Schwester	NN	*)	schwester	sg	neut	-	107)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Nicht	PTKNEG	(VP(VP*	nicht	sg	neut	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	horchen	VVINF	*)	horchen	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	lassen	VVINF	*))	lassen	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Zu	APPR	(NP(PP*	zu	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	ihr	PPER	*))	ihr	sg	fem	-	(107)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	zu	APPR	(VROOT(PSEUDO(PP*	zu	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	ihr	PPER	*)	ihr	-	-	-	(107)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Denn	KON	*	denn	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Wie	PWAV	*	wie	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	soll	VMFIN	*	sollen	sg	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	ich	PPER	*	ich	sg	*	-	(7)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	alles	PIS	*	alle	sg	neut	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	das	PDS	*	der	sg	neut	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	ihr	PPOSAT	*	ihr	sg	neut	-	(107)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	nun	ADV	*	nun	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	erzählen	VVINF	*	erzählen	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	?	$.	*	--	-	-	-	-

Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ab	APPR	(VROOT(PSEUDO(PP*	ab	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	von	APPR	*	von	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	der	ART	*	der	sg	fem	-	(111
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	andern	ADJA	*	anderer	-	-	-	-
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Seite	NN	*)	seite	sg	fem	-	111)
Nathan_Act3_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

#end document
