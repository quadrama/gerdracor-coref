#begin document (Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll); part 000
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	0	MOHR	NE	(VROOT(PSEUDO*))	mohr	-	-	-	(10)

Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	0	tritt	VVFIN	(VROOT(PSEUDO(S*	treten	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	1	weinend	ADJD	*	weinend	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	2	auf	PTKVZ	*)	auf	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	0	Ich	PPER	*	ich	sg	*	-	(10)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	1	kann	VMFIN	*	können	sg	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	2	keinen	PIAT	*	kein	sg	masc	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	3	finden	VVINF	*	finden	sg	masc	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	4	von	APPR	*	von	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	5	ihnen	PPER	*	ihnen	pl	*	-	(18)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	6	.	$.	*	--	-	-	-	-

Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	0	Ach	ITJ	(VROOT(PSEUDO(S*)	ach	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	1	mein	PPOSAT	(NP*	mein	sg	masc	-	(9|(10)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	2	Lord	NN	*	lord	sg	masc	-	9)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	4	mich	PPER	(VP*	mich	sg	*	-	(10)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	5	allein	ADV	*	allein	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	6	gelassen	VVPP	*))	lassen	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	7	!	$.	*))	--	-	-	-	-

Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	1	kann	VMFIN	*	können	sg	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	2	auch	ADV	*	auch	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	3	den	ART	(VP(NP*	der	sg	masc	-	(0
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	4	guten	ADJA	*)	gut	sg	masc	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	5	andern	VVINF	*)	anderer	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	6	Lord	NN	(VP*	lord	sg	masc	-	0)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	7	nicht	PTKNEG	*	nicht	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	8	finden	VVINF	*	finden	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	10	dem	PRELS	(S*	der	sg	masc	-	(0)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	11	ich	PPER	*	ich	sg	*	-	(10)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	12	so	ADV	(VP(NP*	so	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	13	viel	PIS	*)	viel	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	14	zu	PTKZU	(VZ*	zu	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	15	erzählen	VVINF	*))	erzählen	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	16	habe	VAFIN	*)))	haben	sg	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	17	.	$.	*))	--	-	-	-	-

Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(NP*	ich	sg	*	-	(10)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	1	armer	ADJA	*	arm	sg	-	-	(10
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	2	Knabe	NN	*)	knabe	sg	-	-	10)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	0	ich	PPER	*	ich	sg	*	-	(10)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	0	CAROLINE	NE	(VROOT(PSEUDO*	caroline	-	-	(LOC*)	(5
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	0	Guter	NE	(VROOT(PSEUDO(NP*	gute	sg	masc	-	(10
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	1	Junge	NE	*)	junge	sg	masc	-	10)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	0	guten	ADJA	(VROOT(PSEUDO(NP*	gut	pl	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	1	Morgen	NN	*)	morgen	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	0	MOHR	NE	(VROOT(PSEUDO*	mohr	-	-	(PER*)	(10
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	10)

Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	0	Ja	PTKANT	(VROOT(PSEUDO(S*	ja	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	2	liebe	ADJA	(NP*	lieben	-	-	-	(5
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	3	Miß	NN	*))	miß	-	-	-	5)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	0	wie	PWAV	(VROOT(PSEUDO(CS(S(S(AVP(S(S*	wie	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	1	ich	PPER	*	ich	sg	*	-	(10)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	2	aufwachte	VVFIN	*)	aufwachen	sg	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	4	war	VAFIN	*	sein	sg	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	5	mir	PPER	(AP*	sich	sg	*	-	(10)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	6	recht	ADV	*	recht	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	7	lustig	ADJD	*))	lustig	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	9	da	ADV	*)	da	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	10	hatt	VAFIN	*	hatt	sg	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	11	ich	PPER	*	ich	sg	*	-	(10)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	12	eben	ADV	(NP*	eben	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	13	die	ART	*	der	sg	fem	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	14	ganze	ADJA	*	ganz	sg	fem	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	15	Nacht	NN	*))	nacht	sg	fem	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	16	meinen	VVFIN	*	mein	pl	-	-	(13
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	17	Vater	NN	*	vater	sg	masc	-	13)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	18	,	$,	*	--	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	19	den	ART	(NP*	der	sg	masc	-	(13
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	20	Zuckai	NN	*))	zuckai	sg	masc	-	13)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	21	,	$,	*	--	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	22	und	KON	*	und	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	23	meine	PPOSAT	(S(NP*	mein	sg	fem	-	(14|(10)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	24	Mutter	NN	*)	mutter	sg	fem	-	14)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	25	besucht	VVPP	*))	besuchen	sg	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	26	.	$.	*))	--	-	-	-	-

Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	0	Du	PPER	(VROOT(PSEUDO(S*	du	sg	*	-	(5)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	1	kennst	VVFIN	*	kennen	sg	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	2	ihn	PPER	*	ihn	sg	masc	-	(13)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*)	nicht	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	0	Ei	XY	(VROOT(PSEUDO*	ei	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	1	du	PPER	(S*	du	sg	*	-	(5)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	2	solltest	VMFIN	*	sollen	sg	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	3	ihn	PPER	(VP*	ihn	sg	masc	-	(13)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	4	kennen	VVINF	*)	kennen	pl	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	6	und	KON	(S*	und	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	7	wie	PWAV	*	wie	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	8	ihn	PPER	*	ihn	sg	masc	-	(13)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	9	die	ART	(VP(NP*	der	sg	fem	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	10	Nachbarn	NN	*)	nachbar	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	11	liebhaben	VVINF	*)))	liebhaben	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	13	und	KON	*	und	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	14	die	ART	(S(NP*	der	sg	fem	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	15	Feinde	NN	*)	feind	sg	fem	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	16	fürchten	VVFIN	*)	fürchten	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	17	.	$.	*))	--	-	-	-	-

Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	0	Sie	PPER	*	sie	pl	*	-	(20)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	1	wollten	VMFIN	*	wollen	pl	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	2	mich	PPER	*	mich	sg	*	-	(10)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*	nicht	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	4	fortlassen	VVINF	*	fortlassen	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	6	und	KON	*	und	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	7	gaben	VVFIN	*	geben	pl	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	8	mir	PPER	*	sich	sg	*	-	(10)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	9	zu	PTKZU	*	zu	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	10	essen	VVINF	*	essen	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	11	allerlei	PIS	*	allerlei	*	*	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	12	.	$.	*	--	-	-	-	-

Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	0	Jetzt	ADV	(VROOT(PSEUDO(S*	jetzt	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	1	bin	VAFIN	*	sein	sg	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(10)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	3	traurig	ADJD	*)	traurig	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	0	CAROLINE	NE	(VROOT(PSEUDO*	caroline	-	-	(LOC*)	(5
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	0	Armer	ADJA	(VROOT(PSEUDO(NP*	armer	sg	*	-	(10
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	1	Knabe	NN	*)	knabe	sg	-	-	10)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	0	MOHR	NE	(VROOT(PSEUDO*	mohr	-	-	(PER*)	(10
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	10)

Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	0	Gute	ADJA	(VROOT(PSEUDO(NP*	gut	-	-	-	(5
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	1	Miß	NN	*)	miß	-	-	-	5)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	0	wo	PWAV	(VROOT(PSEUDO(S*	wo	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	1	sind	VAFIN	*	sein	pl	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	2	wir	PPER	*	wir	pl	*	-	(22)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	3	dann	ADV	*)	dann	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	1	knallt	VVFIN	*	knallen	sg	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	2	denn	ADV	*	denn	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	3	so	ADV	(AVP*	so	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	4	immer	ADV	*)	immer	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	5	fort	PTKVZ	*)	fort	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	0	Weißest	VVFIN	(VROOT(PSEUDO(S*	weißest	sg	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	1	du	PPER	*	du	sg	*	-	(5)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	2	denn	ADV	*	denn	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*	nicht	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	5	wo	PWAV	(S*	wo	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	6	der	ART	(NP*	der	sg	masc	-	(0
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	7	Lord	NN	*)	lord	sg	masc	-	0)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	8	ist	VAFIN	*	sein	sg	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	10	mit	APPR	(S(PP*	mit	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	11	dem	PRELS	*)	der	sg	neut	-	(0)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	12	mein	PPOSAT	(CNP(NP*	mein	-	-	-	(9|(10)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	13	Lord	NN	*)	lord	sg	neut	-	9)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	14	und	KON	*	und	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	15	der	ART	(NP*	der	sg	fem	-	(12
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	16	Alte	NN	*))	alte	sg	fem	-	12)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	17	so	ADV	(AP*	so	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	18	bös	ADJD	*)	bös	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	19	ist	VAFIN	*)))	sein	sg	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	20	?	$.	*))	--	-	-	-	-

Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	0	Er	PPER	(VROOT(PSEUDO(CS(S*	er	sg	masc	-	(0)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	1	war	VAFIN	*	sein	sg	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	2	so	ADV	(AP*	so	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	3	traurig	ADJD	*	traurig	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	4	wie	KOKOM	(NP*	wie	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	5	du	PPER	*)))	du	sg	*	-	(5)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	7	und	KON	*	und	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	8	ich	PPER	(S*	ich	sg	*	-	(10)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	9	wollte	VMFIN	*	wollen	sg	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	10	ihn	PPER	(VP*	ihn	sg	masc	-	(0)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	11	lustig	ADJD	*	lustig	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	12	machen	VVINF	*)))	machen	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	13	.	$.	*))	--	-	-	-	-

Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	0	CAROLINE	NE	(VROOT(PSEUDO*	caroline	-	-	(LOC*)	(5
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	0	Du	PPER	*	du	sg	*	-	(10)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	1	?	$.	*	--	-	-	-	-

Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	0	Wen	PWS	*	wen	sg	*	-	(0)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	1	?	$.	*	--	-	-	-	-

Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	0	MOHR	NE	(VROOT(PSEUDO*	mohr	-	-	(PER*)	(10
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	10)

Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	0	Ja	PTKANT	*	ja	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	1	ich	PPER	*	ich	sg	*	-	(10)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	2	.	$.	*	--	-	-	-	-

Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	0	Wie	PWAV	(VROOT(PSEUDO(S(S*	wie	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	1	er	PPER	*	er	sg	masc	-	(0)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	2	heißt	VVFIN	*)	heißen	sg	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	4	weiß	VVFIN	*	weiß	sg	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	5	ich	PPER	*	ich	sg	*	-	(10)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	6	nicht	PTKNEG	*)	nicht	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	0	Aber	KON	(VROOT(PSEUDO(S*	aber	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	1	wegen	APPR	(PP*	wegen	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	2	seinem	PPOSAT	*	sein	sg	masc	-	(12
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	3	Vater	NN	*))	vater	sg	masc	-	12)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	0	Dir	PPER	*	dir	sg	*	-	(5)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	1	darf	VMFIN	*	dürfen	sg	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(10)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	3	'	$(	*	--	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	4	s	PPER	*	--	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	5	nicht	PTKNEG	*	nicht	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	6	sagen	VVINF	*	sagen	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	8	gute	ADJA	*	gut	-	-	-	(5
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	9	Miß	NN	*	miß	-	-	-	5)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	10	!	$.	*	--	-	-	-	-

Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	0	ob	KOUS	(VROOT(PSEUDO(S(S*	ob	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	1	du	PPER	*	du	sg	*	-	(5)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	2	mich	PPER	(VP*	mich	sg	*	-	(10)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	3	schon	ADV	*	schon	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	4	nicht	PTKNEG	*	nicht	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	5	verraten	VVPP	*)	verraten	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	6	würdest	VAFIN	*)	würdest	sg	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	8	weil	KOUS	(S*	weil	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	9	du	PPER	*	du	sg	*	-	(5)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	10	gut	ADJD	*	gut	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	11	bist	VAFIN	*))	sein	sg	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(10)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	1	hab	VVFIN	*	hab	sg	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	2	sie	PPER	(VP*	sie	pl	*	-	(21)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	3	angetroffen	VVPP	*))	antreffen	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	0	Heisa	NE	(VROOT(PSEUDO(MPN*	heisa	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	1	!	$.	*)))	--	-	-	-	-

Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	0	drückte	VVFIN	(VROOT(PSEUDO(S*	drücken	sg	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	1	mich	PPER	*	mich	sg	*	-	(10)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	2	der	ART	(NP*	der	sg	masc	-	(12
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	3	Alte	ADJA	*))	alte	sg	masc	-	12)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	0	Sieh	ADV	(VROOT(PSEUDO(S(AVP(CS(S(S(AVP*	sieh	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	1	einmal	ADV	*)	einmal	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	2	Miß	NN	*)	miß	-	-	-	(5)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	4	er	PPER	*	er	sg	masc	-	(12)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	5	küßte	VVFIN	*	küßen	sg	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	6	mich	PPER	*)	mich	sg	*	-	(10)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	8	und	KON	*	und	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	9	meine	PPOSAT	(S(NP*	mein	pl	fem	-	(10)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	10	Wangen	NN	*)	wange	pl	fem	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	11	waren	VAFIN	*	sein	pl	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	12	naß	ADJD	*))	naß	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	14	da	ADV	*)	da	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	15	ward	VVFIN	*	werden	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	16	meine	PPOSAT	(NP*	mein	sg	fem	-	(10)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	17	Brust	NN	*)	brust	sg	fem	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	18	dick	ADJD	*	dick	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	19	drüber	PROAV	(PP*	drüber	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	20	,	$,	*	--	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	21	daß	KOUS	(S*	daß	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	22	ich	PPER	*	ich	sg	*	-	(10)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	23	nicht	PTKNEG	(NP*	nicht	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	24	Atem	NN	*	atem	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	25	genug	ADV	*)	genug	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	26	hatte	VAFIN	*)))	haben	sg	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	27	.	$.	*))	--	-	-	-	-

Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	0	Er	PPER	(VROOT(PSEUDO(S(S*	er	sg	masc	-	(12)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	2	gar	ADV	(AP*	gar	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	3	gut	ADJD	*))	gut	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	5	der	ART	(NP*	der	sg	fem	-	(12
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	6	Alte	NN	*))	alte	sg	fem	-	12)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	0	CAROLINE	NE	(VROOT(PSEUDO*	caroline	-	-	(LOC*)	(5
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	0	Wer	PWS	(VROOT(PSEUDO(S*	wer	sg	masc	-	(12)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	1	denn	ADV	*	denn	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	3	lieber	ADJA	(NP*	lieber	-	-	-	(10
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	4	Knabe	NN	*))	knabe	sg	-	-	10)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	0	MOHR	NE	(VROOT(PSEUDO*	mohr	-	-	(PER*)	(10
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	10)

Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	0	Still	PIAT	(VROOT(PSEUDO(NP*	still	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	1	Miß	NN	*)	miß	-	-	-	(5)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	0	still	PTKVZ	*	still	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	0	du	PPER	*	du	sg	*	-	(5)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	1	könntest	VMFIN	*	könntest	sg	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	2	mir	PPER	*	sich	sg	*	-	(10)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	3	'	$(	*	--	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	4	s	PPER	*	--	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	5	eben	ADV	*	eben	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	6	ablauschen	VVINF	*	ablauschen	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	8	und	KON	*	und	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	9	ich	PPER	*	ich	sg	*	-	(10)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	10	plauderte	VVFIN	*	plaudern	sg	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	11	alles	PIS	*	alle	sg	neut	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	12	.	$.	*	--	-	-	-	-

Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	0	Dein	PPOSAT	(VROOT(PSEUDO(CS(S(NP*	dein	sg	masc	-	(4
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	1	Vater	NN	*)	vater	sg	masc	-	4)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	2	ist	VAFIN	*	sein	sg	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	3	ihm	PPER	(AP*	ihm	sg	masc	-	(12)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	4	nicht	PTKNEG	*	nicht	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	5	gut	ADJD	*))	gut	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	7	und	KON	*	und	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	8	des	ART	(S(NP*	der	sg	masc	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	9	Kneipens	NN	(CNP*	kneipen	sg	masc	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	11	Schlagens	NN	*	schlagen	sg	masc	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	13	Tretens	NN	*))	treten	sg	masc	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	14	wäre	VAFIN	*	sein	sg	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	15	kein	PIAT	(NP*	kein	sg	neut	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	16	Ende	NN	*	ende	sg	neut	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	17	für	APPR	(PP*	für	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	18	mich	PPER	*))))	mich	sg	*	-	(10)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	19	.	$.	*))	--	-	-	-	-

Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	0	Horch	NE	(VROOT(PSEUDO(MPN*	horch	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	1	!	$.	*)))	--	-	-	-	-

Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	0	es	PPER	(VROOT(PSEUDO(S*	es	sg	neut	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	1	kommt	VVFIN	*	kommen	sg	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	2	jemand	PIS	*)	jemand	sg	masc	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	0	Das	PDS	(VROOT(PSEUDO(S*	der	sg	neut	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	2	gut	ADJD	*)	gut	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(10)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	1	will	VMFIN	*	wollen	sg	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	2	den	ART	(VP(NP*	der	sg	masc	-	(19
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	3	Lord	NN	*)	lord	sg	masc	-	19)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	4	suchen	VVINF	*))	suchen	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	0	CAROLINE	NE	(VROOT(PSEUDO*	caroline	-	-	(LOC*)	(5
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	0	Komm	NN	(VROOT(PSEUDO(NP*	komm	sg	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	1	mit	APPR	(PP*	mit	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	2	mir	PPER	*))	sich	sg	*	-	(5)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	0	MOHR	NE	(VROOT(PSEUDO*	mohr	-	-	(PER*)	(10
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	10)

Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S(S*	ich	sg	*	-	(10)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	1	will	VMFIN	*	wollen	sg	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	2	dir	PPER	(VP*	dir	sg	*	-	(5)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	3	weinen	VVINF	*	wein	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	4	helfen	VVINF	*))	helfen	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	6	gute	ADJA	(NP*	gut	-	-	-	(5
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	7	Miß	NN	*))	miß	-	-	-	5)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	8	!	$.	*))	--	-	-	-	-

Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	0	ach	XY	(VROOT(PSEUDO*	ach	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	1	ich	PPER	(S*	ich	sg	*	-	(10)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	2	habe	VAFIN	*	haben	sg	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	3	oft	ADV	(VP*	oft	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	4	zu	PTKZU	(VZ*	zu	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	5	weinen	VVINF	*)))	weinen	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	6	!	$.	*))	--	-	-	-	-

Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	0	wir	PPER	(VROOT(PSEUDO(CS(S(VP*	wir	pl	*	-	(10
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	1	Schwarzen	NN	*	schwarze	pl	-	-	10)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	2	lernen	VVINF	*)	lernen	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	3	weinen	VVFIN	*	weinen	sg	masc	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	4	gar	ADV	*	gar	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	5	früh	ADJD	*	früh	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	6	von	APPR	(PP*	von	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	7	euch	PPER	*))	euch	pl	*	-	(17)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	9	aber	KON	*	aber	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	10	ihr	PPER	(S*	ihr	sg	fem	-	(16)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	11	lacht	VVFIN	*	lachen	sg	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	12	dann	ADV	*))	dann	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	13	!	$.	*))	--	-	-	-	-

Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	0	Geht	VVFIN	(VROOT(PSEUDO(S*	gehen	sg	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	1	ab	PTKVZ	*)	ab	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	0	CAROLINE	NE	(VROOT(PSEUDO*	caroline	-	-	(LOC*)	(5
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	0	Du	PPER	(VROOT(PSEUDO(S*	du	sg	*	-	(10)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	1	sollst	VMFIN	*	sollen	sg	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	2	nicht	PTKNEG	*	nicht	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	3	weinen	VVINF	(VP*	weinen	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	5	Knabe	NN	(NP*	knabe	sg	-	-	(10)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	7	bei	APPR	(PP*	bei	-	-	-	-
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	8	mir	PPER	*))))	sich	sg	*	-	(5)
Sturm_Act5_Scene2.part.xml.r12k.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

#end document
