#begin document (Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll); part 000
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Sittah	NE	(VROOT(PSEUDO*	sittah	sg	-	-	(15)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Saladin	NE	(VROOT(PSEUDO*	saladin	-	-	-	(7)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	SITTAH	NE	(VROOT(PSEUDO*	sittah	-	-	-	(15
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Eilt	VVFIN	(VROOT(PSEUDO(S*	eilt	-	-	-	(16
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	Er	PPER	(NP*	er	sg	masc	-	(3)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	doch	ADV	*	doch	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	als	KOKOM	(S*	als	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	ob	KOUS	*	ob	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	er	PPER	*	er	sg	masc	-	(3)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	mir	PPER	*	sich	sg	*	-	(6)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	8	nur	ADV	(AVP*	nur	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	9	gern	ADV	*))))	gern	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	10	entkäme	FM	*	entkommen	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	11	!	$.	*))	--	-	-	-	16)

Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	heißt	VVFIN	*	heißen	sg	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	das	PDS	*)	der	sg	neut	-	(16)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	Hat	VAFIN	*	haben	sg	-	-	(17
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	er	PPER	*	er	sg	masc	-	(3)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	wirklich	ADJD	*	wirklich	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	sich	PRF	*	sich	sg	-	-	(3)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	in	APPR	*	in	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	ihm	PPER	*	ihm	sg	neut	-	17)|(1)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	Betrogen	NN	*	betroge	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	9	oder	KON	*	oder	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	10	–	PPER	*	–	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	11	möcht	VMFIN	*	möchen	sg	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	12	'	$(	*	--	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	13	er	PPER	*	er	sg	masc	-	(3)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	14	uns	PPER	*	uns	pl	*	-	(18)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	15	nur	ADV	*	nur	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	16	gern	ADV	*	gern	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	17	Betriegen	NN	*	betriegen	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	18	?	$.	*	--	-	-	-	-

Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wie	PWAV	(VROOT(PSEUDO*	wie	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	das	PDS	*	der	sg	neut	-	(17)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	fragst	VVFIN	*	fragen	sg	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	du	PPER	*	du	sg	*	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	mich	PPER	*	mich	sg	*	-	(7)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	?	$.	*	--	-	-	-	-

Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	*	ich	sg	*	-	(7)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	weiß	VVFIN	*	weiß	sg	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	Ja	PTKANT	*	ja	sg	neut	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	kaum	ADV	*	kaum	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	von	APPR	*	von	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	wem	PWS	*	wem	sg	masc	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	die	ART	*	der	sg	fem	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	8	Rede	NN	*	rede	sg	fem	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	9	war	VAFIN	*	sein	sg	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	10	;	$.	*	--	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	11	und	KON	*	und	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	12	höre	PPOSAT	*	hören	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	13	Von	APPR	*	von	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	14	euerm	PPOSAT	*	euer	-	-	-	(1|(19)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	15	Juden	NN	*	Jude	-	-	(MISC*)	1)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	16	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	17	euerm	APPRART	*	euer	*	*	-	(1|(19)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	18	Nathan	NE	*	nathan	sg	neut	-	1)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	19	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	20	heut	ADV	*	heut	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	21	'	$(	*	--	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	22	Zum	APPRART	*	zu	sg	neut	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	23	erstenmal	ADV	*	erstenmal	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	24	.	$.	*	--	-	-	-	-

Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	SITTAH	NE	(VROOT(PSEUDO*	sittah	-	-	-	(15
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ists	ADV	(VROOT(PSEUDO(S(ISU*	ist	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	möglich	ADJD	*))	möglich	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	daß	KOUS	(VROOT(PSEUDO(S(S*	daß	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	ein	ART	(NP*	ein	sg	masc	-	(1
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	Mann	NN	*)	mann	sg	masc	-	1)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	Dir	PPER	(VP*	dir	sg	*	-	(7)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	so	ADV	*	so	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	verborgen	VVPP	*)	verbergen	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	blieb	VVFIN	*	bleiben	sg	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	8	von	APPR	(S(PP*	von	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	9	dem	PRELS	*)	der	sg	masc	-	(1)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	10	es	PPER	*	es	sg	neut	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	11	heißt	VVFIN	*))	heißen	sg	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	13	Er	PPER	*	er	sg	masc	-	(1)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	14	habe	VAFIN	*	haben	sg	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	15	Salomons	NE	(CNP*	salomon	-	-	(LOC*)	(20
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	16	und	KON	*	und	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	17	Davids	NE	(MPN*	david	pl	neut	(LOC*)	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	18	Gräber	NE	*))	grab	pl	neut	-	20)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	19	Erforscht	VVFIN	*	erforschen	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	20	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	21	und	KON	(S*	und	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	22	wisse	VVFIN	*	wissen	sg	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	23	deren	PDS	*	der	sg	fem	-	(20)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	24	Siegel	NN	(NP*	siegel	sg	masc	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	25	durch	APPR	(PP*	durch	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	26	Ein	ART	*	ein	sg	neut	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	27	mächtiges	ADJA	*	mächtig	sg	neut	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	28	geheimes	ADJA	*	geheim	sg	neut	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	29	Wort	NN	*))	wort	sg	neut	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	30	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	31	lösen	VVINF	*)))	lösen	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	32	?	$.	*))	--	-	-	-	-

Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Aus	APPR	*	aus	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	ihnen	PPER	*	ihnen	pl	*	-	(20)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	bring	VVFIN	*	bring	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	'	$(	*	--	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	er	PPER	*	er	sg	masc	-	(1)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	dann	ADV	*	dann	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	von	APPR	*	von	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	Zeit	NN	*	zeit	sg	fem	-	(21)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	8	zu	APPR	*	zu	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	9	Zeit	NN	*	zeit	sg	fem	-	(21)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	10	Die	ART	*	der	sg	fem	-	(22
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	11	unermeßlichen	ADJA	*	unermeßlich	pl	neut	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	12	Reichtümer	NN	*	reichtum	pl	neut	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	13	an	APPR	*	an	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	14	Den	ART	*	der	*	*	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	15	Tag	NN	*	tag	pl	neut	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	16	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	17	die	PRELS	*	der	pl	masc	-	(22)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	18	keinen	PIAT	*	kein	sg	masc	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	19	mindern	VVFIN	*	mindern	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	20	Quell	NN	*	quell	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	21	verrieten	VVINF	*	verrieten	-	-	-	22)

Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Hat	VAFIN	(VROOT(PSEUDO(S(S*	haben	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	seinen	PPOSAT	(NP*	sein	sg	masc	-	(22|(1)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	Reichtum	NN	*)	reichtum	sg	masc	-	22)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	dieser	PDAT	(NP*	dieser	sg	masc	-	(1
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	Mann	NN	*)	mann	sg	masc	-	1)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	aus	APPR	(PP*	aus	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	Gräbern	NN	*))	gräber	pl	masc	-	(23)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	8	So	ADV	(AVP*	so	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	9	warens	ADV	*	warens	-	-	-	(23)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	10	sicherlich	ADV	*	sicherlich	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	11	nicht	PTKNEG	*)	nicht	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	12	Salomons	NE	*	salomon	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	14	Nicht	NN	(NP*	nicht	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	15	Davids	NE	(MPN*	david	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	16	Gräber	NE	*)))	grab	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	17	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Narren	NN	(VROOT(PSEUDO(S*	narr	-	-	-	(24)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	lagen	VVFIN	*	liegen	pl	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	da	ADV	*	da	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	Begraben	NN	*)	begraben	pl	fem	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	SITTAH	NE	(VROOT(PSEUDO*	sittah	-	-	-	(15
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Oder	KON	(VROOT(PSEUDO*	oder	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	Bösewichter	NN	*	bösewichter	-	-	-	(24)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	Auch	ADV	(S*	auch	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	Ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	seines	PPOSAT	(NP*	sein	sg	neut	-	(22|(1)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	Reichtums	NN	*	reichtum	sg	neut	-	22)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	Quelle	NN	*))	quelle	sg	*	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	weit	ADJD	*	weit	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	ergiebiger	ADJA	(S(NP*	ergiebig	sg	fem	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	8	Weit	NN	*)	weit	sg	fem	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	9	unerschöpflicher	ADJD	*	unerschöpflich	sg	fem	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	11	als	KOUS	(S*	als	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	12	so	ADV	*	so	-	-	-	(20
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	13	ein	ART	(NP*	ein	sg	masc	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	14	Grab	NN	*	grab	sg	masc	-	20)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	15	Voll	NE	(MPN*	voll	*	*	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	16	Mammon	NE	*))))	mammon	sg	*	-	(25)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	17	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Denn	KON	(VROOT(PSEUDO(S*	denn	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	er	PPER	*	er	sg	masc	-	(1)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	handelt	VVFIN	*	handeln	sg	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	;	$.	*	--	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	wie	KOKOM	(S*	wie	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	ich	PPER	*	ich	sg	*	-	(7)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	hörte	VVFIN	*))	hören	sg	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	SITTAH	NE	(VROOT(PSEUDO*	sittah	-	-	-	(15
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Sein	PPOSAT	(VROOT(PSEUDO(CS(S(NP*	sein	sg	masc	-	(26|(27|(1)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	Saumtier	NN	*)	saumtier	sg	masc	-	27)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	treibt	VVFIN	*	treiben	sg	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	auf	APPR	(PP*	auf	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	allen	PIAT	*	aller	pl	fem	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	Straßen	NN	*))	straße	pl	fem	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	zieht	VVFIN	(S*	ziehen	sg	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	8	Durch	APPR	(CO(S(PP*	durch	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	9	alle	PIAT	(NP*	aller	pl	fem	-	(28
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	10	Wüsten	NN	*)	wüste	pl	fem	-	28)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	11	;	$.	*	--	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	12	seine	PPOSAT	(NP*	sein	pl	neut	-	(29|(1)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	13	Schiffe	NN	*))	schiff	pl	neut	-	29)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	14	liegen	VVFIN	*	liegen	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	15	In	APPR	(VP(PP*	in	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	16	allen	PIAT	*	aller	pl	*	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	17	Häfen	NN	*	hafen	pl	*	-	26)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	18	Al-Hafi	NE	(NP*	al-hafi	pl	*	(LOC*)	(3)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	19	selbst	ADV	*))	selbst	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	20	gesagt	VVPP	*	sagen	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	21	;	$.	*))	--	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	22	und	KON	*	und	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	23	voll	APPR	(VP(PP*	voll	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	24	Entzücken	NN	*)	entzück	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	25	Hinzugefügt	VVPP	*))	hinzugefügt	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	26	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	27	wie	PWAV	(S*	wie	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	28	groß	ADJD	*	groß	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	29	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	30	wie	KOKOM	(S(AP*	wie	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	31	edel	ADJD	*)	edel	sg	masc	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	32	dieser	PDAT	(NP*	dieser	sg	masc	-	(1)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	33	Sein	NN	*	sein	sg	masc	-	(3)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	34	Freund	NN	*)	freund	sg	masc	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	35	anwende	VVFIN	*	anwenden	sg	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	36	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	37	was	PWS	(S*	was	sg	neut	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	38	so	ADV	(AP*	so	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	39	klug	ADJD	(CAP*	klug	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	40	und	KON	*	und	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	41	emsig	ADJD	(AP*	emsig	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	42	Er	PPER	(VP*	er	sg	masc	-	(1)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	43	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	44	erwerben	VVINF	*)))))	erwerben	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	45	für	APPR	(PP*	für	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	46	zu	PTKA	(AP*	zu	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	47	klein	ADJD	*))	klein	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	48	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	49	achte	VVFIN	*))))	achter	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	50	:	$.	*	--	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	51	Hinzugefügt	VVPP	(S(VP*	hinzufügen	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	52	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	53	wie	KOKOM	(S(AP*	wie	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	54	frei	ADJD	*)	frei	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	55	von	APPR	(PP*	von	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	56	Vorurteilen	NN	*)	vorurteil	pl	masc	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	57	Sein	PPOSAT	(NP*	sein	sg	masc	-	(30|(1)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	58	Geist	NN	*	geist	sg	masc	-	30)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	59	;	$.	*	--	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	60	sein	PPOSAT	(NP*	sein	-	-	-	(31|(1)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	61	Herz	NN	*))	herz	-	-	-	31)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	62	wie	KOKOM	(NP*	wie	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	63	offen	ADJD	(AP*	offen	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	64	jeder	PIAT	*)	jeder	sg	masc	-	(32
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	65	Tugend	NN	*)	tugend	sg	masc	-	32)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	66	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	67	Wie	KOKOM	(VP*	wie	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	68	eingestimmt	VVPP	*	einstimmen	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	69	mit	APPR	(PP*	mit	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	70	jeder	PIAT	*	jeder	sg	fem	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	71	Schönheit	NN	*))))	schönheit	sg	fem	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	72	sei	VAFIN	*))	sein	sg	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	73	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	itzt	ADV	*	itzt	sg	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	sprach	VVFIN	*	sprechen	sg	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	Hafi	NE	*	hafi	sg	masc	-	(3)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	doch	ADV	*	doch	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	so	ADV	(AP*	so	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	ungewiß	ADJD	(CAP*	ungewiß	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	8	So	ADV	(AP*	so	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	9	kalt	ADJD	*)))	kalt	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	10	von	APPR	(PP*	von	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	11	ihm	PPER	*))	ihm	sg	masc	-	(1)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	SITTAH	NE	(VROOT(PSEUDO*	sittah	-	-	-	(15
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Kalt	VVIMP	(VROOT(PSEUDO(S*	kalt	sg	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	nun	ADV	(AVP*	nun	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	wohl	ADV	*)	wohl	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	nicht	PTKNEG	(VP*	nicht	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	;	$.	*	--	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	verlegen	VVINF	*))	verlegen	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Als	APPR	*	als	-	-	-	(33
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	halt	ADV	*	halt	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	ers	ADV	*	ers	-	-	-	(44)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	für	APPR	*	für	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	gefährlich	ADJD	*	gefährlich	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	ihn	PPER	*	ihn	sg	masc	-	(34|(1)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	8	zu	PTKZU	*	zu	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	9	loben	VVINF	*	loben	-	-	-	34)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	11	Und	KON	*	und	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	12	woll	VMFIN	*	woll	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	13	'	$(	*	--	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	14	ihn	PPER	*	ihn	sg	masc	-	(1)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	15	unverdient	ADJD	*	unverdient	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	16	doch	ADV	*	doch	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	17	auch	ADV	*	auch	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	18	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	19	tadeln	VVINF	*	tadeln	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	20	.	$.	*	--	-	-	-	-

Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	Wie	PWAV	*	wie	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	oder	KON	*	oder	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	wär	VAFIN	*	sein	sg	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	es	PPER	*	es	sg	neut	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	wirklich	ADJD	*	wirklich	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	so	ADV	*	so	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	daß	KOUS	*	daß	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	8	selbst	ADV	*	selbst	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	9	Der	ART	*	der	sg	masc	-	(1
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	10	Beste	NN	*	gut	sg	masc	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	11	seines	PPOSAT	*	sein	sg	neut	-	(35|(1)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	12	Volkes	NN	*	volk	sg	neut	-	1)|35)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	13	seinem	PPOSAT	*	sein	sg	masc	-	(35|(1)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	14	Volke	NN	*	volk	sg	masc	-	35)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	15	Nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	16	ganz	ADV	*	ganz	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	17	entfliehen	VVINF	*	entfliehen	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	18	kann	VMFIN	*	können	sg	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	19	?	$.	*	--	-	-	-	-

Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	daß	KOUS	(VROOT(PSEUDO(S*	daß	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	wirklich	ADJD	(VP*	wirklich	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	sich	PRF	*	sich	sg	-	-	(1)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	Al-Hafi	NE	(NP*	al-hafi	sg	masc	-	(3)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	seines	PPOSAT	(NP*	sein	sg	masc	-	(1|(3)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	Freunds	NN	*))	freund	sg	masc	-	1)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	von	APPR	(PP*	von	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	dieser	PDAT	*	dieser	sg	fem	-	(36
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	8	Seite	NN	*)	seite	sg	fem	-	36)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	9	Zu	NN	*	zu	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	10	schämen	VVINF	*)	schämen	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	11	hätte	VAFIN	*)	haben	sg	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	12	?	$.	*))	--	-	-	-	33)

Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Der	ART	*	der	sg	masc	-	(1
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	Jude	NN	*	jude	sg	masc	-	1)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	sei	VAFIN	*	sein	sg	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	mehr	ADV	*	mehr	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	oder	KON	*	oder	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	weniger	ADV	*	weniger	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	Als	APPR	*	als	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	Jud	NE	*	jud	-	-	-	(37)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	8	'	$(	*	--	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	10	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	11	er	PPER	*	er	sg	masc	-	(1)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	12	nur	ADV	*	nur	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	13	reich	ADJD	*	reich	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	14	:	$.	*	--	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	15	genug	PIAT	*	genug	*	*	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	16	für	APPR	*	für	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	17	uns	PPER	*	uns	pl	*	-	(18)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	18	!	$.	*	--	-	-	-	-

Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Du	PPER	(VROOT(PSEUDO(S*	du	sg	*	-	(15)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	willst	VVFIN	*	wollen	sg	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	ihm	PPER	*	ihm	sg	*	-	(1)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	aber	ADV	*	aber	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	doch	ADV	*	doch	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	das	ART	(VP(NP*	der	sg	neut	-	(22
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	Seine	NE	*	seine	sg	neut	-	22)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	mit	APPR	(PP*	mit	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	8	Gewalt	NN	*))	gewalt	sg	fem	-	(38)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	9	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	10	nehmen	VVINF	*)	nehmen	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	12	Schwester	NN	*)	schwester	*	*	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	13	?	$.	*))	--	-	-	-	-

Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	SITTAH	NE	(VROOT(PSEUDO*	sittah	-	-	-	(15
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ja	PTKANT	(VROOT(PSEUDO(S*	ja	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	was	PWS	*	was	sg	neut	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	heißt	VVFIN	*	heißen	sg	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	Bei	APPR	(PP*	bei	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	dir	PPER	(AP*	dir	sg	*	-	(7)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	Gewalt	NN	*)))	gewalt	sg	fem	-	(38)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	?	$.	*))	--	-	-	-	-

Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Mit	APPR	*	mit	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	Feu	NN	*	feu	sg	neut	-	(39
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	r	NN	*	--	-	-	-	39)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	und	KON	*	und	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	Schwert	NN	*	schwert	sg	masc	-	(40)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	?	$.	*	--	-	-	-	-

Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nein	PTKANT	(VROOT(PSEUDO(S*	nein	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	nein	PTKANT	(AVP(S*	nein	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	Was	PWS	*	was	sg	neut	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	braucht	VVFIN	*	brauchen	sg	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	es	PPER	*)	es	sg	neut	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	mit	APPR	(PP*	mit	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	8	den	ART	*	der	pl	*	-	(41
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	9	Schwachen	NN	*	schwache	pl	*	-	41)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	10	für	APPR	(PP*	für	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	11	Gewalt	NN	*))	gewalt	sg	fem	-	(38)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	13	Als	KOUS	(PP*	als	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	14	ihre	PPOSAT	*	ihr	sg	fem	-	(41)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	15	Schwäche	NN	*)))	schwäche	sg	fem	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	16	?	$.	*))	--	-	-	-	-

Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	Komm	NN	*	komm	sg	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	vor	APPR	*	vor	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	itzt	ADV	(AVP*	itzen	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	nur	ADV	*)	nur	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	mit	APPR	(S(PP*	mit	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	In	NN	*)	in	pl	neut	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	meinen	VVFIN	*	meinen	pl	neut	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	8	Haram	NE	*	haram	pl	neut	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	10	eine	ART	(VP(NP*	ein	sg	fem	-	(42
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	11	Sängerin	NN	*)	sängerin	sg	fem	-	42)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	12	Zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	13	hören	VVINF	*)	hören	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	15	die	PRELS	(S*	der	sg	fem	-	(42)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	16	ich	PPER	(NP*	ich	sg	*	-	(6)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	17	gestern	ADV	*)	gestern	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	18	erst	ADV	(VP*	erst	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	19	gekauft	VVPP	*))))	kaufen	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	20	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Es	PPER	(VROOT(PSEUDO(S*	es	sg	neut	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	reift	VVFIN	*	reifen	sg	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	indes	ADV	*	indes	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	bei	APPR	(PP*	bei	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	mir	PPER	*)	sich	sg	*	-	(6)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	vielleicht	ADV	*	vielleicht	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	ein	ART	(NP*	ein	sg	masc	-	(43
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	Anschlag	NN	*	anschlag	sg	masc	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	43)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	9	Den	NE	*)	der	sg	masc	-	(43)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	10	ich	PPER	*	ich	sg	*	-	(6)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	11	auf	APPR	(PP*	auf	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	12	diesen	PDAT	*	dieser	sg	masc	-	(1
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	13	Nathan	NN	*)	nathan	sg	masc	-	1)
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	14	habe	VAFIN	*)	haben	sg	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	15	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	Komm	NN	*	komm	sg	-	-	-
Nathan_Act2_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

#end document
