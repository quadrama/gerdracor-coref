#begin document (Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll); part 000
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nathan	NE	(VROOT(PSEUDO(CNP*	nathan	-	-	-	(1)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	und	KON	*	und	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	der	ART	(NP*	der	sg	fem	-	(15
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	3	Tempelherr	NN	*))	tempelherr	sg	fem	-	15)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wie	PWAV	(VROOT(PSEUDO*	wie	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	seid	VAFIN	*	sein	pl	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ihrs	NN	*	ihr	sg	*	-	(16)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ihr	PPER	*	ihr	pl	*	-	(1)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	habt	VAFIN	*	haben	pl	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	Sehr	ADV	*	sehr	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	3	lang	ADJD	*	lang	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	4	'	$(	*	--	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	5	Euch	PPER	*	euch	pl	*	-	(1)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	6	bei	APPR	*	bei	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	7	dem	ART	*	der	sg	masc	-	(7
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	8	Sultan	NN	*	sultan	sg	masc	-	7)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	9	aufgehalten	VVPP	*	aufhalten	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	10	.	$.	*	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	So	ADV	(VROOT(PSEUDO(AVP*	so	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	lange	ADV	*	lange	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	nun	ADV	*	nun	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	3	wohl	ADV	*	wohl	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	4	nicht	PTKNEG	*)	nicht	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(1)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	ward	VVFIN	*	werden	sg	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	im	APPRART	(PP*	in	sg	neut	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	3	Hingehn	NN	*)	hingehn	sg	neut	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	4	Zu	APPR	(PP*	zu	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	5	viel	PIS	*)	viel	*	*	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	6	verweilt	VVFIN	*)	verweilen	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ah	NE	*	ah	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	3	wahrlich	ADV	(NP*	wahrlich	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	4	Curd	NE	*	curd	-	-	(PER*)	(15)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	5	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	6	der	ART	(NP*	der	sg	masc	-	(7
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	7	Mann	NN	*	mann	sg	masc	-	7)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	8	Steht	NN	*))	stehen	sg	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	9	seinen	PPOSAT	(NP*	sein	sg	masc	-	(17|(7)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	10	Ruhm	NN	*)	ruhm	sg	masc	-	17)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	Sein	PPOSAT	(VROOT(PSEUDO(S(NP*	sein	sg	neut	-	(17|(7)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ruhm	NN	*)	ruhm	sg	neut	-	17)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	3	bloß	ADV	*	bloß	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	4	sein	PPOSAT	(NP*	sein	-	-	-	(7)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	5	Schatten	NN	*))	schatten	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	Doch	KON	(VROOT(PSEUDO(S*	doch	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	laßt	VVIMP	*	lassen	pl	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	vor	APPR	(PP*	vor	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	3	allen	PIAT	*	aller	pl	masc	-	(18
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	4	Dingen	NN	*)	ding	pl	masc	-	18)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	5	Euch	PPER	*	euch	pl	*	-	(15)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	6	geschwind	ADJD	*	geschwind	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	7	Nur	ADV	*	nur	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	8	sagen	VVINF	*)	sagen	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	9	.	$.	*	--	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	10	.	$.	*	--	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	Was	PWS	*	was	sg	neut	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	?	$.	*	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	Er	PPER	(VROOT(PSEUDO(S(S*	er	sg	masc	-	(7)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	will	VMFIN	*	wollen	sg	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	Euch	PPER	(VP*	euch	sg	masc	-	(15)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	3	sprechen	VVINF	*))	sprechen	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	4	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	5	will	VMFIN	*	wollen	sg	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	7	Daß	KOUS	(S*	daß	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	8	ungesäumt	ADJD	*	ungesäumen	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	9	Ihr	PPER	*	ihr	pl	*	-	(15)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	10	zu	APPR	(PP*	zu	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	11	ihm	PPER	*)	ihm	sg	masc	-	(7)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	12	kommt	VVFIN	*))	kommen	sg	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	13	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	Begleitet	VVFIN	*	begleiten	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	Mich	PPER	*	mich	sg	*	-	(1)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	nur	ADV	*	nur	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	3	nach	APPR	*	nach	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	4	Hause	NN	*	haus	sg	neut	-	(19
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	6	wo	PWAV	*	wo	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	7	ich	PPER	*	ich	sg	*	-	(1)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	8	noch	ADV	*	noch	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	9	für	APPR	*	für	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	10	ihn	PPER	*	ihn	sg	masc	-	19)|(7)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	11	Erst	ADV	*	erst	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	12	etwas	ADV	*	etwas	-	-	-	(20
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	13	anders	ADV	*	anders	-	-	-	20)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	14	zu	PTKZU	*	zu	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	15	verfügen	VVINF	*	verfügen	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	16	habe	VAFIN	*	haben	sg	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	17	:	$.	*	--	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	18	Und	KON	*	und	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	19	dann	ADV	*	dann	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	20	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	21	so	ADV	*	so	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	22	gehn	ADJD	*	gehn	sg	*	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	23	wir	PPER	*	wir	pl	*	-	(21)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	24	.	$.	*	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nathan	NE	*	nathan	-	-	-	(1)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	Euer	ADJA	*	euer	-	-	-	(19|(1)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	3	Haus	NN	*	haus	-	-	-	19)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	4	Betret	NN	*	betret	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	5	'	$(	*	--	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	6	ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	7	wieder	ADV	*	wieder	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	8	eher	ADV	*	eher	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	9	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	10	.	$.	*	--	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	11	.	$.	*	--	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	12	.	$.	*	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	So	ADV	(VROOT(PSEUDO(S*	so	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	seid	VAFIN	*	sein	pl	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	Ihr	PPER	(VP*	ihr	pl	*	-	(15)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	3	doch	ADV	*	doch	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	4	indes	ADV	*	indes	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	5	schon	ADV	*	schon	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	6	da	ADV	*	da	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	7	gewesen	VAPP	*))	sein	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	8	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	habt	VAFIN	(VROOT(PSEUDO(S*	haben	pl	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	Indes	NE	*	indes	sg	neut	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	sie	PPER	*	sie	pl	*	-	(2)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	3	doch	ADV	(VP*	doch	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	4	gesprochen	VVPP	*))	sprechen	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	Nun	ADV	(S*)	nun	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	Sagt	NN	*	sagen	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	:	$.	*	--	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	3	wie	KOKOM	(NP*	wie	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	4	Gefällt	NN	*	gefallen	pl	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	5	Euch	PPER	(NP*	euch	pl	*	-	(15)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	6	Recha	NE	*	recha	*	*	-	(2)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	7	?	$.	*))))	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	Über	APPR	(VROOT(PSEUDO(PP*	über	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	allen	PIAT	*	aller	sg	masc	-	(22
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	Ausdruck	NN	*)	ausdruck	sg	masc	-	22)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	Allein	ADV	(NP*	allein	-	-	-	(23
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	3	–	KOUS	(S*	–	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	4	sie	PPER	*	sie	sg	fem	-	(24|(2)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	5	wiedersehn	ADV	*	wiedersehn	-	-	-	24)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	6	–	VVFIN	*	–	sg	neut	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	7	das	PDS	(S*	der	sg	neut	-	(24)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	8	werd	VAFIN	*	werden	sg	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	9	ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	10	nie	ADV	*)))	nie	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	11	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nie	ADV	(VROOT(PSEUDO(S*)	nie	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	nie	ADV	(VROOT(PSEUDO(S*)	nie	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ihr	PPER	*	ihr	pl	*	-	(1)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	müßtet	VMFIN	*	müßten	sg	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	3	mir	PPER	*	sich	sg	*	-	(4)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	4	zur	APPRART	*	zu	sg	fem	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	5	Stelle	NN	*	stelle	sg	fem	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	6	denn	KON	*	denn	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	7	Versprechen	NN	*	versprechen	pl	neut	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	8	:	$.	*	--	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	9	–	XY	*	–	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	10	daß	KOUS	*	daß	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	11	ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	12	sie	PPER	*	sie	sg	fem	-	(2)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	13	auf	APPR	*	auf	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	14	immer	ADV	*	immer	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	15	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	16	immer	ADV	*	immer	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	17	–	$(	*	–	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	18	Soll	VMFIN	*	sollen	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	19	können	VMFIN	*	können	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	20	sehn	CARD	*	sehn	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	21	.	$.	*	--	-	-	-	23)

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wie	PWAV	*	wie	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	wollt	VMFIN	*	wollen	pl	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	Ihr	PPER	*	ihr	pl	*	-	(15)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	4	daß	KOUS	*	daß	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	5	ich	PPER	*	ich	sg	*	-	(1)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	6	das	ART	*	der	sg	neut	-	(23)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	7	Versteh	NN	*	versteh	*	*	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	8	'	$(	*	--	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	9	?	$.	*	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*))	tempelherr	-	-	-	(15)

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	nach	APPR	(VROOT(PSEUDO(AP(PP*	nach	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	einer	ART	*	ein	sg	fem	-	(25
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	kurzen	ADJA	*	kurz	sg	fem	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	3	Pause	NN	*)	pause	sg	fem	-	25)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	4	ihm	PPER	*	ihm	sg	masc	-	(1)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	5	plötzlich	ADJD	*	plötzlich	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	6	um	APPR	(AP(PP*	um	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	7	den	ART	*	der	sg	masc	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	8	Hals	NN	*)	hals	sg	masc	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	9	fallend	ADJD	*))	fallend	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	Mein	PPOSAT	(VROOT(PSEUDO(NP*	mein	sg	masc	-	(1|(4)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	Vater	NN	*)	vater	sg	masc	-	1)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	sg	masc	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	Junger	ADJA	*	junger	sg	masc	-	(15
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	Mann	NN	*	mann	sg	masc	-	15)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*))	tempelherr	-	-	-	(15)

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	ihn	PPER	(VROOT(PSEUDO(AP*	ihn	sg	masc	-	(1)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	eben	ADV	(AVP*	eben	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	so	ADV	*)	so	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	3	plötzlich	ADJD	*	plötzlich	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	4	wieder	ADV	(AP*	wieder	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	5	lassend	ADJD	*))	lassend	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nicht	PTKNEG	(VROOT(PSEUDO(NP*	nicht	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	Sohn	NN	*	sohn	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	?	$.	*)))	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	bitt	VVFIN	*	bitt	sg	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	3	'	$(	*	--	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	4	Euch	PPER	*	euch	pl	*	-	(1
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	6	Nathan	NE	*	nathan	-	-	-	1)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	7	!	$.	*	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*))	–	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	Lieber	ADV	(VROOT(PSEUDO(NP*	lieb	-	-	-	(15
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	junger	ADJA	*	jung	pl	masc	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	Mann	NN	*)	mann	*	masc	-	15)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nicht	PTKNEG	(VROOT(PSEUDO(NP*	nicht	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	Sohn	NN	*	sohn	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	?	$.	*)))	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	bitt	VVFIN	*	bitt	sg	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	3	'	$(	*	--	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	4	Euch	PPER	*	euch	pl	*	-	(1
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	6	Nathan	NE	*	nathan	-	-	-	1)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	7	!	$.	*	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	beschwör	VVFIN	*	beschwör	sg	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	3	'	$(	*	--	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	4	Euch	PPER	*	euch	pl	*	-	(1)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	5	bei	APPR	*	bei	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	6	den	ART	*	der	pl	masc	-	(26
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	7	ersten	ADJA	*	erster	pl	masc	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	8	Banden	NN	*	bande	pl	masc	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	9	der	ART	*	der	sg	masc	-	(27
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	10	Natur	NN	*	natur	-	-	-	26)|27)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	11	!	$.	*	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	Zieht	VVFIN	(S*	ziehen	pl	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	ihnen	PPER	*)	ihnen	pl	*	-	(26)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	3	spätre	ADJA	(NP*	spätr	-	-	-	(28
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	4	Fesseln	NN	*	fessel	pl	fem	-	28)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	5	doch	ADV	(AVP(AVP*	doch	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	6	nicht	PTKNEG	*)	nicht	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	7	vor	PTKVZ	*))	vor	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	8	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	Begnügt	VVFIN	(S*	begnügen	sg	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	Euch	PPER	*	euch	pl	*	-	(1)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	3	doch	ADV	(VP(NP*	doch	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	4	ein	ART	*	ein	sg	masc	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	5	Mensch	NN	*)	mensch	sg	masc	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	6	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	7	sein	VAINF	*)))	sein	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	8	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	Stoßt	NE	*	stoßen	pl	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	mich	PPER	*	mich	sg	*	-	(4)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	3	Nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	4	von	APPR	*	von	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	5	Euch	PPER	*	euch	sg	masc	-	(1)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	6	!	$.	*	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	Lieber	NN	(VROOT(PSEUDO*	lieb	-	-	-	(15
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	lieber	ADJA	(NP*	lieber	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	3	Freund	NN	*)	freund	-	-	-	15)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	.	$.	(VROOT(PSEUDO*	--	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*	--	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO*	und	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	Sohn	NN	*	sohn	sg	masc	-	(29)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	Sohn	NN	*	sohn	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	Auch	ADV	(AVP(AVP*	auch	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	dann	ADV	*)	dann	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*)	nicht	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	5	dann	ADV	(S(AVP*	dann	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	6	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	7	einmal	ADV	*)	einmal	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	9	wenn	KOUS	*	wenn	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	10	Erkenntlichkeit	NN	(NP*	erkenntlichkeit	sg	fem	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	11	zum	APPRART	(PP*	zu	sg	neut	-	(30
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	12	Herzen	NN	*))	herz	sg	neut	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	13	Eurer	PPOSAT	(VP(NP*	eurer	*	*	-	(2|(1)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	14	Tochter	NN	*	tochter	*	*	-	30)|2)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	15	Der	ART	(NP*	der	sg	masc	-	(31
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	16	Liebe	NN	*))	liebe	sg	masc	-	31)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	17	schon	ADV	*	schon	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	18	den	ART	(NP*	der	sg	masc	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	19	Weg	NN	*)	weg	sg	masc	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	20	gebahnet	VVPP	*)	bahnen	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	21	hätte	VAFIN	*)	haben	sg	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	22	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	Auch	ADV	(VROOT(PSEUDO(S(AVP*	auch	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	dann	ADV	*	dann	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	3	einmal	ADV	*)	einmal	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	5	wenn	KOUS	*	wenn	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	6	in	APPR	(NP(VP(PP*	in	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	7	eins	PIS	*)	eins	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	8	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	9	schmelzen	VVINF	*)	schmelz	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	10	Auf	APPR	(PP*	auf	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	11	Euern	NN	*	euer	-	-	-	(1)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	12	Wink	NE	*))	wink	sg	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	13	nur	ADV	*	nur	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	14	beide	PIS	*)	beide	pl	*	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	15	warteten	VVFIN	*)	warten	pl	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	16	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ihr	PPER	(S*	ihr	pl	*	-	(1)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	schweigt	VVFIN	*)	schweigen	sg	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ihr	PPER	(VROOT(PSEUDO(S*	ihr	pl	*	-	(15)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	überrascht	VVFIN	*	überraschen	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	mich	PPER	(NP*	mich	sg	*	-	(1)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	4	junger	ADJA	(NP*	jung	pl	masc	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	5	Ritter	NN	*)))	ritter	pl	masc	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	überrasch	VVFIN	*	überrasch	sg	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	3	Euch	PPER	*	euch	pl	*	-	(1)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	4	?	$.	*	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	überrasch	ADJD	*	überrasch	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	3	Euch	PPER	*	euch	pl	*	-	(1
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	5	Nathan	NE	*	nathan	-	-	-	1)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	7	Mit	APPR	*	mit	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	8	Euern	NN	*	euer	pl	masc	-	(32|(1)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	9	eigenen	ADJA	*	eigen	pl	masc	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	10	Gedanken	NN	*	gedanke	pl	masc	-	32)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	11	?	$.	*	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ihr	PPOSAT	(NP*	ihr	pl	*	-	(1)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	Verkennt	NN	*	verkennen	sg	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	3	sie	PPER	(S*	sie	sg	fem	-	(32)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	4	doch	ADV	(AVP*	doch	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	5	in	APPR	*)	in	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	6	meinem	PPOSAT	(NP*	mein	sg	neut	-	(33|(4)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	7	Munde	NN	*)	mund	sg	neut	-	33)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	8	nicht	PTKNEG	*))	nicht	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	9	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	überrasch	ADJD	*	überrasch	sg	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	3	'	$(	*	--	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	4	Euch	PPER	*	euch	pl	*	-	(1)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	5	?	$.	*	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	Eh	XY	(VROOT(PSEUDO*	eh	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	ich	PPER	(S(NP*	ich	sg	*	-	(1)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	einmal	ADV	*)	einmal	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	3	weiß	VVFIN	*	weiß	sg	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	5	Was	PWS	(S*	was	sg	neut	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	6	für	APPR	(PP*	für	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	7	ein	ART	*	ein	sg	neut	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	8	Stauffen	NN	*)	stauff	sg	neut	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	9	Euer	ADJA	(NP*	euer	*	*	-	(34|(15)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	10	Vater	NN	*)))	vater	sg	masc	-	34)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	11	denn	KON	(S*	denn	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	12	Gewesen	NN	*	gewesen	sg	neut	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	13	ist	VAFIN	*)	sein	sg	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	14	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	sagt	VVFIN	*	sagen	sg	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	Ihr	PPER	(NP*	ihr	sg	masc	-	(1
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	4	Nathan	NE	*	nathan	sg	masc	(PER*)	1)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	5	?	$.	*))))	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	was	PWS	*	was	sg	neut	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	?	$.	*	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	In	APPR	(S(PP*	in	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	diesem	PDAT	*	dieser	sg	masc	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	3	Augenblicke	NN	*)	augenblick	sg	masc	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	4	fühlt	VVFIN	*	fühlen	sg	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	5	Ihr	PPER	(NP*	ihr	sg	neut	-	(1)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	6	nichts	PIS	*))	nichts	*	neut	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	8	Als	APPR	*	als	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	9	Neubegier	NN	*	neubegier	sg	neut	-	(35)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	10	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	Denn	KON	(VROOT(PSEUDO*	denn	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	seht	VVFIN	*	sehen	sg	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(1)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	habe	VAFIN	*	haben	sg	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	selbst	ADV	(NP*	selbst	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	3	Wohl	NN	*)	wohl	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	4	einen	ART	(VP(NP*	ein	sg	masc	-	(34
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	5	Stauffen	NN	*)	stauffen	sg	masc	-	34)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	6	ehedem	PIS	*	ehedem	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	7	gekannt	VVPP	*	kennen	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	9	Der	ART	(S(NP*	der	sg	masc	-	(34)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	10	Conrad	NE	*)	conrad	sg	masc	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	11	hieß	VVFIN	*)))	heißen	sg	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nun	ADV	(VROOT(PSEUDO*	nun	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	–	XY	*	–	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	wenn	KOUS	(S*	wenn	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	3	mein	PPOSAT	(NP*	mein	sg	masc	-	(34|(4)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	4	Vater	NN	*)	vater	sg	masc	-	34)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	5	denn	ADV	*	denn	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	6	Nun	ADV	*)	nun	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	7	eben	ADV	(S(VP*	eben	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	8	so	ADV	*	so	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	9	geheißen	VVPP	*)	heißen	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	10	hätte	VAFIN	*)	haben	sg	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	11	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wahrlich	ADJD	(VROOT(PSEUDO*	wahrlich	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(4)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	heiße	VVFIN	*	heißen	sg	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	selber	ADV	*	selber	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	3	ja	ADV	*	ja	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	4	nach	APPR	(PP*	nach	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	5	meinem	PPOSAT	*	mein	sg	masc	-	(34|(4)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	6	Vater	NN	*	vater	sg	masc	-	34)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	7	:	$.	*	--	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	8	Curd	NE	(NP*	curd	-	-	-	(36)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	9	Ist	NE	(MPN*	sein	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	10	Conrad	NE	*))))	conrad	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nun	ADV	(VROOT(PSEUDO*	nun	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	–	XY	*	–	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	so	ADV	(S*	so	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	3	war	VAFIN	*	sein	sg	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	4	mein	PPOSAT	(NP*	mein	sg	masc	-	(34|(1)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	5	Conrad	NE	*))	conrad	sg	masc	(PER*)	34)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	6	doch	ADV	(NP*	doch	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	7	Nicht	PTKNEG	(AP*	nicht	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	8	Euer	ADJA	*)	euer	sg	masc	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	9	Vater	NN	*)	vater	sg	masc	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	Denn	KON	(VROOT(PSEUDO(CS(CS(S*	denn	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	mein	PPOSAT	(NP*	mein	sg	masc	-	(34|(1)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	Conrad	NE	*)	conrad	sg	masc	(PER*)	34)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	3	war	VAFIN	*)	sein	sg	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	5	Was	PWS	(S*	was	sg	neut	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	6	Ihr	PPER	*	ihr	sg	neut	-	(15)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	7	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	8	war	VAFIN	*	sein	sg	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	9	Tempelherr	NN	*))	tempelherr	sg	masc	-	(37)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	10	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	11	war	VAFIN	(S*	sein	sg	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	12	nie	ADV	(VP*	nie	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	13	vermählt	VVPP	*)))	vermählen	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	14	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	O	ITJ	*	O	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	darum	PROAV	*	darum	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wie	PWAV	(VROOT(PSEUDO*	wie	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	O	KON	*	O	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	darum	PROAV	*	darum	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	könnt	VVFIN	*	können	sg	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	3	'	$(	*	--	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	4	er	PPER	*	er	sg	masc	-	(34)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	5	doch	ADV	*	doch	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	6	Mein	PPOSAT	*	mein	sg	masc	-	(4)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	7	Vater	NN	*	vater	sg	masc	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	8	wohl	ADV	*	wohl	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	9	gewesen	VAPP	*	sein	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	10	sein	VAINF	*	sein	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	11	.	$.	*	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ihr	PPER	(VROOT(PSEUDO(S*	ihr	pl	*	-	(15)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	scherzt	VVFIN	*)	scherzen	sg	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ihr	PPER	*	ihr	pl	*	-	(1)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	nehmts	ADV	*	nehmts	-	-	-	(38)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	3	wahrlich	ADV	(AP*	wahrlich	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	4	zu	PTKA	*	zu	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	5	genau	ADJD	*))	genau	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	6	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	Was	PWS	(S*	was	sg	neut	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	wärs	VAFIN	*	wär	-	-	-	(38)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	3	Denn	KON	(AVP*	denn	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	4	nun	ADV	*))	nun	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	So	ADV	(VROOT(PSEUDO(S*	so	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	was	PWS	*	was	sg	neut	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	von	APPR	(PP*	von	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	3	Bastard	NN	*)	bastard	sg	neut	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	4	oder	KON	*	oder	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	5	Bankert	NN	*)	bankert	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	6	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(S(NP*	der	sg	masc	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	Schlag	NN	*)	schlag	sg	masc	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	3	auch	ADV	(VP*	auch	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	4	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	5	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	6	verachten	VVINF	*)))	verachten	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	Doch	KON	(S*	doch	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	Entlaßt	VVFIN	*	entlassen	pl	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	3	mich	PPER	*	mich	sg	-	-	(4)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	4	immer	ADV	*)	immer	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	5	meiner	PPOSAT	(NP*	mein	pl	masc	-	(39|(4)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	6	Ahnenprobe	NN	*)	ahnenprobe	pl	masc	-	39)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(4)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	will	VMFIN	*	wollen	sg	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	Euch	PRF	*	euch	pl	*	-	(1)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	3	Eurer	NN	*	eurer	sg	*	-	(46)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	4	wiederum	ADV	(VP*	wiederum	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	5	entlassen	VVPP	*))	entlassen	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nicht	PTKNEG	(VROOT(PSEUDO(S(AVP*	nicht	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	zwar	ADV	*)	zwar	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	3	als	KOKOM	(S*	als	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	4	ob	KOUS	*	ob	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	5	ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	6	den	ART	(NP*	der	sg	masc	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	7	geringsten	ADJA	*	gering	sg	masc	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	8	Zweifel	NN	*	zweifel	sg	masc	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	9	In	APPR	(PP*	in	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	10	Euern	NN	*	euer	-	-	-	(40|(1)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	11	Stammbaum	NN	*))	stammbaum	sg	masc	-	40)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	12	setzte	VVFIN	*))	setzen	sg	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	13	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	Gott	NN	(VROOT(PSEUDO(S*	gott	sg	masc	(PER*)	(41)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	behüte	VVFIN	*)	behüten	sg	masc	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ihr	PPER	(VROOT(PSEUDO(S*	ihr	pl	*	-	(1)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	könnt	VVFIN	*	können	pl	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	ihn	PPER	*	ihn	sg	masc	-	(40)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	3	Blatt	NN	(NP*	blatt	sg	neut	-	(42)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	4	vor	APPR	(PP*	vor	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	5	Blatt	NN	*	blatt	sg	neut	-	(42)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	6	bis	APPR	(PP*	bis	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	7	Abraham	NE	*)))	abraham	sg	neut	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	8	Hinauf	NN	(VP*	hinauf	sg	neut	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	9	belegen	VVINF	*))	belegen	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(CS(S*	und	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	von	APPR	(PP*	von	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	da	ADV	*)	da	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	3	so	ADV	(AVP*	so	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	4	weiter	ADV	*))	weiter	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	6	Weiß	NN	(S*	weiße	sg	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	7	ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	8	ihn	PPER	(NP*	ihn	sg	masc	-	(38)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	9	selbst	ADV	*)	selbst	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	10	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	11	will	VMFIN	(S*	wollen	sg	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	12	ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	13	ihn	PPER	*	ihn	sg	masc	-	(38)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	14	selbst	ADV	*	selbst	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	15	beschwören	VVFIN	*)))	beschwören	pl	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	16	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ihr	PPER	(VROOT(PSEUDO(S*	ihr	pl	*	-	(43|(15)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	werdet	VAFIN	*	werden	pl	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	bitter	ADJD	*)	bitter	-	-	-	43)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	Doch	KON	*	doch	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	verdien	VVFIN	*	verdien	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	3	'	$(	*	--	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	4	ichs	PTKVZ	*	ichs	-	-	-	(43)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	5	?	$.	*	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	sg	masc	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	Schlug	NN	(NP*	schlug	sg	masc	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	Ich	PPER	(NP*	ich	sg	*	-	(1)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	3	denn	ADV	*))	denn	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	4	Euch	PPER	(S*	euch	pl	*	-	(15)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	5	schon	ADV	*	schon	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	6	was	PIS	*	was	sg	neut	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	7	ab	PTKVZ	*)	ab	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	8	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ich	PPER	(S*	ich	sg	*	-	(1)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	will	VMFIN	*	wollen	sg	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	3	Euch	PPER	*	euch	pl	*	-	(15)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	4	ja	ADV	(AVP*	ja	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	5	Nur	ADV	*))	nur	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	6	bei	APPR	(VP(PP*	bei	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	7	dem	ART	*	der	sg	neut	-	(44
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	8	Worte	NN	*)	wort	sg	neut	-	44)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	9	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	10	den	ART	(NP*	der	sg	masc	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	11	Augenblick	NN	*)	augenblick	sg	masc	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	12	So	ADV	*	so	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	13	fassen	VVINF	*)	fassen	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	14	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	Weiter	ADV	(AP*	weiter	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	nichts	PIS	*)	nichts	*	neut	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	Gewiß	ADV	(VROOT(PSEUDO(S*)	gewiß	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	Nichts	PIS	(CO(AVP*	nichts	*	neut	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	weiter	ADV	*))	weiter	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	O	ITJ	(VROOT(PSEUDO(CS(S*)	O	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	so	ADV	(S(VP*	so	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	vergebt	VVPP	*)))	vergeben	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	.	$.	(VROOT(PSEUDO*	--	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*	--	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nun	ADV	(VROOT(PSEUDO(S*	nun	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	kommt	VVFIN	*	kommen	sg	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	nur	ADV	(S*	nur	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	4	kommt	VVFIN	*))	kommen	sg	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wohin	PWAV	(VROOT(PSEUDO*	wohin	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nein	PTKANT	*	nein	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	Mit	APPR	*	mit	-	-	-	(45
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	in	APPR	*	in	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	3	Euer	ADJA	(NP*	euer	sg	neut	-	(19|(1)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	4	Haus	NN	*)	haus	sg	neut	-	45)|19)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	Das	PDS	*	der	sg	neut	-	(45)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	das	PDS	*	der	sg	neut	-	(45)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	Da	KOUS	*	da	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	brennts	NE	*	brennt	-	-	-	(31)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ich	PPER	(S*	ich	sg	*	-	(4)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	will	VMFIN	*	wollen	sg	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	3	Euch	PPER	(VP*	euch	sg	neut	-	(1)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	4	hier	ADV	*	hier	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	5	erwarten	VVINF	*))	erwarten	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	Geht	VVFIN	*	gehen	sg	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	Soll	VMFIN	(S*	sollen	sg	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	3	sie	PPER	(VP*	sie	sg	fem	-	(2)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	4	wiedersehn	VVINF	*))	wiedersehn	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	5	:	$.	*	--	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	6	so	ADV	(S*	so	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	7	seh	VVFIN	*	seh	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	8	ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	9	sie	PPER	*	sie	sg	fem	-	(2)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	10	Noch	ADV	(AVP*	noch	sg	neut	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	11	oft	ADV	*	oft	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	12	genug	ADV	*))	genug	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	13	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wo	PWAV	(VROOT(PSEUDO(S*	wo	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	:	$.	*	--	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	3	so	ADV	(S*	so	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	4	sah	VVFIN	*	sehen	sg	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	5	ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	6	sie	PPER	*	sie	*	*	-	(2)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	7	Schon	ADV	(AP(AVP*	schon	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	8	viel	ADV	*)	viel	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	9	zu	PTKA	*	zu	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	10	viel	PIS	*)))	viel	*	*	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	11	.	$.	*	--	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	12	.	$.	*	--	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	13	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(1)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	1	will	VMFIN	*	wollen	sg	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	2	mich	PRF	(VP*	mich	sg	-	-	(1)
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	3	möglichst	ADV	*	möglichst	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	4	eilen	VVINF	*))	eilen	-	-	-	-
Nathan_Act3_Scene9.part.xml.rkpt.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

#end document
