#begin document (Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll); part 000
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Montan	NE	(VROOT(PSEUDO*	montan	-	-	_stage	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	_stage	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Corydon	NE	(VROOT(PSEUDO(S*	corydon	-	-	_stage	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	in	APPR	(PP*	in	-	-	_stage	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	Schäfertracht	NN	(CNP*	schäfertracht	-	-	_stage	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	und	KON	*	und	-	-	_stage	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	einer	ART	(NP*	ein	sg	fem	_stage	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	langen	ADJA	*	lang	sg	fem	_stage	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	schwarzen	ADJA	*	schwarz	sg	fem	_stage	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	Peruque	NN	*)	peruque	sg	fem	_stage	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	und	KON	*	und	-	-	_stage	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	großen	ADJA	(NP*	groß	sg	fem	_stage	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	Säbel	NN	*))))	säbel	sg	fem	_stage	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	.	$.	*))	--	-	-	_stage	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Wohin	PWAV	(VROOT(PSEUDO(S*	wohin	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	wirds	PWAV	*	wird	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	nun	ADV	*	nun	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	noch	ADV	(NP*	noch	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	gehn	CARD	*))	gehn	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	?	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	ich	PPER	(VROOT(PSEUDO(DL(S*	ich	sg	*	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	bin	VAFIN	*	sein	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	des	ART	(NP*	der	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	Laufens	NN	*)	laufen	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	satt	ADJD	*)	satt	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	;	$.	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	Ich	PPER	(S*	ich	sg	*	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	wette	VVFIN	*	wetten	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	daß	KOUS	(S*	daß	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	der	ART	(NP*	der	sg	masc	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	Schelm	NN	*)	schelm	sg	masc	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	mich	PPER	*	mich	sg	*	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	gar	ADV	*	gar	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	zum	APPRART	(PP*	zu	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	15	Besten	NN	*)	gut	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	16	hat	VAFIN	*)))	haben	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	17	.	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	montan	-	-	-	-	(0|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	0)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Nein	PTKANT	(VROOT(PSEUDO(S*	nein	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	nein	PTKANT	(AVP(S*	nein	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	hier	ADV	*	hier	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	bleiben	VVFIN	*	bleiben	pl	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	wir	PPER	*)	wir	pl	*	montan	-	-	-	-	(8)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	hier	ADV	*)	hier	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	wird	VAFIN	*	werden	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	uns	PPER	*	uns	pl	*	montan	-	-	-	-	(8)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	niemand	PIS	*	niemand	sg	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	stören	VVFIN	*)	stören	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	.	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Wie	PWAV	*	wie	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	stehts	ADV	*	stehts	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	?	$.	*	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	möchte	VMFIN	*	möchten	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	gern	ADV	*	gern	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	einmal	ADV	*	einmal	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	was	PWS	(S*	was	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	neues	ADJA	(NP(AP*	neu	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	hören	VVFIN	(NP(S*	hören	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	;	$.	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	Ich	PPER	(S*	ich	sg	*	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	bin	VAFIN	*	sein	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	der	ART	(NP*	der	sg	masc	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	Teufel	NN	*)	teufel	sg	masc	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	hohls	PTKVZ	*))	hohl	sg	masc	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	15	rund	ADV	(S*	rund	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	16	um	APPR	(PP*	um	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	17	die	ART	*	der	sg	fem	corydon	-	-	-	-	(9
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	18	Welt	NN	*)	welt	sg	fem	corydon	-	-	-	-	9)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	19	herum	PTKVZ	*))))	herum	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	20	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	21	Zu	APPR	(CPP(PP*	zu	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	22	Wasser	NN	*)	wasser	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	23	und	KON	*	und	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	24	zu	APPR	(PP*	zu	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	25	Land	NN	*)))	land	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	26	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	27	und	KON	(S*	und	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	28	doch	ADV	*	doch	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	29	noch	ADV	(AP*	noch	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	30	ochsendumm	ADJD	*)))	ochsendumm	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	31	.	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Teufel	NN	*	teufel	sg	*	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	hilft	VVFIN	*	helfen	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	michs	ADV	*	mich	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	nun	ADV	*	nun	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	daß	KOUS	(S*	daß	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	ich	PPER	*	ich	sg	*	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	die	ART	(NP*	der	sg	fem	corydon	-	-	-	-	(9
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	Welt	NN	*)	welt	sg	fem	corydon	-	-	-	-	9)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	durchkrochen	VVPP	*	durchkrechen	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	Und	KON	(VP*	und	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	da	ADV	*	da	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	gewesen	VAPP	*)	sein	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	15	bin	VAFIN	*	sein	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	16	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	17	wohin	PWAV	(S*	wohin	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	18	kein	PIAT	(NP*	kein	sg	masc	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	19	Mensch	NN	*)	mensch	sg	masc	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	20	gerochen	VVPP	*)))	gerochen	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	21	?	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ich	PPER	*	ich	sg	*	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	habe	VAFIN	*	haben	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	viel	PIS	*	viel	*	*	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	gesehn	ADJD	*	gesehn	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	allein	ADV	*	allein	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	ich	PPER	*	ich	sg	*	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	weiß	VVFIN	*	weiß	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	nicht	PTKNEG	*	nicht	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	was	PWS	*	was	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	.	$.	*	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Vor	APPR	(VROOT(PSEUDO(S(PP*	vor	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	meinen	PPOSAT	*	mein	pl	-	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	Augen	NN	*)	auge	pl	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	schwebt	VVFIN	*	schweben	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	mir	PPER	(NP*	sich	sg	*	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	stets	ADV	*)	stets	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	bald	ADV	(S*	bald	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	dieß	VVFIN	*	dassen	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	bald	ADV	(NP*	bald	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	das	PDS	*)))	der	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	.	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Von	APPR	(VROOT(PSEUDO(CS(S(PP*	von	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Nova	NE	(MPN*	--	sg	fem	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	Zembla	NE	*))	zembla	sg	fem	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	an	PTKVZ	*	an	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	bis	KOUS	(CS(S*	bis	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	zu	APPR	(PP*	zu	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	den	ART	*	der	pl	fem	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	Hottentotten	NN	*)	hottentotte	pl	fem	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	Bin	NE	*	sein	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	ich	PPER	*	ich	sg	*	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	zu	APPR	(CPP(PP*	zu	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	Pferd	NN	(CNP*	pferd	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	und	KON	*	und	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	15	Fuß	NN	*))	fuß	sg	masc	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	16	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	17	mit	APPR	(PP*	mit	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	18	Kriegs-	TRUNC	(CNP*	krieg	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	19	und	KON	*	und	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	20	Kaufmannsflotten	NN	*))	kaufmannsflotte	pl	*	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	21	;	$.	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	22	Durch	APPR	(PP*	durch	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	23	Japan	NE	(CNP*	japan	sg	neut	corydon	(LOC*)	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	24	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	25	Asien	NE	*	asien	sg	neut	corydon	(LOC*)	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	26	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	27	Rom	NE	*	rom	sg	neut	corydon	(LOC*)	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	28	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	29	Schweden	NE	*	schweden	sg	neut	corydon	(LOC*)	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	30	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	31	Afrika	NE	*	afrika	sg	neut	corydon	(LOC*)	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	32	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	33	Von	APPR	(MPN*	von	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	34	Fez	NE	*)	fez	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	35	und	KON	*	und	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	36	Surinam	NE	*)	surinam	sg	neut	corydon	(LOC*)	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	37	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	38	bis	KOUS	(S*	bis	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	39	nach	APPR	(PP*	nach	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	40	Batavia	NE	*)	batavia	-	-	corydon	(LOC*)	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	41	;	$.	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	42	Denn	KON	(S*	denn	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	43	durch	APPR	(VP(CPP(PP*	durch	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	44	die	ART	*	der	sg	fem	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	45	neue	ADJA	*	neu	sg	fem	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	46	Welt	NN	*)	welt	sg	fem	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	47	bis	APPR	(PP*	bis	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	48	zu	APPR	*	zu	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	49	den	ART	*	der	pl	fem	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	50	Patagonen	NN	*	patagon	pl	fem	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	51	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	52	Wo	PWAV	(CS(S*	wo	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	53	lauter	PIAT	(NP*	laut	*	*	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	54	Riesen	NN	*)	riese	pl	*	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	55	sind	VAFIN	*	sein	pl	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	56	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	57	bis	KOUS	(CS(S*	bis	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	58	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	59	wo	PWAV	(S*	wo	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	60	die	ART	(NP*	der	sg	fem	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	61	Zwerge	NN	*)	zwerg	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	62	wohnen	VVFIN	*)	wohnen	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	63	;	$.	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	64	Ins	APPRART	(S(PP*	in	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	65	Land	NN	*	land	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	66	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	67	wo	PWAV	(S*	wo	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	68	Mensch	NN	(CNP*	mensch	sg	masc	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	69	und	KON	*	und	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	70	Vieh	NN	*)	vieh	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	71	aus	APPR	(PP*	aus	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	72	einer	ART	*	ein	sg	fem	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	73	Pfütze	NN	*)	pfütze	sg	fem	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	74	säuft	VVFIN	*))	säufen	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	75	;	$.	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	76	Da	ADV	*	da	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	77	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	78	wo	PWAV	(S*	wo	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	79	ein	ART	(NP*	ein	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	80	wildes	ADJA	*	wild	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	81	Volk	NN	*)	volk	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	82	mit	APPR	(PP*	mit	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	83	Affenschwänzen	NN	*)	affenschwanz	pl	fem	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	84	läuft	VVFIN	*)	laufen	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	85	;	$.	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	86	Dort	ADV	(S*	dort	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	87	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	88	wo	PWAV	*	wo	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	89	die	ART	(NP*	der	pl	masc	corydon	-	-	-	-	(10
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	90	Mohren	NN	*)	mohr	pl	masc	corydon	-	-	-	-	10)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	91	sind	VAFIN	*)))	sein	pl	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	92	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	93	die	ART	(S*	der	pl	*	corydon	-	-	-	-	(10)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	94	splitternackend	ADJD	*	splitternackend	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	95	gehen	VVFIN	*	gehen	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	96	;	$.	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	97	An	APPR	(PP*	an	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	98	Orten	NN	*))))	ort	pl	masc	corydon	-	-	-	-	(11
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	99	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	100	welche	PWAT	(S*	welcher	pl	masc	corydon	-	-	-	-	(11)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	101	selbst	ADV	(PP*	selbst	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	102	der	ART	*	der	sg	fem	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	103	Teufel	NN	*)))))	teufel	sg	fem	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	104	nicht	PTKNEG	*	nicht	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	105	gesehen	VVPP	*))))))	sehen	-	-	corydon	-	-	-	-	11)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	106	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	107	Bin	NE	(S*	sein	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	108	ich	PPER	*	ich	sg	*	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	109	herumgetrollt	VVFIN	*)))	herumgrollen	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	110	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	111	und	KON	*	und	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	112	komme	VVFIN	(S*	kommen	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	113	nun	ADV	*	nun	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	114	hieher	ADV	*	hieher	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	115	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	116	Und	KON	(S*	und	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	117	find	ADJD	(NP*	find	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	118	ein	ART	*	ein	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	119	schönes	ADJA	*	schön	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	120	Land	NN	*)	land	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	121	beynah	VVFIN	*	beynah	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	122	von	APPR	(AP(PP*	von	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	123	Menschen	NN	*)	mensch	pl	masc	corydon	-	-	-	-	(12)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	124	leer	ADJD	*))))	leer	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	125	.	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	glaub	VVFIN	*	glaub	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	es	PPER	(S*	es	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	ist	VAFIN	*	sein	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	hier	ADV	*	hier	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	gar	ADV	*	gar	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	ein	ART	(NP*	ein	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	Nest	NN	*	nest	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	voll	ADJD	(NP*	voll	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	Eremiten	NN	*))))	eremite	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	.	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Der	ART	(VROOT(PSEUDO(S(NP*	der	sg	masc	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Himmel	NN	*)	himmel	sg	masc	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	wolle	VMFIN	*	wollen	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	mich	PPER	*	mich	sg	*	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	vor	APPR	(PP*	vor	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	dieser	PDAT	*	dieser	sg	fem	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	Brut	NN	*)	--	sg	fem	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	behüten	VVFIN	*)	behüten	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	.	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Nein	PTKANT	(VROOT(PSEUDO(S*	nein	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	dazu	PROAV	*	dazu	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	taug	VVFIN	*	taug	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	ich	PPER	*	ich	sg	masc	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	nicht	PTKNEG	*	nicht	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	;	$.	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	ich	PPER	(S*	ich	sg	masc	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	bin	VAFIN	*	sein	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	ein	ART	(NP*	ein	sg	masc	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	Menschenfreund	NN	*	menschenfreund	sg	masc	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	Ich	PPER	(CO(S*	ich	sg	*	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	suche	VVFIN	*	suchen	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	sie	PPER	*	sie	pl	masc	corydon	-	-	-	-	(12)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	15	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	16	wo	PWAV	(S*	wo	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	17	man	PIS	*	man	sg	*	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	18	sie	PPER	(VP*	sie	sg	fem	corydon	-	-	-	-	(12)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	19	nie	ADV	*	nie	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	20	zu	PTKZU	(VZ*	zu	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	21	finden	VVINF	*))	finden	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	22	meynt	VVFIN	*))	meynen	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	23	;	$.	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	24	Doch	KON	(S*	doch	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	25	sage	VVFIN	*	sagen	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	26	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	27	guter	ADJA	(NP*	gut	sg	masc	corydon	-	-	-	-	(0
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	28	Freund	NN	*))))))	freund	sg	masc	corydon	-	-	-	-	0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	29	!	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	bist	VAFIN	(VROOT(PSEUDO(S*	sein	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	du	PPER	*	du	sg	*	corydon	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	hier	ADV	(VP(AP*	hier	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	stets	ADV	*)	stets	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	gewesen	VAPP	*))	sein	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	?	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Wie	PWAV	(VROOT(PSEUDO(S*	wie	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	hast	VAFIN	*	haben	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	du	PPER	(VP*	du	sg	*	corydon	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	ausserdem	PIS	*	außerdem	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	dir	PPER	*	dir	sg	*	corydon	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	diesen	PDAT	(NP*	dieser	sg	masc	corydon	-	-	-	-	(13
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	Ort	NN	*)	ort	sg	masc	corydon	-	-	-	-	13)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	erlesen	VVINF	*))	erlesen	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	?	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Wie	PWAV	(VROOT(PSEUDO(S*	wie	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	heißt	VVFIN	*	heißen	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	denn	ADV	*	denn	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	dieses	PDAT	(NP*	dieser	sg	neut	corydon	-	-	-	-	(13
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	Land	NN	*))	land	sg	neut	corydon	-	-	-	-	13)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	?	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	montan	-	-	-	-	(0|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	0)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Arkadien	NE	(VROOT(PSEUDO*	arkadien	sg	neut	montan	-	-	-	-	(13)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ists	ADV	(VROOT(PSEUDO(S(ISU*	ist	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	wahr	ADJD	*))	wahr	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	?	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Arkadien	NE	(VROOT(PSEUDO(MPN*	arkadien	sg	neut	corydon	-	-	-	-	(13)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	!	$.	*)))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ey	NE	(VROOT(PSEUDO(NP*	ey	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	Ey	NE	*)	ey	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	!	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	das	PDS	(VROOT(PSEUDO(S*	der	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	ist	VAFIN	*	sein	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	ja	ADV	(AVP(AP*	ja	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	schön	ADJD	*)	schön	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	fürwahr	ADV	*))	fürwahr	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	!	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	hätte	VAFIN	*	haben	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	nicht	PTKNEG	(VP*	nicht	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	gedacht	VVPP	*	denken	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	daß	KOUS	(S(S*	daß	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	ichs	ADV	*	ichs	-	-	corydon	-	-	-	-	(14)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	noch	ADV	*	noch	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	würde	VAFIN	*	werden	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	finden	VVINF	(VP*	finden	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	Ich	PPER	(S*	ich	sg	masc	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	hab	VAFIN	*	hab	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	es	PPER	(VP*	es	sg	neut	corydon	-	-	-	-	(14)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	recht	ADV	*	recht	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	15	gesucht	VVPP	*))))	suchen	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	16	;	$.	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	17	doch	ADV	*	doch	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	18	kann	VMFIN	*	können	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	19	ich	PPER	*	ich	sg	masc	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	20	nicht	PTKNEG	*	nicht	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	21	ergründen	VVINF	(VP*	ergründen	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	22	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	23	Wer	PWS	(S*	wer	sg	masc	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	24	dies	PDS	*	dieser	sg	neut	corydon	-	-	-	-	(14
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	25	berühmte	ADJA	(VP(NP*	berühmt	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	26	Land	NN	*)	land	sg	neut	corydon	-	-	-	-	14)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	27	an	APPR	(PP*	an	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	28	diesen	PDAT	*	dieser	sg	masc	corydon	-	-	-	-	(13
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	29	Ort	NN	*)	ort	sg	masc	corydon	-	-	-	-	13)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	30	gesetzt	VVPP	*)	setzen	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	31	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	32	Ich	PPER	(S*	ich	sg	masc	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	33	hab	VAFIN	*	heben	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	34	es	PPER	(VP*	es	sg	neut	corydon	-	-	-	-	(14)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	35	für	APPR	(PP*	für	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	36	ein	ART	*	ein	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	37	Theil	NN	*	theil	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	38	von	APPR	(PP*	von	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	39	Asien	NE	*))	asien	sg	neut	corydon	(LOC*)	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	40	geschätzt	VVPP	*)))))))	schätzen	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	41	.	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	montan	-	-	-	-	(0|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	0)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ganz	ADV	(VROOT(PSEUDO(S(AVP*	ganz	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	recht	ADV	*	recht	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	Arkadien	NE	(S(NP*	arkadien	pl	fem	montan	-	-	-	-	(14)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	wo	PWAV	(S*	wo	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	vor	APPR	(PP*	vor	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	sehr	ADV	(AP*	sehr	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	langen	ADJA	*)	lang	pl	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	Jahren	NN	*)	jahr	pl	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	Wenn	KOUS	(S*	wenn	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	man	PIS	*	man	sg	*	montan	-	-	-	-	(15)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	den	ART	(NP*	der	pl	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	Dichtern	NN	*)	dichter	pl	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	15	glaubt	VVFIN	*	glauben	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	16	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	17	die	ART	(S(NP*	der	pl	masc	montan	-	-	-	-	(16
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	18	ersten	ADJA	*	erster	pl	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	19	Schäfer	NE	*)	schäfer	pl	masc	montan	-	-	-	-	16)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	20	waren	VAFIN	*	sein	pl	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	21	;	$.	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	22	Dies	PDS	(S(NP*	dieser	sg	neut	montan	-	-	-	-	(14
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	23	schöne	ADJA	*	schön	sg	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	24	Land	NN	*)	land	sg	neut	montan	-	-	-	-	14)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	25	war	VAFIN	*	sein	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	26	zwar	ADV	*	zwar	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	27	Asien	NE	(NP*	asien	sg	neut	montan	(LOC*)	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	28	ein	ART	(NP*	ein	sg	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	29	Stück	NN	*)))))))	stück	sg	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	30	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	31	Doch	KON	(S*	doch	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	32	dieses	PDAT	(NP*	dieser	sg	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	33	Land	NN	*)	land	sg	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	34	beut	VVFIN	*	beuen	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	35	uns	PPER	*	uns	pl	*	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	36	de	NE	(NP*	de	-	-	montan	-	-	-	-	(16
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	37	alten	ADJA	(NP*	alt	sg	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	38	Schäfer	NE	*	schäfer	sg	masc	montan	-	-	-	-	16)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	39	Glück	NN	*)))))	glück	sg	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	40	;	$.	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	41	Und	KON	(S(AVP(S*	und	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	42	da	KOUS	*	da	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	43	wir	PPER	*	wir	pl	*	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	44	gänzlich	ADJD	*	gänzlich	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	45	hier	ADV	(AVP*	hier	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	46	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	47	wie	PWAV	(S*	wie	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	48	jene	PDS	(NP*	jener	sg	fem	montan	-	-	-	-	(16
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	49	Schäfer	NE	*	schäfer	sg	fem	montan	-	-	-	-	16)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	50	,	$,	*)))	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	51	leben	VVFIN	*)	leben	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	52	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	53	So	ADV	*)	so	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	54	hab	VAFIN	*	hab	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	55	ich	PPER	(VP*	ich	sg	*	montan	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	56	ihm	PPER	*	ihm	sg	masc	montan	-	-	-	-	(13)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	57	dazu	PROAV	*	dazu	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	58	den	ART	(NP*	der	sg	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	59	Namen	NN	*)	name	sg	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	60	auch	ADV	*	auch	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	61	gegeben	VVPP	*)))	geben	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	62	.	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Zum	APPRART	(VROOT(PSEUDO(PP*	zu	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Henker	NN	*)	henker	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	!	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	das	PDS	(VROOT(PSEUDO(S*	der	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	ist	VAFIN	*	sein	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	dumm	ADJD	*	dumm	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	;	$.	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	ich	PPER	(S*	ich	sg	*	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	hätt	VVFIN	*	hätt	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	es	PPER	*	es	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	gern	ADV	(VP*	gern	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	geglaubt	VVPP	*	glauben	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	Wenn	KOUS	(S*	wenn	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	du	PPER	*	du	sg	*	corydon	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	des	ART	(NP*	der	sg	masc	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	süssen	ADJA	*	süssen	sg	masc	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	Traums	NN	*)	traum	sg	masc	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	15	mich	PPER	(VP*	mich	sg	*	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	16	nicht	PTKNEG	(AVP*	nicht	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	17	so	ADV	*)	so	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	18	bald	ADV	*	bald	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	19	beraubt	VVPP	*)))	berauben	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	20	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	21	Es	PPER	(S*	es	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	22	sey	VVFIN	*	sey	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	23	Arkadien	NE	*)))	arkadien	pl	fem	corydon	-	-	-	-	(14)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	24	.	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	tändelst	VVFIN	*	tändelen	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	du	PPER	(NP*	du	sg	*	corydon	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	Montan	NE	*))	montan	-	-	corydon	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	!	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	hintergehst	ADV	(PP*	hintergehen	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	dich	PRF	*	dich	sg	-	corydon	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	selbst	ADV	*)	selbst	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	nebst	VVFIN	*	nebst	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	mir	PPER	*)	sich	sg	*	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	?	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	montan	-	-	-	-	(0|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	0)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Das	PDS	(VROOT(PSEUDO(S*	der	sg	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	geht	VVFIN	*	gehen	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	wohl	ADV	*	wohl	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	an	PTKVZ	*)	an	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	.	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Das	ART	(VROOT(PSEUDO(S*	der	sg	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	man	PIS	(NP*	man	sg	*	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	ein	ART	(NP*	ein	sg	neut	montan	-	-	-	-	(13
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	neues	ADJA	*	neu	sg	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	Land	NN	*	land	sg	neut	montan	-	-	-	-	13)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	mit	APPR	(PP*	mit	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	alten	ADJA	*	alt	pl	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	Namen	NN	*)))	name	pl	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	nennet	VVFIN	*	nennen	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	Wer	PWS	(CS(S*	wer	sg	masc	montan	-	-	-	-	(17)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	nur	ADV	*	nur	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	Neu	ADJD	*	neu	*	*	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	Spanien	NE	*	spanien	sg	neut	montan	(LOC*)	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	15	Neu	ADJD	*	neu	*	*	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	16	Holl-	TRUNC	(CNP*	holl	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	17	und	KON	*	und	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	18	England	NE	*)	england	sg	neut	montan	(LOC*)	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	19	kennet	VVFIN	*)	kennen	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	20	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	21	Dem	PDS	(S*	der	sg	masc	montan	-	-	-	-	(17)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	22	dünkt	VVFIN	*	dünken	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	23	es	PPER	*	es	sg	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	24	gar	ADV	(AVP*	gar	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	25	nicht	PTKNEG	*)	nicht	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	26	fremd	ADJD	*)))	fremd	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	27	.	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Die	ART	(VROOT(PSEUDO(CS(S(NP*	der	pl	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Länder	NN	*)	land	pl	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	kenn	VVFIN	*	kenn	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	ich	PPER	*	ich	sg	*	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	wohl	ADV	*)	wohl	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	Den	PDS	(S(CS(S*	den	sg	masc	corydon	-	-	-	-	(18)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	will	VMFIN	*	wollen	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	ich	PPER	*	ich	sg	*	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	sehn	CARD	(NP*	sehn	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	der	PRELS	(S*	der	sg	masc	corydon	-	-	-	-	(18)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	mir	PPER	*	sich	sg	*	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	das	PDS	*	der	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	streitig	PTKVZ	*	streitig	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	15	machen	VVINF	*	machen	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	16	soll	VMFIN	*)))	sollen	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	17	;	$.	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	18	Doch	KON	(S*	doch	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	19	es	PPER	*	es	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	20	mag	VMFIN	*	mögen	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	21	immer	ADV	(AP*	immer	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	22	seyn	ADJD	*)	seyn	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	23	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	24	ich	PPER	(S*	ich	sg	*	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	25	kann	VMFIN	*	können	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	26	den	ART	(NP*	der	sg	masc	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	27	Namen	NN	*)	name	sg	masc	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	28	leiden	VVFIN	*)))	leiden	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	29	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	30	Ich	PPER	*	ich	sg	*	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	31	war	VAFIN	*	sein	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	32	auch	ADV	(AP*	auch	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	33	gleich	ADV	*	gleich	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	34	bereit	ADJD	*	bereit	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	35	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	36	als	KOUS	(S*	als	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	37	Schäfer	NE	*	schäfer	sg	*	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	38	mich	PRF	*	mich	sg	*	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	39	zu	PTKZU	(VZ*	zu	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	40	kleiden	VVINF	*)	kleiden	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	41	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	42	So	ADV	(S*	so	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	43	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	44	wie	PWAV	*	wie	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	45	du	PPER	*	du	sg	*	corydon	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	46	mich	PRF	*	mich	sg	*	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	47	hier	ADV	*	hier	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	48	siehst	VVFIN	*)))))	sehen	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	49	.	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	montan	-	-	-	-	(0|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	0)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Doch	KON	(VROOT(PSEUDO(CS(S*	doch	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	dieser	PDAT	(NP*	dieser	sg	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	Haarbusch	NN	*)	haarbusch	sg	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	hier	ADV	*	hier	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	Und	KON	(NP*	und	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	dieses	PDAT	*	dieser	sg	neut	montan	-	-	-	-	(19
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	große	ADJA	*	groß	sg	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	Schwerd	NN	*))	schwerd	sg	neut	montan	-	-	-	-	19)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	was	PWS	(S*	was	sg	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	soll	VMFIN	*	sollen	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	der	ART	(NP*	der	sg	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	Anputz	NN	*)	anputz	sg	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	dir	PPER	*	dir	sg	*	montan	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	In	APPR	(PP*	in	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	15	deiner	PPOSAT	*	dein	sg	fem	montan	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	16	Schäfertracht	NN	*)))	schäfertracht	sg	fem	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	17	?	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Wie	PWAV	(VROOT(PSEUDO*	wie	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	?	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	ist	VAFIN	(VROOT(PSEUDO(S*	sein	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	das	PDS	*	der	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	hier	ADV	(NP(AVP*	hier	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	nicht	PTKNEG	*)	nicht	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	Mode	NN	*))	mode	sg	fem	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	?	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	montan	-	-	-	-	(0|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	0)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Wenn	KOUS	(VROOT(PSEUDO(S*	wenn	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	das	PDS	*	der	sg	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	die	ART	(NP*	der	pl	masc	montan	-	-	-	-	(20
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	Schäfer	NE	*)	schäfer	pl	masc	montan	-	-	-	-	20)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	sehn	CARD	(VP(NP*	sehn	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	sie	PPER	(S*	sie	pl	*	montan	-	-	-	-	(20)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	fürchten	VVFIN	*	fürchten	pl	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	sich	PRF	*))	sich	pl	-	montan	-	-	-	-	(20)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	zu	PTKZU	(VZ*	zu	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	tode	VVINF	*)))	tode	sg	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	.	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Doch	KON	(VROOT(PSEUDO(S*	doch	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	weiß	VVFIN	*	weiß	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	ich	PPER	*	ich	sg	*	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	denn	ADV	(NP*	denn	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	ob	KOUS	(S*	ob	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	man	PIS	*	man	sg	*	corydon	-	-	-	-	(15)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	auch	ADV	(NP*	auch	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	Schelmen	NN	*)	schelm	pl	masc	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	trauen	VVFIN	*))	trauen	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	kann	VMFIN	*)	können	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	?	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Mit	APPR	(VROOT(PSEUDO(S(PP*	mit	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	diesem	PDAT	*	dieser	sg	masc	corydon	-	-	-	-	(19
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	Säbel	NN	*)	säbel	sg	masc	corydon	-	-	-	-	19)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	hier	ADV	*	hier	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	steh	VVFIN	*	steh	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	ich	PPER	*	ich	sg	*	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	für	APPR	(PP*	für	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	zwanzig	CARD	*	zwanzig	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	Mann	NN	*))	mann	*	masc	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	.	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	montan	-	-	-	-	(0|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	0)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Trau	NE	(VROOT(PSEUDO(S(CS(S*	trau	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	uns	PRF	*	uns	pl	*	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	nur	ADV	*	nur	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	auf	APPR	(PP*	auf	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	mein	PPOSAT	*	mein	sg	neut	montan	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	Wort	NN	*))	wort	sg	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	hier	ADV	(S*	hier	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	weiß	VVFIN	*	weißn	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	man	PIS	*	man	sg	*	montan	-	-	-	-	(15)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	nichts	PIS	(NP*	nichts	*	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	von	APPR	(PP*	von	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	Morden	NN	*))))	mord	pl	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	15	In	APPR	(PP*	in	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	16	diesem	PDAT	*	dieser	sg	neut	montan	-	-	-	-	(13
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	17	Land	NN	*)	land	sg	neut	montan	-	-	-	-	13)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	18	ist	VAFIN	*	sein	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	19	noch	ADV	(VP(VP(NP(AP*	noch	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	20	kein	PIAT	*)	kein	sg	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	21	Mensch	NN	*)	mensch	sg	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	22	erwürget	VVPP	*)	erwürgen	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	23	worden	VAPP	*))	werden	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	24	.	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Zum	APPRART	(VROOT(PSEUDO(PP*	zu	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Element	NN	*)	element	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	!	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	so	ADV	(VROOT(PSEUDO(S*	so	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	werd	VVFIN	*	werden	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	ich	PPER	*	ich	sg	*	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	nicht	PTKNEG	(NP*	nicht	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	der	ART	*	der	sg	masc	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	erste	ADJA	*)	erster	sg	masc	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	seyn	ADJD	*)	seyn	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	.	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	ändre	VVFIN	*	ändren	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	meinen	PPOSAT	(NP*	mein	pl	-	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	Staat	NN	*)	staat	sg	masc	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	und	KON	*	und	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	geh	VVIMP	(S*	gehen	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	dir	PPER	*	dir	sg	*	corydon	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	alles	PIS	*	alle	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	ein	ART	(S*	ein	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	;	$.	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	Doch	KON	(S*	doch	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	sage	VVFIN	*	sagen	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	mit	PTKVZ	*))	mit	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	wie	PWAV	(S*	wie	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	15	du	PPER	*	du	sg	*	corydon	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	16	an	APPR	(VP(PP*	an	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	17	diesen	PDAT	*	dieser	sg	masc	corydon	-	-	-	-	(13
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	18	Ort	NN	*)	ort	sg	masc	corydon	-	-	-	-	13)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	19	gekommen	VVPP	*))))	kommen	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	20	.	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	montan	-	-	-	-	(0|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	0)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ach	ITJ	(VROOT(PSEUDO(S*)	ach	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	!	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Nun	ADV	(VROOT(PSEUDO*	nun	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	was	PWS	(S*	was	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	ach	VVFIN	*)	ach	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	?	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	was	PWS	*	was	*	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	giebts	ADV	*	giebt	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	?	$.	*	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	hast	VAFIN	*	haben	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	du	PPER	(VP*	du	sg	*	corydon	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	vorgenommen	VVPP	*))	vornehmen	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	?	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ey	NE	(VROOT(PSEUDO(NP*	ey	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	Ey	NE	*)	ey	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	!	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	montan	-	-	-	-	(0|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	0)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Das	ART	(VROOT(PSEUDO(S(NP*	der	sg	neut	montan	-	-	-	-	(21
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Glück	NN	*)	glück	sg	neut	montan	-	-	-	-	21)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	hat	VAFIN	*	haben	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	mich	PPER	*	mich	sg	*	montan	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	ins	APPRART	(PP*	in	sg	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	Elend	NN	*)	elend	sg	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	hergejagt	VVFIN	*	hergejagen	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	;	$.	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	Das	ART	(NP*	der	sg	neut	montan	-	-	-	-	(21
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	Glück	NN	*	glück	sg	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	das	PRELS	(S*	der	sg	neut	montan	-	-	-	-	(21)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	bis	APPR	(PP*	bis	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	hieher	ADV	*)	hieher	sg	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	mir	PPER	*	sich	sg	*	montan	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	15	seine	PPOSAT	(NP*	sein	sg	fem	montan	-	-	-	-	(21)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	16	Treu	NN	*)	treu	sg	fem	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	17	versagt	VVPP	*)))	versagen	-	-	montan	-	-	-	-	21)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	18	.	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Es	PPER	(VROOT(PSEUDO(S*	es	sg	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	mußt	VMFIN	*	mussen	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	ein	ART	(NP*	ein	sg	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	finstrer	ADJA	*	finstr	sg	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	Thurm	NN	*)	thurm	sg	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	an	APPR	(PP*	an	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	mir	PPER	*)	sich	sg	*	montan	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	die	ART	(S(NP*	der	sg	fem	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	Neider	NN	*)	neider	*	*	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	rächen	VVFIN	*)	rächen	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	Und	KON	(S*	und	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	ich	PPER	*	ich	sg	*	montan	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	ergriff	VVFIN	*	ergreifen	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	die	ART	(NP*	der	sg	fem	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	15	Flucht	NN	*)))	flucht	sg	fem	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	16	.	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	war	VAFIN	*	sein	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	denn	ADV	*	denn	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	dein	PPOSAT	(NP*	dein	sg	neut	corydon	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	Verbrechen	NN	*))	verbrechen	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	?	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	montan	-	-	-	-	(0|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	0)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Der	ART	(VROOT(PSEUDO(S(NP*	der	sg	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	schönsten	ADJA	*	schön	pl	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	Liebe	NN	*	liebe	pl	*	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	Glück	NN	*)	glück	sg	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	;	$.	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	man	PIS	*	man	sg	*	montan	-	-	-	-	(15)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	brachte	VVFIN	*	bringen	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	mich	PPER	*	mich	sg	*	montan	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	darum	PROAV	(PP*	darum	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	Und	KON	(S*	und	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	nahm	VVFIN	*	nehmen	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	mich	PPER	*))	mich	sg	*	montan	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	in	APPR	(PP*	in	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	Verhaft	NN	*))	verhaft	sg	fem	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	15	.	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Verflucht	NN	(VROOT(PSEUDO*	verflucht	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	!	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	das	ART	(VROOT(PSEUDO(S*	der	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	heiß	ADJD	*	heiß	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	ich	PPER	*	ich	sg	*	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	dumm	ADJD	*)	dumm	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	.	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	montan	-	-	-	-	(0|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	0)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Gleich	ADV	(VROOT(PSEUDO(S(AVP*	gleich	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	drauf	PROAV	*)	drauf	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	starb	VVFIN	*	sterben	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	meine	PPOSAT	(NP*	mein	sg	fem	montan	-	-	-	-	(22|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	Frau	NN	*))	frau	sg	fem	montan	-	-	-	-	22)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	.	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Wie	PWAV	(VROOT(PSEUDO(S*	wie	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	hieß	VVFIN	*	heißen	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	sie	PPER	*)	sie	sg	fem	corydon	-	-	-	-	(22)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	?	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	montan	-	-	-	-	(0|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	0)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Celimene	NN	(VROOT(PSEUDO*))	celimene	-	-	montan	-	-	-	-	(22)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Wie	PWAV	(VROOT(PSEUDO*	wie	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	?	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Celimene	NN	(VROOT(PSEUDO*	celimene	-	-	corydon	-	-	-	-	(22)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	?	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	–	XY	*	–	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	halt	ADV	(S*)	halt	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	!	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	–	XY	*	–	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	Ich	PPER	(S*	ich	sg	*	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	kannt	VVFIN	*	kennen	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	einst	ADV	*	einst	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	eine	ART	(NP*	ein	sg	fem	corydon	-	-	-	-	(22
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	Schöne	NN	*))	schön	sg	fem	corydon	-	-	-	-	22)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	Die	PDS	(S*	der	sg	fem	corydon	-	-	-	-	(22)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	hieß	VVFIN	*	heißen	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	gerade	ADV	(AVP*	gerade	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	so	ADV	*))	so	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	.	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Potzstern	NN	(VROOT(PSEUDO*	potzstern	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	!	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	wer	PWS	(VROOT(PSEUDO(S*	wer	sg	masc	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	war	VAFIN	*	sein	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	sie	PPER	*	sie	*	*	corydon	-	-	-	-	(22)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	doch	ADV	*)	doch	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	?	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Still	NE	(VROOT(PSEUDO*	still	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	–	XY	*	–	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	–	XY	*	–	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	jetzo	ADV	(AP(AVP*	jetzo	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	fällt	VVFIN	(S*	fallen	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	mirs	PPER	*	mir	sg	*	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	ein	PTKVZ	*	ein	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	ja	ADV	*	ja	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	ja	ADV	*	ja	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	ich	PPER	(CS(S*	ich	sg	*	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	weiß	VVFIN	*	weiß	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	es	PPER	*	es	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	15	noch	ADV	*)	noch	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	16	:	$.	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	17	Sie	PPER	(S(AVP(S*	sie	sg	fem	corydon	-	-	-	-	(22)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	18	war	VAFIN	*	sein	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	19	von	APPR	(PP*	von	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	20	gutem	ADJA	*	gut	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	21	Stand	NN	*)	stand	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	22	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	23	reich	ADJD	(CAP*	reich	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	24	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	25	klug	ADJD	*	klug	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	26	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	27	schön	ADJD	(AP*	schön	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	28	vom	APPRART	(PP*	von	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	29	Gesichte	NN	*))))	gesicht	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	30	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	31	Jedoch	KON	*)	jedoch	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	32	erzehle	VVFIN	*	erzehlen	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	33	mir	PPER	*	sich	sg	*	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	34	doch	ADV	*))))	doch	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	35	ferner	ADV	*	ferner	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	36	die	ART	(NP*	der	sg	fem	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	37	Geschichte	NN	*))	geschichte	sg	fem	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	38	.	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	montan	-	-	-	-	(0|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	0)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	montan	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	floh	VVFIN	*	fliehen	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	;	$.	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	es	PPER	(S*	es	sg	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	förderte	VVFIN	*	fördert	sg	fem	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	Verzweiflung	NN	(NP*	verzweiflung	sg	fem	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	meinen	PPOSAT	(NP*	mein	sg	masc	montan	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	Schritt	NN	*))))	schritt	sg	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	.	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	montan	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	nahm	VVFIN	*	nehmen	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	nebst	ADV	*	nebst	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	einem	ART	(NP*	ein	sg	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	Knecht	NE	*	knecht	sg	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	drey	NE	*)	drey	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	kleine	ADJA	(NP*	klein	pl	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	Kinder	NN	*)	kind	pl	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	mit	PTKVZ	*)	mit	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	.	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Zwey	NE	(VROOT(PSEUDO(S(S*	zwey	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	waren	VAFIN	*	sein	pl	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	nur	ADV	*	nur	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	von	APPR	(PP*	von	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	mir	PPER	*))	sich	sg	*	montan	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	eins	CARD	*	eins	sg	neut	montan	-	-	-	-	(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	war	VAFIN	*	sein	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	von	APPR	(PP*	von	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	meinem	PPOSAT	*	mein	sg	masc	montan	-	-	-	-	(7|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	Freunde	NN	*))	freund	sg	masc	montan	-	-	-	-	7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	.	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ich	PPER	(VROOT(PSEUDO(CS(S*	ich	sg	*	montan	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	floh	VVFIN	*)	floh	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	und	KON	*	und	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	kam	VVFIN	(S*	kommen	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	hieher	PTKVZ	*)	hieher	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	hier	ADV	(S*	hier	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	leb	VVFIN	*	leb	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	ich	PPER	*	ich	sg	*	montan	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	ohne	APPR	(PP*	ohne	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	Feinde	NN	*)))	feind	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	.	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Doch	KON	(VROOT(PSEUDO(S*	doch	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	warum	PWAV	*	warum	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	nahmst	VVFIN	*	nahmen	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	du	PPER	*	du	sg	*	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	denn	ADV	*	denn	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	des	ART	(NP*	der	sg	masc	corydon	-	-	-	-	(5|(7
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	Freundes	NN	*)	freund	sg	masc	corydon	-	-	-	-	7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	Kind	NN	*	kind	sg	neut	corydon	-	-	-	-	5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	mit	APPR	(PP*	mit	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	dir	PPER	*))	dir	sg	*	corydon	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	?	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	montan	-	-	-	-	(0|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	0)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	O	NE	(VROOT(PSEUDO(S*	O	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	!	$.	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	der	ART	(S*	der	sg	masc	montan	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	zog	VVFIN	*	ziehen	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	in	APPR	(PP*	in	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	die	ART	*	der	sg	fem	montan	-	-	-	-	(9
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	Welt	NN	*)))	welt	sg	fem	montan	-	-	-	-	9)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	.	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Darinnen	ADV	*	darin	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	gleicht	VVFIN	*	gleichen	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	er	PPER	*	er	sg	masc	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	mir	PPER	*	sich	sg	*	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	.	$.	*	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Wir	PPER	(VROOT(PSEUDO(S(CS(S*	wir	pl	*	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	hätten	VAFIN	*	haben	pl	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	uns	PPER	(VP*	uns	pl	*	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	recht	ADV	(AP*	recht	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	gut	ADJD	*)	gut	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	zusammen	ADV	*	zusammen	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	schicken	VVINF	*)	schicken	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	sollen	VMFIN	*)	sollen	pl	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	Ich	PPER	(S*	ich	sg	*	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	hätte	VAFIN	*	haben	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	recht	ADV	(AVP*	recht	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	mit	APPR	(PP*	mit	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	ihm	PPER	*))	ihm	sg	masc	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	die	ART	(NP*	der	sg	fem	corydon	-	-	-	-	(9
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	15	Welt	NN	*)	welt	sg	fem	corydon	-	-	-	-	9)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	16	durchstreichen	VVINF	*	durchstreichen	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	17	wollen	VMFIN	*))	wollen	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	18	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	19	Ich	PPER	*	ich	sg	*	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	20	reist	VVFIN	*	reisen	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	21	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	22	und	KON	(S*	und	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	23	überließ	VVFIN	*	überlassen	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	24	mich	PPER	*	mich	sg	*	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	25	Wellen	NN	(NP*	welle	pl	fem	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	26	Sturm	NN	(CNP*	sturm	sg	masc	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	27	und	KON	*	und	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	28	Wind	NN	*))))	wind	sg	masc	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	29	.	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Befahl	NE	(VROOT(PSEUDO(S(AVP(NP*	befahl	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	dem	ART	(CNP(NP*	der	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	Himmel	NN	*)	himmel	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	Haus	NN	*	haus	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	und	KON	*	und	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	Hof	NN	*	hof	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	und	KON	*	und	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	Weib	NN	*	weib	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	und	KON	*	und	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	Kind	NN	*))	kind	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	Und	KON	*)	und	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	bin	VAFIN	*	sein	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	fast	ADV	(NP(AP*	fast	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	15	zwanzig	CARD	*)	zwanzig	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	16	Jahr	NN	*)	jahr	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	17	die	ART	(VP(NP*	der	sg	fem	corydon	-	-	-	-	(9
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	18	ganze	ADJA	*	ganz	sg	fem	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	19	Welt	NN	*)	welt	sg	fem	corydon	-	-	-	-	9)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	20	durchkrochen	VVPP	*))	durchkrochen	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	21	.	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Nur	ADV	(VROOT(PSEUDO(S*	nur	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	bin	VAFIN	*	sein	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	ich	PPER	*	ich	sg	masc	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	nicht	PTKNEG	*	nicht	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	entflohn	VVINF	(VP*	entflohn	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	und	KON	(S*	und	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	hab	VAFIN	*	hab	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	auch	ADV	(VP*	auch	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	nichts	PIS	*	nichts	*	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	verbrochen	VVPP	*	verbrechen	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	Doch	KON	(S*	doch	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	meiner	PPOSAT	(NP(NP*	mein	sg	fem	corydon	-	-	-	-	(23|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	Kinder	NN	*)	kind	*	*	corydon	-	-	-	-	23)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	15	Glück	NN	*)	glück	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	16	empfahl	VVFIN	*	empfehlen	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	17	mir	PPER	*	sich	sg	*	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	18	die	ART	(NP*	der	sg	fem	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	19	Natur	NN	*))))))	natur	sg	fem	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	20	.	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	montan	-	-	-	-	(0|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	0)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Wer	PWS	*	wer	sg	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	waren	VAFIN	*	sein	pl	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	sie	PPER	*	sie	pl	*	montan	-	-	-	-	(23)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	?	$.	*	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ein	ART	(VROOT(PSEUDO(CNP(NP*	ein	sg	masc	corydon	-	-	-	-	(3
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Sohn	NN	*)	sohn	sg	masc	corydon	-	-	-	-	3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	und	KON	*	und	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	eine	ART	(NP*	ein	sg	fem	corydon	-	-	-	-	(5
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	Tochter	NN	*	tochter	sg	fem	corydon	-	-	-	-	5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	nur	ADV	*))	nur	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	.	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	montan	-	-	-	-	(0|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	0)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Wie	PWAV	(VROOT(PSEUDO(S*	wie	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	aber	ADV	*	aber	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	hieß	VVFIN	*	heißen	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	dein	PPOSAT	(NP*	dein	sg	masc	montan	-	-	-	-	(3|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	Sohn	NN	*))	sohn	sg	masc	montan	-	-	-	-	3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	?	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Leander	NE	(VROOT(PSEUDO*	leander	-	-	corydon	(PER*)	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*))	montan	-	-	montan	-	-	-	-	(0)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	sieht	VVFIN	(VROOT(PSEUDO(S(S*	sehen	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	ihn	PPER	*)	ihn	sg	masc	montan	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	steif	VVFIN	*	steif	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	an	PTKVZ	*)	an	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	.	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Meinem	PPOSAT	(VROOT(PSEUDO(S(NP*	mein	sg	masc	montan	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Herzen	NN	*)	herz	sg	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	Sagt	VVFIN	*	sagt	sg	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	hier	ADV	*	hier	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	die	ART	(NP*	der	sg	fem	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	Ahndung	NN	*)	ahndung	sg	fem	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	was	PWS	(S*	was	*	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	mit	APPR	(PP*	mit	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	Hoffnungsvollen	NN	*)	hoffnungsvolle	sg	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	Schmerzen	NN	*))	schmerz	sg	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	.	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Noch	ADV	(VROOT(PSEUDO(NP*	noch	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	eins	CARD	*)	einer	sg	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	.	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Mein	PPOSAT	(VROOT(PSEUDO(NP*	mein	sg	masc	montan	-	-	-	-	(7|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	werther	ADJA	*	werther	sg	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	Freund	NN	*)	freund	sg	masc	montan	-	-	-	-	7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	!	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	verzeih	ADJD	*	verzeih	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	wie	PWAV	*	wie	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	nennst	ADV	*	nennen	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	du	PPER	*	du	sg	*	montan	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	dich	PRF	*	dich	sg	-	montan	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	?	$.	*	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ich	PPER	*	ich	sg	*	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	?	$.	*	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Orgon	NE	(VROOT(PSEUDO*	orgon	-	-	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	montan	-	-	-	-	(0|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	0)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Orgon	NE	(VROOT(PSEUDO(MPN*	orgon	-	-	montan	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	?	$.	*)))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ja	PTKANT	(VROOT(PSEUDO(S*	ja	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	der	ART	(NP*	der	sg	masc	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	Teufel	NN	*)	teufel	sg	masc	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	hole	VVFIN	*	holen	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	mich	PPER	*)	mich	sg	*	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	!	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Allein	ADV	(VROOT(PSEUDO*	allein	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	wie	PWAV	(S*	wie	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	heissest	ADV	(NP*	heissest	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	du	PPER	*))	du	sg	*	corydon	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	?	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	montan	-	-	-	-	(0|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	0)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Oronte	NE	(VROOT(PSEUDO*	oronen	sg	-	montan	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Wie	PWAV	(VROOT(PSEUDO*	wie	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	?	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Oronte	NE	(VROOT(PSEUDO(MPN*	oronte	sg	-	corydon	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	?	$.	*)))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	montan	-	-	-	-	(0|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	0)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	O	NE	(VROOT(PSEUDO(NP*	O	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Zufall	NN	*)	zufall	-	-	montan	-	-	-	-	(24)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	!	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	der	ART	(VROOT(PSEUDO(S*	der	sg	masc	montan	-	-	-	-	(24)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	mich	PPER	*	mich	sg	*	montan	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	noch	ADV	*	noch	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	allein	ADV	*	allein	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	beglücken	VVINF	*	beglücken	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	konnte	VMFIN	*)	können	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	!	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Umarme	NN	(VROOT(PSEUDO(S*	umarmen	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	mich	PPER	*	mich	sg	*	montan	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	mein	PPOSAT	(NP*	mein	sg	masc	montan	-	-	-	-	(7|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	Freund	NN	*	freund	sg	masc	montan	-	-	-	-	7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	,	$,	*))))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Zum	APPRART	(VROOT(PSEUDO(PP*	zu	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Teufel	NN	*	teufel	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	ists	ADV	(S(AVP*	ists	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	denn	ADV	*)	denn	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	wahr	ADJD	*))	wahr	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	?	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Bist	VAFIN	(VROOT(PSEUDO(S*	sein	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	du	PPER	*	du	sg	*	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	mein	PPOSAT	(NP*	mein	sg	masc	corydon	-	-	-	-	(0|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	Freund	NN	*	freund	sg	masc	corydon	-	-	-	-	0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	Oront	NN	*))	oront	sg	-	corydon	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	?	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	montan	-	-	-	-	(0|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	0)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	montan	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	bin	VAFIN	*	sein	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	es	PPER	(NP*	es	sg	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	es	PPER	(S*	es	sg	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	ist	VAFIN	*	sein	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	klar	ADJD	*)))	klar	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	.	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ach	ITJ	(VROOT(PSEUDO(S*)	ach	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	liebster	ADJA	(NP*	liebe	sg	masc	corydon	-	-	-	-	(0
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	Herzensfreund	NN	*)	herzensfreund	sg	masc	corydon	-	-	-	-	0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	!	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	fresse	VVFIN	*	fressen	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	dich	PRF	*	dich	sg	*	corydon	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	für	APPR	(PP*	für	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	Freuden	NN	*))	freude	pl	fem	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	.	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	montan	-	-	-	-	(0|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	0)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	O	NE	(VROOT(PSEUDO(NP*	O	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Himmel	NN	*)	himmel	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	!	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	welche	PWAT	(VROOT(PSEUDO(S(NP*	welcher	sg	fem	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Lust	NN	*)	lust	sg	fem	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	erweckt	VVFIN	*	erwecken	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	das	ART	(NP*	der	sg	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	Glück	NN	*)	glück	sg	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	uns	PPER	*	uns	pl	*	montan	-	-	-	-	(8)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	Beiden	NN	*)	beiden	pl	fem	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	.	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Umart	NE	(VROOT(PSEUDO(S*	umart	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	ihn	PPER	(AP*	ihn	sg	masc	montan	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	sehr	ADV	*	sehr	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	hitzig	ADJD	*))	hitzig	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	.	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ach	ITJ	(VROOT(PSEUDO(S*)	ach	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Organ	NN	*	organ	-	-	montan	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	!	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ach	ITJ	(VROOT(PSEUDO(S*)	ach	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Oront	ITJ	(S*)	oront	-	-	corydon	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	!	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	montan	-	-	-	-	(0|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	0)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ach	ITJ	(VROOT(PSEUDO(S*)	ach	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Corydon	NE	*	corydon	-	-	montan	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	!	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Montan	NE	(VROOT(PSEUDO(MPN*	montan	sg	neut	corydon	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	!	$.	*)))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	montan	-	-	-	-	(0|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	0)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ach	ITJ	(VROOT(S*))	ach	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ach	ITJ	(VROOT(S*))	ach	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	montan	-	-	-	-	(0|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	0)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ich	PPER	(VROOT(PSEUDO*))	ich	sg	*	montan	-	-	-	-	(0)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ich	PPER	(VROOT(PSEUDO*))	ich	sg	*	corydon	-	-	-	-	(7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	montan	-	-	-	-	(0|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	0)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Bin	NE	(VROOT(PSEUDO*))	sein	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Bin	NE	(VROOT(PSEUDO*))	sein	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	montan	-	-	-	-	(0|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	0)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Entzückt	VVPP	*	entzückt	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Entzückt	VVPP	*	entzückt	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	montan	-	-	-	-	(0|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	0)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ich	PPER	*	ich	sg	*	montan	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	kann	VMFIN	*	können	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	,	$,	*	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ich	PPER	*	ich	sg	*	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	kann	VMFIN	*	können	sg	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	montan	-	-	-	-	(0|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	0)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Kann	VMFIN	*	können	sg	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Kann	VMFIN	(VROOT(PSEUDO(S*	können	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Corydon	NE	(CNP*	corydon	sg	neut	corydon	-	-	-	-	(8|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	und	KON	*	und	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	Montan	NE	*)	montan	sg	neut	corydon	-	-	-	-	8)|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	zugleich	ADV	*	zugleich	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	sich	PRF	(AP*	sich	pl	-	corydon	-	-	-	-	(8)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	umarmend	ADJD	*	umarmend	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	.	$.	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	Nicht	PTKNEG	(AVP*	nicht	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	mehr	ADV	*)))	mehr	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	.	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Corydon	NE	*	corydon	sg	neut	corydon	-	-	-	-	(8|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	und	KON	*	und	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	Montan	NE	*	montan	sg	neut	corydon	-	-	-	-	8)|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	zugleich	ADV	*	zugleich	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	sich	PRF	*	sich	pl	-	corydon	-	-	-	-	(8)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	umarmend	ADJD	*	umarmend	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	.	$.	*	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Corydon	NE	*	corydon	-	-	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	fällt	VVFIN	*	fallen	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	um	PTKVZ	*	um	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	und	KON	*	und	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	reißt	VVFIN	*	reißen	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	den	ART	*	der	sg	masc	corydon	-	-	-	-	(0
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	Montan	NN	*	montan	sg	masc	corydon	-	-	-	-	0)|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	mit	APPR	*	mit	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	nieder	PTKVZ	*	nieder	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	.	$.	*	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Schweigen	NN	(VROOT(PSEUDO(S(NP*	schweigen	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	eine	ART	(NP*	ein	sg	fem	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	Weile	NN	*))	weile	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	stille	VVFIN	*)	stille	sg	fem	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	.	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	montan	-	-	-	-	(0|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	0)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	O	NE	(VROOT(PSEUDO(NP*	O	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	größtes	ADJA	*	groß	sg	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	Glück	NN	*	glück	sg	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	der	ART	(NP*	der	sg	fem	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	Erden	NN	*))	erde	sg	fem	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	!	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Für	APPR	(VROOT(PSEUDO(S(PP*	für	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Freuden	NN	*)	freude	pl	fem	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	möcht	VVFIN	*	möchen	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	ich	PPER	(NP*	ich	sg	*	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	ja	ADV	*))	ja	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	–	XY	*	–	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	möcht	VVFIN	(S*	möchen	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	ich	PPER	*	ich	sg	*	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	des	ART	(VP(NP*	der	sg	masc	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	Teufels	NN	*)	teufel	sg	masc	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	werden	VAINF	*))	werden	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	.	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	montan	-	-	-	-	(0|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	0)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ja	PTKANT	*	ja	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	ja	PTKANT	*	ja	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	du	PPER	*	du	sg	*	montan	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	bists	VVFIN	*	bists	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	.	$.	*	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*))	corydon	-	-	corydon	-	-	-	-	(7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	einander	ADV	(VROOT(PSEUDO(AP*	einander	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	steif	ADJD	*	steif	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	ansehend	ADJD	*)	ansehend	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	.	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Du	PPER	(VROOT(PSEUDO(NP*	du	sg	*	corydon	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	auch	ADV	*)	auch	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	.	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	montan	-	-	-	-	(0|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	0)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Doch	KON	(VROOT(PSEUDO(S*	doch	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	noch	ADV	(NP*	noch	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	ein	ART	*	ein	sg	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	größer	ADJD	*	groß	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	Glück	NN	*)	glück	sg	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	Muß	VMFIN	*	müssen	sg	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	dir	PPER	*	dir	sg	*	montan	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	entdecket	VVFIN	*	entdecken	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	seyn	ADJD	(AP*	seyn	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	komm	ADJD	(AP*	komm	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	nur	ADV	(PP*	nur	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	mit	APPR	*	mit	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	mir	PPER	*)))	sich	sg	*	montan	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	zurück	PTKVZ	*)	zurück	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	15	.	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Silvander	NN	(VROOT(PSEUDO*	silvander	-	-	_stage	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	_stage	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	Montan	NE	*	montan	sg	neut	_stage	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	,	$,	*	--	-	-	_stage	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	Corydon	NE	*	corydon	sg	neut	_stage	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	.	$.	*))	--	-	-	_stage	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	silvander	(LOC*)	-	-	-	(3|(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	silvander	-	-	-	-	3)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Montan	NE	(VROOT(PSEUDO(DL*	montan	sg	neut	silvander	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	nun	ADV	(S*	nun	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	muß	VMFIN	*	müssen	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	ich	PPER	*	ich	sg	*	silvander	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	fort	PTKVZ	*))	fort	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	!	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Sieht	VVFIN	*	sehen	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	den	ART	*	der	sg	masc	silvander	-	-	-	-	(7
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	Corydon	NN	*	corydon	sg	masc	silvander	-	-	-	-	7)|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	und	KON	*	und	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	erschrickt	VVPP	*	erschricken	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	.	$.	*	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	montan	-	-	-	-	(0|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	0)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Hab	ADV	(VROOT(PSEUDO(S*	hab	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	ichs	ADV	*	ich	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	nicht	PTKNEG	(AP*	nicht	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	prophezeihet	ADJD	*))	prophezeihen	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	?	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Du	PPER	(VROOT(PSEUDO(S*	du	sg	*	montan	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	siehst	VVFIN	*	sehen	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	nun	ADV	*	nun	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	daß	KOUS	(S*	daß	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	dein	PPOSAT	(NP*	dein	sg	masc	montan	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	Schluß	NN	*)	schluß	sg	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	dich	PRF	(VP*	dich	sg	-	montan	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	nur	ADV	(AP*	nur	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	zu	PTKA	*	zu	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	früh	ADJD	*)	früh	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	gereuet	VVPP	*)))	reuen	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	.	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Nimmt	NE	*	nehmen	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	dich	PRF	*	dich	sg	-	montan	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	so	ADV	*	so	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	bald	ADV	*	bald	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	der	ART	*	der	sg	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	Trieb	NE	*	trieb	sg	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	zur	APPRART	*	zu	sg	fem	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	Ehre	NN	*	ehre	sg	fem	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	wieder	ADV	*	wieder	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	ein	PTKVZ	*	ein	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	So	ADV	*	so	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	würd	ADJD	*	würd	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	'	$[	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	st	VMFIN	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	15	du	PPER	*	du	sg	*	montan	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	16	dir	PPER	*	dir	sg	*	montan	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	17	und	KON	*	und	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	18	mir	PPER	*	sich	sg	*	montan	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	19	zur	APPRART	*	zu	sg	fem	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	20	Last	NN	*	last	sg	fem	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	21	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	22	ein	ART	*	ein	sg	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	23	Schäfer	NE	*	schäfer	sg	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	24	seyn	VVFIN	*	seyn	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	25	.	$.	*	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	silvander	(LOC*)	-	-	-	(3|(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	silvander	-	-	-	-	3)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Das	PDS	(VROOT(PSEUDO(CS(S*	der	sg	neut	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	ist	VAFIN	*	sein	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	es	PPER	*	es	sg	neut	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	nicht	PTKNEG	*)	nicht	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	Montan	NE	(S*	montan	sg	neut	silvander	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	was	PWS	(S*	was	sg	neut	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	meinen	PPOSAT	(NP*	mein	sg	masc	silvander	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	Schluß	NN	*)	schluß	sg	masc	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	verhindert	VVFIN	*	verhindern	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	;	$.	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	Ich	PPER	(S*	ich	sg	*	silvander	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	thu	VVFIN	*	thu	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	es	PPER	*)))	es	sg	neut	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	15	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	16	daß	KOUS	(S*	daß	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	17	sich	PRF	*	sich	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	18	mein	PPOSAT	(NP*	mein	sg	masc	silvander	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	19	und	KON	(NP(S*	und	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	20	Doris	NE	(MPN*	doris	sg	masc	silvander	-	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	21	Schmerz	NN	*)	schmerz	sg	masc	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	22	vermindert	VVFIN	*	vermindern	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	23	;	$.	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	24	Das	ART	(S(NP*	der	sg	neut	silvander	-	-	-	-	(2
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	25	arme	ADJA	*	arm	sg	neut	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	26	Kind	NN	*)	kind	sg	neut	silvander	-	-	-	-	2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	27	schwört	VVFIN	*	schwören	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	28	mir	PPER	*	sich	sg	*	silvander	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	29	bey	VVFIN	*))	bey	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	30	der	ART	*	der	sg	fem	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	31	ihr	PPOSAT	*	ihr	sg	fem	silvander	-	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	32	heilgen	ADJA	*	heilgen	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	33	Flur	NN	*)	flur	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	34	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	35	Daß	KOUS	(S*	daß	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	36	sie	PPER	*	sie	pl	*	silvander	-	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	37	mich	PRF	(NP(AP*	mich	sg	*	silvander	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	38	lieben	ADJA	*))	lieben	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	39	muß	VMFIN	*))))	müssen	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	40	.	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	montan	-	-	-	-	(0|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	0)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	O	NE	(VROOT(PSEUDO(NP*	O	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Unschuld	NN	*)	unschuld	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	!	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	O	NE	(VROOT(PSEUDO(NP*	O	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Natur	NN	*)	natur	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	!	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	silvander	(LOC*)	-	-	-	(3|(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	silvander	-	-	-	-	3)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Du	PPER	(VROOT(PSEUDO(S*	du	sg	*	silvander	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	siehst	VVFIN	*	sehen	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	mein	PPOSAT	(S(NP*	mein	sg	neut	silvander	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	Schicksal	NN	*)	schicksal	sg	neut	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	will	VMFIN	*	wollen	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	ich	PPER	(CS(S*	ich	sg	*	silvander	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	muß	VMFIN	*	müssen	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	den	ART	(VP(NP*	der	sg	masc	silvander	-	-	-	-	(13
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	Ort	NN	*)	ort	sg	masc	silvander	-	-	-	-	13)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	verlassen	VVINF	*))	verlassen	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	;	$.	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	Eh	NN	(S*	eh	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	sie	PPER	*	sie	-	-	silvander	-	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	15	als	APPR	(PP*	als	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	16	Schwester	NN	*)	schwester	sg	fem	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	17	liebt	VVFIN	*	lieben	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	18	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	19	ists	ADV	(VP(AP*	ist	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	20	besser	ADJD	*)	gut	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	21	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	22	mich	PRF	*	mich	sg	*	silvander	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	23	zu	PTKZU	(VZ*	zu	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	24	hassen	VVINF	*))))))	hassen	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	25	.	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Drum	PROAV	(VROOT(PSEUDO(S*	drum	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	lebe	VVFIN	*	leben	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	wohl	ADV	(NP*	wohl	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	Montan	NE	*))	montan	-	-	silvander	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	–	XY	*	–	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	Montan	NE	*	montan	-	-	silvander	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	–	XY	*	–	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	Freund	NN	(NP*	freund	-	-	silvander	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	lebe	VVFIN	(S*	leben	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	wohl	ADV	*	wohl	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	Es	PPER	(S*	es	sg	neut	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	wartet	VVFIN	*	warten	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	schon	ADV	*	schon	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	15	das	ART	(NP*	der	sg	neut	silvander	-	-	-	-	(25
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	16	Boot	NN	*	boot	sg	neut	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	17	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	18	das	PRELS	(S*	der	sg	neut	silvander	-	-	-	-	(25)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	19	mich	PPER	(VP*	mich	sg	*	silvander	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	20	entfernen	VVINF	*)	entfernen	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	21	soll	VMFIN	*)))))	sollen	sg	-	silvander	-	-	-	-	25)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	22	.	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ich	PPER	(VROOT(PSEUDO(CS(S*	ich	sg	*	silvander	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	will	VMFIN	*	wollen	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	dir	PRF	*	dir	sg	*	silvander	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	wo	PWAV	(S*	wo	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	ich	PPER	*	ich	sg	*	silvander	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	bin	VAFIN	*)	sein	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	von	APPR	(PP*	von	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	meinem	PPOSAT	*	mein	sg	masc	silvander	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	Glück	NN	(CNP*	glück	sg	masc	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	und	KON	*	und	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	Leben	NN	*)))	leben	sg	neut	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	Ach	ITJ	(S*))	ach	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	!	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	könnt	ADJD	(VROOT(PSEUDO(S*	können	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	ichs	ADV	*	ich	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	mündlich	ADJD	(AP*	mündlich	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	thun	ADJD	*))	thun	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	!	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	zum	APPRART	(VROOT(PSEUDO(VP(PP*	zu	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	östern	NN	*)	östern	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	Nachricht	NN	*	nachricht	sg	neut	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	geben	VVINF	*)	geben	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	.	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Wenn	KOUS	(VROOT(PSEUDO(CS(S(AVP(S*	wenn	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	meines	PPOSAT	(NP*	mein	sg	masc	silvander	-	-	-	-	(7|(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	Vaters	NN	*)	vater	sg	masc	silvander	-	-	-	-	7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	Bund	NN	*	bund	sg	masc	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	wenn	KOUS	(S*	wenn	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	dich	PPER	*	dich	sg	*	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	sein	PPOSAT	(NP*	sein	-	-	silvander	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	Sohn	NN	*)	sohn	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	noch	ADV	*	noch	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	rührt	VVFIN	*))	rühren	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	So	ADV	*)	so	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	mach	VVFIN	*	machen	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	15	daß	KOUS	(S*	daß	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	16	sich	PRF	*	sich	sg	-	silvander	-	-	-	-	(26)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	17	der	ART	(NP*	der	sg	masc	silvander	-	-	-	-	(26
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	18	Schmerz	NN	*	schmerz	sg	masc	silvander	-	-	-	-	26)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	19	aus	APPR	(PP*	aus	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	20	Doris	NE	*))	doris	sg	neut	silvander	-	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	21	Brust	NN	*	brust	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	22	verliert	VVFIN	*))	verlieren	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	23	;	$.	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	24	Eh	NN	(S*	eh	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	25	das	ART	*	der	sg	neut	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	26	geschieht	VVFIN	*	geschehen	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	27	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	28	find	VVFIN	(S*	find	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	29	ich	PPER	*	ich	sg	*	silvander	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	30	nie	ADV	*	nie	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	31	meine	PPOSAT	(NP*	mein	sg	-	silvander	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	32	Ruhe	NN	*)	ruhe	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	33	wieder	ADV	*)))	wieder	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	34	.	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Noch	ADV	(VROOT(PSEUDO(S(AVP*	noch	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	einmal	ADV	*)	einmal	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	lebe	VVFIN	*	leben	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	wohl	ADV	*)	wohl	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	!	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	die	ART	(VROOT(PSEUDO(S(NP*	der	sg	fem	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Angst	NN	*)	angst	sg	fem	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	schwächt	VVFIN	*	schwächen	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	Geist	NN	(CNP*	geist	sg	*	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	und	KON	*	und	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	Glieder	NN	*))	glied	sg	*	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	.	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Er	PPER	(VROOT(PSEUDO(S*	er	sg	masc	silvander	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	will	VMFIN	*	wollen	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	gehen	VVINF	*)	gehen	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	.	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	montan	-	-	-	-	(0|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	0)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Silvander	ADV	(VROOT(PSEUDO(S*	silvander	sg	masc	montan	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	warte	VVFIN	*	warten	sg	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	noch	ADV	*	noch	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	sieh	VVIMP	(S*	sieh	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	deinen	PPOSAT	(NP*	dein	sg	masc	montan	-	-	-	-	(7|(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	Vater	NN	*)	vater	sg	masc	montan	-	-	-	-	7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	hier	ADV	*))	hier	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	.	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	silvander	(LOC*)	-	-	-	(3|(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	silvander	-	-	-	-	3)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Wen	PWS	*	wen	sg	*	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	?	$.	*	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Wie	PWAV	(VROOT(PSEUDO*	wie	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	?	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	montan	-	-	-	-	(0|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	0)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Den	ART	*	der	sg	masc	montan	-	-	-	-	(7
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Vater	NN	*	vater	sg	masc	montan	-	-	-	-	7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	ja	ADV	*	ja	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	;	$.	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	der	ART	*	der	sg	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	Himmel	NN	*	himmel	sg	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	schenkt	VVFIN	*	schenken	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	ihn	PPER	*	ihn	sg	masc	montan	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	dir	PPER	*	dir	sg	*	montan	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	.	$.	*	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Mein	PPOSAT	(VROOT(PSEUDO(NP*	mein	sg	masc	corydon	-	-	-	-	(3|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Sohn	NN	*)	sohn	sg	masc	corydon	-	-	-	-	3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	!	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	silvander	(LOC*)	-	-	-	(3|(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	silvander	-	-	-	-	3)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Mein	PPOSAT	(VROOT(PSEUDO(NP*	mein	sg	masc	silvander	-	-	-	-	(7|(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Vater	NN	*)	vater	sg	masc	silvander	-	-	-	-	7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	?	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	montan	-	-	-	-	(0|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	0)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ja	NN	(VROOT(PSEUDO*	ja	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Pfuy	NE	(VROOT(PSEUDO(S*	pfuy	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	hab	VAFIN	*	hab	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	uns	PPER	*	uns	pl	*	corydon	-	-	-	-	(27)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	nicht	PTKNEG	*	nicht	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	zum	APPRART	(PP*	zu	sg	masc	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	Narren	NN	*))	narr	sg	masc	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	!	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	silvander	(LOC*)	-	-	-	(3|(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	silvander	-	-	-	-	3)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Muß	VMFIN	(VROOT(PSEUDO(S*	müssen	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	für	APPR	(PP*	für	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	Erstaunen	NN	*)	erstaunen	sg	neut	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	nicht	PTKNEG	*	nicht	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	das	ART	(VP(NP*	der	sg	neut	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	Blut	NN	*	blut	sg	neut	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	in	APPR	(PP*	in	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	mir	PPER	*))	sich	sg	*	silvander	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	erstarren	VVINF	*))	erstarren	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	?	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Montan	NE	(VROOT(PSEUDO(S*	montan	-	-	silvander	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	belügt	VVFIN	*	belügen	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	mich	PPER	*	mich	sg	*	silvander	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	nicht	PTKNEG	*)	nicht	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	.	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Das	PDS	(VROOT(PSEUDO(S*	der	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	soll	VMFIN	*	sollen	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	Leander	ADV	*	leander	sg	masc	corydon	(PER*)	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	seyn	ADJD	*)	seyn	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	?	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	silvander	(LOC*)	-	-	-	(3|(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	silvander	-	-	-	-	3)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Leander	ADV	(VROOT(PSEUDO(S*	leander	-	-	silvander	(PER*)	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	bin	VAFIN	*	sein	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	ich	PPER	(NP*	ich	sg	*	silvander	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	ja	ADV	*))	ja	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	.	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Entzückung	NN	(VROOT(PSEUDO(S*	entzückung	sg	fem	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	nimmt	VVFIN	*	nehmen	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	mich	PPER	*	mich	sg	*	silvander	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	ein	PTKVZ	*)	ein	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	.	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Mein	PPOSAT	(VROOT(PSEUDO(S(NP*	mein	sg	masc	silvander	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Herz	NN	*)	herz	sg	masc	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	spricht	VVFIN	*	sprechen	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	ja	ADV	*	ja	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	so	ADV	(S*	so	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	viel	ADV	(AVP(S(AVP*	viel	*	*	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	auch	ADV	*)	auch	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	Zweifel	NN	*	zweifel	pl	masc	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	widersprechen	VVFIN	*)	widersprechen	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	So	ADV	*)	so	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	will	VMFIN	*	wollen	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	der	ART	(NP*	der	sg	masc	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	Himmel	NN	*)	himmel	sg	masc	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	15	noch	ADV	*	noch	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	16	mein	PPOSAT	(VP(NP*	mein	sg	neut	silvander	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	17	hartes	ADJA	*	hart	sg	neut	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	18	Schicksal	NN	*)	schicksal	sg	neut	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	19	rächen	VVINF	*)))	rächen	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	20	?	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Wer	PWS	(VROOT(PSEUDO(S*	wer	sg	masc	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Henker	NN	*	henker	pl	masc	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	führt	VVFIN	*	führen	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	dich	PPER	*	dich	sg	-	corydon	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	denn	ADV	*	denn	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	in	APPR	(PP*	in	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	dieses	PDAT	*	dieser	sg	neut	corydon	-	-	-	-	(13
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	leere	ADJA	*	leer	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	Land	NN	*))	land	sg	neut	corydon	-	-	-	-	13)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	?	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Wenn	KOUS	(VROOT(PSEUDO(S(S*	wenn	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	du	PPER	*	du	sg	*	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	mein	PPOSAT	(NP*	mein	sg	masc	corydon	-	-	-	-	(3|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	Sohn	NN	*)	sohn	sg	masc	corydon	-	-	-	-	3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	nun	ADV	*	nun	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	bist	VAFIN	*)	sein	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	kennst	VVFIN	*	kennen	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	du	PPER	*	du	sg	*	corydon	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	hier	ADV	*	hier	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	diese	PDAT	(NP*	dieser	sg	fem	corydon	-	-	-	-	(28
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	Hand	NN	*))	hand	sg	fem	corydon	-	-	-	-	28)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	?	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Zeigt	VVFIN	(VROOT(PSEUDO(S*	zeigen	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	ihm	PPER	*	ihm	sg	masc	corydon	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	einen	ART	(NP*	ein	sg	masc	corydon	-	-	-	-	(29
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	Brief	NN	*))	brief	sg	masc	corydon	-	-	-	-	29)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	.	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	silvander	(LOC*)	-	-	-	(3|(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	silvander	-	-	-	-	3)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Gerechter	ADJA	(VROOT(PSEUDO(NP*	gerecht	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Himmel	NN	*)	himmel	sg	masc	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	!	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	ja	ADV	*	ja	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	–	XY	*	–	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	ja	PTKANT	*	ja	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	–	XY	*	–	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	das	PDS	*	der	sg	neut	silvander	-	-	-	-	(29)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	hab	VAFIN	*	hab	sg	neut	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	ich	PPER	*	ich	sg	*	silvander	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	geschrieben	VVPP	*	schreiben	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	.	$.	*	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Dieß	NE	(VROOT(PSEUDO(S(S*	dieß	-	-	corydon	-	-	-	-	(29
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	liebe	VVFIN	*	lieb	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	Blatt	NN	*)	blatt	-	-	corydon	-	-	-	-	29)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	ist	VAFIN	*	sein	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	nie	ADV	(VP*	nie	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	von	APPR	(PP*	von	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	meiner	PPOSAT	*	mein	sg	fem	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	Brust	NN	*)	brust	sg	fem	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	geblieben	VVPP	*))	bleiben	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	.	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	silvander	(LOC*)	-	-	-	(3|(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	silvander	-	-	-	-	3)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ach	ITJ	(VROOT(PSEUDO(S*)	ach	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Glück	NN	*	glück	sg	neut	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	!	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	ach	PPER	*	ach	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	Vater	NN	*	vater	-	-	silvander	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	!	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	ach	ITJ	(S*)	ach	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	!	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	gelangt	VVFIN	(VROOT(PSEUDO(S*	gelangen	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	es	PPER	*	es	sg	neut	silvander	-	-	-	-	(29)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	doch	ADV	*	doch	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	an	APPR	(PP*	an	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	euch	PPER	*))	euch	pl	*	silvander	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	?	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Bekamst	ADV	(VROOT(PSEUDO(S*	bekamst	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	du	PPER	*	du	sg	*	corydon	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	Antwort	NN	*)	antwort	sg	fem	corydon	-	-	-	-	(30)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	?	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	silvander	(LOC*)	-	-	-	(3|(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	silvander	-	-	-	-	3)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Nein	PTKANT	*	nein	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	!	$.	*	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Das	PDS	(VROOT(PSEUDO(S*	der	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	ist	VAFIN	*	sein	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	ein	ART	(NP*	ein	sg	masc	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	Teufelsstreich	NN	*))	teufelsstreich	sg	masc	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	.	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	schrieb	VVFIN	*	schreiben	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	dir	PRF	*	dir	sg	*	corydon	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	mit	APPR	(PP*	mit	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	dem	ART	*	der	sg	masc	corydon	-	-	-	-	(31
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	Fuchs	NE	*))	fuchs	sg	masc	corydon	-	-	-	-	31)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	.	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	silvander	(LOC*)	-	-	-	(3|(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	silvander	-	-	-	-	3)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Dieß	ART	(VROOT(PSEUDO(S(NP*	dieß	sg	masc	silvander	-	-	-	-	(31
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Schiff	NN	*)	schiff	sg	masc	silvander	-	-	-	-	31)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	ist	VAFIN	*	sein	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	untergangen	VVPP	*)	unterhen	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	.	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ja	PTKANT	(VROOT(PSEUDO(S*	ja	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	so	ADV	*	so	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	kömmt	VVFIN	*	kömmen	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	es	PPER	*	es	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	heraus	PTKVZ	*	heraus	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	daß	KOUS	(S*	daß	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	du	PPER	*	du	sg	*	corydon	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	sie	PPER	(VP*	sie	pl	*	corydon	-	-	-	-	(30)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	nicht	PTKNEG	*	nicht	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	empfangen	VVPP	*)))	empfangen	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	.	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Umarme	NN	(VROOT(PSEUDO*	umarme	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	mich	PPER	(NP(AP*	mich	sg	*	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	mein	PPOSAT	*)	mein	sg	masc	corydon	-	-	-	-	(3|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	Sohn	NN	*)	sohn	sg	masc	corydon	-	-	-	-	3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	.	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Umarmt	VVFIN	(VROOT(PSEUDO(S*	umarmen	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	ihn	PPER	*)	ihn	sg	masc	corydon	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	.	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	silvander	(LOC*)	-	-	-	(3|(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	silvander	-	-	-	-	3)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Mein	PPOSAT	(VROOT(PSEUDO(NP*	mein	sg	masc	silvander	-	-	-	-	(7|(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Vater	NN	*)	vater	sg	masc	silvander	-	-	-	-	7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	!	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Küßt	VVFIN	(VROOT(PSEUDO(S*	küßen	pl	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	ihm	PPER	*	ihm	sg	masc	silvander	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	weinend	ADJD	*	weinend	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	die	ART	(NP*	der	sg	fem	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	Hand	NN	*))	hand	sg	fem	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	.	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*))	corydon	-	-	corydon	-	-	-	-	(7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	weinend	ADJD	(VROOT(PSEUDO*	weinend	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Welche	PWAT	(VROOT(PSEUDO(NP*	welcher	sg	fem	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Lust	NN	*)	lust	sg	fem	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	!	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	montan	-	-	-	-	(0|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	0)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Seht	VVFIN	(VROOT(PSEUDO(S*	sehen	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	hier	ADV	*	hier	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	des	ART	(NP*	der	sg	neut	montan	-	-	-	-	(3
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	besten	ADJA	*	gut	sg	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	Sohns	NN	*	sohn	sg	neut	montan	-	-	-	-	3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	des	ART	(NP*	der	sg	neut	montan	-	-	-	-	(7
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	besten	ADJA	*	gut	sg	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	Vaters	NN	*	vater	sg	neut	montan	-	-	-	-	7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	Brust	NN	*)))	brust	sg	fem	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	!	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Doch	KON	(VROOT(PSEUDO(S*	doch	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	ich	PPER	*	ich	sg	*	montan	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	seh	VVFIN	*	seh	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	Doris	NE	*	doris	sg	-	montan	(PER*)	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	dort	ADV	*	dort	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	ich	PPER	(S*	ich	sg	*	montan	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	muß	VMFIN	*	müssen	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	gleich	ADV	(PP*	gleich	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	zu	APPR	*	zu	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	ihr	PPOSAT	*	ihr	sg	fem	montan	-	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	eilen	ADJA	(AP*	eilen	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	Und	KON	(S(VP*	und	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	machen	VVINF	*	machen	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	15	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	16	daß	KOUS	(S*	daß	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	17	sie	PPER	*	sie	sg	fem	montan	-	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	18	sich	PRF	*	sich	sg	-	montan	-	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	19	noch	ADV	(AVP*	noch	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	20	etwas	ADV	*)	etwas	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	21	muß	VMFIN	*	müssen	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	22	verweilen	VVINF	*))	verweilen	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	23	;	$.	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	24	Bleibt	VVFIN	(S*	bleiben	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	25	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	26	Freunde	NN	*	freund	pl	masc	montan	-	-	-	-	(27)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	27	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	28	hier	ADV	*	hier	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	29	allein	ADV	*	allein	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	30	;	$.	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	31	ich	PPER	(S*	ich	sg	*	montan	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	32	halte	VVFIN	*	halten	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	33	sie	PPER	*	sie	sg	fem	montan	-	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	34	dort	ADV	*	dort	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	35	auf	PTKVZ	*))	auf	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	36	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	37	Laßt	VVFIN	*	lassen	pl	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	38	eurer	ADJA	(NP*	eurer	sg	masc	montan	-	-	-	-	(27)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	39	Zärtlichkeit	NN	(CNP*	zärtlichkeit	sg	fem	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	40	und	KON	*	und	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	41	Freude	NN	*))))	freude	sg	fem	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	42	vollen	ADJA	*	voll	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	43	Lauf	NN	*)))	lauf	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	44	.	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	montan	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	komme	VVFIN	*	kommen	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	bald	ADV	*	bald	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	zurück	PTKVZ	*)	zurück	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	.	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ab	APPR	(VROOT(PSEUDO*	ab	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Corydon	NE	(VROOT(PSEUDO*	corydon	-	-	_stage	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	_stage	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Silvander	NE	(VROOT(PSEUDO*	silvander	-	-	_stage	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	_stage	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	silvander	(LOC*)	-	-	-	(3|(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	silvander	-	-	-	-	3)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	silvander	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	bin	VAFIN	*	sein	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	noch	ADV	*	noch	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	wie	KOKOM	(PP*	wie	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	im	APPRART	*	in	sg	masc	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	Schlafe	NN	*))	schlafe	sg	masc	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	.	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	ich	PPER	*	ich	sg	masc	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	bin	VAFIN	*	sein	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	ganz	ADV	(AP*	ganz	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	vernarrt	ADJD	*))	vernarren	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	.	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Hüt	NE	*	hüt	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	'	$[	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	st	VAFIN	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	du	PPER	*	du	sg	*	corydon	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	denn	ADV	*	denn	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	hier	ADV	*	hier	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	auch	ADV	*	auch	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	Schaafe	NN	*	schaafe	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	?	$.	*	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	silvander	(LOC*)	-	-	-	(3|(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	silvander	-	-	-	-	3)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Nein	PTKANT	(VROOT(PSEUDO(S*	nein	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	nur	ADV	(PP*	nur	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	um	APPR	*	um	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	den	ART	*	der	sg	masc	silvander	-	-	-	-	(0
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	Oront	NN	*	oront	sg	masc	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	der	PRELS	(S*	der	sg	masc	silvander	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	sich	PRF	*	sich	sg	-	silvander	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	Montan	NE	*	montan	sg	masc	silvander	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	jetzt	ADV	*	jetzt	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	nennt	VVFIN	*))	nennen	sg	-	silvander	-	-	-	-	0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	Zog	VVFIN	*	zog	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	ich	PPER	*	ich	sg	*	silvander	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	15	die	ART	(NP*	der	sg	fem	silvander	-	-	-	-	(32
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	16	Kleidung	NN	*)	kleidung	sg	fem	silvander	-	-	-	-	32)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	17	an	PTKVZ	*	an	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	18	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	19	in	APPR	(S(PP*	in	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	20	der	PRELS	*)	der	sg	fem	silvander	-	-	-	-	(32)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	21	man	PIS	*	man	sg	*	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	22	mich	PPER	*	mich	sg	*	silvander	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	23	verkennt	VVFIN	*))	verkennen	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	24	.	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	silvander	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	bin	VAFIN	*	sein	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	am	APPRART	(AP(PP*	an	sg	masc	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	Hofe	NE	*)	hof	sg	masc	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	groß	ADJD	*	groß	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	als	KOUS	(S*	als	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	wie	KOKOM	(VP(NP*	wie	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	ein	ART	*	ein	sg	masc	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	Prinz	NN	*)	prinz	sg	masc	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	erzogen	VVPP	*)	erziehen	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	;	$.	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	Mein	PPOSAT	(S(NP*	mein	sg	masc	silvander	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	andrer	ADJA	*	andr	sg	masc	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	15	Vater	NN	*)	vater	sg	masc	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	16	ist	VAFIN	*	sein	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	17	mir	PPER	(VP*	sich	sg	*	silvander	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	18	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	19	so	ADV	(AVP*	so	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	20	wie	KOKOM	(NP*	wie	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	21	ihr	PPOSAT	*	ihr	sg	masc	silvander	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	22	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	23	gewogen	VVPP	(VP*	wiegen	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	24	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	25	Und	KON	(S*	und	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	26	hat	VAFIN	*	haben	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	27	mich	PPER	*	mich	sg	*	silvander	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	28	unverdient	ADJD	*	unverdient	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	29	zum	APPRART	(PP*	zu	sg	masc	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	30	Schiffshauptmann	NN	*)))))	schiffshauptmann	sg	masc	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	31	gemacht	VVPP	*)	machen	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	32	;	$.	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	33	Ein	ART	(S(NP*	ein	sg	masc	silvander	-	-	-	-	(33
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	34	Sturm	NN	*)	sturm	sg	masc	silvander	-	-	-	-	33)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	35	hat	VAFIN	*	haben	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	36	heute	ADV	(VP*	heute	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	37	mich	PRF	*	mich	sg	*	silvander	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	38	an	APPR	(PP*	an	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	39	dieses	PDAT	*	dieser	sg	neut	silvander	-	-	-	-	(13
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	40	Land	NN	*)	land	sg	neut	silvander	-	-	-	-	13)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	41	gebracht	VVPP	*))))))	bringen	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	42	.	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Was	PWS	*	was	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	hör	VAFIN	*	hör	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	ich	PPER	*	ich	sg	*	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	?	$.	*	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ist	VAFIN	*	sein	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	das	ART	*	der	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	wahr	ADJD	*	wahr	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	?	$.	*	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	silvander	(LOC*)	-	-	-	(3|(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	silvander	-	-	-	-	3)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Wie	PWAV	(VROOT(PSEUDO*	wie	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	?	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	sollt	VVFIN	(VROOT(PSEUDO(S*	sollen	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	ich	PPER	*	ich	sg	*	silvander	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	euch	PRF	(VP*	euch	pl	*	silvander	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	belügen	VVINF	*))	belügen	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	?	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Mein	PPOSAT	(VROOT(PSEUDO(CNP(NP*	mein	sg	masc	corydon	-	-	-	-	(3|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Sohn	NN	*	sohn	sg	masc	corydon	-	-	-	-	3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	ich	PPER	(S*	ich	sg	*	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	glaube	VVFIN	*	glauben	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	dir	PPER	*))	dir	sg	*	corydon	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	und	KON	*	und	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	zweite	ADJA	(NP*	zweiter	sg	fem	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	für	APPR	(PP*	für	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	Vergnügen	NN	*)))	vergnügen	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	.	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Doch	KON	(VROOT(PSEUDO(S*	doch	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	kommst	VVFIN	*	kommen	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	du	PPER	*	du	sg	*	corydon	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	denn	ADV	*	denn	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	hieher	ADV	(AVP*	hieher	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	allein	ADV	*)	allein	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	auf	APPR	(PP*	auf	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	deinem	PPOSAT	*	dein	sg	masc	corydon	-	-	-	-	(34|(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	Schiff	NN	*))	schiff	sg	masc	corydon	-	-	-	-	34)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	?	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	silvander	(LOC*)	-	-	-	(3|(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	silvander	-	-	-	-	3)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Nein	PTKANT	(VROOT(PSEUDO(S*	nein	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	mit	APPR	(S*	mit	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	der	ART	(NP*	der	sg	fem	silvander	-	-	-	-	(35
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	Flotte	NN	*)	flotte	sg	fem	silvander	-	-	-	-	35)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	selbst	ADV	*))	selbst	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	.	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Der	ART	(VROOT(PSEUDO(S(NP*	der	sg	masc	silvander	-	-	-	-	(33
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Sturm	NN	*	sturm	sg	masc	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	der	PRELS	(S*	der	sg	masc	silvander	-	-	-	-	(33)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	sie	PPER	*	sie	pl	*	silvander	-	-	-	-	(35)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	ergriff	VVFIN	*))	ergreifen	sg	-	silvander	-	-	-	-	33)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	Hat	VAFIN	*	haben	sg	*	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	mich	PPER	(CVP(VP*	mich	sg	*	silvander	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	von	APPR	(PP*	von	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	ihr	PPER	*)	ihr	sg	fem	silvander	-	-	-	-	(35)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	getrennt	VVPP	*)	trennen	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	und	KON	*	und	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	an	APPR	(VP*	an	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	15	dies	PDS	*	dieser	sg	neut	silvander	-	-	-	-	(13
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	16	Land	NN	*	land	sg	neut	silvander	-	-	-	-	13)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	17	verschlagen	VVINF	*)))	verschlagen	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	18	.	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Das	ART	(VROOT(PSEUDO(CS(S(NP*	der	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Unglück	NN	*)	unglück	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	ist	VAFIN	*	sein	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	zwar	ADV	(AP*	zwar	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	groß	ADJD	*))	groß	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	;	$.	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	doch	KON	*	doch	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	must	VAFIN	(S*	must	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	du	PPER	*	du	sg	*	corydon	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	nicht	PTKNEG	*	nicht	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	verzagen	VVINF	*))	verzagen	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	.	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Der	ART	(VROOT(PSEUDO(CS(S(NP*	der	sg	masc	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Sturm	NN	*)	sturm	sg	masc	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	verschlug	VVFIN	*	verschlagen	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	mich	PPER	*	mich	sg	*	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	oft	ADV	*)	oft	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	ich	PPER	(S*	ich	sg	*	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	stund	VVFIN	*	stund	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	auch	ADV	*))	auch	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	Schiffbruch	NN	*	schiffbruch	sg	masc	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	aus	APPR	*	aus	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	;	$.	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	Jedoch	KON	(S*	jedoch	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	ich	PPER	*	ich	sg	*	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	bins	ADJD	(AP*	bins	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	15	gewohnt	ADJD	*)	wohnen	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	16	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	17	ich	PPER	(S*	ich	sg	*	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	18	machte	VVFIN	*	machen	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	19	mir	PPER	(NP*	sich	sg	-	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	20	nichts	PIS	*)	nichts	*	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	21	draus	PROAV	*))	draus	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	22	.	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Bin	NE	(VROOT(PSEUDO(S(VP*	sein	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	ich	PPER	(NP(AP*	ich	sg	*	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	dein	PPOSAT	*)	dein	sg	-	corydon	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	Tode	NN	*)	tod	sg	fem	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	schon	ADV	(AP*	schon	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	so	ADV	*	so	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	manchesmal	ADJD	*)	manchesmal	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	entlaufen	VVPP	*)	entlaufen	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	So	ADV	*	so	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	werd	VVFIN	*	werden	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	ich	PPER	*	ich	sg	*	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	hoffentlich	ADJD	*	hoffentlich	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	noch	ADV	(AVP*	noch	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	nicht	PTKNEG	*	nicht	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	15	so	ADV	*)	so	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	16	bald	ADV	*	bald	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	17	ersaufen	VVINF	*)	ersaufen	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	18	.	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Allein	ADV	(VROOT(PSEUDO(S*	allein	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	genug	ADV	*	genug	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	hiervon	VVFIN	*)	hiervon	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	!	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	mein	PPOSAT	(VROOT(PSEUDO(NP*	mein	sg	masc	corydon	-	-	-	-	(3|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Sohn	NN	*)	sohn	sg	masc	corydon	-	-	-	-	3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	ach	ITJ	*	ach	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	!	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	sage	VVFIN	*	sagen	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	doch	ADV	*	doch	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	(	TRUNC	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	Vermutlich	ADV	*	vermutlich	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	weißt	VVFIN	*	weißen	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	du	PPER	*	du	sg	*	corydon	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	drum	PROAV	*	drum	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	)	TRUNC	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	lebt	VVFIN	*	leben	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	deine	PPOSAT	*	dein	sg	fem	corydon	-	-	-	-	(5|(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	Schwester	NN	*	schwester	sg	fem	corydon	-	-	-	-	5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	noch	ADV	*	noch	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	?	$.	*	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	silvander	(LOC*)	-	-	-	(3|(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	silvander	-	-	-	-	3)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Bald	ADV	*	bald	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	werdet	VVFIN	*	werden	pl	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	ihr	PPOSAT	*	ihr	pl	*	silvander	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	sie	PPER	*	sie	pl	*	silvander	-	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	sehn	ADJD	*	sehn	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	!	$.	*	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Wo	PWAV	*	wo	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	ist	VAFIN	*	sein	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	sie	PPER	*	sie	sg	fem	corydon	-	-	-	-	(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	?	$.	*	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Mach	PPER	*	mach	pl	*	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	ein	ART	(NP*	ein	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	Ende	NN	*)	ende	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	!	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	O	NE	(VROOT(PSEUDO(NP*	O	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Glück	NN	*)	glück	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	!	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	wenn	KOUS	(VROOT(PSEUDO(S*	wenn	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	ich	PPER	*	ich	sg	*	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	zugleich	ADV	*	zugleich	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	hier	ADV	*	hier	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	Sohn	NN	(CNP*	sohn	sg	-	corydon	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	und	KON	*	und	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	Tochter	NN	*)	tochter	*	*	corydon	-	-	-	-	(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	fände	VVFIN	*)	finden	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	!	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	silvander	(LOC*)	-	-	-	(3|(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	silvander	-	-	-	-	3)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Das	ART	*	der	sg	neut	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Schicksal	NN	*	schicksal	sg	neut	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	nahm	VVFIN	*	nehmen	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	euch	PRF	*	euch	pl	*	silvander	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	uns	PPER	*	uns	pl	*	silvander	-	-	-	-	(23)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	ein	ART	*	ein	sg	masc	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	Zufall	NN	*	zufall	sg	masc	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	giebt	VVFIN	*	gieben	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	uns	PPER	*	uns	pl	*	silvander	-	-	-	-	(23)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	euch	PRF	*	euch	pl	*	silvander	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	.	$.	*	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	So	ADV	(VROOT(PSEUDO(S*	so	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	ist	VAFIN	*	sein	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	sie	PPER	*	sie	sg	fem	corydon	-	-	-	-	(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	hier	ADV	*)	hier	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	?	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Fort	NN	(VROOT(PSEUDO(S*	fort	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	fort	PTKVZ	*	fort	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	komm	ADJD	(S*	komm	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	zeige	VVFIN	*	zeigen	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	mir	PPER	*	sich	sg	*	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	sie	PPER	*	sie	sg	fem	corydon	-	-	-	-	(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	gleich	ADV	*))	gleich	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	!	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	silvander	(LOC*)	-	-	-	(3|(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	silvander	-	-	-	-	3)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Allein	ADV	(VROOT(PSEUDO(NP(AVP*	allein	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	wenn	KOUS	*)	wenn	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	ihr	PPOSAT	*	ihr	sg	fem	silvander	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	sie	PPER	(S*	sie	sg	fem	silvander	-	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	seht	VVFIN	*)	sehen	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	so	ADV	(AVP*	so	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	wird	VAFIN	(S*	werden	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	sie	PPER	*	sie	sg	fem	silvander	-	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	euch	PRF	(VP*	euch	pl	*	silvander	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	betrüben	VVINF	*))))	betrüben	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	.	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Wie	PWAV	*	wie	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	so	ADV	*	so	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	?	$.	*	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	silvander	(LOC*)	-	-	-	(3|(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	silvander	-	-	-	-	3)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ihr	PPOSAT	*	ihr	pl	*	silvander	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	werdet	ADJD	*	werden	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	sehn	CARD	*	sehn	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Was	PWS	*	was	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	denn	ADV	*	denn	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	?	$.	*	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	silvander	(LOC*)	-	-	-	(3|(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	silvander	-	-	-	-	3)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Sie	PPER	(VROOT(PSEUDO(S*	sie	sg	fem	silvander	-	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	wird	VAFIN	*	werden	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	mich	PPER	(NP(AP*	mich	sg	*	silvander	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	lieben	ADJA	*)))	lieben	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	.	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Nichts	PIAT	(VROOT(PSEUDO(S(NP*	nichts	*	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	mehr	PIS	*))	mehr	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	?	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ey	NE	(VROOT(PSEUDO(S*	ey	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	wird	VAFIN	*	werden	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	das	PDS	*	der	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	nicht	PTKNEG	*	nicht	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	für	APPR	(NP(PP*	für	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	mich	PPER	*)	mich	sg	*	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	ein	ART	*	ein	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	Unglück	NN	*)	unglück	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	seyn	ADJD	*)	seyn	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	!	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Muß	VMFIN	(VROOT(PSEUDO(S*	müssen	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	eine	ART	(NP*	ein	sg	fem	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	Schwester	NN	*)	schwester	sg	fem	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	denn	ADV	*	denn	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	den	ART	(NP*	der	sg	masc	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	Bruder	NN	*)	bruder	sg	masc	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	hassen	VVFIN	*)	hassen	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	?	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	silvander	(LOC*)	-	-	-	(3|(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	silvander	-	-	-	-	3)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Nein	PTKANT	*	nein	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Allein	ADV	(VROOT(PSEUDO(S(PP*	allein	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	sie	PPER	(S*	sie	sg	fem	silvander	-	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	liebt	VVFIN	*	lieben	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	mich	PPER	*	mich	sg	*	silvander	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	nicht	PTKNEG	*	nicht	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	mit	APPR	(PP*	mit	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	schwesterlichen	ADJA	*	schwesterlich	pl	masc	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	Herzen	NN	*)))	herz	pl	masc	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	;	$.	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	Als	APPR	(S(PP*	als	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	Liebste	NN	*)	liebste	sg	fem	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	liebt	VVFIN	*	lieben	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	sie	PPER	*	sie	sg	fem	silvander	-	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	mich	PRF	*	mich	sg	*	silvander	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	15	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	16	und	KON	(PP*	und	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	17	dieses	PDAT	*	dieser	sg	neut	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	18	macht	VVFIN	(S*	machen	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	19	mir	PPER	*)	sich	sg	*	silvander	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	20	Schmerzen	NN	*	schmerz	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	21	.	$.	*)))))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Als	APPR	(VROOT(PSEUDO(PP*	als	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Liebste	NN	*)	liebste	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	?	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Pfuy	NE	(VROOT(PSEUDO(NP*	pfuy	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	doch	ADV	*)	doch	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	!	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Wie	PWAV	(VROOT(PSEUDO*	wie	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	?	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	kennt	VVFIN	(VROOT(PSEUDO(S*	kennen	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	sie	PPER	*	sie	sg	fem	corydon	-	-	-	-	(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	dich	PRF	*	dich	sg	-	corydon	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	denn	ADV	*	denn	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	noch	ADV	*	noch	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	nicht	PTKNEG	*)	nicht	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	?	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	silvander	(LOC*)	-	-	-	(3|(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	silvander	-	-	-	-	3)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Sie	PPER	(VROOT(PSEUDO(CS(S*	sie	sg	fem	silvander	-	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	kennt	VVFIN	*	kennen	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	mich	PPER	*)	mich	sg	*	silvander	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	und	KON	*	und	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	weiß	VVFIN	(S*	weiß	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	nichts	PIS	*	nichts	*	neut	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	von	APPR	(PP*	von	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	der	ART	*	der	sg	fem	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	Verwandschaftspflicht	NN	*)))	verwandschaftspflicht	sg	fem	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	.	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Es	PPER	(VROOT(PSEUDO(S*	es	sg	neut	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	sind	VAFIN	*	sein	pl	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	ihr	PPER	*	ihr	sg	masc	silvander	-	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	Vater	NN	(CNP*	vater	sg	masc	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	Mutter	NN	*	mutter	sg	masc	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	Sohn	NN	*	sohn	sg	masc	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	und	KON	*	und	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	Tochter	NN	*)	tochter	sg	masc	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	fremde	ADJA	(NP*	fremd	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	Sachen	NN	*))	sache	pl	fem	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	.	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Sprecht	VVIMP	*	sprecht	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	ihr	PPOSAT	*	ihr	sg	fem	silvander	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	mit	APPR	*	mit	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	ihr	PPOSAT	*	ihr	sg	fem	silvander	-	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	davon	PROAV	*	davon	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	sie	PPER	*	sie	sg	fem	silvander	-	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	wird	VAFIN	*	werden	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	euch	PPER	*	euch	pl	*	silvander	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	nur	ADV	*	nur	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	verlachen	VVINF	*	verlachen	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	.	$.	*	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Wer	PWS	(VROOT(PSEUDO(S*	wer	sg	masc	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Teufel	NN	*	teufel	sg	masc	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	hat	VAFIN	*	haben	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	ihr	PPER	(VP*	ihr	sg	fem	corydon	-	-	-	-	(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	denn	ADV	*	denn	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	die	ART	(NP*	der	pl	fem	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	Possen	NN	*)	posse	pl	fem	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	weißgemacht	VVPP	*))	weißgemachen	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	?	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Weiß	VVFIN	(VROOT(PSEUDO(S*	weiß	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	sie	PPER	*	sie	sg	fem	corydon	-	-	-	-	(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	denn	ADV	*	denn	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	nicht	PTKNEG	*	nicht	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	wer	PWS	(S*	wer	sg	*	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	sie	PPER	*	sie	*	*	corydon	-	-	-	-	(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	in	APPR	(VP(PP*	in	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	diese	PDAT	*	dieser	sg	fem	corydon	-	-	-	-	(9
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	Welt	NN	*)	welt	sg	fem	corydon	-	-	-	-	9)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	gebracht	VVPP	*)))	bringen	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	?	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	silvander	(LOC*)	-	-	-	(3|(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	silvander	-	-	-	-	3)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Nein	PTKANT	(VROOT(PSEUDO(S*	nein	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	daran	PROAV	*	daran	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	denkt	VVFIN	*	denken	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	sie	PPER	*	sie	sg	fem	silvander	-	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	nie	ADV	*)	nie	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	.	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Montan	NE	*	montan	-	-	silvander	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	hat	VAFIN	*	haben	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	sie	PPER	*	sie	sg	fem	silvander	-	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	erzogen	VVPP	*	erziehen	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	Und	KON	*	und	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	ihr	PPOSAT	*	ihr	sg	fem	silvander	-	-	-	-	(2)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	ihr	PPER	*	ihr	sg	fem	corydon	-	-	-	-	(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	solch	PIDAT	(NP*	solch	*	*	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	Zeug	NN	*	zeug	sg	masc	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	aus	APPR	(PP*	aus	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	Narrheit	NN	*))	narrheit	sg	fem	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	vorgelogen	VVPP	*)	voeliegen	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	.	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	silvander	(LOC*)	-	-	-	(3|(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	silvander	-	-	-	-	3)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Vielleicht	ADV	(VROOT(PSEUDO(S*	vielleicht	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	nicht	PTKNEG	(PP*	nicht	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	ohne	APPR	*	ohne	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	Grund	NN	*))	grund	sg	masc	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	.	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Doch	KON	(VROOT(PSEUDO(CS(S*	doch	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	sie	PPER	*	sie	sg	fem	silvander	-	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	ist	VAFIN	*	sein	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	selbst	ADV	(AP*	selbst	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	sehr	ADV	*	sehr	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	klug	ADJD	*))	klug	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	;	$.	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	Sie	PPER	(S(AVP(S*	sie	sg	fem	silvander	-	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	hat	VAFIN	*	haben	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	von	APPR	(AVP(PP*	von	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	der	ART	(CNP(NP*	der	sg	fem	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	Natur	NN	*)	natur	sg	fem	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	und	KON	*	und	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	Liebe	NN	(NP*	liebe	sg	fem	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	Licht	NN	*)))	licht	sg	neut	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	15	genug	ADV	*)	genug	*	*	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	16	:	$.	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	17	Sie	PPER	(S*	sie	pl	*	silvander	-	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	18	sah	VVFIN	*	sehen	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	19	mich	PPER	*	mich	sg	*	silvander	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	20	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	21	als	KOUS	(CS(S*	als	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	22	ich	PPER	*	ich	sg	*	silvander	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	23	kam	VVFIN	*)	kommen	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	24	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	25	und	KON	*	und	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	26	wie	PWAV	(S*	wie	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	27	sie	PPER	*	sie	pl	masc	silvander	-	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	28	mich	PRF	*	mich	sg	*	silvander	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	29	entzücket	VVFIN	*))))	entzücken	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	30	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	31	So	ADV	*)	so	sg	*	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	32	ward	VVFIN	*	werden	sg	*	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	33	auch	ADV	(NP*	auch	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	34	sie	PPER	*)	sie	pl	*	silvander	-	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	35	verliebt	VVPP	*	verlieben	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	36	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	37	so	ADV	(VP*	so	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	38	bald	ADV	*	bald	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	39	sie	PPER	*	sie	pl	*	silvander	-	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	40	mich	PRF	*	mich	sg	*	silvander	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	41	erblicket	VVPP	*)))	erblicket	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	42	.	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	So	ADV	(VROOT(PSEUDO(S*	so	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	liebst	VVFIN	*	liebst	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	du	PPER	*)	du	sg	*	corydon	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	sie	PPER	*	sie	sg	fem	corydon	-	-	-	-	(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	dem	ART	*	der	sg	masc	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	:	$.	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	auch	ADV	*	auch	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	?	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	silvander	(LOC*)	-	-	-	(3|(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	silvander	-	-	-	-	3)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Als	APPR	(VROOT(PSEUDO(S(PP*	als	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Bruder	NN	*)	bruder	sg	masc	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	lieb	VVFIN	*	leiben	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	ich	PPER	*	ich	sg	*	silvander	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	sie	PPER	*	sie	*	*	silvander	-	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	;	$.	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	Doch	KON	(S*	doch	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	sie	PPER	*	sie	sg	fem	silvander	-	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	getröste	VVFIN	*	getrösen	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	sich	PRF	*	sich	sg	-	silvander	-	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	nur	ADV	(AP(NP*	nur	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	andrer	ADJA	*	andr	sg	fem	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	Liebe	NN	*)	liebe	sg	fem	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	nie	ADV	*)))	nie	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	.	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Wie	PWAV	(VROOT(PSEUDO(CS(S(AP*	wie	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	schwer	ADJD	*)	schwer	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	dämpft	VVFIN	*	dämpfen	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	ich	PPER	*	ich	sg	*	silvander	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	die	ART	(NP*	der	sg	fem	silvander	-	-	-	-	(36
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	Glut	NN	*	glut	sg	fem	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	die	PRELS	(S*	der	sg	fem	silvander	-	-	-	-	(36)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	für	APPR	(PP(PP*	für	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	sie	PPER	*)	sie	pl	*	silvander	-	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	in	APPR	*	in	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	mir	PPER	*)	sich	sg	*	silvander	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	brannte	VVFIN	*	brennen	sg	-	silvander	-	-	-	-	36)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	Als	KOUS	(S*	als	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	15	ich	PPER	*	ich	sg	*	silvander	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	16	bestürzt	VVFIN	*))))	bestürzen	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	17	und	KON	*	und	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	18	froh	ADJD	(S(AVP*	froh	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	19	in	APPR	*)	in	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	20	ihr	PPOSAT	(NP*	ihr	sg	neut	silvander	-	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	21	mein	PPOSAT	*	mein	sg	neut	silvander	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	22	Blut	NN	*)	blut	sg	neut	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	23	ertannte	VVFIN	*))	ertennen	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	24	!	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ja	PTKANT	(VROOT(PSEUDO(CS(S*	ja	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	laß	VVFIN	*	lassen	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	dirs	PPER	*	dir	sg	*	corydon	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	nur	ADV	(NP*	nur	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	vergehn	CARD	*))	vergehn	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	es	PPER	(S*	es	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	geht	VVFIN	*	gehen	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	nicht	PTKNEG	(AVP*	nicht	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	anders	ADV	*)	anders	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	an	PTKVZ	*))	an	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	.	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Je	ADV	(VROOT(PSEUDO(S*	je	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	liebe	VVFIN	*	lieben	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	doch	ADV	*	doch	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	du	PPER	(CS*	du	*	*	corydon	-	-	-	-	(3
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	Narr	ITJ	(S(AVP(S*	narr	sg	*	corydon	-	-	-	-	3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	die	ART	(NP*	der	sg	fem	corydon	-	-	-	-	(2
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	Tochter	NN	*	tochter	sg	fem	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	des	ART	(NP*	der	sg	masc	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	Montan	NN	*)))	montan	sg	masc	corydon	-	-	-	-	2)|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	Und	KON	*)	und	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	wenn	KOUS	*	wenn	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	15	ihr	PPOSAT	(NP*	ihr	sg	masc	corydon	-	-	-	-	(6|(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	16	Bruder	NN	*)	bruder	sg	masc	corydon	-	-	-	-	6)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	17	dann	ADV	*	dann	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	18	auch	ADV	(NP*	auch	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	19	deine	PPOSAT	*	dein	pl	masc	corydon	-	-	-	-	(5|(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	20	Schwester	NN	*)	schwester	pl	masc	corydon	-	-	-	-	5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	21	liebte	VVFIN	*)	lieben	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	22	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	23	Was	PWS	(S*	was	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	24	wär	VAFIN	*	sein	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	25	das	ART	(NP*	der	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	26	für	APPR	(PP*	für	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	27	ein	ART	*	ein	sg	neut	corydon	-	-	-	-	(37
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	28	Glück	NN	*)))))	glück	sg	neut	corydon	-	-	-	-	37)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	29	!	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	silvander	(LOC*)	-	-	-	(3|(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	silvander	-	-	-	-	3)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ein	ART	(VROOT(PSEUDO(NP*	ein	sg	neut	silvander	-	-	-	-	(37
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Glück	NN	*	glück	sg	neut	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	das	PRELS	(S*	der	sg	neut	silvander	-	-	-	-	(37)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	mich	PPER	*	mich	sg	*	silvander	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	betrübte	VVFIN	*))	betrüben	sg	-	silvander	-	-	-	-	37)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	.	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Denn	KON	*	denn	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	(	TRUNC	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	darf	VMFIN	*	dürfen	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	ichs	ADV	*	ichs	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	sagen	VVINF	*	sagen	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	?	$.	*	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	ach	ITJ	(VROOT(PSEUDO(S*)	ach	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	!	$.	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	)	TRUNC	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	ach	ITJ	(S*)	ach	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	!	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	silvander	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	empfind	VVFIN	*	empfind	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	es	PPER	*	es	sg	neut	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	schon	ADV	*)	schon	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	.	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Nun	ADV	(VROOT(PSEUDO*	nun	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Doris	NE	(S*	doris	-	-	silvander	(PER*)	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	konnt	VVFIN	*	konnen	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	es	PPER	*	es	sg	neut	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	seyn	ADJD	*)	seyn	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	.	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	träumt	VVFIN	*	träumen	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	dir	PPER	*	dir	sg	*	corydon	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	denn	ADV	*	denn	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	mein	PPOSAT	(NP*	mein	sg	masc	corydon	-	-	-	-	(3|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	Sohn	NN	*))	sohn	sg	masc	corydon	-	-	-	-	3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	?	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	silvander	(LOC*)	-	-	-	(3|(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	silvander	-	-	-	-	3)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Mein	PPOSAT	(VROOT(PSEUDO(NP*	mein	sg	masc	silvander	-	-	-	-	(7|(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Vater	NN	*)	vater	sg	masc	silvander	-	-	-	-	7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	!	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Schäme	NN	(VROOT(PSEUDO(S*	schämen	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	dich	PPER	*	dich	sg	*	corydon	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	du	PPER	(S*	du	sg	*	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	willst	VMFIN	*	wollen	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	die	ART	(NP(AP(NP*	der	pl	masc	corydon	-	-	-	-	(5
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	Schwester	NN	*)	schwester	pl	masc	corydon	-	-	-	-	5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	lieben	ADJA	*))))	lieben	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	?	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	silvander	(LOC*)	-	-	-	(3|(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	silvander	-	-	-	-	3)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Des	ART	(VROOT(PSEUDO(S(NP*	der	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Schicksals	NN	*	schicksal	sg	*	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	Grausamkeit	NN	*)	grausamkeit	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	verfolgt	VVFIN	*	verfolgen	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	mit	APPR	(PP*	mit	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	gleichen	ADJA	*	gleich	pl	fem	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	Trieben	NN	*)	trieb	pl	fem	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	Die	ART	(NP*	der	pl	neut	silvander	-	-	-	-	(38
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	Kinder	NN	*	kind	pl	neut	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	des	ART	(NP*	der	sg	masc	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	Montan	NN	*)))	montan	sg	masc	silvander	-	-	-	-	38)|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	.	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ach	ITJ	(VROOT(PSEUDO(S*)	ach	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	pfuy	FM	*	pfuy	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	!	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	das	PDS	(VROOT(PSEUDO(S*	der	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	ist	VAFIN	*	sein	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	zu	PTKA	(AP*	zu	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	arg	ADJD	*))	arg	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	.	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	silvander	(LOC*)	-	-	-	(3|(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	silvander	-	-	-	-	3)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Damöt	NE	(VROOT(PSEUDO(CS(S*	damöt	-	-	silvander	-	-	-	-	(6)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	liebt	VVFIN	*	lieben	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	Sylvien	NE	*)	sylvien	sg	neut	silvander	-	-	-	-	(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	und	KON	*	und	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	sie	PPER	(S*	sie	sg	fem	silvander	-	-	-	-	(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	liebt	VVFIN	*	lieben	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	ihn	PPER	*	ihn	sg	masc	silvander	-	-	-	-	(6)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	gleich	ADV	(AP*	gleich	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	stark	ADJD	*)))	stark	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	.	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ach	ITJ	(VROOT(PSEUDO(S*)	ach	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	!	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	rede	VVFIN	(VROOT(PSEUDO(S*	reden	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	deutlicher	ADJD	*	deutlich	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	mit	APPR	(PP*	mit	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	meinen	PPOSAT	*	meinen	pl	neut	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	fremden	ADJA	*	fremd	pl	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	Ohren	NN	*))	ohr	pl	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	.	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	silvander	(LOC*)	-	-	-	(3|(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	silvander	-	-	-	-	3)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Lenor	NE	(VROOT(PSEUDO(S(S*	lenor	-	-	silvander	-	-	-	-	(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	liebt	VVFIN	*	lieben	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	den	ART	(AP(NP*	der	sg	masc	silvander	-	-	-	-	(6
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	Dorant	NN	*)	dorant	sg	masc	silvander	-	-	-	-	6)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	Dorante	ADJA	*))	dorante	-	-	silvander	-	-	-	-	(6)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	liebt	VVFIN	*	lieben	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	Lenoren	NN	*)	lenoren	-	-	silvander	-	-	-	-	(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	.	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Was	PWS	*	was	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	red	FM	*	red	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	'	$[	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	st	VAFIN	*	--	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	du	PPER	*	du	sg	*	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	da	ADV	*	da	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	für	APPR	*	für	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	Zeug	NN	*	zeug	sg	neut	corydon	-	-	-	-	(39
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	das	PRELS	*	der	sg	neut	corydon	-	-	-	-	(39)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	sich	PRF	*	sich	sg	-	corydon	-	-	-	-	(39)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	hieher	ADV	*	hieher	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	nicht	PTKNEG	*	nicht	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	schickt	VVFIN	*	schicken	sg	-	corydon	-	-	-	-	39)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	?	$.	*	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Hat	VAFIN	(VROOT(PSEUDO(S*	haben	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	dir	PPER	*	dir	sg	*	corydon	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	die	ART	(NP*	der	sg	fem	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	Liebe	NN	*)	liebe	sg	fem	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	denn	ADV	*	denn	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	den	ART	(NP*	der	sg	masc	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	Kopf	NN	*)	kopf	sg	masc	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	schon	ADV	(AVP*	schon	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	so	ADV	*)	so	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	verrückt	VVFIN	*)	verrücken	pl	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	?	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Wer	PWS	(VROOT(PSEUDO(S*	wer	sg	masc	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	ist	VAFIN	*	sein	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	Lenore	NN	(NP*	lenore	sg	masc	corydon	-	-	-	-	(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	denn	ADV	*))	denn	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	?	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	silvander	(LOC*)	-	-	-	(3|(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	silvander	-	-	-	-	3)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Die	ART	(VROOT(PSEUDO(CNP(NP*	der	sg	fem	silvander	-	-	-	-	(5
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	stillste	ADJA	*	still	sg	fem	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	von	APPR	(PP*	von	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	den	ART	*	der	pl	*	silvander	-	-	-	-	(40
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	Schönen	NN	*))	schöne	pl	*	silvander	-	-	-	-	5)|40)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	Die	ART	(NP*	der	pl	*	silvander	-	-	-	-	(5
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	Tochter	NN	*	tochter	pl	*	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	des	ART	(NP*	der	sg	masc	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	Montan	NE	*))	montan	sg	masc	silvander	-	-	-	-	5)|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	ein	ART	(NP*	ein	sg	masc	silvander	-	-	-	-	(5
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	Kind	NN	*	kind	sg	masc	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	von	APPR	(PP*	von	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	Celimenen	NN	*)))	celimen	pl	*	silvander	-	-	-	-	5)|(22)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	15	.	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Nun	ADV	(VROOT(PSEUDO(S*	nun	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	sage	VVFIN	*	sagen	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	mir	PPER	*	sich	sg	*	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	doch	ADV	*	doch	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	auch	ADV	*	auch	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	wie	PWAV	(S*	wie	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	deine	PPOSAT	(NP*	dein	sg	fem	corydon	-	-	-	-	(5|(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	Schwester	NN	*)	schwester	sg	fem	corydon	-	-	-	-	5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	heißt	VVFIN	*))	heißen	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	?	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	silvander	(LOC*)	-	-	-	(3|(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	silvander	-	-	-	-	3)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Luise	NE	(VROOT(PSEUDO*	luise	sg	fem	silvander	(PER*)	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Doris	NE	(VROOT(PSEUDO(MPN*	doris	-	-	corydon	-	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	?	$.	*)))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	silvander	(LOC*)	-	-	-	(3|(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	silvander	-	-	-	-	3)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ja	NN	(VROOT(PSEUDO*	ja	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ha	NN	(VROOT(PSEUDO*	ha	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	ha	XY	*	ha	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	der	ART	(NP*	der	sg	fem	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	Knoten	NN	*)	knoten	sg	fem	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	reißt	VVFIN	*	reißen	sg	fem	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	;	$.	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	Ich	PPER	(CS(S*	ich	sg	*	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	seh	VVFIN	*	seh	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	den	ART	(NP*	der	sg	masc	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	ganzen	ADJA	*	ganz	sg	masc	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	Kram	NN	*))	kram	sg	masc	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	ihr	PPOSAT	(S(NP*	ihr	sg	masc	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	15	Pursche	NN	*)	pursche	sg	masc	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	16	seyd	ADJD	(VP*	seyd	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	17	betrogen	VVPP	*))	betrügen	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	18	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	19	Die	ART	(S(NP*	der	sg	fem	corydon	-	-	-	-	(41
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	20	alte	ADJA	*	alt	sg	fem	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	21	Wärterinn	NN	*)	wärterinn	sg	fem	corydon	-	-	-	-	41)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	22	hat	VAFIN	*	haben	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	23	euch	PPER	(VP*	euch	pl	*	corydon	-	-	-	-	(42)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	24	was	PIS	*	was	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	25	vorgelogen	VVPP	*)))	voeliegen	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	26	.	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Die	ART	(VROOT(PSEUDO(NP*	der	sg	fem	corydon	-	-	-	-	(41
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	alte	ADJA	*	alt	sg	fem	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	Hexe	NN	*)	hexe	sg	fem	corydon	-	-	-	-	41)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	!	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	(	TRUNC	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	doch	KON	*	doch	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	in	APPR	*	in	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	Ehren	NN	*	ehre	pl	fem	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	so	ADV	*	so	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	gesagt	VVPP	*	sagen	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	!	$.	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	)	TRUNC	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	Hat	VAFIN	*	haben	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	nach	APPR	*	nach	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	der	ART	*	der	sg	fem	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	Weiber	NN	*	weiber	sg	fem	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	Art	NN	*	Art	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	die	PRELS	*	der	sg	fem	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	15	schlimmste	VVFIN	*	schlimm	sg	fem	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	16	List	NE	*	list	sg	fem	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	17	gewagt	ADJD	*	wagen	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	18	.	$.	*	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Aus	APPR	(VROOT(PSEUDO(S(PP*	aus	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Liebe	NN	*	liebe	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	für	APPR	(PP*	für	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	mein	PPOSAT	*	mein	sg	neut	corydon	-	-	-	-	(5|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	Kind	NN	*))	kind	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	das	PRELS	(CS(S*	der	sg	neut	corydon	-	-	-	-	(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	sie	PPER	*	sie	pl	neut	corydon	-	-	-	-	(41)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	nicht	PTKNEG	*	nicht	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	ziehen	VVINF	*	ziehen	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	konnte	VMFIN	*)	können	sg	-	corydon	-	-	-	-	5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	Weil	KOUS	(S(S*	weil	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	sie	PPER	*	sie	sg	fem	corydon	-	-	-	-	(41)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	zu	APPR	(PP*	zu	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	15	alt	ADJD	*)	alt	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	16	schon	ADV	*	schon	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	17	war	VAFIN	*)	sein	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	18	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	19	verschwieg	VVFIN	*	verschweigen	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	20	sie	PPER	*	sie	sg	fem	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	21	dem	ART	(NP*	der	sg	masc	corydon	-	-	-	-	(0
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	22	Oronte	NN	*))	oronte	sg	masc	corydon	-	-	-	-	0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	23	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	24	Welchs	NE	(S*	welchs	pl	neut	corydon	(PER*)	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	25	seine	PPOSAT	(NP*	sein	pl	neut	corydon	-	-	-	-	(2|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	26	Tochter	NN	*)	tochter	sg	fem	corydon	-	-	-	-	2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	27	war	VAFIN	*)))	sein	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	28	!	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ihr	PPOSAT	(VROOT(PSEUDO(CS(S(NP*	ihr	sg	masc	corydon	-	-	-	-	(41)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Anschlag	NN	*)	anschlag	sg	masc	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	war	VAFIN	*	sein	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	nicht	PTKNEG	(AVP*	nicht	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	dumm	ADJD	*))	dumm	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	Aus	APPR	(S(PP*	aus	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	Vorsicht	NN	*)	vorsicht	sg	fem	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	tauschte	VVFIN	*	tauschen	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	sie	PPER	*	sie	sg	fem	corydon	-	-	-	-	(41)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	auch	ADV	(NP*	auch	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	beyder	ADJA	*	beyder	pl	masc	corydon	-	-	-	-	(40)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	Namen	NN	*)	name	pl	masc	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	um	PTKVZ	*))	um	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	.	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Lenor	NE	(VROOT(PSEUDO(S*	lenor	-	-	corydon	-	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	ist	VAFIN	*	sein	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	des	ART	(NP*	der	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	Orants	NN	*	orant	-	-	corydon	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	und	KON	(S*	und	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	mein	PPOSAT	(NP*	mein	sg	neut	corydon	-	-	-	-	(5|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	Kind	NN	*)	kind	sg	neut	corydon	-	-	-	-	5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	ist	VAFIN	*)))	sein	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	Luise	NE	*	luise	sg	fem	corydon	(PER*)	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	.	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	silvander	(LOC*)	-	-	-	(3|(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	silvander	-	-	-	-	3)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Himmel	NN	(VROOT(PSEUDO*	himmel	sg	masc	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	!	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	daß	KOUS	(S*	daß	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	sie	PPER	*	sie	pl	*	corydon	-	-	-	-	(41)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	mir	PPER	*	sich	sg	*	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	ihre	PPOSAT	(NP*	ihr	sg	fem	corydon	-	-	-	-	(41)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	Treu	NN	*)	treu	sg	fem	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	bewiese	VVFIN	*)	bewiesen	sg	fem	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	Hat	VAFIN	*	haben	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	sie	PPER	*	sie	sg	fem	corydon	-	-	-	-	(41)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	als	KOUS	(S*	als	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	mich	PPER	*	mich	sg	*	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	das	ART	(NP*	der	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	Schiff	NN	*)	schiff	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	15	noch	ADV	(AVP*	noch	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	16	nicht	PTKNEG	*)	nicht	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	17	weit	ADJD	*	weit	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	18	weggebracht	VVPP	*	wegbringen	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	19	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	20	Mir	PPER	(S*	sich	sg	*	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	21	sterbend	ADJD	(AP*	sterbend	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	22	schriftlich	ADJD	*)	schriftlich	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	23	noch	ADV	*	noch	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	24	dieß	ADJD	(AP*	dassen	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	25	alles	PIS	*)	alle	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	26	kund	ADJD	(VP*	kund	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	27	gemacht	VVPP	*))))	machen	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	28	.	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	zeige	VVFIN	*	zeigen	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	dir	PRF	*	dir	sg	*	corydon	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	den	ART	(NP*	der	sg	masc	corydon	-	-	-	-	(43
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	Brief	NN	*)	brief	sg	masc	corydon	-	-	-	-	43)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	er	PPER	(S*	er	sg	masc	corydon	-	-	-	-	(43)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	liegt	VVFIN	*	liegen	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	bey	NE	*	bey	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	meinen	PPOSAT	(NP*	mein	pl	fem	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	Sachen	NN	*)))	sache	pl	fem	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	.	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	silvander	(LOC*)	-	-	-	(3|(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	silvander	-	-	-	-	3)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	So	ADV	(VROOT(PSEUDO(S*	so	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	will	VMFIN	*	wollen	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	doch	ADV	*	doch	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	abermals	ADV	*	abermals	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	mein	PPOSAT	(VP(NP*	mein	sg	neut	silvander	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	schlafend	ADJD	*	schlafend	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	Glück	NN	*)	glück	sg	neut	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	erwachen	VVINF	*))	erwachen	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	?	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ja	PTKANT	(VROOT(PSEUDO(S*	ja	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	ja	ADV	*	ja	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	es	PPER	*	es	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	ist	VAFIN	*	sein	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	gewiß	ADV	*)	gewiß	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	.	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Wenn	KOUS	(VROOT(PSEUDO(S(AVP(S*	wenn	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	du	PPER	*	du	sg	*	corydon	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	Lenoren	NN	*	lenoren	*	*	corydon	-	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	liebst	VVFIN	*)	liebst	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	So	ADV	*)	so	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	thust	VVFIN	*	thust	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	du	PPER	*	du	sg	*	corydon	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	unrecht	ADJD	*	unrecht	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	dran	PROAV	*	dran	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	wenn	KOUS	(S*	wenn	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	du	PPER	*	du	sg	*	corydon	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	dich	PRF	*	dich	sg	-	corydon	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	drum	PROAV	*	drum	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	15	betrübst	VVFIN	*	betrübst	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	16	;	$.	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	17	Du	PPER	(S*	du	sg	*	corydon	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	18	kannst	VMFIN	*	können	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	19	sie	PPER	*	sie	sg	fem	corydon	-	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	20	heute	ADV	(AVP*	heute	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	21	noch	ADV	*)	noch	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	22	zu	PTKZU	(NP(AP*	zu	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	23	deiner	ADJA	*)	dein	sg	fem	corydon	-	-	-	-	(2|(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	24	Frau	NN	*)	frau	sg	fem	corydon	-	-	-	-	2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	25	bekommen	VVFIN	*	bekommen	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	26	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	27	Und	KON	(S*	und	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	28	dem	ART	(NP*	der	sg	masc	corydon	-	-	-	-	(6
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	29	Dorante	NN	*)	dorante	sg	masc	corydon	-	-	-	-	6)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	30	wird	VAFIN	*	werden	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	31	Luise	NE	(VP*	luise	sg	fem	corydon	(PER*)	-	-	-	(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	32	nicht	PTKNEG	*	nicht	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	33	genommen	VVPP	*)))))	nehmen	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	34	.	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Zum	APPRART	(VROOT(PSEUDO(S(PP*	zu	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Henker	NN	*)	henker	sg	*	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	hätt	VVFIN	*	hätt	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	ich	PPER	*	ich	sg	*	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	es	PPER	*	es	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	doch	ADV	*	doch	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	nimmermehr	ADJD	(AP(AP(VP*	nimmermehr	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	gedacht	VVPP	*	denken	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	Daß	KOUS	(S*	daß	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	euch	PPER	*	euch	pl	*	corydon	-	-	-	-	(42)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	das	ART	(NP*	der	sg	neut	corydon	-	-	-	-	(41
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	alte	ADJA	*	alt	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	Weib	NN	*)))	weib	sg	neut	corydon	-	-	-	-	41)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	15	so	ADV	(AVP*	so	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	16	gar	ADV	*)	gar	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	17	verwirrt	ADJD	*)	verwirrt	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	18	gemacht	VVPP	*))	machen	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	19	.	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	silvander	(LOC*)	-	-	-	(3|(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	silvander	-	-	-	-	3)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Sie	PPER	(VROOT(PSEUDO(S*	sie	sg	fem	silvander	-	-	-	-	(41)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	hat	VAFIN	*	haben	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	mich	PPER	(VP*	mich	sg	*	silvander	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	eh	ADV	(S(NP*	eh	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	sie	PPER	*)	sie	sg	fem	silvander	-	-	-	-	(41)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	starb	VVFIN	*)	sterben	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	schriftlich	ADJD	*	schriftlich	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	hintergangen	VVPP	*))	hintergangen	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	.	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Wie	PWAV	(VROOT(PSEUDO(S*	wie	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	wird	VAFIN	*	werden	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	Montan	NE	*	montan	sg	neut	silvander	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	sich	PRF	*	sich	sg	-	silvander	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	freun	ADJD	*	freun	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	wenn	KOUS	(S*	wenn	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	er	PPER	*	er	sg	masc	silvander	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	wird	VAFIN	*	werden	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	Licht	NN	(VP*	licht	sg	neut	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	empfangen	VVPP	*)))	empfangen	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	!	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Wie	PWAV	(VROOT(PSEUDO(S*	wie	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	wird	VAFIN	*	werden	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	–	XY	(NP(S(S*	–	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	–	XY	(CNP*	–	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	Doch	KON	*	doch	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	Sylvia	NE	*)	sylvia	-	-	silvander	-	-	-	-	(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	kömmt	VVFIN	*)	kömmen	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	dort	ADV	*	dort	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	mit	APPR	(PP*	mit	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	dem	ART	*	der	sg	neut	silvander	-	-	-	-	(6
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	Damöt	NN	*))	damöt	sg	neut	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	,	$,	*	--	-	-	silvander	-	-	-	-	6)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	Der	ART	(NP*	der	sg	masc	silvander	-	-	-	-	(6)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	ihr	PPOSAT	*	ihr	sg	masc	silvander	-	-	-	-	(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	aus	APPR	(PP*	aus	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	15	Zärtlichkeit	NN	*	zärtlichkeit	sg	fem	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	16	nie	ADV	*)	nie	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	17	von	APPR	(PP*	von	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	18	der	ART	*	der	sg	fem	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	19	Seite	NN	*)))	seite	sg	fem	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	20	geht	VVFIN	*)	gehen	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	21	.	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Wir	PPER	(VROOT(PSEUDO(CS(S*	wir	pl	*	silvander	-	-	-	-	(27)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	wollen	VMFIN	*	wollen	pl	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	sie	PPER	*	sie	pl	*	silvander	-	-	-	-	(38)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	doch	ADV	*	doch	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	nicht	PTKNEG	*	nicht	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	in	APPR	(PP*	in	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	ihrer	PPOSAT	*	ihr	sg	fem	silvander	-	-	-	-	(38)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	Unschuld	NN	*)	unschuld	sg	fem	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	stören	VVFIN	*)	stören	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	;	$.	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	Montan	NE	(S*	montan	-	-	silvander	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	muß	VMFIN	*	müssen	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	alles	PIS	(VP*	alle	sg	neut	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	erst	ADV	(PP*	erst	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	aus	APPR	*	aus	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	15	unserm	APPRART	*	unser	sg	neut	silvander	-	-	-	-	(27)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	16	Munde	NN	*)	mund	sg	neut	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	17	hören	VVINF	*)))	hören	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	18	.	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Beyde	NN	(VROOT(PSEUDO(S*	beyde	-	-	silvander	-	-	-	-	(27)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	ab	PTKVZ	*)	ab	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	.	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Damöt	NE	(VROOT(PSEUDO*	damöt	-	-	_stage	-	-	-	-	(6)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	_stage	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Sylvia	NE	(VROOT(PSEUDO*	sylvia	-	-	_stage	(PER*)	-	-	-	(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	_stage	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	DAMÖT	NE	(VROOT(PSEUDO*	damöt	-	-	damöt	(LOC*)	-	-	-	(6|(6)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	damöt	-	-	-	-	6)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	damöt	-	-	-	-	(6)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	sterbe	VVFIN	*	sterben	sg	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	ohne	APPR	(PP*	ohne	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	dich	PPER	*))	dich	sg	-	damöt	-	-	-	-	(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	.	$.	*))	--	-	-	damöt	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SYLVIA	NE	(VROOT(PSEUDO*	sylvia	sg	neut	sylvia	(PER*)	-	-	-	(5|(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	sylvia	-	-	-	-	5)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Allein	ADV	(VROOT(PSEUDO(S*	allein	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	was	PWS	*	was	sg	neut	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	sprach	VVFIN	*	sprechen	sg	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	Montan	NE	*)	montan	-	-	sylvia	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	?	$.	*))	--	-	-	sylvia	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	DAMÖT	NE	(VROOT(PSEUDO*	damöt	-	-	damöt	(LOC*)	-	-	-	(6|(6)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	damöt	-	-	-	-	6)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Montan	NE	(VROOT(PSEUDO(MPN*	montan	-	-	damöt	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	?	$.	*)))	--	-	-	damöt	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	was	PWS	*	was	sg	neut	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	er	PPER	*	er	sg	masc	damöt	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	gesagt	VVPP	*	sagen	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	?	$.	*	--	-	-	damöt	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	es	PPER	(VROOT(PSEUDO(S*	es	sg	neut	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	geht	VVFIN	*	gehen	sg	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	unmöglich	ADJD	*	unmöglich	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	an	PTKVZ	*)	an	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	.	$.	*))	--	-	-	damöt	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Er	PPER	(VROOT(PSEUDO(S*	er	sg	masc	damöt	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	sprach	VVFIN	*	sprechen	sg	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	:	$.	*	--	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	Ich	PPER	(S*	ich	sg	*	damöt	-	-	-	-	(6)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	solle	VMFIN	*	sollen	sg	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	dich	PRF	*	dich	sg	-	damöt	-	-	-	-	(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	,	$,	*	--	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	du	PPER	(S*	du	sg	*	damöt	-	-	-	-	(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	solltest	VVFIN	*	sollen	sg	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	mich	PPER	(VP*	mich	sg	*	damöt	-	-	-	-	(6)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	verlassen	VVINF	*))))	verlassen	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	.	$.	*))	--	-	-	damöt	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Wenn	KOUS	*	wenn	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	dieses	PDAT	*	dieser	sg	neut	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	möglich	ADJD	*	möglich	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	wär	VAFIN	*	sein	sg	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	,	$,	*	--	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	so	ADV	*	so	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	müßten	VMFIN	*	müssen	pl	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	wir	PPER	*	wir	pl	*	damöt	-	-	-	-	(38)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	uns	PRF	*	uns	pl	*	damöt	-	-	-	-	(38)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	hassen	VVFIN	*	hassen	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	.	$.	*	--	-	-	damöt	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SYLVIA	NE	(VROOT(PSEUDO*	sylvia	sg	neut	sylvia	(PER*)	-	-	-	(5|(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	sylvia	-	-	-	-	5)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Nein	PTKANT	(VROOT(PSEUDO(S*	nein	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	hassen	VVFIN	*	hassen	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	werd	VAFIN	(AVP(S*	werden	sg	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	ich	PPER	*	ich	sg	*	sylvia	-	-	-	-	(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	dich	PRF	*	dich	sg	-	sylvia	-	-	-	-	(6)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	,	$,	*	--	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	so	ADV	(S(AP*	so	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	lang	ADJD	*)	lang	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	ich	PPER	*	ich	sg	*	sylvia	-	-	-	-	(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	lebe	VVFIN	*))	leben	sg	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	,	$,	*	--	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	nie	ADV	*))	nie	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	.	$.	*))	--	-	-	sylvia	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	DAMÖT	NE	(VROOT(PSEUDO*	damöt	-	-	damöt	(LOC*)	-	-	-	(6|(6)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	damöt	-	-	-	-	6)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	ich	PPER	*	ich	sg	masc	damöt	-	-	-	-	(6)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	dich	PRF	*	dich	sg	-	damöt	-	-	-	-	(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	gleichfalls	ADV	*	gleichfalls	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	nicht	PTKNEG	*)	nicht	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	.	$.	*))	--	-	-	damöt	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SYLVIA	NE	(VROOT(PSEUDO*	sylvia	sg	neut	sylvia	(PER*)	-	-	-	(5|(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	sylvia	-	-	-	-	5)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	raschelt	VVFIN	*	rascheln	sg	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	dort	ADV	*)	dort	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	?	$.	*))	--	-	-	sylvia	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Flieh	NE	(VROOT(PSEUDO(S*	flieh	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	flieh	VVFIN	*)	flieh	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	.	$.	*))	--	-	-	sylvia	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	DAMÖT	NE	(VROOT(PSEUDO*	damöt	-	-	damöt	(LOC*)	-	-	-	(6|(6)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	damöt	-	-	-	-	6)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Nein	PTKANT	*	nein	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	nein	PTKANT	*	nein	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	,	$,	*	--	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	es	PPER	*	es	sg	neut	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	ist	VAFIN	*	sein	sg	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	mein	PPOSAT	*	mein	sg	masc	damöt	-	-	-	-	(6)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	Hund	NN	*	hund	sg	masc	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	.	$.	*	--	-	-	damöt	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SYLVIA	NE	(VROOT(PSEUDO*	sylvia	sg	neut	sylvia	(PER*)	-	-	-	(5|(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	sylvia	-	-	-	-	5)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	So	ADV	(VROOT(PSEUDO(S*	so	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	muß	VMFIN	*	müssen	sg	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	ich	PPER	*	ich	sg	*	sylvia	-	-	-	-	(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	von	APPR	(VP(PP*	von	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	dir	PPER	*)	dir	sg	*	sylvia	-	-	-	-	(6)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	gehen	VVINF	*))	gehen	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	.	$.	*))	--	-	-	sylvia	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	DAMÖT	NE	(VROOT(PSEUDO*	damöt	-	-	damöt	(LOC*)	-	-	-	(6|(6)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	damöt	-	-	-	-	6)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ach	ITJ	(VROOT(PSEUDO(S*	ach	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	warte	VVFIN	*	warten	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	doch	ADV	*)	doch	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	!	$.	*))	--	-	-	damöt	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Montan	NE	(VROOT(PSEUDO(S*	montan	-	-	damöt	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	wird	VAFIN	*	werden	sg	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	uns	PPER	(VP*	uns	pl	*	damöt	-	-	-	-	(38)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	so	ADV	*	so	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	gleich	ADV	*	gleich	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	nicht	PTKNEG	*	nicht	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	sehen	VVINF	*))	sehen	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	.	$.	*))	--	-	-	damöt	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ich	PPER	(VROOT(PSEUDO(CS(S*	ich	sg	*	damöt	-	-	-	-	(6)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	weiß	VVFIN	*	weiß	sg	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	nicht	PTKNEG	*	nicht	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	,	$,	*	--	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	was	PWS	(S*	was	sg	neut	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	er	PPER	*	er	sg	masc	damöt	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	da	ADV	*	da	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	mit	APPR	(PP*	mit	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	seinem	PPOSAT	*	sein	sg	masc	damöt	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	Unglück	NN	*)	unglück	sg	masc	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	will	VMFIN	*	wollen	sg	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	;	$.	*	--	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	Ich	PPER	(S*	ich	sg	*	damöt	-	-	-	-	(6)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	sag	VVIMP	*	sögen	sg	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	ihm	PPER	*	ihm	sg	masc	damöt	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	15	frey	VVFIN	*	frey	-	-	damöt	(PER*)	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	16	–	PPER	*	–	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	17	Allein	ADV	(AVP*	allein	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	18	,	$,	*	--	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	19	wenn	KOUS	(S*	wenn	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	20	er	PPER	*	er	sg	masc	damöt	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	21	spricht	VVFIN	*)))))	sprechen	sg	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	22	,	$,	*	--	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	23	schweig	VVFIN	(S*	schweig	sg	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	24	ich	PPER	*	ich	sg	*	damöt	-	-	-	-	(6)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	25	still	ADJD	*))	still	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	26	.	$.	*))	--	-	-	damöt	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Es	PPER	(VROOT(PSEUDO(S*	es	sg	neut	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	ist	VAFIN	*	sein	sg	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	,	$,	*	--	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	als	APPR	(S(S*	als	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	wenn	KOUS	*	wenn	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	ich	PPER	*	ich	sg	*	damöt	-	-	-	-	(6)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	ihm	PPER	*	ihm	sg	masc	damöt	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	,	$,	*	--	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	was	PRELS	(S*	was	sg	neut	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	er	PPER	*	er	sg	masc	damöt	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	sagt	VVFIN	*))	sagen	sg	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	,	$,	*	--	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	müßte	VMFIN	*	müssen	sg	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	glauben	VVINF	*))	glauben	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	.	$.	*))	--	-	-	damöt	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Doch	KON	(VROOT(PSEUDO(S*	doch	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	meine	PPOSAT	(NP*	mein	sg	fem	damöt	-	-	-	-	(5|(6)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	Sylvia	NE	*))	sylvia	sg	fem	damöt	-	-	-	-	5)|(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	!	$.	*))	--	-	-	damöt	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	dich	PRF	*	dich	sg	-	damöt	-	-	-	-	(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	soll	VMFIN	*	sollen	sg	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	er	PPER	*	er	sg	masc	damöt	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	mir	PPER	*	sich	sg	*	damöt	-	-	-	-	(6)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	nicht	PTKNEG	*	nicht	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	rauben	VVFIN	*	rauben	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	.	$.	*	--	-	-	damöt	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SYLVIA	NE	(VROOT(PSEUDO*	sylvia	sg	neut	sylvia	(PER*)	-	-	-	(5|(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	sylvia	-	-	-	-	5)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Dich	APPR	(VROOT(PSEUDO(AVP(PP*	dich	sg	*	sylvia	-	-	-	-	(6)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	mir	PPER	*)	sich	sg	*	sylvia	-	-	-	-	(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	desgleichen	ADV	*	desgleichen	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	nicht	PTKNEG	*)	nicht	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	.	$.	*))	--	-	-	sylvia	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Allein	ADV	(VROOT(PSEUDO(S*	allein	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	wo	PWAV	*	wo	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	fliehn	VVFIN	*	fliehn	pl	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	wir	PPER	*	wir	pl	*	sylvia	-	-	-	-	(38)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	hin	PTKVZ	*)	hin	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	?	$.	*))	--	-	-	sylvia	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ich	PPER	(VROOT(PSEUDO(CS(S*	ich	sg	*	sylvia	-	-	-	-	(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	seh	VVFIN	*	seh	sg	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	ihm	PPER	*	ihm	sg	masc	sylvia	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	stets	ADV	*	stets	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	um	APPR	(PP*	um	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	mich	PPER	*))	mich	sg	*	sylvia	-	-	-	-	(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	,	$,	*	--	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	ich	PPER	(S*	ich	sg	*	sylvia	-	-	-	-	(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	bin	VAFIN	*	sein	sg	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	auch	ADV	*	auch	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	,	$,	*	--	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	wo	PWAV	(S*	wo	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	ich	PPER	*	ich	sg	*	sylvia	-	-	-	-	(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	bin	VAFIN	*)))	sein	sg	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	.	$.	*))	--	-	-	sylvia	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Sein	PPOSAT	(VROOT(PSEUDO(S(NP*	sein	sg	neut	sylvia	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	ernsthaft	ADJD	*	ernsthaft	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	Reden	NN	*)	rede	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	macht	VVFIN	*	machen	sg	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	,	$,	*	--	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	daß	KOUS	(S*	daß	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	ich	PPER	*	ich	sg	*	sylvia	-	-	-	-	(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	mich	PRF	*	mich	sg	-	sylvia	-	-	-	-	(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	vor	APPR	(PP*	vor	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	ihm	PPER	*)	ihm	sg	masc	sylvia	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	scheue	VVFIN	*	scheue	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	;	$.	*	--	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	Doch	KON	(S*	doch	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	folg	VVFIN	*	folg	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	ich	PPER	*	ich	sg	*	sylvia	-	-	-	-	(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	15	dießmal	ADV	*	dießmal	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	16	ihm	PPER	*	ihm	sg	masc	sylvia	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	17	,	$,	*	--	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	18	so	ADV	(S*	so	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	19	folg	VVFIN	*	folg	sg	masc	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	20	der	ART	(NP*	der	sg	masc	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	21	That	NE	*)	that	sg	masc	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	22	die	ART	(NP*	der	sg	fem	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	23	Reue	NN	*)))))	reue	sg	fem	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	24	.	$.	*))	--	-	-	sylvia	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	DAMÖT	NE	(VROOT(PSEUDO*	damöt	-	-	damöt	(LOC*)	-	-	-	(6|(6)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	damöt	-	-	-	-	6)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Verhindre	NN	(VROOT(PSEUDO(CO(NP*	verhindre	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	diesen	PDAT	(NP*	dieser	sg	masc	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	Schmerz	NN	*))	schmerz	sg	masc	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	und	KON	*	und	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	folg	VVFIN	(S*	folg	sg	masc	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	ihm	PPER	*	ihm	sg	masc	damöt	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	diesmal	ADV	(AVP*	diesmal	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	nicht	PTKNEG	*)))	nicht	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	.	$.	*))	--	-	-	damöt	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Hier	ADV	*	hier	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	frage	VVFIN	*	fragen	sg	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	nur	ADV	*	nur	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	dein	PPOSAT	*	dein	-	-	damöt	-	-	-	-	(44|(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	Herz	NN	*	herz	-	-	damöt	-	-	-	-	44)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	,	$,	*	--	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	und	KON	*	und	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	thu	VVFIN	*	thu	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	,	$,	*	--	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	was	PWS	*	was	sg	neut	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	dieses	PDAT	*	dieser	sg	neut	damöt	-	-	-	-	(44)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	spricht	VVFIN	*	sprechen	sg	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	.	$.	*	--	-	-	damöt	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SYLVIA	NE	(VROOT(PSEUDO*	sylvia	sg	neut	sylvia	(PER*)	-	-	-	(5|(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	sylvia	-	-	-	-	5)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Mein	PPOSAT	*	mein	sg	masc	sylvia	-	-	-	-	(44|(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Herz	NN	*	herz	sg	masc	sylvia	-	-	-	-	44)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	spricht	VVFIN	*	sprechen	sg	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	:	$.	*	--	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	Widersteh	NE	*	widersteh	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	dem	PDS	*	der	sg	neut	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	,	$,	*	--	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	was	PWS	*	was	sg	neut	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	Montan	NE	*	montan	sg	neut	sylvia	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	begehret	VVFIN	*	begehren	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	–	XY	*	–	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	–	XY	*	–	-	-	sylvia	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	DAMÖT	NE	(VROOT(PSEUDO*	damöt	-	-	damöt	(LOC*)	-	-	-	(6|(6)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	damöt	-	-	-	-	6)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Und	KON	(VROOT(PSEUDO*	und	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	sey	VVIMP	(AP(S*	sey	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	Damöten	NN	*)	damöte	sg	neut	damöt	-	-	-	-	(6)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	gut	ADJD	*)	gut	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	.	$.	*))	--	-	-	damöt	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SYLVIA	NE	(VROOT(PSEUDO*	sylvia	sg	neut	sylvia	(PER*)	-	-	-	(5|(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	sylvia	-	-	-	-	5)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Dein	PPOSAT	*	dein	sg	masc	sylvia	-	-	-	-	(45|(6)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Wunsch	NN	*	wunsch	sg	masc	sylvia	-	-	-	-	45)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	war	VAFIN	*	sein	sg	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	dir	PPER	*	dir	sg	*	sylvia	-	-	-	-	(6)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	gewähret	VVPP	*	gewähret	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	,	$,	*	--	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	Eh	NN	*	eh	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	du	PPER	*	du	sg	*	sylvia	-	-	-	-	(6)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	ihn	PPER	*	ihn	sg	masc	sylvia	-	-	-	-	(45)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	noch	ADV	*	noch	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	gethan	ADJD	*	gethan	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	;	$.	*	--	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	mein	PPOSAT	*	mein	sg	masc	sylvia	-	-	-	-	(46|(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	Wunsch	NN	*	wunsch	sg	masc	sylvia	-	-	-	-	46)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	ist	VAFIN	*	sein	sg	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	15	deinem	PPOSAT	*	dein	sg	masc	sylvia	-	-	-	-	(6)|(45)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	16	gleich	ADJD	*	gleich	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	17	.	$.	*	--	-	-	sylvia	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	DAMÖT	NE	(VROOT(PSEUDO*	damöt	-	-	damöt	(LOC*)	-	-	-	(6|(6)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	damöt	-	-	-	-	6)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Mein	PPOSAT	(VROOT(PSEUDO(S(NP*	mein	sg	neut	damöt	-	-	-	-	(45|(6)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Wunsch	NN	*)	wunsch	sg	neut	damöt	-	-	-	-	45)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	kam	VVFIN	*	kommen	sg	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	ihm	PPER	*	ihm	sg	*	damöt	-	-	-	-	(46)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	zuvor	ADV	*)	zuvor	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	.	$.	*))	--	-	-	damöt	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SYLVIA	NE	(VROOT(PSEUDO*	sylvia	sg	neut	sylvia	(PER*)	-	-	-	(5|(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	sylvia	-	-	-	-	5)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Damöt	NE	(VROOT(PSEUDO(AP(S(NP*	damöt	-	-	sylvia	-	-	-	-	(6)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	Montan	NE	*)	montan	sg	neut	sylvia	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	kömmt	VVFIN	*)	kömmen	sg	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	,	$,	*	--	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	weich	ADJD	*)	weich	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	!	$.	*))	--	-	-	sylvia	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	DAMÖT	NE	(VROOT(PSEUDO*	damöt	-	-	damöt	(LOC*)	-	-	-	(6|(6)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	damöt	-	-	-	-	6)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Wo	PWAV	(VROOT(PSEUDO(S*	wo	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	kömmt	VVFIN	*	kömmen	sg	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	er	PPER	*	er	sg	masc	damöt	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	denn	ADV	*)	denn	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	?	$.	*))	--	-	-	damöt	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ach	ITJ	(VROOT(PSEUDO(S*)	ach	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Kind	NN	*	kind	sg	neut	damöt	-	-	-	-	(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	!	$.	*))	--	-	-	damöt	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	du	PPER	(VROOT(PSEUDO(S*	du	sg	*	damöt	-	-	-	-	(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	willst	VMFIN	*	wollen	sg	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	,	$,	*	--	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	ich	PPER	(S*	ich	sg	*	damöt	-	-	-	-	(6)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	soll	VMFIN	*	sollen	sg	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	dich	PRF	(VP*	dich	sg	-	damöt	-	-	-	-	(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	meiden	VVINF	*)	meiden	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	;	$.	*	--	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	Ich	PPER	(S*	ich	sg	*	damöt	-	-	-	-	(6)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	muß	VMFIN	*	müssen	sg	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	,	$,	*	--	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	weil	KOUS	(S*	weil	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	du	PPER	*	du	sg	*	damöt	-	-	-	-	(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	es	PPER	*	es	sg	neut	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	willst	VMFIN	*))))	wollen	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	15	–	XY	*	–	sg	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	16	ich	PPER	*	ich	sg	*	damöt	-	-	-	-	(6)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	17	muß	VMFIN	*	müssen	sg	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	18	–	XY	*	–	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	19	ja	ADV	(S*	ja	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	20	–	VVFIN	*	–	sg	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	21	ich	PPER	(S*	ich	sg	*	damöt	-	-	-	-	(6)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	22	muß	VMFIN	*	müssen	sg	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	23	scheiden	VVINF	*))	scheiden	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	24	.	$.	*))	--	-	-	damöt	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Will	NE	(VROOT(PSEUDO(S*	wollen	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	gehen	VVFIN	*)	gehen	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	.	$.	*))	--	-	-	damöt	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SYLVIA	NE	(VROOT(PSEUDO*	sylvia	sg	neut	sylvia	(PER*)	-	-	-	(5|(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	sylvia	-	-	-	-	5)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Nun	ADV	(VROOT(PSEUDO(S*	nun	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	mußt	VMFIN	*	mussen	sg	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	du	PPER	*	du	sg	*	sylvia	-	-	-	-	(6)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	denn	ADV	*	denn	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	gleich	ADV	(NP*	gleich	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	gehn	CARD	*))	gehn	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	?	$.	*))	--	-	-	sylvia	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Damöt	NN	*	damöt	-	-	sylvia	-	-	-	-	(6)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	!	$.	*))	--	-	-	sylvia	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	DAMÖT	NE	(VROOT(PSEUDO*	damöt	-	-	damöt	(LOC*)	-	-	-	(6|(6)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	damöt	-	-	-	-	6)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Du	PPER	(VROOT(PSEUDO(S*	du	sg	*	damöt	-	-	-	-	(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	willst	VMFIN	*	wollen	sg	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	es	PPER	*	es	sg	neut	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	ja	ADV	*)	ja	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	.	$.	*))	--	-	-	damöt	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SYLVIA	NE	(VROOT(PSEUDO*	sylvia	sg	neut	sylvia	(PER*)	-	-	-	(5|(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	sylvia	-	-	-	-	5)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Montan	NE	(VROOT(PSEUDO(S*	montan	-	-	sylvia	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	will	VMFIN	*	wollen	sg	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	es	PPER	*	es	sg	neut	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	ja	ADV	*	ja	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	nu	ADV	*)	nu	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	.	$.	*))	--	-	-	sylvia	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Damöt	NE	(VROOT(PSEUDO(MPN*	damöt	-	-	sylvia	-	-	-	-	(6)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	!	$.	*)))	--	-	-	sylvia	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	DAMÖT	NE	(VROOT(PSEUDO*	damöt	-	-	damöt	(LOC*)	-	-	-	(6|(6)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	damöt	-	-	-	-	6)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ach	ITJ	(VROOT(PSEUDO(S*)	ach	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Sylvia	NE	*	sylvia	-	-	damöt	-	-	-	-	(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	!	$.	*))	--	-	-	damöt	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Doris	NE	(VROOT(PSEUDO(CNP*	doris	-	-	damöt	(PER*)	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	und	KON	*	und	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	Chloe	NN	*)	chloe	-	-	damöt	-	-	-	-	(1)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	kömmt	VVFIN	*	kömmen	sg	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	.	$.	*))	--	-	-	damöt	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Montan	NE	(VROOT(PSEUDO(S*	montan	-	-	damöt	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	kömmt	VVFIN	*	kömmen	sg	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	auch	ADV	*	auch	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	mit	APPR	(PP*	mit	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	ihnen	PPER	*))	ihnen	pl	*	damöt	-	-	-	-	(47)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	.	$.	*))	--	-	-	damöt	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SYLVIA	NE	(VROOT(PSEUDO*	sylvia	sg	neut	sylvia	(PER*)	-	-	-	(5|(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	sylvia	-	-	-	-	5)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	O	NE	(VROOT(PSEUDO(NP*	O	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	weh	ADV	*)	weh	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	!	$.	*))	--	-	-	sylvia	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	er	PPER	(VROOT(PSEUDO(S*	er	sg	masc	sylvia	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	ist	VAFIN	*	sein	sg	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	schon	ADV	(AVP*	schon	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	da	ADV	*)	da	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	,	$,	*	--	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	mich	PRF	*	mich	sg	*	sylvia	-	-	-	-	(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	schrecken	VVFIN	*)	schrecken	pl	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	seine	PPOSAT	(NP*	sein	pl	fem	sylvia	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	Minen	NN	*)	mine	pl	fem	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	.	$.	*))	--	-	-	sylvia	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Komm	VVIMP	*	komm	pl	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	!	$.	*	--	-	-	sylvia	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Wollen	NN	(VROOT(PSEUDO*	wolle	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	gehen	VVFIN	*	gehen	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	.	$.	*))	--	-	-	sylvia	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Montan	NE	(VROOT(PSEUDO*	montan	-	-	_stage	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	_stage	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	Doris	NE	*	doris	sg	neut	_stage	(PER*)	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	,	$,	*	--	-	-	_stage	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	Chloe	NN	*	chloe	sg	neut	_stage	(PER*)	-	-	-	(1)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	,	$,	*	--	-	-	_stage	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	Damöt	VVFIN	*	damöt	sg	neut	_stage	-	-	-	-	(6)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	,	$,	*	--	-	-	_stage	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	Sylvia	NE	*	sylvia	sg	neut	_stage	(PER*)	-	-	-	(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	.	$.	*))	--	-	-	_stage	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	montan	-	-	-	-	(0|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	0)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Kinder	NN	(VROOT(PSEUDO(S*	kind	pl	neut	montan	-	-	-	-	(38)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	wartet	VVFIN	*	warten	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	doch	ADV	*)	doch	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	.	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Wohin	PWAV	(VROOT(PSEUDO*	wohin	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	?	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	DAMÖT	NE	(VROOT(PSEUDO*	damöt	-	-	damöt	(LOC*)	-	-	-	(6|(6)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	damöt	-	-	-	-	6)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Auf	APPR	(VROOT(PSEUDO(PP*	auf	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	unsre	ADJA	*	unsr	sg	fem	damöt	-	-	-	-	(38)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	Flur	NN	*)	flur	sg	fem	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	.	$.	*))	--	-	-	damöt	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	montan	-	-	-	-	(0|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	0)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	So	ADV	(VROOT(PSEUDO(S*	so	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	folgt	VVFIN	*	folgen	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	ihr	PPOSAT	(NP*	ihr	sg	neut	montan	-	-	-	-	(38)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	ohne	APPR	(NP(PP*	ohne	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	mich	PPER	*)	mich	sg	*	montan	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	den	ART	*	der	sg	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	Trieben	NN	*)	trieb	sg	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	der	ART	*	der	sg	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	Natur	NN	*))	natur	sg	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	?	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ich	PPER	*	ich	sg	*	montan	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	hab	VAFIN	*	heben	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	es	PPER	*	es	sg	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	euch	PRF	*	euch	pl	*	montan	-	-	-	-	(38)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	gesagt	VVPP	*	sagen	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	und	KON	*	und	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	wills	ADV	*	wills	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	noch	ADV	*	noch	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	einmal	ADV	*	einmal	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	sagen	VVINF	*	sagen	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	Ihr	PPOSAT	*	ihr	pl	*	montan	-	-	-	-	(38)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	werdet	VVFIN	*	werden	pl	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	was	PWS	*	was	sg	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	15	ihr	PPOSAT	*	ihr	sg	neut	montan	-	-	-	-	(38)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	16	thut	ADJD	*	thut	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	17	einmal	ADV	*	einmal	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	18	zu	PTKA	*	zu	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	19	spät	ADJD	*	spät	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	20	beklagen	VVINF	*	beklagen	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	21	.	$.	*	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SYLVIA	NE	(VROOT(PSEUDO*	sylvia	sg	neut	sylvia	(PER*)	-	-	-	(5|(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	sylvia	-	-	-	-	5)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Montan	NE	(VROOT(PSEUDO(S*	montan	-	-	sylvia	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	was	PWS	*	was	sg	neut	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	thun	VVFIN	*	thun	pl	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	wir	PPER	*	wir	pl	*	sylvia	-	-	-	-	(38)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	denn	ADV	*)	denn	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	?	$.	*))	--	-	-	sylvia	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	montan	-	-	-	-	(0|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	0)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Daß	KOUS	(VROOT(PSEUDO(CS(S*	daß	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	ihr	PPER	*	ihr	pl	*	montan	-	-	-	-	(38)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	beysammen	VVFIN	*	beysammen	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	seyd	ADJD	*)	seyd	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	Das	PDS	(S*	der	sg	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	ist	VAFIN	*	sein	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	nicht	PTKNEG	(AP*	nicht	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	recht	ADJD	*)))	recht	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	.	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	DORIS	NE	(VROOT(PSEUDO*	doris	sg	neut	doris	(LOC*)	-	-	-	(2|(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	doris	-	-	-	-	2)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Warum	PWAV	(VROOT(PSEUDO*	warum	-	-	doris	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	?	$.	*))	--	-	-	doris	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CHLOE	NE	(VROOT(PSEUDO*	chloe	-	-	chloe	(LOC*)	-	-	-	(1|(1)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	chloe	-	-	-	-	1)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Weil	KOUS	(VROOT(PSEUDO(S*	weil	-	-	chloe	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	es	PPER	*	es	sg	neut	chloe	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	Montan	NE	(VP*	montan	sg	*	chloe	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	verbeut	VVPP	*))	verbeuen	sg	*	chloe	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	.	$.	*))	--	-	-	chloe	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	montan	-	-	-	-	(0|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	0)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Doris	NE	(AVP(S*	doris	sg	neut	montan	(PER*)	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	du	PPER	*	du	sg	*	montan	-	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	sollst	VVFIN	*	sollen	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	zwar	ADV	*	zwar	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	noch	ADV	*	noch	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	den	ART	(NP*	der	sg	masc	montan	-	-	-	-	(3
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	Silvander	NN	*)	silvander	sg	masc	montan	-	-	-	-	3)|(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	sehen	VVFIN	*)	sehen	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	Doch	KON	*)	doch	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	daß	KOUS	(S*	daß	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	du	PPER	*	du	sg	*	montan	-	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	15	Abschied	NN	*	abschied	sg	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	16	nimmst	VVFIN	*))	nimmsen	sg	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	17	.	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	DORIS	NE	(VROOT(PSEUDO*	doris	sg	neut	doris	(LOC*)	-	-	-	(2|(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	doris	-	-	-	-	2)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Das	PDS	(VROOT(PSEUDO(S*	der	sg	neut	doris	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	wird	VAFIN	*	werden	sg	-	doris	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	wohl	ADV	(VP*	wohl	-	-	doris	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	nicht	PTKNEG	*	nicht	-	-	doris	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	geschehen	VVPP	*))	geschehen	-	-	doris	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	.	$.	*))	--	-	-	doris	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CHLOE	NE	(VROOT(PSEUDO*	chloe	-	-	chloe	(LOC*)	-	-	-	(1|(1)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	chloe	-	-	-	-	1)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Allein	ADV	(VROOT(PSEUDO(CS*	allein	-	-	chloe	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	chloe	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	Silvander	NN	(S*	silvander	sg	neut	chloe	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	geht	VVFIN	*))	gehen	sg	-	chloe	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	.	$.	*))	--	-	-	chloe	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Willst	VAFIN	(VROOT(PSEUDO(S(AVP(S*	willen	sg	-	chloe	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	du	PPER	(NP*	du	sg	*	chloe	-	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	so	ADV	*)	so	-	-	chloe	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	trotzig	ADJD	*	trotzig	-	-	chloe	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	seyn	VVFIN	*)	seyn	-	-	chloe	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	,	$,	*	--	-	-	chloe	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	Und	KON	*)	und	-	-	chloe	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	ihn	PPER	*	ihn	sg	masc	chloe	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	so	ADV	(VP*	so	-	-	chloe	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	lassen	VVINF	*)	lassen	pl	-	chloe	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	gehn	VAFIN	*)	gehn	-	-	chloe	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	?	$.	*))	--	-	-	chloe	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Es	PPER	(VROOT(PSEUDO(S*	es	sg	neut	chloe	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	wird	VAFIN	*	werden	sg	-	chloe	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	dich	PPER	*	dich	-	-	chloe	-	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	schon	ADV	(AP*	schon	-	-	chloe	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	gereun	ADJD	*))	gereun	-	-	chloe	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	.	$.	*))	--	-	-	chloe	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	montan	-	-	-	-	(0|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	0)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ja	PTKANT	(VROOT(PSEUDO(CS(S*	ja	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	ja	ADV	*	ja	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	er	PPER	(S*	er	sg	masc	montan	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	geht	VVFIN	*))	gehen	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	und	KON	*	und	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	hat	VAFIN	(S*	haben	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	mirs	PPER	(VP*	mir	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	für	APPR	(PP*	für	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	gewiß	ADV	*)	gewiß	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	entdecket	VVPP	*)))	entdecken	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	.	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	DORIS	NE	(VROOT(PSEUDO*	doris	sg	neut	doris	(LOC*)	-	-	-	(2|(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	doris	-	-	-	-	2)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Glaubst	ADV	(VROOT(PSEUDO(S*	glaubst	sg	-	doris	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	du	PPER	(NP*	du	sg	*	doris	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	,	$,	*	--	-	-	doris	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	Montan	NE	*))	montan	-	-	doris	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	!	$.	*))	--	-	-	doris	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	daß	KOUS	(VROOT(PSEUDO(S*	daß	-	-	doris	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	mich	PPER	*	mich	sg	*	doris	-	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	dein	PPOSAT	(NP*	dein	sg	neut	doris	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	leeres	ADJA	*	leer	sg	neut	doris	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	Drohen	NN	*)	drohen	pl	fem	doris	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	schrecket	VVFIN	*)	schrecken	sg	-	doris	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	?	$.	*))	--	-	-	doris	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CHLOE	NE	(VROOT(PSEUDO*	chloe	-	-	chloe	(LOC*)	-	-	-	(1|(1)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	chloe	-	-	-	-	1)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Erschrick	NE	(VROOT(PSEUDO*	erschrick	-	-	chloe	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	doch	ADV	(AP*	doch	-	-	chloe	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	nur	ADV	*)	nur	-	-	chloe	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	.	$.	*))	--	-	-	chloe	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	DORIS	NE	(VROOT(PSEUDO*	doris	sg	neut	doris	(LOC*)	-	-	-	(2|(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	doris	-	-	-	-	2)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	doris	-	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	will	VMFIN	*	wollen	sg	-	doris	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	für	APPR	(PP*	für	-	-	doris	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	den	ART	*	der	sg	masc	doris	-	-	-	-	(3
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	Silvander	NN	*))	silvander	sg	masc	doris	-	-	-	-	3)|(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	stehn	CARD	(NP*	stehn	-	-	doris	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	,	$,	*	--	-	-	doris	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	Gieng	VVFIN	(S*	gieng	sg	-	doris	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	er	PPER	*	er	sg	masc	doris	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	,	$,	*	--	-	-	doris	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	er	PPER	(S*	er	sg	masc	doris	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	bäte	VVFIN	*	bäten	sg	-	doris	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	mich	PPER	*	mich	sg	*	doris	-	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	,	$,	*	--	-	-	doris	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	ich	PPER	(S*	ich	sg	*	doris	-	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	15	müßte	VMFIN	*	müssen	sg	-	doris	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	16	mit	APPR	(PP*	mit	-	-	doris	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	17	ihm	PPER	*)))))	ihm	sg	*	doris	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	18	gehn	CARD	*	gehn	-	-	doris	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	19	.	$.	*))	--	-	-	doris	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	montan	-	-	-	-	(0|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	0)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Seht	NE	*	sehen	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	doch	ADV	*	doch	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	die	ART	*	der	pl	fem	montan	-	-	-	-	(2
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	Schäferinn	NN	*	schäferinn	pl	-	montan	-	-	-	-	2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	wer	PWS	*	wer	sg	*	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	hat	VAFIN	*	haben	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	dich	PPER	*	dich	sg	-	montan	-	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	das	ART	*	der	sg	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	gelehret	ADJD	*	gelehret	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	?	$.	*	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	DORIS	NE	(VROOT(PSEUDO*	doris	sg	neut	doris	(LOC*)	-	-	-	(2|(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	doris	-	-	-	-	2)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Mein	PPOSAT	*	mein	-	-	doris	-	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	und	KON	*	und	-	-	doris	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	Silvanders	NN	*	silvanders	-	-	doris	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	Herz	NN	*	herz	-	-	doris	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	.	$.	*	--	-	-	doris	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CHLOE	NE	(VROOT(PSEUDO*	chloe	-	-	chloe	(LOC*)	-	-	-	(1|(1)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	chloe	-	-	-	-	1)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ich	PPER	(VROOT(PSEUDO(CS(S*	ich	sg	*	chloe	-	-	-	-	(1)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	glaub	VVFIN	*	glaubn	sg	-	chloe	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	es	PPER	*)	es	sg	neut	chloe	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	,	$,	*	--	-	-	chloe	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	eh	ADV	(S(NP*	eh	-	-	chloe	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	sie	PPER	*)	sie	sg	fem	chloe	-	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	schwöret	ADJD	*))	schwöret	-	-	chloe	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	.	$.	*))	--	-	-	chloe	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	montan	-	-	-	-	(0|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	0)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Dein	PPOSAT	*	dein	-	-	montan	-	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	und	KON	*	und	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	Silvanders	NN	*	silvanders	sg	masc	montan	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	Herz	NN	*	herz	sg	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	sind	VAFIN	*	sein	pl	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	Lügner	NE	*	lügner	pl	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	.	$.	*	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	DORIS	NE	(VROOT(PSEUDO*	doris	sg	neut	doris	(LOC*)	-	-	-	(2|(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	doris	-	-	-	-	2)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Nein	PTKANT	*	nein	-	-	doris	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	doris	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	Montan	NE	*	montan	sg	neut	doris	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	!	$.	*	--	-	-	doris	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Silvander	NN	(VROOT(PSEUDO(S*	silvander	-	-	doris	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	soll	VMFIN	*	sollen	sg	-	doris	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	mich	PPER	*	mich	sg	*	doris	-	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	fliehn	VVFIN	*)	fliehn	-	-	doris	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	?	$.	*))	--	-	-	doris	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Nein	PTKANT	*	nein	-	-	doris	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	doris	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	nein	PTKANT	*	nein	-	-	doris	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	,	$,	*	--	-	-	doris	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	das	PDS	*	der	sg	neut	doris	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	geht	VVFIN	*	gehen	sg	-	doris	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	nicht	PTKNEG	*	nicht	-	-	doris	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	an	PTKVZ	*	an	-	-	doris	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	.	$.	*	--	-	-	doris	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Wenn	KOUS	(VROOT(PSEUDO(S*	wenn	-	-	doris	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	er	PPER	*	er	sg	masc	doris	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	mich	PRF	*	mich	sg	*	doris	-	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	könnte	VMFIN	(S*	können	sg	-	doris	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	fliehn	CARD	*	fliehn	-	-	doris	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	;	$.	*	--	-	-	doris	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	so	ADV	*	so	-	-	doris	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	müßt	VVFIN	*)	müßen	sg	-	doris	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	er	PPER	*	er	sg	masc	doris	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	mich	PPER	*	mich	sg	*	doris	-	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	nicht	PTKNEG	(NP(AP*	nicht	-	-	doris	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	lieben	ADJA	*)))	lieben	-	-	doris	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	.	$.	*))	--	-	-	doris	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	montan	-	-	-	-	(0|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	0)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Denkst	ADV	(VROOT(PSEUDO(S*	denken	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	du	PPER	*	du	sg	*	montan	-	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	er	PPER	(S*	er	sg	masc	montan	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	liebt	VVFIN	*	lieben	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	dich	PPER	*))	dich	sg	-	montan	-	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	?	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	DORIS	NE	(VROOT(PSEUDO*	doris	sg	neut	doris	(LOC*)	-	-	-	(2|(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	doris	-	-	-	-	2)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ja	NN	(VROOT(PSEUDO*	ja	-	-	doris	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	doris	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	montan	-	-	-	-	(0|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	0)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Wo	PWAV	(VROOT(PSEUDO(S*	wo	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	ist	VAFIN	*	sein	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	mein	PPOSAT	(VP(NP*	mein	sg	neut	montan	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	Zweck	NN	*)	zweck	sg	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	geblieben	VVPP	*))	bleiben	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	?	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Sylvia	NE	(VROOT(PSEUDO(S(CNP*	sylvia	sg	fem	montan	(PER*)	-	-	-	(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	und	KON	*	und	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	Damöt	NN	*)	damöt	-	-	montan	-	-	-	-	(6)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	winken	VVFIN	*	winken	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	stets	ADV	(AVP*	stets	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	einander	ADV	*))	einander	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	.	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Zu	APPR	(VROOT(PSEUDO(PP*	zu	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	ihnen	PPER	*)	ihnen	pl	*	montan	-	-	-	-	(38)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	.	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	St	NN	(VROOT(PSEUDO(S*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	st	VVFIN	*)	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	.	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	montan	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	glaube	VVFIN	*	glauben	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	gar	ADV	*	gar	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	daß	KOUS	(S*	daß	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	ihr	PPOSAT	(NP*	ihr	sg	masc	montan	-	-	-	-	(38)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	bey	ADJA	*	bey	sg	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	Seite	NN	*)	seite	sg	fem	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	geht	VVFIN	*	gehen	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	Tritt	NN	(NP*	tritt	sg	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	dorthin	ADV	*	dorthin	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	Sylvia	NE	*)))	sylvia	-	-	montan	-	-	-	-	(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	!	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	und	KON	(VROOT(PSEUDO(S*	und	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	du	PPER	*	du	sg	masc	montan	-	-	-	-	(6)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	hieher	ADV	*	hieher	sg	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	Damöt	VVFIN	*)	damöt	sg	masc	montan	-	-	-	-	(6)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	.	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	DAMÖT	NE	(VROOT(PSEUDO*	damöt	-	-	damöt	(LOC*)	-	-	-	(6|(6)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	damöt	-	-	-	-	6)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Hier	ADV	*	hier	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	bin	VAFIN	*	sein	sg	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	ich	PPER	*	ich	sg	*	damöt	-	-	-	-	(6)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	.	$.	*	--	-	-	damöt	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SYLVIA	NE	(VROOT(PSEUDO*	sylvia	sg	neut	sylvia	(PER*)	-	-	-	(5|(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	sylvia	-	-	-	-	5)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Nun	ADV	*	nun	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	was	PWS	*	was	sg	neut	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	denn	KON	*	denn	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	?	$.	*	--	-	-	sylvia	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	montan	-	-	-	-	(0|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	0)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Bleibt	VVFIN	(VROOT(PSEUDO(S*	bleiben	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	beyde	ADJA	(NP*	beyden	sg	-	montan	-	-	-	-	(38)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	nur	ADV	(PP*	nur	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	so	ADV	(S*	so	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	stehen	VVFIN	*	stehen	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	Und	KON	(S*	und	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	geht	VVFIN	*	gehen	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	nicht	PTKNEG	*	nicht	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	eher	ADV	*	eher	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	weg	PTKVZ	*))	weg	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	bis	KOUS	(S*	bis	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	ich	PPER	*	ich	sg	*	montan	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	euch	PRF	*	euch	pl	*	montan	-	-	-	-	(38)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	15	heiße	VVFIN	*)))	heiß	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	16	gehen	VVINF	*)	gehen	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	17	.	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	DORIS	NE	(VROOT(PSEUDO*	doris	sg	neut	doris	(LOC*)	-	-	-	(2|(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	doris	-	-	-	-	2)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Nun	ADV	(VROOT(PSEUDO(S*	nun	-	-	doris	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	doris	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	wo	PWAV	*	wo	-	-	doris	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	trett	VVFIN	*	trett	sg	-	doris	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	ich	PPER	*	ich	sg	*	doris	-	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	denn	ADV	*	denn	-	-	doris	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	hin	PTKVZ	*)	hin	-	-	doris	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	?	$.	*))	--	-	-	doris	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	montan	-	-	-	-	(0|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	0)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Wohin	PWAV	(VROOT(PSEUDO(S*	wohin	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	du	PPER	*	du	sg	*	montan	-	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	willst	VMFIN	*)	wollen	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	.	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CHLOE	NE	(VROOT(PSEUDO*	chloe	-	-	chloe	(LOC*)	-	-	-	(1|(1)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	chloe	-	-	-	-	1)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Und	KON	*	und	-	-	chloe	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	ich	PPER	*	ich	sg	*	chloe	-	-	-	-	(1)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	?	$.	*	--	-	-	chloe	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	montan	-	-	-	-	(0|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	0)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Du	PPER	(VROOT(PSEUDO(NP*	du	sg	*	montan	-	-	-	-	(1
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	lose	ADJA	*	los	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	Schmeichlerinn	NN	*)	schmeichlerinn	sg	masc	montan	-	-	-	-	1)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	!	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CHLOE	NE	(VROOT(PSEUDO*	chloe	-	-	chloe	(LOC*)	-	-	-	(1|(1)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	chloe	-	-	-	-	1)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Das	PDS	(VROOT(PSEUDO(S*	der	sg	neut	chloe	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	ist	VAFIN	*	sein	sg	-	chloe	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	ein	ART	(NP*	ein	sg	masc	chloe	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	Lob	NN	*	lob	sg	masc	chloe	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	für	APPR	(PP*	für	-	-	chloe	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	mich	PPER	*)))	mich	sg	*	chloe	-	-	-	-	(1)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	.	$.	*))	--	-	-	chloe	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Montan	NE	(VROOT(PSEUDO(S*	montan	-	-	chloe	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	versteht	VVFIN	*	verstehen	sg	-	chloe	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	mich	PPER	*	mich	sg	*	chloe	-	-	-	-	(1)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	schon	ADV	*)	schon	-	-	chloe	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	–	XY	*	–	-	-	chloe	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	–	XY	*	–	-	-	chloe	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	Ich	PPER	(S(AVP(S*	ich	sg	*	chloe	-	-	-	-	(1)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	seh	VVFIN	*	seh	sg	-	chloe	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	Silvandern	NN	*	silvand	pl	neut	chloe	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	kommen	VVFIN	*)	kommen	-	-	chloe	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	,	$,	*	--	-	-	chloe	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	Und	KON	*)	und	-	-	chloe	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	Corydon	NE	*	corydon	sg	*	chloe	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	mit	APPR	(PP*	mit	-	-	chloe	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	ihm	PPER	*))	ihm	sg	masc	chloe	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	15	.	$.	*))	--	-	-	chloe	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	chloe	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	hat	VAFIN	*	haben	sg	-	chloe	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	er	PPER	(VP*	er	sg	masc	chloe	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	unternommen	VVPP	*))	unternehmen	-	-	chloe	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	?	$.	*))	--	-	-	chloe	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	montan	-	-	-	-	(0|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	0)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Gut	ADJD	(VROOT(PSEUDO(CS(S*	gut	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	es	PPER	*	es	sg	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	bedeutet	VVFIN	*	bedeuten	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	nichts	PIS	*)	nichts	*	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	;	$.	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	sie	PPER	(S*	sie	pl	*	montan	-	-	-	-	(48)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	müssen	VMFIN	*	müssen	pl	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	beyde	ADJA	(NP*	beyde	-	-	montan	-	-	-	-	(48)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	sehn	CARD	*)))	sehn	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	.	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CHLOE	NE	(VROOT(PSEUDO*	chloe	-	-	chloe	(LOC*)	-	-	-	(1|(1)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	chloe	-	-	-	-	1)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Damöt	NE	(VROOT(PSEUDO(CNP*	damöt	-	-	chloe	-	-	-	-	(38|(6)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	und	KON	*	und	-	-	chloe	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	Sylvia	NE	*)	sylvia	sg	-	chloe	-	-	-	-	38)|(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	?	$.	*))	--	-	-	chloe	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	montan	-	-	-	-	(0|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	0)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	montan	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	will	VMFIN	*	wollen	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	für	APPR	(PP*	für	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	alles	PIS	*)	alle	sg	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	stehn	VVFIN	*)	stehn	sg	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	.	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Corydon	NE	(VROOT(PSEUDO*	corydon	-	-	_stage	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	_stage	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	Montan	NE	*	montan	sg	neut	_stage	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	,	$,	*	--	-	-	_stage	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	Damöt	VVFIN	*	damöt	sg	neut	_stage	-	-	-	-	(6)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	,	$,	*	--	-	-	_stage	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	Sylvia	NE	*	sylvia	sg	neut	_stage	(PER*)	-	-	-	(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	,	$,	*	--	-	-	_stage	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	Silvander	NN	*	silvander	sg	neut	_stage	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	,	$,	*	--	-	-	_stage	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	Doris	NE	*	doris	sg	neut	_stage	(PER*)	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	,	$,	*	--	-	-	_stage	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	Chloe	NE	*	chloe	sg	neut	_stage	(PER*)	-	-	-	(1)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	.	$.	*))	--	-	-	_stage	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*))	corydon	-	-	corydon	-	-	-	-	(7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	in	APPR	(VROOT(PSEUDO(PP*	in	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	ordentlicher	ADJA	*	ordentlich	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	Schäfertracht	NN	*)	schäfertracht	sg	fem	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	.	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Zu	PTKZU	*	zu	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Montan	VVINF	*	montan	sg	neut	corydon	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	.	$.	*	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Gelt	NN	(VROOT(PSEUDO(S*	gelt	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	Brüderchen	NN	*	brüderchen	sg	neut	corydon	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	nun	ADV	*	nun	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	wird	VAFIN	*	werden	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	kein	PIAT	(NP*	kein	sg	masc	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	Schäfer	NE	*	schäfer	sg	masc	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	vor	APPR	(PP*	vor	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	mir	PPER	*))	sich	sg	*	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	laufen	VVFIN	*)	laufen	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	?	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Damöt	NE	(VROOT(PSEUDO(S(CNP*	damöt	-	-	corydon	-	-	-	-	(6)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	und	KON	*	und	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	Sylvia	NE	*)	sylvia	-	-	corydon	(PER*)	-	-	-	(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	sehn	VVFIN	*	sehn	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	ihn	PPER	*	ihn	sg	masc	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	bewundernd	ADJD	*	bewundernd	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	an	PTKVZ	*)	an	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	.	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	O	NE	(VROOT(PSEUDO(NP*	O	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	weh	ADV	*)	weh	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	!	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	wie	KOKOM	*	wie	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	durftet	ADJD	*	durften	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	mich	PRF	*	mich	sg	*	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	!	$.	*	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	giebt	VVFIN	(VROOT(PSEUDO(S*	gieben	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	es	PPER	*	es	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	hier	ADV	*	hier	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	nichts	PIS	(NP*	nichts	*	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	zu	PTKZU	(VZ*	zu	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	saufen	VVINF	*)))	saufen	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	?	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CHLOE	NE	(VROOT(PSEUDO*	chloe	-	-	chloe	(LOC*)	-	-	-	(1|(1)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	chloe	-	-	-	-	1)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ja	PTKANT	(VROOT(PSEUDO(CS(S*	ja	-	-	chloe	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	chloe	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	Milch	NN	*)	milch	sg	fem	chloe	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	und	KON	*	und	-	-	chloe	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	Wasser	NN	(S*))	wasser	sg	neut	chloe	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	.	$.	*))	--	-	-	chloe	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Gut	ADJD	(VROOT(PSEUDO(S*	gut	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	es	PPER	(S*	es	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	hat	VAFIN	*	haben	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	noch	ADV	*	noch	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	Zeit	NN	(NP*	zeit	sg	fem	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	damit	PROAV	*)))	damit	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	.	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	silvander	(LOC*)	-	-	-	(3|(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	silvander	-	-	-	-	3)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Montan	NE	(VROOT(PSEUDO(MPN*	montan	sg	neut	silvander	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	!	$.	*)))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	ach	PPER	(VROOT(PSEUDO(NP(AP*	ach	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	mein	PPOSAT	*)	mein	-	-	silvander	-	-	-	-	(0|(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	Montan	NN	*)	montan	-	-	silvander	-	-	-	-	0)|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	!	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	für	APPR	(VROOT(PSEUDO(S(PP*	für	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	alles	PIS	*	alle	sg	neut	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	was	PRELS	(S*	was	sg	neut	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	ich	PPER	*	ich	sg	*	silvander	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	litt	VVFIN	*	leiden	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	Und	KON	(S*	und	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	was	PWS	*	was	*	neut	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	für	APPR	(PP*	für	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	Elend	NN	*)	elend	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	dir	PPER	*	dir	sg	*	silvander	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	der	ART	(NP*	der	sg	masc	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	Himmel	NN	*)	himmel	sg	masc	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	zugeschicket	VVPP	*)))	zugchicken	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	15	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	16	Hat	VAFIN	*	haben	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	17	dieser	PDAT	(NP*	dieser	sg	masc	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	18	frohe	ADJA	*	froh	sg	masc	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	19	Tag	NN	*)	tag	sg	masc	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	20	uns	PPER	(VP*	uns	pl	*	silvander	-	-	-	-	(42)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	21	insgesamt	ADV	*	insgesamt	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	22	beglücket	VVPP	*))	beglücken	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	23	.	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ach	ITJ	(VROOT(PSEUDO(S*)	ach	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Schwester	NN	*	schwester	sg	masc	silvander	-	-	-	-	(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	!	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Umarmt	NE	*	umarmt	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Sylvien	NE	*	sylvien	pl	fem	silvander	-	-	-	-	(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	welche	PWAT	*	welcher	pl	fem	silvander	-	-	-	-	(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	erschrickt	VVPP	*	erschricken	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	und	KON	*	und	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	zurück	ADV	*	zurück	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	tritt	VVFIN	*	treten	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	.	$.	*	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	montan	-	-	-	-	(0|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	0)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Sylvia	NE	(VROOT(PSEUDO(MPN*	sylvia	-	-	montan	-	-	-	-	(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	?	$.	*)))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Wie	PWAV	(VROOT(PSEUDO*	wie	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	?	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Himmel	NN	(VROOT(PSEUDO*	himmel	sg	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	!	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Er	PPER	(VROOT(PSEUDO(S*	er	sg	masc	corydon	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	hat	VAFIN	*	haben	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	Recht	NN	*)	recht	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	.	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Vermenge	NN	(VROOT(PSEUDO(S*	vermenge	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	nun	ADV	(VP*	nun	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	nicht	PTKNEG	(AVP*	nicht	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	mehr	ADV	*)	mehr	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	mit	APPR	(PP*	mit	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	deinem	PPOSAT	(NP*	dein	sg	masc	corydon	-	-	-	-	(49)|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	mein	PPOSAT	*	mein	sg	masc	corydon	-	-	-	-	(23|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	Geschlecht	NN	*))	geschlecht	sg	neut	corydon	-	-	-	-	23)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	Zu	PTKZU	(VZ*	zu	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	Silvander	VVINF	*)))	silvander	-	-	corydon	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	.	$.	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	Umarme	NN	(S*	umarme	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	mich	PPER	(NP(AP*	mich	sg	*	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	mein	PPOSAT	*)	mein	sg	masc	corydon	-	-	-	-	(5|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	15	Kind	NN	*))	kind	sg	masc	corydon	-	-	-	-	5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	16	,	$,	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Zu	PTKZU	*	zu	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Silvander	VVINF	*	silvander	-	-	corydon	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	.	$.	*	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Sie	PPER	(VROOT(PSEUDO(S*	sie	sg	fem	corydon	-	-	-	-	(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	springt	VVFIN	*	springen	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	zurück	PTKVZ	*)	zurück	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	.	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	montan	-	-	-	-	(0|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	0)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Dein	PPOSAT	(VROOT(PSEUDO(NP*	dein	sg	masc	montan	-	-	-	-	(5|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Kind	NN	*)	kind	sg	masc	montan	-	-	-	-	5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	?	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Mein	PPOSAT	(VROOT(PSEUDO(NP*	mein	sg	masc	corydon	-	-	-	-	(5|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Kind	NN	*)	kind	sg	masc	corydon	-	-	-	-	5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	.	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	O	NE	(VROOT(PSEUDO(NP*	O	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Freude	NN	*)	freude	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	!	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	So	ADV	(VROOT(PSEUDO(S*	so	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	seh	VVFIN	*	seh	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	ich	PPER	*	ich	sg	*	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	endlich	ADV	*	endlich	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	noch	ADV	(NP*	noch	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	die	ART	*	der	sg	fem	corydon	-	-	-	-	(23
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	längst	ADV	(AP*	längst	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	verlohrnen	ADJA	*)	verlohrn	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	Beyde	NN	*))	beyde	-	-	corydon	-	-	-	-	23)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	!	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	montan	-	-	-	-	(0|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	0)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Lenore	NN	(VROOT(PSEUDO*	lenore	-	-	montan	-	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	?	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Sie	PPER	(VROOT(PSEUDO(S*	sie	sg	fem	corydon	-	-	-	-	(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	ists	ADV	*	ists	sg	*	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	nicht	PTKNEG	*)	nicht	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	.	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Es	PPER	*	es	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	ist	VAFIN	*	sein	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	Luise	NE	*	luise	sg	fem	corydon	(PER*)	-	-	-	(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	.	$.	*	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	montan	-	-	-	-	(0|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	0)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Wie	PWAV	(VROOT(PSEUDO*	wie	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	?	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	silvander	(LOC*)	-	-	-	(3|(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	silvander	-	-	-	-	3)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ja	PTKANT	(VROOT(PSEUDO(S*	ja	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	ja	ADV	*	ja	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	wir	PPER	*	wir	pl	*	silvander	-	-	-	-	(42)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	irrten	VVFIN	*	irrten	pl	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	uns	PPER	*)	uns	pl	-	silvander	-	-	-	-	(42)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	.	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	montan	-	-	-	-	(0|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	0)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Lenore	NN	(VROOT(PSEUDO*	lenore	-	-	montan	-	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	!	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Das	PDS	(VROOT(PSEUDO(CS(S*	der	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	ist	VAFIN	*	sein	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	die	PDS	*	der	sg	fem	corydon	-	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	Ich	PPER	(S*	ich	sg	*	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	hab	VAFIN	*	hab	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	es	PPER	(VP*	es	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	gleich	ADV	*	gleich	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	entdeckt	VVPP	*)))	entdecken	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	man	PIS	(S*	man	sg	*	corydon	-	-	-	-	(15)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	hatte	VAFIN	*	haben	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	dich	PPER	(VP*	dich	sg	-	corydon	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	belogen	VVPP	*)))	belügen	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	.	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	montan	-	-	-	-	(0|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	0)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ach	ITJ	(VROOT(PSEUDO(S*)	ach	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	!	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	kann	VMFIN	(VROOT(PSEUDO(S*	können	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	es	PPER	*	es	sg	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	möglich	ADJD	(AP*	möglich	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	seyn	ADJD	*))	seyn	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	?	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ach	ITJ	(VROOT(PSEUDO(S*)	ach	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	!	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	wär	VAFIN	(VROOT(PSEUDO(S*	sein	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	ich	PPER	*	ich	sg	*	montan	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	doch	ADV	(VP*	doch	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	betrogen	VVPP	*))	betrügen	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	?	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Du	PPER	(VROOT(PSEUDO(AVP(S*	du	sg	*	corydon	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	bist	VAFIN	*	sein	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	betrogen	VVPP	*)	betrügen	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	ja	ADV	*)	ja	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	.	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Sieh	NE	(VROOT(PSEUDO(S*	sieh	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	kennst	VVFIN	*	kennen	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	du	PPER	*	du	sg	*	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	diese	PDAT	(NP*	dieser	sg	fem	corydon	-	-	-	-	(28
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	Hand	NN	*))	hand	sg	fem	corydon	-	-	-	-	28)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	?	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Giebt	NE	(VROOT(PSEUDO*	gieben	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	ihm	PPER	(NP*	ihm	sg	masc	corydon	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	einen	ART	*	ein	sg	masc	corydon	-	-	-	-	(29
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	Brief	NN	*)	brief	sg	masc	corydon	-	-	-	-	29)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	.	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	montan	-	-	-	-	(0|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	0)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Sehr	ADV	(VROOT(PSEUDO(AVP*	sehr	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	wohl	ADV	*)	wohl	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	.	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Lies	NE	(VROOT(PSEUDO*	lies	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*))	montan	-	-	montan	-	-	-	-	(0)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	liest	VVFIN	*	lesen	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Himmel	NN	(VROOT(PSEUDO*	himmel	sg	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	!	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	ach	ITJ	(VROOT(PSEUDO(S*)	ach	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	!	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	das	PDS	*	der	sg	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	war	VAFIN	*	sein	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	mir	PPER	*	sich	sg	*	montan	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	unbekannt	ADJD	*	unbekannt	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	Zu	APPR	*	zu	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	Doris	NE	*	doris	-	-	montan	(PER*)	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	.	$.	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	Ach	ITJ	*	ach	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	Tochter	NN	*	tochter	-	-	montan	-	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	!	$.	*	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Zu	APPR	(VROOT(PSEUDO(PP*	zu	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Doris	NE	*)	doris	-	-	montan	(PER*)	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	.	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Zu	PTKZU	*	zu	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Damöt	VVINF	*	damöt	-	-	montan	-	-	-	-	(6)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	.	$.	*	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ach	ITJ	(VROOT(PSEUDO(S*)	ach	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	mein	PPOSAT	(NP*	mein	sg	masc	montan	-	-	-	-	(6|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	Sohn	NN	*)	sohn	sg	masc	montan	-	-	-	-	6)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	!	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Umarmt	VVFIN	(VROOT(PSEUDO(S*	umarmen	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	sie	PPER	*)	sie	sg	fem	montan	-	-	-	-	(49)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	.	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	von	APPR	(VROOT(PSEUDO(S(AVP(S(PP*	von	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	mir	PPER	*)	sich	sg	*	montan	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	kommt	VVFIN	*	kommen	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	euer	ADJD	*	eu	pl	fem	montan	-	-	-	-	(49)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	Leben	NN	*)	leben	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	Nun	ADV	*)	nun	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	kann	VMFIN	*	können	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	ich	PPER	*	ich	sg	*	montan	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	der	ART	(VP(NP*	der	sg	fem	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	Natur	NN	*)	natur	sg	fem	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	nicht	PTKNEG	*	nicht	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	länger	ADJD	*	lang	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	widerstreben	VVINF	*))	widerstreben	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	.	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Verlaßt	NN	(VROOT(PSEUDO*	verlaßen	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	einander	ADV	(S*	einander	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	nie	ADV	*)	nie	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	.	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Führt	NE	(VROOT(PSEUDO(NP*	führen	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Damöt	NE	*)	damöt	-	-	montan	-	-	-	-	(6)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	und	KON	(S*	und	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	Sylvia	NE	*	sylvia	-	-	montan	(PER*)	-	-	-	(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	zusammen	PTKVZ	*)	zusammen	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	.	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	zu	PTKZU	*	zu	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Corydon	VVINF	*	corydon	-	-	montan	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	.	$.	*	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	montan	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	weiß	VVFIN	*	weiß	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	du	PPER	(S*	du	sg	*	montan	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	willigst	VVFIN	*	willigst	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	drein	PTKVZ	*))	drein	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	.	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Von	APPR	(VROOT(PSEUDO(DL(PP*	von	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Herzen	NN	*	herz	pl	masc	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	gern	ADV	*)	gern	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	;	$.	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	was	PWS	(S*	was	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	kann	VMFIN	*	können	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	nur	ADV	*	nur	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	größre	ADJA	(NP*	größr	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	Freude	NN	*)	freude	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	seyn	VVFIN	*))	seyn	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	?	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	DAMÖT	NE	(VROOT(PSEUDO*	damöt	-	-	damöt	(LOC*)	-	-	-	(6|(6)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	damöt	-	-	-	-	6)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ach	ITJ	(VROOT(PSEUDO(S*)	ach	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	mein	PPOSAT	(NP*	mein	-	-	damöt	-	-	-	-	(0|(6)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	Montan	NN	*)	montan	-	-	damöt	-	-	-	-	0)|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	!	$.	*))	--	-	-	damöt	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	ach	ITJ	(VROOT(PSEUDO(S*)	ach	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	!	$.	*))	--	-	-	damöt	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	silvander	(LOC*)	-	-	-	(3|(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	silvander	-	-	-	-	3)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ach	ITJ	(VROOT(PSEUDO(S*)	ach	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	!	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Montan	NE	(VROOT(PSEUDO(MPN*	montan	sg	neut	silvander	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	!	$.	*)))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	ach	ITJ	(VROOT(PSEUDO(S*)	ach	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	!	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	DAMÖT	NE	(VROOT(PSEUDO*	damöt	-	-	damöt	(LOC*)	-	-	-	(6|(6)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	damöt	-	-	-	-	6)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	O	NE	(VROOT(PSEUDO(NP*	O	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Vergnügen	NN	*)	vergnügen	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	!	$.	*))	--	-	-	damöt	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SYLVIA	NE	(VROOT(PSEUDO*	sylvia	sg	neut	sylvia	(PER*)	-	-	-	(5|(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	sylvia	-	-	-	-	5)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	So	ADV	(VROOT(PSEUDO(S(S(S*	so	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	darf	VMFIN	*	dürfen	sg	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	er	PPER	*	er	sg	masc	sylvia	-	-	-	-	(6)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	nun	ADV	*	nun	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	bey	VVFIN	(S*	bey	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	mir	PPER	*	sich	sg	*	sylvia	-	-	-	-	(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	gehn	CARD	(VP*	gehn	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	,	$,	*	--	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	essen	VVINF	*)))	essen	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	,	$,	*	--	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	weiden	VVFIN	*)	weiden	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	,	$,	*	--	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	liegen	VVFIN	*	liegen	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	,	$,	*	--	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	Und	KON	(S*	und	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	15	doch	ADV	*	doch	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	16	nichts	PIS	(NP*	nichts	*	neut	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	17	Böses	NE	(MPN*	böse	sg	neut	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	18	thun	FM	*)	thun	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	19	?	$.	*)))))	--	-	-	sylvia	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	montan	-	-	-	-	(0|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	0)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ja	PTKANT	*	ja	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	dieses	PDAT	*	dieser	sg	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	steht	VVFIN	*	stehen	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	euch	PPER	*	euch	pl	*	montan	-	-	-	-	(38)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	frey	VVFIN	*	frey	-	-	montan	(PER*)	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	.	$.	*	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	DAMÖT	NE	(VROOT(PSEUDO*	damöt	-	-	damöt	(LOC*)	-	-	-	(6|(6)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	damöt	-	-	-	-	6)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ach	ITJ	(VROOT(PSEUDO(S*	ach	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	liebste	VVFIN	*	lieb	-	-	damöt	-	-	-	-	(5
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	Sylvia	NE	*)	sylvia	-	-	damöt	-	-	-	-	5)|(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	!	$.	*))	--	-	-	damöt	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	damöt	-	-	-	-	(6)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	lebe	VVFIN	*	leben	sg	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	nun	ADV	*	nun	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	aufs	APPRART	(PP*)	auf	sg	neut	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	neu	ADJD	*)	neu	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	.	$.	*))	--	-	-	damöt	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SYLVIA	NE	(VROOT(PSEUDO*	sylvia	sg	neut	sylvia	(PER*)	-	-	-	(5|(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	sylvia	-	-	-	-	5)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Für	APPR	(VROOT(PSEUDO(S(PP*	für	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Freuden	NN	*)	freude	sg	masc	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	sterb	VVFIN	*	sterb	sg	masc	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	ich	PPER	*	ich	sg	*	sylvia	-	-	-	-	(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	fast	ADV	*)	fast	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	.	$.	*))	--	-	-	sylvia	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ach	ITJ	(VROOT(PSEUDO(S*	ach	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	mein	PPOSAT	(NP*	mein	sg	neut	sylvia	-	-	-	-	(6|(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	Damöt	NN	*))	damöt	-	-	sylvia	-	-	-	-	6)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	!	$.	*))	--	-	-	sylvia	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	montan	-	-	-	-	(0|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	0)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Silvander	NN	*	silvander	-	-	montan	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	Ich	PPER	*	ich	sg	*	montan	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	schenke	VVFIN	*	schenken	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	dir	PRF	*	dir	sg	*	montan	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	mein	PPOSAT	*	mein	sg	neut	montan	-	-	-	-	(2|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	Kind	NN	*	kind	sg	neut	montan	-	-	-	-	2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	Führt	NE	*	führen	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	ihm	PPER	*	ihm	sg	masc	montan	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	die	ART	*	der	sg	fem	montan	-	-	-	-	(2
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	Doris	NE	*	doris	sg	fem	montan	(PER*)	-	-	-	2)|(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	.	$.	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	allein	ADV	*	allein	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	nicht	PTKNEG	*	nicht	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	15	den	ART	*	der	sg	masc	montan	-	-	-	-	(3
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	16	Leander	NN	*	leander	sg	masc	montan	(PER*)	-	-	-	3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	17	.	$.	*	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Führt	NE	(VROOT(PSEUDO(S*	führen	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	ihm	PPER	(NP*	ihm	sg	masc	montan	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	die	ART	*	der	sg	fem	montan	-	-	-	-	(2
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	Doris	NE	*))	doris	sg	fem	montan	(PER*)	-	-	-	2)|(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	.	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Verstehst	ADV	*	verstehst	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	du	PPER	*	du	sg	*	montan	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	es	PPER	*	es	sg	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	!	$.	*	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	denn	ADV	(VROOT(PSEUDO(S(AVP*	denn	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	hier	ADV	*)	hier	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	bleib	VVFIN	*	bleib	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	ich	PPER	*	ich	sg	*	montan	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	so	ADV	*	so	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	wie	KOKOM	(NP*	wie	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	mein	PPOSAT	*	mein	sg	masc	montan	-	-	-	-	(2|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	Kind	NN	*))	kind	sg	masc	montan	-	-	-	-	2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	.	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ist	VAFIN	(VROOT(PSEUDO(S*	sein	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	das	PDS	*	der	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	so	ADV	*	so	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	ists	ADV	(AVP*	ists	*	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	gewiß	ADV	*)	gewiß	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	daß	KOUS	(S*	daß	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	wir	PPER	*	wir	pl	*	corydon	-	-	-	-	(8)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	geschieden	VVPP	*	scheiden	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	sind	VAFIN	*))	sein	pl	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	.	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	silvander	(LOC*)	-	-	-	(3|(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	silvander	-	-	-	-	3)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Wie	PWAV	*	wie	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	so	ADV	*	so	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	?	$.	*	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	geschieden	ADJA	*	scheiden	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	?	$.	*	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	nein	PTKANT	*	nein	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Hier	ADV	(VROOT(PSEUDO(S*	hier	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	bleib	VVFIN	*	bleib	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	ich	PPER	*	ich	sg	*	silvander	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	ungezwungen	VVPP	*	ungezwung	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	;	$.	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	Der	ART	(S(NP*	der	sg	masc	silvander	-	-	-	-	(13
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	Ort	NN	*)	ort	sg	masc	silvander	-	-	-	-	13)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	ist	VAFIN	*	sein	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	meine	PPOSAT	(NP*	mein	sg	fem	silvander	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	Lust	NN	*	lust	sg	fem	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	wo	PWAV	(S*	wo	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	mir	PPER	*	sich	sg	*	silvander	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	mein	PPOSAT	(NP*	mein	sg	masc	silvander	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	Glück	NN	*)	glück	sg	neut	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	15	gelungen	VVPP	*))))	gelingen	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	16	.	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Nein	PTKANT	(VROOT(PSEUDO(S*	nein	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	nein	PTKANT	(AVP(S*	nein	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	hier	ADV	*	hier	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	bleib	VVFIN	*	bleibn	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	ich	PPER	*	ich	sg	*	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	nicht	PTKNEG	*)	nicht	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	und	KON	*)	und	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	du	PPER	*	du	sg	*	corydon	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	mußt	VMFIN	*	mussen	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	mit	APPR	(PP*	mit	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	mir	PPER	*)	sich	sg	*	corydon	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	fort	PTKVZ	*)	fort	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	15	.	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	silvander	(LOC*)	-	-	-	(3|(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	silvander	-	-	-	-	3)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Doch	KON	(VROOT(PSEUDO(CS*	doch	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	ohne	APPR	(S(PP*	ohne	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	Doris	NE	*)	doris	*	neut	silvander	(PER*)	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	hat	VAFIN	*	haben	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	die	ART	(NP*	der	sg	fem	silvander	-	-	-	-	(9
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	Welt	NN	*)	welt	sg	fem	silvander	-	-	-	-	9)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	nicht	PTKNEG	*	nicht	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	einen	ART	(NP*	ein	sg	masc	silvander	-	-	-	-	(50
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	Ort	NN	*))	ort	sg	masc	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	,	$,	*	--	-	-	silvander	-	-	-	-	50)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	Der	ART	(S*	der	sg	masc	silvander	-	-	-	-	(50)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	mir	PPER	*	sich	sg	*	silvander	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	gefallen	VVINF	*	fallen	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	kann	VMFIN	*))	können	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	.	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	O	NE	(VROOT(PSEUDO(S*	O	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	!	$.	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	die	ART	(S*	der	sg	fem	corydon	-	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	muß	VMFIN	*	müssen	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	mit	APPR	(VP(PP*	mit	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	uns	PPER	*)	uns	pl	*	corydon	-	-	-	-	(27)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	ziehen	VVINF	*)))	ziehen	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	.	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	DORIS	NE	(VROOT(PSEUDO*	doris	sg	neut	doris	(LOC*)	-	-	-	(2|(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	doris	-	-	-	-	2)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ja	PTKANT	(VROOT(PSEUDO(S*	ja	-	-	doris	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	doris	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	ja	ADV	*	ja	-	-	doris	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	,	$,	*	--	-	-	doris	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	ich	PPER	(S*	ich	sg	*	doris	-	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	ziehe	VVFIN	*	ziehen	sg	-	doris	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	mit	PTKVZ	*))	mit	-	-	doris	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	.	$.	*))	--	-	-	doris	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	montan	-	-	-	-	(0|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	0)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Willst	VAFIN	(VROOT(PSEUDO(S*	willen	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	du	PPER	*	du	sg	*	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	den	ART	(NP*	der	sg	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	Vater	NN	*)	vater	sg	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	fliehen	VVFIN	*)	fliehen	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	?	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	DORIS	NE	(VROOT(PSEUDO*	doris	sg	neut	doris	(LOC*)	-	-	-	(2|(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	doris	-	-	-	-	2)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Den	ART	(VROOT(PSEUDO(NP*	der	sg	masc	doris	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Vater	NN	*)	vater	sg	masc	doris	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	?	$.	*))	--	-	-	doris	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Wer	PWS	*	wer	sg	masc	doris	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	ist	VAFIN	*	sein	sg	-	doris	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	der	ART	*	der	sg	masc	doris	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	?	$.	*	--	-	-	doris	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Solch	PIDAT	(VROOT(PSEUDO(S(NP*	solch	*	*	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Zeug	NN	*)	zeug	sg	*	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	hast	VAFIN	*	haben	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	du	PPER	(VP*	du	sg	*	corydon	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	gemacht	VVPP	*))	machen	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	!	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Sie	PPER	(VROOT(PSEUDO(S*	sie	sg	fem	corydon	-	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	kennt	VVFIN	*	kennen	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	dich	PPER	*	dich	sg	-	corydon	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	nicht	PTKNEG	(AVP*	nicht	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	einmal	ADV	*))	einmal	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	.	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	montan	-	-	-	-	(0|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	0)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Das	PDS	(VROOT(PSEUDO(S*	der	sg	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	that	VVFIN	*	that	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	ich	PPER	*	ich	sg	*	montan	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	mit	APPR	(PP*	mit	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	Bedacht	NN	*))	bedacht	sg	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	.	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	eh	ADV	(NP*	eh	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	das	ART	*	der	sg	neut	montan	-	-	-	-	(51
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	feste	ADJA	*	fest	sg	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	Land	NN	*)	land	sg	neut	montan	-	-	-	-	51)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	mich	PPER	*	mich	sg	*	montan	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	wieder	ADV	*	wieder	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	sollt	VVFIN	*	sollen	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	erblicken	VVINF	*	erblicken	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	;	$.	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	Eh	NN	(S*	eh	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	will	VMFIN	*	wollen	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	ich	PPER	*	ich	sg	*	montan	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	weder	KON	*	weder	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	mich	PRF	*	mich	sg	*	montan	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	15	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	16	noch	ADV	*	noch	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	17	Kind	NN	(VP*	kind	sg	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	18	noch	ADV	*	noch	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	19	Freund	NN	*	freund	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	20	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	21	beglücken	VVINF	*)))	beglücken	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	22	.	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Der	ART	(VROOT(PSEUDO(NP*	der	sg	masc	corydon	-	-	-	-	(0
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Trotzkopf	NN	*)	trotzkopf	sg	masc	corydon	-	-	-	-	0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	!	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Mops	NE	(VROOT(PSEUDO*	mops	-	-	_stage	(PER*)	-	-	-	(4)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	_stage	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	Corydon	NE	*	corydon	-	-	_stage	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	,	$,	*	--	-	-	_stage	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	Montan	NE	*	montan	-	-	_stage	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	,	$,	*	--	-	-	_stage	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	Silvander	NN	*	silvander	-	-	_stage	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	,	$,	*	--	-	-	_stage	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	Damöt	VVFIN	*	damöt	-	-	_stage	-	-	-	-	(6)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	,	$,	*	--	-	-	_stage	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	Sylvia	NE	*	sylvia	sg	neut	_stage	(PER*)	-	-	-	(5)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	,	$,	*	--	-	-	_stage	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	Chloe	NE	*	chloe	sg	neut	_stage	(PER*)	-	-	-	(1)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	.	$.	*))	--	-	-	_stage	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MOPS	XY	(VROOT(PSEUDO*))	mops	-	-	mops	-	-	-	-	(4)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	in	APPR	(VROOT(PSEUDO(AP(PP*	in	-	-	mops	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	ordentlicher	ADJA	*	ordentlich	sg	fem	mops	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	Schäfertracht	NN	*)	schäfertracht	sg	fem	mops	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	laufend	ADJD	*)	laufend	-	-	mops	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	.	$.	*))	--	-	-	mops	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Herr	NN	(VROOT(PSEUDO(S(ISU*	herr	sg	masc	mops	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	mops	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	geschwind	ADJD	*))	geschwind	-	-	mops	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	!	$.	*))	--	-	-	mops	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	silvander	(LOC*)	-	-	-	(3|(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	silvander	-	-	-	-	3)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Was	PWS	*	was	sg	neut	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	giebts	ADV	*	giebt	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	?	$.	*	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MOPS	NE	(VROOT(PSEUDO*	mops	-	-	mops	-	-	-	-	(4|(4)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	mops	-	-	-	-	4)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Geschwind	NE	(VROOT(PSEUDO(NP*	geschwind	sg	neut	mops	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	aufs	APPRART	(PP*	auf	sg	neut	mops	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	Boot	NN	*))	boot	sg	neut	mops	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	!	$.	*))	--	-	-	mops	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	silvander	(LOC*)	-	-	-	(3|(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	silvander	-	-	-	-	3)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Warum	PWAV	(VROOT(PSEUDO*	warum	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	?	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	treibt	VVFIN	*	treiben	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	uns	PPER	*	uns	pl	*	silvander	-	-	-	-	(52)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	denn	ADV	*)	denn	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	?	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MOPS	NE	(VROOT(PSEUDO*	mops	-	-	mops	-	-	-	-	(4|(4)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	mops	-	-	-	-	4)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ach	ITJ	(VROOT(PSEUDO(S*)	ach	-	-	mops	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	!	$.	*))	--	-	-	mops	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	eine	ART	(VROOT(PSEUDO(NP*	ein	sg	fem	mops	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	große	ADJA	*	groß	sg	fem	mops	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	Noth	NN	*)	noth	sg	fem	mops	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	.	$.	*))	--	-	-	mops	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	silvander	(LOC*)	-	-	-	(3|(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	silvander	-	-	-	-	3)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	denn	ADV	*	denn	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	für	APPR	(PP*	für	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	Noth	NE	*))	noth	sg	*	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	?	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MOPS	NE	(VROOT(PSEUDO*	mops	-	-	mops	-	-	-	-	(4|(4)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	mops	-	-	-	-	4)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Nur	ADV	(VROOT(PSEUDO(VP(AP*	nur	-	-	mops	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	fort	PTKVZ	*))	fort	-	-	mops	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	.	$.	*))	--	-	-	mops	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	silvander	(LOC*)	-	-	-	(3|(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	silvander	-	-	-	-	3)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Wohin	PWAV	(VROOT(PSEUDO*	wohin	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	?	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MOPS	NE	(VROOT(PSEUDO*	mops	-	-	mops	-	-	-	-	(4|(4)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	mops	-	-	-	-	4)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Geschwind	NE	(VROOT(PSEUDO*	geschwind	sg	masc	mops	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	mops	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Zum	APPRART	(VROOT(PSEUDO(PP*	zu	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Teufel	NN	*)	teufel	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	!	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Was	PWS	*	was	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	lermt	VVFIN	*	lermen	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	der	ART	*	der	sg	masc	corydon	-	-	-	-	(4
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	Narre	NN	*	narre	sg	masc	corydon	-	-	-	-	4)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	denn	KON	*	denn	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	?	$.	*	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MOPS	NE	(VROOT(PSEUDO*	mops	-	-	mops	-	-	-	-	(4|(4)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	mops	-	-	-	-	4)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Wir	PPER	*	wir	pl	*	mops	-	-	-	-	(52)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	müßten	VMFIN	*	müssen	pl	-	mops	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	silvander	(LOC*)	-	-	-	(3|(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	silvander	-	-	-	-	3)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ohne	APPR	(VROOT(PSEUDO(S(PP*	ohne	pl	masc	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Zweifel	NN	*)	zweifel	pl	masc	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	Hat	VAFIN	*	haben	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	dich	PPER	*	dich	sg	-	silvander	-	-	-	-	(4)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	ein	ART	(NP*	ein	sg	neut	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	Wild	NN	*)	wild	sg	neut	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	erschreckt	VVPP	*)	erschrecken	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	?	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MOPS	NE	(VROOT(PSEUDO*	mops	-	-	mops	-	-	-	-	(4|(4)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	mops	-	-	-	-	4)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Fort	NN	(VROOT(PSEUDO(S*	fort	-	-	mops	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	mops	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	fort	PTKVZ	*	fort	-	-	mops	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	,	$,	*	--	-	-	mops	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	geschwind	ADJD	*	geschwind	-	-	mops	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	packt	VVFIN	*)	packen	sg	-	mops	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	ein	ART	*	ein	sg	neut	mops	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	!	$.	*))	--	-	-	mops	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	silvander	(LOC*)	-	-	-	(3|(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	silvander	-	-	-	-	3)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Sprich	VVIMP	(VROOT(PSEUDO(CS(S*	sprich	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	doch	ADV	*)	doch	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	was	PWS	(S*	was	sg	neut	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	willst	VMFIN	*	wollen	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	du	PPER	*	du	sg	*	silvander	-	-	-	-	(4)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	denn	ADV	*))	denn	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	?	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MOPS	NE	(VROOT(PSEUDO*	mops	-	-	mops	-	-	-	-	(4|(4)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	mops	-	-	-	-	4)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Fort	NN	(VROOT(PSEUDO(S*	fort	-	-	mops	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	mops	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	fort	PTKVZ	*)	fort	-	-	mops	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	.	$.	*))	--	-	-	mops	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	silvander	(LOC*)	-	-	-	(3|(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	silvander	-	-	-	-	3)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Hör	NN	(VROOT(PSEUDO*	hör	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	auf	APPR	(VP*	auf	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	zu	PTKZU	(VZ*	zu	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	schreyn	VVINF	*)	schreyn	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	Und	KON	(S*	und	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	sage	VVFIN	*	sagen	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	was	PWS	(S*	was	sg	neut	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	du	PPER	*	du	sg	*	silvander	-	-	-	-	(4)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	willst	VMFIN	*)))	wollen	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	.	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MOPS	NE	(VROOT(PSEUDO*	mops	-	-	mops	-	-	-	-	(4|(4)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	mops	-	-	-	-	4)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ich	PPER	*	ich	sg	*	mops	-	-	-	-	(4)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	will	VMFIN	*	wollen	sg	-	mops	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	,	$,	*	--	-	-	mops	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	–	XY	*	–	-	-	mops	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	–	XY	*	–	-	-	mops	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	daß	KOUS	*	daß	-	-	mops	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	ihr	PPOSAT	*	ihr	pl	*	mops	-	-	-	-	(52)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	müßt	ADJD	*	müssen	pl	-	mops	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	gehen	VVINF	*	gehen	-	-	mops	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	.	$.	*	--	-	-	mops	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	silvander	(LOC*)	-	-	-	(3|(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	silvander	-	-	-	-	3)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Warum	PWAV	(VROOT(PSEUDO*	warum	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	?	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MOPS	NE	(VROOT(PSEUDO*	mops	-	-	mops	-	-	-	-	(4|(4)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	mops	-	-	-	-	4)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Man	PIS	(VROOT(PSEUDO(S*	man	sg	*	mops	-	-	-	-	(15)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	kann	VMFIN	*	können	sg	-	mops	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	schon	ADV	(AVP*	schon	-	-	mops	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	dort	ADV	*)	dort	-	-	mops	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	des	ART	(VP(NP*	der	sg	masc	mops	-	-	-	-	(53
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	Feindes	NN	*)	feind	sg	masc	mops	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	Flotte	NN	*	flotte	sg	fem	mops	-	-	-	-	53)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	sehen	VVINF	*))	sehen	-	-	mops	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	.	$.	*))	--	-	-	mops	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	silvander	(LOC*)	-	-	-	(3|(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	silvander	-	-	-	-	3)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Hast	VAFIN	(VROOT(PSEUDO(S*	haben	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	du	PPER	*	du	sg	*	silvander	-	-	-	-	(4)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	sie	PPER	*	sie	*	*	silvander	-	-	-	-	(53)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	denn	ADV	*	denn	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	gesehn	VVFIN	*)	gesehn	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	?	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MOPS	NE	(VROOT(PSEUDO*	mops	-	-	mops	-	-	-	-	(4|(4)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	mops	-	-	-	-	4)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Nein	PTKANT	*	nein	-	-	mops	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*	--	-	-	mops	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Doch	KON	(VROOT(PSEUDO(S*	doch	-	-	mops	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	sie	PPER	*	sie	sg	fem	mops	-	-	-	-	(53)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	kommt	VVFIN	*	kommen	sg	-	mops	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	gewiß	ADV	*)	gewiß	-	-	mops	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	.	$.	*))	--	-	-	mops	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	silvander	(LOC*)	-	-	-	(3|(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	silvander	-	-	-	-	3)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Wer	PWS	(VROOT(PSEUDO(S*	wer	sg	masc	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	sagts	ADV	*	sagts	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	denn	ADV	*)	denn	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	?	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MOPS	NE	(VROOT(PSEUDO*	mops	-	-	mops	-	-	-	-	(4|(4)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	mops	-	-	-	-	4)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	mops	-	-	-	-	(4)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	–	VVFIN	*	–	sg	-	mops	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	ich	PPER	*)	ich	sg	*	mops	-	-	-	-	(4)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	–	VVFIN	(S*	–	sg	-	mops	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	ich	PPER	*)	ich	sg	*	mops	-	-	-	-	(4)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	.	$.	*))	--	-	-	mops	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	silvander	(LOC*)	-	-	-	(3|(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	silvander	-	-	-	-	3)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ein	ART	(VROOT(PSEUDO(NP*	ein	sg	masc	silvander	-	-	-	-	(4
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Narr	NN	*)	narr	sg	masc	silvander	-	-	-	-	4)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	.	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MOPS	NE	(VROOT(PSEUDO*	mops	-	-	mops	-	-	-	-	(4|(4)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	mops	-	-	-	-	4)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Nein	PTKANT	(VROOT(PSEUDO(S*	nein	-	-	mops	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	mops	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	lest	VVFIN	*)	lest	-	-	mops	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	–	XY	*	–	-	-	mops	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	lies	FM	*	leisen	-	-	mops	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	–	FM	*	–	-	-	mops	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	lies	FM	*	leisen	-	-	mops	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	.	$.	*))	--	-	-	mops	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Giebt	NE	(VROOT(PSEUDO(MPN*	gieben	sg	-	mops	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Silvander	NE	*)	silvander	*	*	mops	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	einen	ART	(NP*	ein	sg	masc	mops	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	Brief	NN	*)	brief	sg	masc	mops	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	.	$.	*))	--	-	-	mops	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*))	silvander	-	-	silvander	-	-	-	-	(3)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	liest	VVFIN	*	lesen	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ja	PTKANT	(VROOT(PSEUDO(S*	ja	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	es	PPER	*	es	sg	neut	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	ist	VAFIN	*	sein	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	wahr	ADJD	*)	wahr	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	.	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MOPS	NE	(VROOT(PSEUDO*	mops	-	-	mops	-	-	-	-	(4|(4)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	mops	-	-	-	-	4)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Da	ADV	*	da	-	-	mops	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	sieh	VVIMP	*	sieh	-	-	mops	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	,	$,	*	--	-	-	mops	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	silvander	(LOC*)	-	-	-	(3|(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	silvander	-	-	-	-	3)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Der	ART	(VROOT(PSEUDO(S(NP(NM*	der	sg	masc	silvander	-	-	-	-	(53
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Feinde	NN	*)	feind	sg	masc	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	Schiffe	NN	*)	schiff	sg	masc	silvander	-	-	-	-	53)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	kommen	VVFIN	*	kommen	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	Und	KON	(S*	und	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	diese	PDAT	(NP*	dieser	sg	fem	silvander	-	-	-	-	(13
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	Insel	NN	*)	insel	sg	fem	silvander	-	-	-	-	13)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	wird	VAFIN	*	werden	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	von	APPR	(VP(PP*	von	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	ihnen	PPER	*)	ihnen	pl	*	silvander	-	-	-	-	(53)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	eingenommen	VVPP	*)))	einnehmen	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	.	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Jedoch	KON	(VROOT(PSEUDO(S*	jedoch	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	sie	PPER	*	sie	pl	*	silvander	-	-	-	-	(53)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	kommen	VVFIN	*	kommen	pl	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	erst	ADV	*	erst	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	in	APPR	(PP*	in	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	zwey	NE	(MPN*	zwey	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	drey	FM	*	drey	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	Tagen	NN	*))	tag	pl	masc	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	an	PTKVZ	*)	an	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	.	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Wir	PPER	(VROOT(PSEUDO(DL(S*	wir	pl	*	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	haben	VAFIN	*	haben	pl	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	Zeit	NN	*)	zeit	sg	fem	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	genug	ADV	*	genug	*	*	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	;	$.	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	was	PWS	(S*	was	sg	neut	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	thust	VVFIN	*	thust	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	du	PPER	(NP*	du	sg	*	silvander	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	nun	ADV	*	nun	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	Montan	NE	*)))	montan	sg	neut	silvander	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	?	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	montan	-	-	-	-	(0|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	0)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ach	ITJ	(VROOT(PSEUDO(S*)	ach	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	!	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ja	PTKANT	(VROOT(PSEUDO(S*	ja	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	der	PDS	*	der	sg	masc	corydon	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	wird	VAFIN	*	werden	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	nun	ADV	*	nun	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	wohl	ADV	*	wohl	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	mit	APPR	(PP*	mit	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	wollichten	ADJA	(CNP(NP*	wollicht	pl	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	Armeen	NN	*)	armee	pl	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	,	$,	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	Dem	ART	(NP*	der	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	feindlichen	ADJA	*	feindlich	sg	masc	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	Geschütz	NN	*)))	geschütz	sg	masc	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	beherzt	ADJD	*	beherzt	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	entgegen	PTKVZ	*	entgegen	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	15	gehen	VVFIN	*	gehen	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	16	;	$.	*	--	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	17	Denn	KON	(S*	denn	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	18	er	PPER	*	er	sg	masc	corydon	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	19	weicht	VVFIN	*	weichen	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	20	nicht	PTKNEG	*	nicht	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	21	vom	APPRART	(PP*	von	sg	masc	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	22	Fleck	NN	*)))	fleck	sg	masc	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	23	.	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	montan	-	-	-	-	(0|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	0)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ach	ITJ	(VROOT(PSEUDO(S*	ach	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	spotte	VVFIN	*	spoten	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	nicht	PTKNEG	*	nicht	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	mein	PPOSAT	(NP*	mein	sg	masc	montan	-	-	-	-	(7|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	Freund	NN	*))	freund	sg	masc	montan	-	-	-	-	7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	!	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Jetzt	ADV	(VROOT(PSEUDO(CS(S*	jetzt	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	da	KOUS	*	da	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	das	ART	(NP*	der	sg	neut	montan	-	-	-	-	(54
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	größte	ADJA	*	groß	sg	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	Glück	NN	*)	glück	sg	neut	montan	-	-	-	-	54)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	mich	PPER	(VP*	mich	sg	*	montan	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	noch	ADV	*	noch	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	zu	PTKZU	(VZ*	zu	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	trösten	VVINF	*))	trösen	sg	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	scheint	VVFIN	*)	scheinen	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	;	$.	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	Jagt	VVFIN	(S*	jagt	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	mich	PPER	*	mich	sg	*	montan	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	das	ART	(NP*	der	sg	neut	montan	-	-	-	-	(54
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	15	Glück	NN	*)	glück	sg	neut	montan	-	-	-	-	54)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	16	von	APPR	(PP*	von	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	17	hier	ADV	*)	hier	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	18	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	19	wohin	PWAV	(S*	wohin	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	20	es	PPER	*	es	sg	neut	montan	-	-	-	-	(54)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	21	mich	PPER	*	mich	sg	*	montan	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	22	getrieben	VVPP	*	treiben	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	23	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	24	Mich	PPER	(NP*	mich	sg	*	montan	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	25	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	26	wo	PWAV	(S*	wo	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	27	michs	APPRART	(PP*)	michs	-	-	montan	-	-	-	-	(54)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	28	erst	ADV	*	erst	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	29	verfolgt	VVFIN	*	verfolgen	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	30	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	31	aufs	APPRART	(VP(PP*	auf	sg	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	32	neue	ADJA	*)	neu	sg	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	33	zu	PTKZU	(VZ*	zu	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	34	betrüben	VVINF	*)))))))	betrüben	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	35	.	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	silvander	(LOC*)	-	-	-	(3|(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	silvander	-	-	-	-	3)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Verzage	NN	(VROOT(PSEUDO(S*	verzage	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	nicht	PTKNEG	(PP*	nicht	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	du	PPER	(S*	du	sg	*	silvander	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	weißt	VVFIN	*	weißen	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	aus	APPR	(PP*	aus	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	dem	PDS	*	der	sg	neut	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	was	PRELS	(S*	was	sg	neut	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	ich	PPER	*	ich	sg	*	silvander	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	gesagt	VVPP	*	sagen	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	:	$.	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	Daß	KOUS	(S*	daß	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	dich	PRF	*	dich	sg	*	silvander	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	15	kein	PIAT	(NP*	kein	sg	neut	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	16	Unglück	NN	*	unglück	sg	neut	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	17	mehr	ADV	*)	mehr	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	18	vom	APPRART	(PP*	von	sg	masc	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	19	festen	ADJA	*	fest	sg	masc	silvander	-	-	-	-	(51
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	20	Lande	NN	*)	land	sg	masc	silvander	-	-	-	-	51)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	21	jagt	VVFIN	*))))))	jagen	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	22	.	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Die	ART	(VROOT(PSEUDO(CS(S(NP*	der	sg	fem	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Sach	NN	*)	sach	sg	fem	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	ist	VAFIN	*	sein	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	beygelegt	VVPP	*)	beylegen	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	du	PPER	(S*	du	sg	*	silvander	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	kannst	VMFIN	*	können	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	dort	ADV	*	dort	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	ruhig	ADJD	*	ruhig	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	leben	VVFIN	*	leben	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	;	$.	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	Du	PPER	(S*	du	sg	*	silvander	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	siehst	VVFIN	*	sehen	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	uns	PPER	(S*	uns	pl	*	silvander	-	-	-	-	(52)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	15	zwingt	VVFIN	*	zwingen	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	16	die	ART	(NP*	der	sg	fem	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	17	Noth	NE	*))))	noth	sg	fem	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	18	:	$.	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	19	du	PPER	(S*	du	sg	*	silvander	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	20	mußt	VMFIN	*	mussen	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	21	dich	PRF	(VP*	dich	sg	-	silvander	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	22	drein	ADV	*	drein	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	23	ergeben	VVPP	*)))	ergeben	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	24	.	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	montan	-	-	-	-	(0|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	0)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ich	PPER	*	ich	sg	*	montan	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	muß	VMFIN	*	müssen	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	?	$.	*	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	So	ADV	(VROOT(PSEUDO(S*	so	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	will	VMFIN	*	wollen	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	ich	PPER	*	ich	sg	*	montan	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	auch	ADV	*)	auch	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	.	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Das	PDS	(VROOT(PSEUDO(S*	der	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	war	VAFIN	*	sein	sg	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	ein	ART	(NP*	ein	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	kluges	ADJA	*	klug	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	Wort	NN	*))	wort	sg	neut	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	.	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	montan	-	-	-	-	(0|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	0)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Mein	PPOSAT	(VROOT(PSEUDO(S(NP*	mein	sg	neut	montan	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Unglück	NN	*)	unglück	sg	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	trieb	VVFIN	*	treiben	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	mich	PPER	*	mich	sg	*	montan	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	her	PTKVZ	*	her	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	;	$.	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	mein	PPOSAT	(S(NP*	mein	sg	neut	montan	-	-	-	-	(54|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	Glück	NN	*)	glück	sg	neut	montan	-	-	-	-	54)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	führt	VVFIN	*	führen	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	mich	PPER	*	mich	sg	*	montan	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	nun	ADV	*	nun	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	fort	PTKVZ	*))	fort	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	.	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	silvander	(LOC*)	-	-	-	(3|(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	silvander	-	-	-	-	3)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Man	PIS	(VROOT(PSEUDO(CS(S*	man	sg	*	silvander	-	-	-	-	(15)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	sagte	VVFIN	*	sagen	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	mir	PPER	*)	sich	sg	*	silvander	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	mein	PPOSAT	(S(NP*	mein	sg	masc	silvander	-	-	-	-	(34|(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	Schiff	NN	*)	schiff	sg	masc	silvander	-	-	-	-	34)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	sey	VVFIN	*	sey	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	noch	ADV	(PP*	noch	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	im	APPRART	*	in	sg	neut	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	guten	ADJA	*	gut	sg	neut	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	Stande	NN	*)	stande	sg	neut	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	;	$.	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	Wir	PPER	(S*	wir	pl	*	silvander	-	-	-	-	(52)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	setzen	VVFIN	*	setzen	pl	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	uns	PRF	*	uns	pl	-	silvander	-	-	-	-	(52)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	15	darauf	PROAV	*	darauf	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	16	und	KON	*	und	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	17	ziehn	CARD	*	ziehn	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	18	aus	APPR	(PP*	aus	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	19	einem	ART	*	ein	sg	neut	silvander	-	-	-	-	(13
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	20	Lande	NN	*)))	land	sg	neut	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	21	,	$,	*	--	-	-	silvander	-	-	-	-	13)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	22	Das	ART	(S*	der	sg	neut	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	23	doch	ADV	*	doch	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	24	für	APPR	(PP*	für	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	25	Schäfer	NE	*)	schäfer	pl	masc	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	26	nun	ADV	*	nun	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	27	kein	PIAT	(NP*	kein	sg	masc	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	28	Aufenthalt	NN	*	aufenthalt	sg	masc	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	29	mehr	ADV	*)	mehr	*	*	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	30	ist	VAFIN	*))	sein	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	31	.	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CHLOE	NE	(VROOT(PSEUDO*))	chloe	-	-	chloe	-	-	-	-	(1)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	zu	PTKZU	*	zu	-	-	chloe	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Doris	NE	*	doris	-	-	chloe	(PER*)	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	.	$.	*	--	-	-	chloe	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	chloe	-	-	-	-	(1)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	seh	VVFIN	*	seh	-	-	chloe	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	wohl	ADV	*)	wohl	-	-	chloe	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	,	$,	*	--	-	-	chloe	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	keine	PIAT	*	kein	sg	fem	chloe	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	List	NE	*	list	sg	fem	chloe	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	ist	VAFIN	(S*	sein	sg	-	chloe	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	über	ADV	*	über	-	-	chloe	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	Weiberlist	NN	*)	weiberlist	sg	*	chloe	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	.	$.	*))	--	-	-	chloe	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Du	PPER	(VROOT(PSEUDO(NP*	du	sg	*	chloe	-	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	chloe	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	Doris	NE	*)	doris	-	-	chloe	-	-	-	-	(2)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	!	$.	*))	--	-	-	chloe	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	dank	APPR	*	dank	-	-	chloe	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	es	PPER	*	es	sg	neut	chloe	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	mir	PPER	*	sich	sg	*	chloe	-	-	-	-	(1)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	.	$.	*	--	-	-	chloe	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	corydon	(LOC*)	-	-	-	(7|(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	corydon	-	-	-	-	7)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Wir	PPER	(VROOT(PSEUDO(S*	wir	pl	*	corydon	-	-	-	-	(52)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	reisen	VVFIN	*	reisen	pl	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	also	ADV	*	also	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	morgen	ADV	*)	morgen	-	-	corydon	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	?	$.	*))	--	-	-	corydon	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	silvander	(LOC*)	-	-	-	(3|(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	silvander	-	-	-	-	3)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ja	PTKANT	(VROOT(PSEUDO(S*	ja	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	und	KON	(S*	und	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	ich	PPER	*	ich	sg	*	silvander	-	-	-	-	(3)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	will	VMFIN	*	wollen	sg	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	sogleich	ADV	(VP(NP*	sogleich	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	das	ART	*	der	sg	neut	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	nöthige	ADJA	*)	nöthig	sg	neut	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	besorgen	VVINF	*)))	besorgen	-	-	silvander	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	.	$.	*))	--	-	-	silvander	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	montan	-	-	-	-	(0|(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	0)

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Nun	ADV	*	nun	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	lern	VVFIN	*	lern	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	ich	PPER	*	ich	sg	*	montan	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	daß	KOUS	*	daß	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	ein	ART	*	ein	sg	masc	montan	-	-	-	-	(12
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	Mensch	NN	*	mensch	sg	masc	montan	-	-	-	-	12)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	dem	ART	*	der	sg	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	Schicksal	NN	*	schicksal	sg	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	nicht	PTKNEG	*	nicht	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	entgeht	VVFIN	*	entgehen	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	Und	KON	*	und	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	daß	KOUS	*	daß	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	der	ART	*	der	sg	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	15	thöricht	ADJD	*	thörechen	sg	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	16	ist	VAFIN	*	sein	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	17	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	18	der	ART	*	der	sg	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	19	murrt	ADJD	*	murren	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	20	und	KON	*	und	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	21	widersteht	VVFIN	*	widerstehen	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	22	.	$.	*	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Mein	PPOSAT	(VROOT(PSEUDO(S(NP*	mein	sg	masc	montan	-	-	-	-	(0)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Schicksal	NN	*)	schicksal	sg	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	lehrt	VVFIN	*	lehren	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	man	PIS	(S*	man	sg	*	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	kann	VMFIN	*	können	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	an	APPR	(VP(NP(AVP(CS(AP(PP*	an	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	Höfen	NN	*	hof	pl	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	Heerden	NE	*)	heerden	pl	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	Unglücklich	ADJD	*)	unglücklich	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	und	KON	*	und	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	beglückt	VVFIN	*)	beglücken	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	doch	KON	*)	doch	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	nirgends	NN	*)	nirgends	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	15	werden	VAINF	*)))	werden	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	16	.	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Corydon	NE	(VROOT(PSEUDO(S*	corydon	-	-	montan	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	winkt	VVFIN	*	winken	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	daß	KOUS	(S*	daß	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	warten	VVINF	(VP*	warten	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	und	KON	(S*	und	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	mit	APPR	(PP*	mit	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	ihm	PPER	*)	ihm	sg	masc	montan	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	lustig	ADJD	(AP*	lustig	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	seyn	ADJD	*)))	seyn	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	sollen	VMFIN	*))	sollen	pl	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	.	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Darauf	PROAV	(VROOT(PSEUDO(S*	darauf	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	singt	VVFIN	*	singen	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	er	PPER	*	er	sg	masc	montan	-	-	-	-	(7)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	folgende	ADJA	(NP*	folgend	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	Aria	NE	*))	aria	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	.	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Durch	APPR	(VROOT(PSEUDO(CS(PP*	durch	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	Sorgen	NN	(CNP*	sorge	pl	fem	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	und	KON	*	und	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	Grillen	NN	*))	grille	pl	*	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	Sein	PPOSAT	(S(VP(NP*	sein	sg	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	Schicksal	NN	*)	schicksal	sg	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	erfüllen	VVINF	*)	erfüllen	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	;	$.	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	Heißt	NN	(NP*	heißt	pl	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	ohne	APPR	(PP*	ohne	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	Verstand	NN	*)))	verstand	sg	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	Sein	PPOSAT	(S(NP*	sein	sg	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	Leben	NN	*)	leben	sg	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	verwand	VVFIN	*))	verwinden	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	15	.	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Im	APPRART	(VROOT(PSEUDO(S(PP*	in	sg	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	murrischen	ADJA	*	murrisch	sg	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	Herzen	NN	*	herz	sg	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	Entspringen	NE	*)	entspringen	sg	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	nur	ADV	(NP*	nur	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	Schmerzen	NN	*))	schmerz	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	.	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Die	ART	(VROOT(PSEUDO(S(NP*	der	sg	fem	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	edelste	ADJA	*	edel	sg	fem	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	Brust	NN	*)	brust	sg	fem	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	Zeugt	VVFIN	*	zeugt	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	Hofnung	NN	(CNP*	hofnung	sg	fem	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	und	KON	*	und	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	Lust	NN	*))	lust	sg	fem	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	.	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Wer	PWS	(VROOT(PSEUDO(S*	wer	sg	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	hat	VAFIN	*	haben	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	uns	PPER	(VP*	uns	pl	*	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	das	ART	(NP*	der	sg	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	Leben	NN	*)	leben	sg	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	Zur	APPRART	(PP*	zu	sg	fem	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	Strafe	NN	*)	strafe	sg	fem	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	gegeben	VVPP	*))	geben	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	?	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Vergnügen	NN	(VROOT(PSEUDO(S(CNP*	vergnügen	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	und	KON	*	und	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	Scherz	NN	*)	scherz	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	Beleben	VVFIN	*	beleben	pl	fem	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	das	ART	(NP*	der	sg	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	Herz	NN	*))	herz	sg	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	.	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Nach	APPR	(VROOT(PSEUDO(S(PP*	nach	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	jedem	PIDAT	*	jeder	sg	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	Verse	NN	*)	vers	sg	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	singen	VVFIN	*	singen	pl	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	die	ART	(NP*	der	pl	*	montan	-	-	-	-	(52
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	übrigen	ADJA	*)	übrig	pl	*	montan	-	-	-	-	52)
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	zusammen	ADV	(NP*	zusammen	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	folgendes	ADJA	*))	folgend	sg	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	.	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Es	PPER	(VROOT(PSEUDO(S*	es	sg	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	lebe	VVFIN	*	leben	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	die	ART	(NP*	der	sg	fem	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	Quelle	NN	*	quelle	sg	fem	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	der	ART	(CNP(NP*	der	pl	fem	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	süssesten	ADJA	*	süst	pl	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	Triebe	NN	*)	trieb	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	7	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	8	Die	ART	(NP*	der	sg	fem	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	9	Liebe	NN	*)	liebe	sg	fem	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	10	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	11	der	ART	(NP*	der	sg	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	12	Gipfel	NN	*	gipfel	sg	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	13	der	ART	(NP*	der	sg	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	14	Wollust	NN	*))	wollust	sg	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	15	,	$,	*	--	-	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	16	die	ART	(NP*	der	sg	fem	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	17	Liebe	NN	*))))	liebe	sg	fem	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	18	!	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Hierauf	NN	(VROOT(PSEUDO(S*	hierauf	sg	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	macht	VVFIN	*	machen	sg	-	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	2	ein	ART	(NP*	ein	sg	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	3	Schäferballet	NN	*)	schäferballet	sg	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	4	den	ART	(NP*	der	sg	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	5	Beschluß	NN	*))	beschluß	sg	masc	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	6	.	$.	*))	--	-	-	montan	-	-	-	-	-

Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	0	Ende	NN	(VROOT(PSEUDO*	ende	sg	neut	montan	-	-	-	-	-
Schaeferinsel_Act3.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	montan	-	-	-	-	-

#end document
