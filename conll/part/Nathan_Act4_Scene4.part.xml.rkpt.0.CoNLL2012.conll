#begin document (Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll); part 000
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(CNP(NP*	der	sg	masc	-	(15
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Tempelherr	NN	*)	tempelherr	sg	masc	-	15)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	und	KON	*	und	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	Saladin	NN	*)	saladin	sg	*	-	(7)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(15|(4)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	dein	PPOSAT	(NP*	dein	sg	masc	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	Gefangner	NN	*	gefangner	sg	masc	-	15)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	Sultan	NN	*))	sultan	sg	masc	-	(7)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	.	$.	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	.	$.	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Mein	PPOSAT	(VROOT(PSEUDO(NP*	mein	sg	masc	-	(15|(7)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Gefangner	NN	*)	gefangner	sg	masc	-	15)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wem	PWS	*	wem	sg	-	-	(16
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	ich	PPER	*	ich	sg	*	-	(7)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	das	ART	*	der	sg	neut	-	(17
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	Leben	NN	*	leben	sg	neut	-	17)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	schenke	VVFIN	*	schenken	sg	-	-	16)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	werd	VVFIN	*	werden	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	ich	PPER	*	ich	sg	*	-	(7)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	dem	ART	*	der	sg	neut	-	(16)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	Nicht	NN	*	nicht	sg	neut	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	auch	ADV	*	auch	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	die	ART	*	der	sg	fem	-	(18
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	Freiheit	NN	*	freiheit	sg	fem	-	18)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	schenken	VVINF	*	schenken	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	15	?	$.	*	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S(S*	was	sg	neut	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	dir	PPER	*	dir	sg	*	-	(7)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	ziemt	VVFIN	*)	ziemen	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	Zu	NN	(VP*	zu	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	tun	VVINF	*)	tun	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	ziemt	VVFIN	*	ziemen	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	mir	PPER	(NP(VP*	sich	sg	*	-	(4)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	erst	ADV	*	erst	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	vernehmen	VVINF	*))	vernehmen	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	Vorauszusetzen	NN	*	vorauszusetzen	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	15	.	$.	*))))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Aber	KON	*	aber	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	Sultan	NE	*	sultan	sg	fem	-	(7)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	–	XY	*	–	*	*	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	Dank	NN	*	dank	sg	*	-	(19)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	Besondern	NN	*	besond	*	*	-	(19
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	Dank	APPR	*	dank	sg	*	-	19)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	dir	PPER	*	dir	sg	*	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	für	APPR	*	für	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	mein	PPOSAT	*	mein	sg	neut	-	(20|(4)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	Leben	NN	*	leben	sg	neut	-	20)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	zu	APPR	*	zu	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	Beteuern	NN	*	beteuer	sg	neut	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	15	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	16	stimmt	VVFIN	*	stimmen	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	17	mit	APPR	*	mit	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	18	meinem	PPOSAT	*	mein	sg	masc	-	(21|(4)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	19	Stand	NN	*	stand	sg	masc	-	21)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	20	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	21	und	KON	*	und	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	22	meinem	PPOSAT	*	mein	sg	masc	-	(104)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	23	Charakter	NN	*	charakter	sg	masc	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	24	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	25	.	$.	*	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Es	PPER	(S*	es	sg	neut	-	(20)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	steht	VVFIN	*	stehen	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	in	APPR	(PP*	in	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	allen	PIAT	*	aller	pl	masc	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	Fällen	NN	*))	fall	pl	masc	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	Zu	APPR	*	zu	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	deinen	PPOSAT	(NP*	dein	pl	neut	-	(7)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	Diensten	NN	*	dienst	pl	neut	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	wieder	ADV	*)	wieder	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Brauch	VVFIN	(VROOT(PSEUDO(S*	brauch	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	es	PPER	*	es	sg	neut	-	(20)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	nur	ADV	(NP*	nur	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	Nicht	NN	*)	nicht	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	wider	APPR	(PP*	wider	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	mich	PPER	*))	mich	sg	*	-	(7)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Zwar	ADV	*	zwar	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	ein	ART	*	ein	*	*	-	(23
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	Paar	NN	*	paar	*	*	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	Hände	NN	*	hand	pl	fem	-	23)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	mehr	ADV	*	mehr	*	*	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	Die	ART	*	der	pl	masc	-	(23)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	gönnt	VVFIN	*	gönnen	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	ich	PPER	*	ich	sg	*	-	(7)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	meinem	PPOSAT	*	mein	sg	masc	-	(24|(7)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	Feinde	NN	*	feind	sg	-	-	24)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	gern	ADV	*	gern	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	.	$.	*	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Allein	ADV	(VROOT(PSEUDO(AP(S*	allein	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ihm	PPER	*	ihm	sg	*	-	(24)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	so	ADV	(AVP*	so	-	-	-	(22
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	ein	ART	(S(NP*	ein	sg	masc	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	Herz	NN	*)	herz	sg	masc	-	22)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	auch	ADV	(VP*	auch	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	mehr	ADV	*	mehr	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	gönnen	VVINF	*))))	gönnen	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	fällt	VVFIN	*	fallen	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	Mir	NE	*)	sich	sg	*	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	schwer	ADJD	*)	schwer	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ich	PPER	(S*	ich	sg	*	-	(7)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	habe	VAFIN	*	haben	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	mich	PRF	*	mich	sg	-	-	(7)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	mit	APPR	(PP*	mit	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	dir	PPER	*)	dir	sg	*	-	(15)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	in	APPR	(PP*	in	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	nichts	PIS	*))	nichts	*	neut	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	Betrogen	NN	*	betroge	pl	masc	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	braver	ADJA	*	brav	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	junger	ADJA	(NP*	jung	sg	masc	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	Mann	NN	*)	mann	sg	masc	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Du	PPER	(VROOT(PSEUDO(S*	du	sg	*	-	(15)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	bist	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	Mit	APPR	(PP*	mit	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	Seel	NN	(CNP*	seel	sg	*	(PER*)	(22)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	und	KON	*	und	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	Leib	NN	*)))	leib	sg	*	-	(25)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	mein	PPOSAT	(NP*	mein	sg	neut	-	(7)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	Assad	NN	*)	assad	sg	neut	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Sieh	NE	(VROOT(PSEUDO*	sieh	-	-	-	(26
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	ich	PPER	(VROOT(PSEUDO(DL(S*	ich	sg	*	-	(7)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	könnte	VMFIN	*	können	sg	-	-	26)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	Dich	PPER	(VP*	dich	sg	neut	-	(27)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	fragen	VVINF	*))	fragen	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	:	$.	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	wo	PWAV	(S*	wo	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	du	PPER	*	du	sg	*	-	(27)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	denn	ADV	(VP(NP*	denn	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	die	ART	*	der	sg	fem	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	ganze	ADJA	*	ganz	sg	fem	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	Zeit	NN	*)	zeit	sg	fem	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	Gesteckt	VVPP	*)))	gesteckt	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	in	APPR	(VROOT(PSEUDO(VP(PP*	in	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	welcher	PWAT	*	welcher	sg	fem	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	Höhle	NN	*)	höhle	sg	fem	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	du	PPER	*	du	sg	*	-	(27)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	geschlafen	VVPP	*)	schlafen	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	In	APPR	(VROOT(PSEUDO(PP*	in	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	welchem	PWAT	*	welcher	sg	neut	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	Ginnistan	NE	*	ginnistan	sg	neut	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	von	APPR	(VP(VP(PP*	von	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	welcher	PWAT	*	welcher	sg	fem	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	guten	ADJA	*	gut	pl	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	Div	NN	*	div	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	diese	PDAT	(NP*	dieser	pl	neut	-	(27
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	Blume	NN	*))	blume	pl	neut	-	27)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	fort	PTKVZ	(CAVP*	fort	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	und	KON	*	und	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	fort	PTKVZ	*)	fort	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	so	ADV	*	so	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	frisch	ADJD	*	frisch	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	15	Erhalten	VVPP	*)	erhalten	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	16	worden	VAPP	*))	werden	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	17	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Sieh	NE	(VROOT(PSEUDO*	sieh	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	ich	PPER	(VROOT(PSEUDO(S(S*	ich	sg	*	-	(7)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	könnte	VMFIN	*	können	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	dich	PRF	(VP*	dich	sg	-	-	(27)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	Erinnern	VVINF	*))	erinnern	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	wollen	VMFIN	*	wollen	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	was	PWS	(S*	was	sg	neut	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	wir	PPER	*	wir	pl	*	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	dort	ADV	*	dort	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	und	KON	*	und	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	dort	ADV	(VP*	dort	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	Zusammen	NN	*	zusammen	pl	fem	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	ausgeführt	VVPP	*)))	ausführen	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(CS(S*	ich	sg	*	-	(7)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	könnte	VMFIN	*	können	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	mit	APPR	(VP(PP*	mit	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	Dir	PPER	*)	dir	sg	*	-	(27)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	zanken	VVINF	*))	zanken	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	daß	KOUS	(S*	daß	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	du	PPER	*	du	sg	*	-	(27)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	Ein	ART	(NP*	ein	sg	neut	-	(28
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	Geheimnis	NN	*)	geheimnis	sg	neut	-	28)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	doch	ADV	(VP*	doch	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	Vor	APPR	(AP(PP*	vor	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	mir	PPER	*))	sich	sg	*	-	(7)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	gehabt	VAPP	*)))	haben	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ein	ART	*	ein	sg	masc	-	(28
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Abenteuer	NN	*	abenteuer	sg	masc	-	28)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	mir	PPER	*	sich	sg	*	-	(7)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	Doch	KON	*	doch	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	unterschlagen	VVINF	*	untschlagen	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	:	$.	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	–	XY	*	–	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	Ja	PTKANT	*	ja	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	das	PDS	*	der	sg	neut	-	(26)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	könnt	VVFIN	*	können	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	ich	PPER	*	ich	sg	*	-	(7)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	;	$.	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	wenn	KOUS	*	wenn	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	15	Ich	PPER	*	ich	sg	*	-	(7)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	16	dich	PRF	*	dich	sg	-	-	(27)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	17	nur	ADV	*	nur	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	18	säh	NE	*	säh	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	19	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	20	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	21	und	KON	*	und	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	22	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	23	auch	ADV	*	auch	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	24	mich	PPER	*	mich	sg	*	-	(7)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	25	.	$.	*	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Nun	ADV	(NP*	nun	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	mags	ADV	*)	mags	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Von	APPR	(VROOT(PSEUDO(S(PP*	von	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	dieser	PDAT	*	dieser	sg	masc	-	(29
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	süßen	ADJA	*	süß	pl	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	Träumerei	NN	*)	träumerei	-	-	-	29)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	immer	ADV	*	immer	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	Doch	KON	*	doch	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	so	ADV	(NP*	so	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	viel	PIS	*)	viel	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	wahr	PTKVZ	*	wahr	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	daß	KOUS	(S*	daß	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	mir	PPER	*	sich	sg	*	-	(7)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	in	APPR	(PP*	in	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	meinem	PPOSAT	*	mein	sg	masc	-	(30|(7)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	15	Herbst	NN	*)	herbst	sg	masc	-	30)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	16	Ein	ART	(NP*	ein	sg	masc	-	(31
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	17	Assad	NN	*)	assad	sg	masc	-	31)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	18	wieder	ADV	(VP*	wieder	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	19	blühen	VVINF	*)	blühen	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	20	soll	VMFIN	*))	sollen	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	21	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Du	PPER	(S*	du	sg	*	-	(15)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	bist	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	Es	PPER	(AP*	es	sg	neut	-	(29)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	doch	ADV	*	doch	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	zufrieden	ADJD	*))	zufrieden	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	Ritter	NN	*	ritter	*	*	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Alles	PIS	(VROOT(PSEUDO(NP*	alle	sg	neut	-	(32|(33
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	was	PRELS	(CS*	was	sg	neut	-	(33)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	Von	APPR	(S(PP*	von	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	dir	PPER	*)	dir	sg	*	-	(7)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	mir	PPER	*	sich	sg	*	-	(4)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	kömmt	VVFIN	*)	kömmen	pl	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	–	PPER	(S*	–	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	sei	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	was	PWS	(S*	was	sg	neut	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	es	PPER	*	es	sg	neut	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	will	VMFIN	*	wollen	sg	-	-	33)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	Als	APPR	(PP*	als	*	*	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	Wunsch	NN	*	wunsch	sg	masc	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	15	in	APPR	(PP*	in	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	16	meiner	PPOSAT	*	mein	sg	fem	-	(22|(4)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	17	Seele	NN	*))))))	seele	sg	fem	-	22)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	18	.	$.	*))	--	-	-	-	32)

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Laß	VVIMP	(VROOT(PSEUDO(S*	lassen	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	uns	PPER	*	uns	pl	*	-	(34)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	das	ART	(NP*	der	sg	neut	-	(32)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	Sogleich	NN	*)	sogleich	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	versuchen	VVINF	*)	versuchen	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Bliebst	VVFIN	(S*	bliebst	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	du	PPER	*	du	sg	*	-	(15)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	wohl	ADV	*)	wohl	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	bei	APPR	(NP(PP*	bei	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	mir	PPER	*))	sich	sg	*	-	(7)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Um	KOUI	*	um	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	mir	PPER	*	sich	sg	*	-	(7)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Als	APPR	(NP(PP*	als	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	Christ	NN	*)	christ	sg	masc	(PER*)	(35)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	als	APPR	(PP*	als	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	Muselmann	NN	*	muselmann	sg	*	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	:	$.	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	gleich	ADV	(NP*	gleich	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	viel	PIS	*)))	viel	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Im	APPRART	(VROOT(PSEUDO(CS(PP*	in	sg	neut	-	(36
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	weißen	ADJA	*	weiß	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	Mantel	NN	*)	mantel	sg	*	-	36)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	oder	KON	*	oder	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	Jamerlonk	NE	(S*	jamerlonk	sg	*	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	;	$.	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	Im	APPRART	(PP*	in	sg	masc	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	Tulban	NE	*))	tulban	sg	masc	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	oder	KON	*	oder	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	deinem	PPOSAT	(S(NP*	dein	sg	masc	-	(15)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	Filze	NN	*)	filz	sg	masc	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	:	$.	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	wie	KOKOM	(VP(NP*	wie	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	15	Du	PPER	*))	du	sg	*	-	(15)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	16	willst	VMFIN	*))	wollen	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	17	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Gleich	ADV	(VROOT(PSEUDO(NP*	gleich	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	viel	PIS	*)	viel	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(7)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	habe	VAFIN	*	haben	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	nie	ADV	(VP*	nie	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	verlangt	VVPP	*	verlangen	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	Daß	KOUS	(S*	daß	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	allen	PIAT	(NP*	aller	pl	*	-	(37
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	Bäumen	NN	*	baum	pl	*	-	37)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	Eine	ART	(NP*	ein	sg	fem	-	(38
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	Rinde	NN	*))	rinde	sg	fem	-	38)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	wachse	VVFIN	*)))	wachsen	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Sonst	ADV	(VROOT(PSEUDO(CS(S*	sonst	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	wärst	VVFIN	*	wären	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	du	PPER	*	du	sg	*	-	(7)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	wohl	ADV	*	wohl	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	auch	ADV	*	auch	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	schwerlich	ADJD	*)	schwerlich	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	der	ART	(S*	der	sg	masc	-	(39
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	du	PPER	*	du	sg	*	-	(7)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	bist	VAFIN	*	sein	sg	-	-	39)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	:	$.	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	Der	ART	(NP*	der	sg	masc	-	(39
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	Held	NN	*	held	sg	masc	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	der	PRELS	(S*	der	sg	masc	-	(39)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	15	lieber	ADV	*	lieber	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	16	Gottes	ADJA	(NP*	gott	sg	masc	-	(38)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	17	Gärtner	NN	*)	gärtner	sg	masc	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	18	wäre	VAFIN	*))))	sein	sg	-	-	39)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	19	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nun	ADV	(VROOT(PSEUDO(DL(S*	nun	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	dann	ADV	*	dann	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	;	$.	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	wenn	KOUS	*	wenn	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	du	PPER	*	du	sg	*	-	(15)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	nicht	PTKNEG	(AP*	nicht	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	schlechter	ADJD	*)	schlecht	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	von	APPR	(PP*	von	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	mir	PPER	*)	sich	sg	*	-	(7)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	denkst	VVFIN	*)	denken	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	:	$.	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	So	ADV	(S*	so	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	wären	VAFIN	*	sein	pl	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	wir	PPER	*	wir	pl	*	-	(34)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	ja	ADV	*	ja	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	15	halb	ADJD	*	halb	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	16	schon	ADV	(AP*	schon	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	17	richtig	ADJD	*)))	richtig	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	18	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ganz	ADV	(VROOT(PSEUDO(S*)	ganz	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*))	saladin	-	-	-	(7)

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	ihm	PPER	(VROOT(PSEUDO(AP*	ihm	sg	masc	-	(15)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	die	ART	(NP*	der	sg	fem	-	(40
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	Hand	NN	*)	hand	sg	fem	-	40)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	bietend	ADJD	*)	bietend	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ein	ART	(VROOT(PSEUDO(NP*	ein	sg	neut	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Wort	NN	*)	wort	sg	neut	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*))	tempelherr	-	-	-	(15)

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	einschlagend	ADJD	(VROOT(PSEUDO*	einschlagend	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ein	ART	(VROOT(PSEUDO(NP*	ein	sg	masc	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Mann	NN	*)	mann	sg	masc	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Hiermit	PROAV	*	hiermit	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	empfange	VVFIN	*	empfangen	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	mehr	PIAT	*	mehr	*	*	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	Als	KOKOM	*	als	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	du	PPER	*	du	sg	*	-	(7)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	mir	PPER	*	sich	sg	*	-	(4)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	nehmen	VVINF	*	nehmen	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	konntest	VMFIN	*	konntest	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	.	$.	*	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ganz	ADV	(VROOT(PSEUDO(NP*	ganz	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	der	ART	*	der	sg	masc	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	Deine	NN	*)	dein	sg	masc	-	(7)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Zu	APPR	(VROOT(PSEUDO(PP*	zu	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	viel	PIAT	(NP*	viel	*	*	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	Gewinn	NN	*)	gewinn	sg	masc	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	für	APPR	*	für	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	einen	ART	*	ein	sg	masc	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	Tag	NN	*)	tag	sg	masc	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	zu	PTKA	(VROOT(PSEUDO(AP*	zu	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	viel	PIS	*)	viel	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO(S*	–	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Kam	NE	*	kam	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	er	PPER	*	er	sg	masc	-	(1)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	mit	PTKVZ	*)	mit	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wer	PWS	*	wer	sg	masc	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	?	$.	*	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nathan	NE	(VROOT(PSEUDO*	nathan	-	-	-	(1)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*))	tempelherr	-	-	-	(15)

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	frostig	ADJD	(VROOT(PSEUDO*	frostig	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nein	PTKANT	*	nein	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(4)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	kam	VVFIN	*	kommen	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	Allein	ADV	*)	allein	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Welch	PWAT	(VROOT(PSEUDO(NP*	welch	sg	fem	-	(41
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	eine	ART	(NP*	ein	sg	fem	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	Tat	NN	*)	tat	sg	fem	-	41)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	von	APPR	(PP*	von	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	dir	PPER	*)	dir	sg	*	-	(15)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	!	$.	*)))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	welch	PWAT	(NP*	welcher	*	*	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	Ein	ART	(NP*	ein	sg	neut	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	weises	ADJA	*	weis	sg	neut	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	Glück	NN	*)	glück	sg	neut	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	daß	KOUS	(S*	daß	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	eine	ART	(NP*	ein	sg	fem	-	(42
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	solche	PIAT	(NP*	solcher	sg	fem	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	Tat	NN	*))	tat	sg	fem	-	42)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	Zum	APPRART	(PP*	zu	sg	neut	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	Besten	NN	*)	gut	sg	neut	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	eines	ART	(NP*	ein	sg	masc	-	(43
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	solchen	PIAT	(NP*	solcher	sg	masc	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	Mannes	NN	*))	mann	sg	masc	-	43)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	15	ausschlug	VVFIN	*)))	ausschlagen	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	16	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ja	PTKANT	(VROOT(PSEUDO(S*	ja	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	ja	ADV	*)	ja	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	So	ADV	(VROOT(PSEUDO(S(ISU*	so	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	kalt	ADJD	*))	kalt	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Nein	PTKANT	(S*	nein	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	junger	ADJA	(NP*	jung	pl	masc	-	(15
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	Mann	NN	*))	mann	*	masc	-	15)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	wenn	KOUS	*	wenn	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Gott	NN	*	gott	sg	masc	-	(44)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	Was	PIAT	*	was	sg	neut	-	(45
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	Gutes	NN	*	gute	sg	neut	-	45)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	durch	APPR	*	durch	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	uns	PPER	*	uns	pl	*	-	(37)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	tut	VVFIN	*	tun	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	muß	VMFIN	*	müssen	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	man	PIS	*	man	sg	*	-	(37)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	so	ADV	*	so	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	kalt	ADJD	*	kalt	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	Nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	sein	VAINF	*	sein	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	!	$.	*	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	selbst	ADV	*	selbst	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	aus	APPR	*	aus	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	Bescheidenheit	NN	*	bescheidenheit	sg	fem	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	so	ADV	*	so	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	kalt	ADJD	*	kalt	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	Nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	scheinen	VVINF	*	scheinen	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	wollen	VMFIN	*	wollen	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	!	$.	*	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Daß	KOUS	(VROOT(PSEUDO(S*	daß	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	doch	ADV	*	doch	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	in	APPR	(PP*	in	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	der	ART	*	der	sg	fem	-	(46
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	Welt	NN	*)	welt	sg	fem	-	46)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	Ein	ART	(NP*	ein	sg	neut	-	(47
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	jedes	PIAT	(NP*	jeder	sg	neut	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	Ding	NN	*))	ding	sg	neut	-	47)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	so	ADV	*	so	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	manche	PIAT	(NP*	mancher	pl	*	-	(48
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	Seiten	NN	*)	seite	pl	fem	-	48)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	hat	VAFIN	*)	haben	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Von	APPR	(AVP(PP*	von	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	denen	PDS	*)	der	pl	fem	-	(48)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	oft	ADV	*)	oft	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	sich	PRF	(S(VP*	sich	sg	-	-	(37)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	gar	ADV	(AVP*	gar	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	nicht	PTKNEG	*)	nicht	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	denken	VVINF	*)	denken	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	läßt	VVFIN	*	lassen	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	Wie	PWAV	(VP*	wie	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	sie	PPER	*	sie	pl	*	-	(48)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	zusammenpassen	VVPP	*))	zusammenpassen	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Halte	VVFIN	*	halten	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	dich	PPER	*	dich	sg	-	-	(15)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	Nur	ADV	*	nur	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	immer	ADV	*	immer	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	an	APPR	*	an	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	die	ART	*	der	sg	fem	-	(44
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	best	FM	*	Best	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	'	$(	*	--	-	-	-	44)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	und	KON	*	und	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	preise	ADJA	*	preis	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	Gott	NN	*	gott	-	-	-	(44)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	!	$.	*	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Der	PDS	(VROOT(PSEUDO(S*	der	sg	masc	-	(44)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	weiß	VVFIN	*	weiß	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	wie	PWAV	(S*	wie	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	sie	PPER	*	sie	pl	fem	-	(48)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	zusammenpassen	VVFIN	*))	zusammenpassen	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Aber	KON	*	aber	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	Wenn	KOUS	*	wenn	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	du	PPER	*	du	sg	*	-	(15)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	so	ADV	*	so	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	schwierig	ADJD	*	schwierig	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	sein	VAINF	*	sein	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	willst	VAFIN	*	wollen	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	junger	ADJA	*	jung	pl	masc	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	Mann	NN	*	mann	*	masc	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	:	$.	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	So	ADV	*	so	-	-	-	(49
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	werd	ADJD	*	werden	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	15	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	16	auch	ADV	*	auch	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	17	ich	PPER	*	ich	sg	*	-	(7)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	18	ja	ADV	*	ja	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	19	wohl	ADV	*	wohl	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	20	auf	APPR	*	auf	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	21	meiner	PPOSAT	*	mein	sg	fem	-	(7)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	22	Hut	NN	*	hut	sg	fem	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	23	Mich	PPER	*	mich	sg	*	-	(7)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	24	mit	APPR	*	mit	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	25	dir	PPER	*	dir	sg	*	-	(15)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	26	halten	VVINF	*	halten	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	27	müssen	VMFIN	*	müssen	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	28	?	$.	*	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Leider	ADV	(VROOT(PSEUDO(S*	leider	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	bin	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	Auch	ADV	(VP*	auch	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	ich	PPER	(NP*	ich	sg	*	-	(7)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	ein	ART	(NP*	ein	sg	neut	-	(50
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	Ding	NN	*)	ding	sg	neut	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	von	APPR	(PP*	von	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	vielen	PIAT	*	vieler	pl	fem	-	(48
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	Seiten	NN	*))	seite	pl	fem	-	48)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	die	ART	(S(NP*	der	sg	fem	-	50)|(50)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	Oft	NN	*)	oft	sg	fem	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	nicht	PTKNEG	(VP(AVP*	nicht	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	so	ADV	*)	so	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	recht	ADJD	*	recht	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	15	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	16	passen	VVINF	*))	passen	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	17	scheinen	VVFIN	*))	scheinen	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	18	mögen	VMFIN	*)))	mögen	-	-	-	49)

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Das	PDS	(VROOT(PSEUDO(S*	der	sg	neut	-	(49)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	schmerzt	VVFIN	*)	schmerzen	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Denn	KON	(S*	denn	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	Argwohn	NN	*	argwohn	sg	masc	-	(51)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	so	ADV	(NP*	so	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	wenig	PIS	*))	wenig	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	sonst	ADV	(PP*	sonst	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	Mein	PPOSAT	*	mein	sg	masc	-	(4)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	Fehler	NN	*)	fehler	sg	masc	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	–	XY	*))	–	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nun	ADV	(VROOT(PSEUDO(S*	nun	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	so	ADV	*	so	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	sage	VVFIN	*	sagen	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	doch	ADV	*	doch	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	mit	APPR	(S*	mit	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	wem	PWS	*	wem	sg	masc	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	Dus	NN	*	dus	sg	masc	-	(103)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	hast	VVFIN	*))	haben	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Es	PPER	(S*	es	sg	neut	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	schien	VVFIN	*	scheinen	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	ja	ADV	*	ja	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	gar	ADV	*	gar	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	mit	APPR	(PP*	mit	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	Nathan	NE	*))	nathan	sg	*	(PER*)	(1)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wie	PWAV	(VROOT(PSEUDO*	wie	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Auf	APPR	(VROOT(PSEUDO(PP*	auf	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Nathan	NE	(MPN*	nathan	*	*	-	(1)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	Argwohn	NE	*))	argwohn	sg	*	-	(51)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	du	PPER	*	du	sg	*	-	(15)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	?	$.	*	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Erklär	NN	*	erklär	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	dich	PPER	*	dich	sg	*	-	(15)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	!	$.	*	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	sprich	ADV	(VROOT(PSEUDO(S*)	sprich	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Komm	NN	(VROOT(PSEUDO(CS*	komm	sg	masc	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	gib	VVIMP	(S*	geben	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	mir	PPER	*	sich	sg	*	-	(7)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	deines	PPOSAT	(NP*	dein	sg	neut	-	(15)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	Zutrauns	NN	*)	zutraun	sg	neut	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	erste	ADJA	(NP*	erster	pl	masc	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	Probe	NN	*)))	probe	pl	masc	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(4)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	habe	VAFIN	*	haben	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	wider	APPR	(NP(PP*	wider	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	Nathan	NE	*)	nathan	-	-	-	(1)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	nichts	PIS	*))	nichts	*	neut	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	zürn	VVFIN	*	zürn	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	Allein	ADV	*	allein	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	mit	APPR	*	mit	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	mir	PPER	*	sich	sg	*	-	(4)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	–	XY	*	–	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	über	APPR	(PP*	über	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	was	PIS	*))	was	sg	neut	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Daß	KOUS	*	daß	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	mir	PPER	*	sich	sg	*	-	(4)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	Geträumt	NN	*	geträumt	pl	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	ein	ART	*	ein	sg	masc	-	(52|(53
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	Jude	NN	*	jude	sg	masc	-	53)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	könn	VMFIN	*	könn	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	auch	ADV	*	auch	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	wohl	ADV	*	wohl	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	ein	ART	*	ein	sg	masc	-	(54
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	Jude	NN	*	jude	sg	masc	-	52)|54)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	Zu	NN	*	zu	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	sein	VAINF	*	sein	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	verlernen	VVINF	*	verlernen	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	15	;	$.	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	16	daß	KOUS	*	daß	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	17	mir	PPER	*	sich	sg	*	-	(4)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	18	wachend	ADJD	*	wachend	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	19	so	ADV	*	so	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	20	Geträumt	VVPP	*	geträumt	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	21	.	$.	*	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Heraus	NN	(VROOT(PSEUDO(NP*	heraus	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	mit	APPR	(PP*	mit	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	diesem	PDAT	*	dieser	sg	masc	-	(52
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	wachen	ADJA	*	wach	sg	masc	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	Traume	NN	*))	traume	-	-	-	52)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Du	PPER	(VROOT(PSEUDO(S*	du	sg	*	-	(7)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	weißt	VVFIN	*	weißen	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	von	APPR	(NP(PP*	von	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	Nathans	NE	*)	nathan	sg	*	(PER*)	(2|(1)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	Tochter	NN	(CNP*	tochter	sg	fem	-	2)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	Sultan	NN	*)))	sultan	sg	neut	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Was	PWS	*	was	sg	neut	-	(41)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	für	APPR	*	für	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	sie	PPER	*	sie	sg	fem	-	(2)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	tat	VVFIN	*	taten	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	das	PDS	*	der	sg	neut	-	(41)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	tat	VVFIN	*	taten	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	–	XY	*	–	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	weil	KOUS	*	weil	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	ichs	CARD	*	ich	-	-	-	(41)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	tat	VVFIN	*	taten	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	.	$.	*	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Zu	PTKA	*	zu	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	stolz	ADJD	*	stolz	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	Dank	NN	*	dank	-	-	-	(55)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	einzuernten	VVIZU	*	einzuernen	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	wo	PWAV	*	wo	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	ihn	PPER	*	ihn	sg	masc	-	(55)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	Nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	säete	VVFIN	*	säen	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	verschmäht	VVFIN	*	verschmähen	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	Tag	NN	*	tag	sg	masc	-	(56)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	15	für	APPR	*	für	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	16	Tag	NN	*	tag	sg	neut	-	(56)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	17	Das	ART	*	der	sg	neut	-	(2
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	18	Mädchen	NN	*	mädchen	sg	neut	-	2)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	19	noch	ADV	*	noch	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	20	einmal	ADV	*	einmal	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	21	zu	PTKZU	*	zu	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	22	sehn	VAINF	*	sehn	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	23	.	$.	*	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(S(NP*	der	sg	masc	-	(1
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Vater	NN	*)	vater	sg	masc	-	1)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	War	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	fern	ADJD	(VP(NP(CS*	fern	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	;	$.	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	er	PPER	(S*	er	sg	masc	-	(1)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	kömmt	VVFIN	*	kömmen	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	;	$.	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	er	PPER	(S*	er	sg	masc	-	(1)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	hört	VVFIN	*	hören	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	;	$.	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	er	PPER	(S*	er	sg	masc	-	(1)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	sucht	VVFIN	*	suchen	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	mich	PRF	*	mich	sg	*	-	(4)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	auf	PTKVZ	*	auf	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	15	;	$.	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	16	Er	PPER	(S*	er	sg	masc	-	(1)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	17	dankt	VVFIN	*	danken	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	18	;	$.	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	19	er	PPER	*	er	sg	masc	-	(1)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	20	wünscht	VVFIN	*)))))	wünschen	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	21	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	22	daß	KOUS	(S*	daß	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	23	seine	PPOSAT	(NP*	sein	sg	fem	-	(2|(1)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	24	Tochter	NN	*	tochter	sg	fem	-	2)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	25	mir	PPER	(S(NP*	sich	sg	*	-	(4)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	26	Gefallen	NN	*)	gefallen	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	27	möge	VMFIN	*	mögen	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	28	;	$.	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	29	spricht	VVFIN	(S*	sprechen	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	30	von	APPR	(PP*	von	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	31	Aussicht	NN	*))))	aussicht	sg	fem	-	(57)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	32	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	33	spricht	VVFIN	*))	sprechen	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	34	Von	APPR	(VZ*	von	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	35	heitern	VVINF	*)))	heitern	-	-	-	(58
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	36	Fernen	NN	*	fernen	-	-	-	58)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	37	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Nun	ADV	(S(AVP*	nun	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	ich	PPER	(S*	ich	sg	*	-	(4)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	lasse	VVFIN	*))	lassen	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	mich	PPER	*	mich	sg	*	-	(4)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	Beschwatzen	NN	*	beschwatze	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	komme	VVFIN	*	kommen	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	sehe	VVFIN	(S*	sehen	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	finde	VVFIN	(S*	finden	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	wirklich	ADJD	*	wirklich	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	Ein	ART	(NP*	ein	sg	masc	-	(2
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	15	Mädchen	NN	*))))	mädchen	sg	masc	-	2)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	16	.	$.	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	17	.	$.	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	18	.	$.	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	19	Ah	NE	(S*	ah	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	20	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	21	ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	22	muß	VMFIN	*	müssen	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	23	mich	PPER	(VP*	mich	sg	-	-	(4)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	24	schämen	VVINF	*))	schämen	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	25	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	26	Sultan	NE	*	sultan	-	-	-	(7)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	27	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*))	–	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Dich	PPER	(VROOT(PSEUDO(S*	dich	sg	*	-	(15)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	schämen	VVFIN	*)	schämen	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	daß	KOUS	(S*	daß	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	ein	ART	(NP*	ein	sg	neut	-	(59
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	Judenmädchen	NN	*)	judenmädchen	sg	neut	-	59)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	auf	APPR	(PP*	auf	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	Dich	PDAT	*	dich	sg	masc	-	(15)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	Eindruck	NN	*)	eindruck	sg	masc	-	(60)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	machte	VVFIN	*)	machen	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	:	$.	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	doch	ADV	*	doch	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	wohl	ADV	*	wohl	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	nimmermehr	ADV	*	nimmermehr	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Daß	KOUS	(VROOT(PSEUDO(CS(S*	daß	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	diesem	PDAT	(NP*	dieser	sg	masc	-	(60
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	Eindruck	NN	*)	eindruck	sg	masc	-	60)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	auf	APPR	(PP*	auf	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	das	ART	*	der	sg	neut	-	(61
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	liebliche	ADJA	*	lieblich	sg	neut	-	61)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	Geschwätz	NN	*	geschwätz	sg	neut	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	des	ART	(NP*	der	sg	masc	-	(1
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	Vaters	NN	*))	vater	sg	masc	-	1)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	hin	PTKVZ	*)	hin	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	mein	PPOSAT	(S(NP*	mein	sg	neut	-	(22|(4)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	rasches	ADJA	*	rasch	sg	neut	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	Herz	NN	*)	herz	sg	neut	-	22)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	15	So	ADV	(AP(NP(AP*	so	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	16	wenig	PIAT	*)	wenig	*	*	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	17	Widerstand	NN	*)	widerstand	sg	masc	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	18	entgegen	APPO	*)	entgegen	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	19	setzte	VVFIN	*))	setzen	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	20	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ich	PPER	*	ich	sg	*	-	(15|(4)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	Tropf	NN	*	tropf	sg	-	-	15)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(4)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	sprang	VVFIN	*	springen	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	zum	APPRART	(PP*)	zu	sg	neut	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	zweitenmal	ADV	(PP*	zweitenmal	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	ins	APPRART	*	in	sg	neut	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	Feuer	NN	*))	feuer	sg	neut	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Denn	KON	(S*	denn	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	nun	ADV	*	nun	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	warb	VVFIN	*	werben	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	und	KON	(S*	und	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	nun	ADV	*	nun	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	ward	VVFIN	*	werden	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	verschmäht	VVFIN	*))	verschmähen	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Verschmäht	VVFIN	*	verschmähen	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	?	$.	*	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(S(NP*	der	sg	masc	-	(1
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	weise	ADJA	*	weise	sg	masc	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	Vater	NN	*)	vater	sg	masc	-	1)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	schlägt	VVFIN	*	schlagen	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	nun	ADV	*	nun	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	wohl	ADV	*	wohl	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	Mich	PPER	*	mich	sg	*	-	(4)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	platterdings	ADV	*	platterdings	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	aus	PTKVZ	*)	aus	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(CO(VP(NP*	der	sg	masc	-	(1
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	weise	ADJA	*	weise	sg	masc	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	Vater	NN	*	vater	sg	masc	-	1)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	Muß	NN	*)	müssen	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	aber	ADV	*	aber	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	doch	ADV	*	doch	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	sich	PRF	*	sich	sg	-	-	(62|(1)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	erst	ADV	*	erst	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	erkunden	VVINF	*)	erkunden	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	erst	ADV	(NP*	erst	-	-	-	62)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	Besinnen	NN	*))	besin	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Allerdings	ADV	(VROOT(PSEUDO(S*)	allerdings	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Tat	VVFIN	(VROOT(PSEUDO(S*	tat	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	denn	ADV	*	denn	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	das	ART	(NP*	der	sg	neut	-	(62)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	Nicht	NN	*)	nicht	sg	neut	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	auch	ADV	*)	auch	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Erkundete	NN	(VROOT(PSEUDO(S*	erkundet	pl	*	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	besann	VVFIN	*	besann	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	denn	ADV	*	denn	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	Mich	PPER	*	mich	sg	*	-	(4)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	erst	ADV	(AVP*	erst	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	auch	ADV	*)	auch	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	als	KOKOM	(S*	als	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	sie	PPER	*	sie	sg	fem	-	(2)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	im	APPRART	(PP*	in	sg	neut	-	(63
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	Feuer	NN	*)	feuer	sg	neut	-	63)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	schrie	VVFIN	*))	schreien	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	15	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Fürwahr	NN	*	fürwahr	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	bei	APPR	(VROOT(PSEUDO(PP*	bei	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Gott	NN	*)	gott	-	-	-	(64)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Es	PPER	(VROOT(PSEUDO(S*	es	sg	neut	-	(65)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	doch	ADV	(VP*	doch	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	gar	ADV	*	gar	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	was	PIS	(NP*	was	sg	neut	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	Schönes	NE	*	schöne	sg	neut	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	So	ADV	(S(AVP*	so	-	-	-	(65
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	weise	ADV	*	weise	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	so	ADV	*)	so	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	bedächtig	ADJD	*))	bedächtig	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	sein	VAINF	*))	sein	-	-	-	65)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nun	ADV	(VROOT(PSEUDO*	nun	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	nun	ADV	*	nun	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	So	ADV	(VROOT(PSEUDO*	so	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	sieh	VVIMP	(S*	sieh	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	doch	ADV	*	doch	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	einem	ART	(NP*	ein	sg	masc	-	(66
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	Alten	NN	*)	alt	sg	masc	-	66)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	etwas	PIS	*	etwas	*	neut	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	nach	PTKVZ	*)	nach	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wie	PWAV	(VROOT(PSEUDO(CS(S(AVP*	wie	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	lange	ADV	*)	lange	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	können	VMFIN	*	können	pl	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	seine	PPOSAT	(NP*	sein	pl	fem	-	(63|(1)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	Weigerungen	NN	*))	weigerung	pl	fem	-	63)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	Denn	KON	*	denn	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	dauern	VVINF	*)	dauern	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wird	VAFIN	(VROOT(PSEUDO(S*	werden	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	er	PPER	*	er	sg	masc	-	(1)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	denn	ADV	*	denn	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	von	APPR	(VP(PP*	von	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	dir	PPER	*)	dir	sg	*	-	(15)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	verlangen	VVINF	*)	verlangen	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	Daß	KOUS	(S*	daß	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	du	PPER	*	du	sg	*	-	(15)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	erst	ADV	(VP*	erst	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	Jude	NN	*	jude	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	werden	VAINF	*)	werden	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	sollst	VMFIN	*))	sollen	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wer	PWS	(VROOT(PSEUDO(S*	wer	sg	masc	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	weiß	VVFIN	*)	weiß	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wer	PWS	(VROOT(PSEUDO(S*	wer	sg	masc	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	weiß	VVFIN	*)	weiß	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	der	ART	*	der	sg	masc	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	diesen	PDAT	(S(NP*	dieser	sg	masc	-	(1
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	Nathan	NN	*)	nathan	sg	masc	-	1)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	besser	ADJD	*	gut	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	kennt	VVFIN	*)	kennen	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Der	ART	*	der	sg	masc	-	(67
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Aberglaub	NN	*	aberglaub	sg	masc	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	in	APPR	*	in	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	dem	PRELS	*	der	sg	neut	-	(67)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	wir	PPER	*	wir	pl	*	-	(37)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	aufgewachsen	VVPP	*	aufwachsen	-	-	-	67)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	Verliert	VVPP	*	verlieren	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	auch	ADV	*	auch	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	wenn	KOUS	*	wenn	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	wir	PPER	*	wir	pl	*	-	(37)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	ihn	PPER	*	ihn	sg	masc	-	(67)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	15	erkennen	VVFIN	*	erkennen	pl	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	16	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	17	darum	PROAV	*	darum	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	18	Doch	PPER	*	doch	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	19	seine	PPOSAT	*	sein	sg	fem	-	(67)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	20	Macht	NN	*	macht	sg	fem	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	21	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	22	über	APPR	*	über	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	23	uns	PPER	*	uns	pl	*	-	(37)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	24	.	$.	*	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Es	PPER	(NP(S*	es	sg	neut	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	sind	VAFIN	*	sein	pl	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	Nicht	PTKNEG	(NP*	nicht	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	alle	PIS	*)	aller	pl	*	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	frei	ADJD	*)	frei	pl	*	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	die	PRELS	(S*	der	pl	*	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	ihrer	PPOSAT	(NP*	ihr	sg	fem	-	(67|(37)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	Ketten	NN	*)	kette	pl	fem	-	67)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	spotten	VVFIN	*))	spotten	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Sehr	ADV	(VROOT(PSEUDO(VP*	sehr	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	reif	ADJD	*	reif	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	bemerkt	VVPP	*)	bemerken	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Doch	KON	(VROOT(PSEUDO*	doch	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Nathan	NE	*	nathan	pl	-	-	(1)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	wahrlich	ADJD	*	wahrlich	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	Nathan	NE	*	nathan	-	-	-	(1)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	.	$.	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	.	$.	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Der	ART	*	der	sg	masc	-	(68
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Aberglauben	NN	*	aberglauben	sg	masc	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	schlimmster	ADJD	*	schlimmster	sg	masc	-	68)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	den	ART	*	der	sg	masc	-	(67
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	seinen	PPOSAT	*	sein	sg	masc	-	67)|(37)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	Für	APPR	*	für	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	den	ART	*	der	sg	masc	-	(69
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	erträglichern	NN	*	erträglichern	-	-	-	69)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	zu	PTKZU	*	zu	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	halten	VVINF	*	halten	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	.	$.	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	.	$.	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	.	$.	*	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Mag	VMFIN	(VROOT(PSEUDO(S*	mögen	sg	masc	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Wohl	NN	(VP*	wohl	sg	masc	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	sein	VAINF	*))	sein	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Doch	KON	(VROOT(PSEUDO*	doch	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Nathan	NE	*	nathan	-	-	-	(1)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	.	$.	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	.	$.	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Dem	KOUS	(VROOT(PSEUDO(S*	der	sg	neut	-	(67)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	allein	ADV	*	allein	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	Die	ART	(VP(NP*	der	sg	fem	-	(37
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	blöde	ADJA	*	blöd	sg	fem	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	Menschheit	NN	*)	menschheit	sg	fem	-	37)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	vertrauen	VVINF	*))	vertrauen	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	bis	KOUS	(S*	bis	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	Sie	PPER	*	sie	pl	masc	-	(37)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	hellern	VVFIN	*	hellern	pl	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	Wahrheitstag	NN	*))	wahrheitstag	sg	masc	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	gewöhne	PTKVZ	*	gewöhnen	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	;	$.	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	dem	ART	*	der	sg	masc	-	(67)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	15	Allein	ADV	*	allein	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	16	.	$.	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	17	.	$.	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	18	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Gut	ADJD	(VROOT(PSEUDO*	gut	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Aber	KON	(VROOT(PSEUDO*	aber	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Nathan	NE	*	nathan	-	-	-	(1)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Nathans	NN	*	nathan	sg	*	-	(1)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	Los	NE	(S(MPN*	los	*	*	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	Ist	NE	*)	sein	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	diese	PDAT	(NP*	dieser	sg	fem	-	(68
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	Schwachheit	NN	*)	schwachheit	sg	fem	-	68)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	nicht	PTKNEG	*)	nicht	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	So	ADV	*	so	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	dacht	VVFIN	*	dacht	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	auch	ADV	*	auch	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	!	$.	*	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	.	$.	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	.	$.	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	Wenn	KOUS	*	wenn	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	gleichwohl	ADV	*	gleichwohl	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	dieser	PDAT	*	dieser	sg	masc	-	(1
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	Ausbund	NN	*	ausbund	sg	masc	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	aller	PIAT	*	aller	pl	masc	-	(37
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	Menschen	NN	*	mensch	pl	masc	-	1)|37)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	So	ADV	*	so	-	-	-	(70
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	ein	ART	*	ein	sg	masc	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	gemeiner	ADJA	*	gemein	sg	masc	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	Jude	NN	*	jude	sg	masc	-	70)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	wäre	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	15	daß	KOUS	*	daß	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	16	Er	PPER	*	er	sg	masc	-	(1)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	17	Christenkinder	NN	*	christenkind	pl	neut	(MISC*)	(71)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	18	zu	PTKZU	*	zu	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	19	bekommen	VVINF	*	bekommen	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	20	suche	VVFIN	*	suchen	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	21	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	22	Um	KOUI	*	um	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	23	sie	PPER	*	sie	pl	masc	-	(71)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	24	als	APPR	*	als	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	25	Juden	NN	*	Jude	pl	masc	-	(72)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	26	aufzuziehn	VVIZU	*	aufziehn	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	27	:	$.	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	28	–	XY	*	–	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	29	wie	KOKOM	*	wie	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	30	dann	ADV	*	dann	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	31	?	$.	*	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wer	PWS	*	wer	sg	masc	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	sagt	VVFIN	*	sagen	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	ihm	PPER	*	ihm	sg	*	-	(1)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	so	ADV	*	so	-	-	-	(73
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	was	PWS	*	was	sg	neut	-	73)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	nach	PTKVZ	*	nach	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	?	$.	*	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Das	ART	(VROOT(PSEUDO(S(NP*	der	sg	neut	-	(2
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Mädchen	NN	*	mädchen	sg	neut	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	selbst	ADV	(PP*	selbst	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	Mit	APPR	(S(PP*	mit	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	welcher	PRELS	(S*	welcher	sg	fem	-	(2)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	er	PPER	*	er	sg	masc	-	(1)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	mich	PPER	*	mich	sg	*	-	(4)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	körnt	VVFIN	*)	körnen	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	mit	APPR	(S(PP*	mit	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	deren	PRELAT	*	der	sg	fem	-	(57|(2)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	Hoffnung	NN	*)	hoffnung	sg	fem	-	57)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	Er	PPER	(NP*	er	sg	masc	-	(1)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	gern	ADV	*)	gern	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	15	mir	PPER	(VP*	sich	sg	*	-	(4)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	16	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	17	bezahlen	VVINF	*))	bezahlen	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	18	schiene	VVFIN	*	schien	sg	fem	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	19	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	20	was	PWS	(S*	was	sg	neut	-	(41)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	21	Ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	22	nicht	PTKNEG	(AVP*	nicht	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	23	umsonst	ADV	*)	umsonst	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	24	für	APPR	(VP(PP*	für	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	25	sie	PPER	*)	sie	pl	masc	-	(2)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	26	getan	VVPP	*)	tun	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	27	soll	VMFIN	*)))	sollen	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	28	haben	VAFIN	*	haben	pl	-	-	2)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	29	Dies	PDS	(NP*	dieser	sg	neut	-	(2
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	30	Mädchen	NN	*	mädchen	sg	neut	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	31	selbst	ADV	*	selbst	-	-	-	2)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	32	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	33	ist	VAFIN	(S*	sein	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	34	seine	PPOSAT	(AP(NP*	sein	sg	fem	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	35	Tochter	NN	*)	tochter	sg	fem	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	36	–	APPO	*)))	–	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	37	nicht	PTKNEG	*))	nicht	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	38	;	$.	*)	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	39	Ist	VAFIN	*)	sein	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	40	ein	ART	*	ein	sg	neut	-	(74
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	41	verzettelt	VVPP	*	verzetteln	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	42	Christenkind	NN	*	christenkind	-	-	(PER*)	74)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	43	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Das	PDS	(VROOT(PSEUDO(S*	der	sg	neut	-	(2)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	er	PPER	*	er	sg	masc	-	(1)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	Dem	PDS	*	der	sg	neut	-	(75)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	ungeachtet	APPR	(PP*	ungeachtet	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	dir	PPER	*)	dir	sg	*	-	(15)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	geben	VVINF	*	geben	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	wollte	VMFIN	*)	wollen	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*))	tempelherr	-	-	-	(15)

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	heftig	ADJD	(VROOT(PSEUDO*	heftig	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Woll	VMFIN	*	woll	-	-	(PER*)	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	oder	KON	*	oder	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	wolle	VMFIN	*	wollen	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	!	$.	*	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Er	PPER	(VROOT(PSEUDO(S*	er	sg	masc	-	(1)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	entdeckt	VVPP	*)	entdecken	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(S(NP*	der	sg	masc	-	(1
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	tolerante	ADJA	*	tolerant	sg	masc	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	Schwätzer	NN	*)	schwätzer	sg	masc	-	1)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	entdeckt	VVPP	*)	entdecken	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	werde	VAFIN	*	werden	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	hinter	APPR	*	hinter	-	-	-	(1
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	diesen	PDAT	*	dieser	sg	masc	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	jüd	NN	*	jüd	sg	masc	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	schen	VVFIN	*	sch	sg	masc	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	Wolf	NE	*	wolf	sg	masc	(PER*)	1)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	Im	APPRART	*	in	sg	masc	-	(76
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	philosoph	NN	*	philosoph	sg	masc	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	schen	ADJA	*	schen	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	Schafpelz	NN	*	schafpelz	-	-	-	76)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	Hunde	NN	*	hund	-	-	-	(77)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	15	schon	ADV	*	schon	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	16	Zu	NN	*	zu	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	17	bringen	VVINF	*	bringen	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	18	wissen	VVINF	*	wissen	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	19	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	20	die	PRELS	*	der	pl	masc	-	(77)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	21	ihn	PPER	*	ihn	sg	masc	-	(1)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	22	zausen	VVINF	*	zausen	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	23	sollen	VMFIN	*	sollen	pl	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	24	!	$.	*	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*))	saladin	-	-	-	(7)

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	ernst	ADJD	(VROOT(PSEUDO*	ernst	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Sei	VAIMP	*	sein	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	ruhig	ADJD	*	ruhig	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	Christ	NE	*	christ	-	-	-	(15)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	!	$.	*	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Was	PWS	*	was	sg	neut	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	?	$.	*	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	ruhig	ADJD	(VROOT(PSEUDO(NP*	ruhig	*	*	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Christ	NN	*)	christ	sg	*	-	(15)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Wenn	KOUS	*	wenn	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	Jud	NE	*	jud	-	-	-	(53)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	Und	NE	*	und	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	Muselmann	NE	*	muselmann	sg	*	-	(78)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	auf	APPR	*	auf	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	Jud	NE	*	jud	-	-	-	(54)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	auf	APPR	*	auf	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	Muselmann	NE	*	muselmann	*	*	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	Bestehen	NN	*	bestehen	sg	neut	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	:	$.	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	15	soll	VMFIN	*	sollen	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	16	allein	ADV	*	allein	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	17	der	ART	*	der	sg	masc	-	(79
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	18	Christ	NN	*	christ	sg	masc	-	79)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	19	den	ART	*	der	sg	masc	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	20	Christen	NN	*	christ	sg	masc	(MISC*)	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	21	Nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	22	machen	VVINF	*	machen	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	23	dürfen	VMINF	*	dürfen	pl	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	24	?	$.	*	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*))	saladin	-	-	-	(7)

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	noch	ADV	(VROOT(PSEUDO(AP*	noch	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	ernster	ADJD	*)	ernst	sg	masc	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ruhig	ADJD	(VROOT(PSEUDO(NP*	ruhig	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	Christ	NE	*	christ	pl	-	-	(105)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*)))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*))	tempelherr	-	-	-	(15)

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	gelassen	VVPP	*	lassen	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(4)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	fühle	VVFIN	*	fühlen	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	Des	ART	(NP*	der	sg	masc	-	(81
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	Vorwurfs	NN	*)	vorwurf	sg	masc	-	81)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	ganze	ADJA	(NP*	ganz	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	Last	NN	*)	last	sg	fem	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	–	KOUS	(S*	–	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	die	ART	(NP*	der	sg	fem	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	Saladin	NN	*)	saladin	sg	fem	-	(7)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	In	APPR	(PP*	in	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	diese	PDAT	*	dieser	sg	fem	-	(80
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	Silbe	NN	*)	silbe	sg	fem	-	80)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	preßt	VVFIN	*))	pressen	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ah	ITJ	(VROOT(PSEUDO(S*	ah	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	wenn	KOUS	*	wenn	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	wüßte	VVFIN	*	wissen	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	Wie	PWAV	(S*	wie	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	Assad	NE	(NP*	assad	sg	*	(PER*)	(82)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	–	NE	(MPN*	–	sg	*	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	Assad	NE	*))	assad	sg	*	-	(82)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	sich	PRF	*	sich	sg	-	-	(82)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	an	APPR	(PP*	an	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	meiner	PPOSAT	*	mein	sg	fem	-	(83|(4)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	Stelle	NN	*)	stelle	sg	fem	-	83)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	15	Hierbei	PROAV	(VP*	hierbei	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	16	genommen	VVPP	*)	nehmen	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	17	hätte	VAFIN	*))	haben	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	18	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nicht	PTKNEG	(VROOT(PSEUDO(VP(AP(CO(AVP*	nicht	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	viel	ADV	*))	viel	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	besser	ADJD	*))	gut	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Vermutlich	ADV	(NP*	vermutlich	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	ganz	ADV	(AP*	ganz	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	so	ADV	*	so	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	brausend	ADJD	*))	brausend	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Doch	KON	(NP*	doch	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	wer	PWS	(S*	wer	sg	masc	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	hat	VAFIN	*	haben	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	Denn	KON	(VP*	denn	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	dich	PRF	*	dich	sg	*	-	(15)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	auch	ADV	(AVP*	auch	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	schon	ADV	*)	schon	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	gelehrt	VVPP	*)	lehren	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	mich	PRF	(VP*	mich	sg	*	-	(7)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	so	ADV	(PP(AVP*	so	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	wie	KOKOM	(NP*	wie	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	er	PPER	*))	er	sg	masc	-	(82)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	15	Mit	APPR	*	mit	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	16	Einem	ART	*	ein	sg	masc	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	17	Worte	NN	*)	wort	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	18	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	19	bestechen	VVINF	*))))	bestechen	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	20	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Freilich	ADV	(VROOT(PSEUDO(DL*	freilich	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Wenn	KOUS	(S*	wenn	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	alles	PIS	*	alle	sg	neut	-	(84)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	sich	PRF	*	sich	sg	-	-	(84)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	verhält	VVFIN	*	verhalten	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	wie	KOKOM	(S*	wie	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	du	PPER	*	du	sg	*	-	(15)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	mir	PPER	*	sich	sg	*	-	(7)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	sagest	VVFIN	*))	sagest	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	:	$.	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	Kann	VMFIN	(S*	können	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	ich	PPER	*	ich	sg	*	-	(7)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	mich	PRF	(VP(NP*	mich	sg	-	-	(7)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	selber	ADV	*)	selber	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	15	kaum	ADV	(PP*	kaum	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	16	in	APPR	*	in	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	17	Nathan	NE	*)	nathan	-	-	-	(1)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	18	finden	VVINF	*)))	finden	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	19	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Indes	NN	(NP*	indes	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	er	PPER	(S*	er	sg	masc	-	(1)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	mein	PPOSAT	(NP*	mein	sg	masc	-	(85|(7)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	Freund	NN	*)))	freund	sg	masc	-	85)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	und	KON	*	und	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	meiner	PPOSAT	(S(NP*	mein	pl	masc	-	(86|(7)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	Freunde	NN	*)	freund	pl	masc	-	86)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	Muß	NN	(VP*	müssen	pl	masc	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	keiner	PIS	*	keiner	sg	masc	-	(86)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	mit	APPR	(PP*	mit	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	dem	ART	*	der	sg	neut	-	(86
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	15	andern	PIS	*)	anderer	-	-	-	86)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	16	hadern	VVINF	*))	hadern	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	17	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO(S*	–	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Laß	NN	*	lassen	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	Dich	PPER	(VP*	dich	sg	*	-	(15)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	weisen	VVINF	*))	weisen	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Geh	XY	*	geh	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	behutsam	ADJD	*	behutsam	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Gib	VVIMP	(VROOT(PSEUDO(S*	geben	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	ihn	PPER	*	ihn	sg	masc	-	(1)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	nicht	PTKNEG	(AVP*	nicht	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	Sofort	ADV	*))	sofort	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	den	ART	(NP*	der	pl	masc	-	(87
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	Schwärmern	NN	*	schwärmer	pl	masc	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	deines	PPOSAT	(NP*	dein	sg	neut	-	(24|(15)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	Pöbels	NN	*	pöbel	sg	neut	-	87)|24)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	Preis	NN	*))	preis	sg	neut	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Verschweig	ADJD	(VROOT(PSEUDO(S*	verschweig	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	was	PWS	*	was	sg	neut	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	deine	PPOSAT	(CVP(VP(NP*	dein	sg	fem	-	(15)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	Geistlichkeit	NN	*)	geistlichkeit	sg	fem	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	an	APPR	(PP*	an	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	ihm	PPER	*)	ihm	sg	masc	-	(1)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	Zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	rächen	VVINF	*))	rächen	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	mir	PPER	(VP*	sich	sg	*	-	(7)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	so	ADV	(AP*	so	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	nahe	ADJD	*)	nahe	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	legen	VVINF	*))	legen	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	15	würde	VAFIN	*)	werden	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	16	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Sei	APPR	(VROOT(PSEUDO(PP*	sein	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	keinem	PIAT	*	kein	sg	masc	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	Juden	NN	*	Jude	sg	masc	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	keinem	PIAT	(S(NP*	kein	sg	masc	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	Muselmanne	NN	*)	muselmann	sg	masc	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	Zum	APPRART	(NP(PP*	zu	sg	masc	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	Trotz	NN	*)	trotz	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	ein	ART	*	ein	-	-	-	(35
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	Christ	NN	*)))	christ	-	-	-	35)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Bald	ADV	(VROOT(PSEUDO(AP*	bald	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	wärs	ADJD	*	wär	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	damit	PROAV	*	damit	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	zu	PTKA	*	zu	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	spät	ADJD	*)	spät	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Doch	KON	*	doch	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Dank	APPR	*	dank	sg	masc	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	der	ART	*	der	sg	masc	-	(88
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	Blutbegier	NN	*	blutbegier	sg	masc	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	des	ART	*	der	sg	masc	-	(8
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	Patriarchen	NN	*	patriarch	sg	masc	-	88)|8)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	Des	ART	*	der	sg	masc	-	(89|(8)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	Werkzeug	NN	*	werkzeug	sg	masc	-	89)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	mir	PPER	*	sich	sg	*	-	(4)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	zu	PTKZU	*	zu	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	werden	VAINF	*	werden	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	graute	ADJA	*	grauen	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	!	$.	*	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wie	PWAV	(VROOT(PSEUDO*	wie	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Du	PPER	(VROOT(PSEUDO(S*	du	sg	*	-	(90|(15)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	kamst	VVFIN	*	kamsen	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	zum	APPRART	(PP*	zu	sg	masc	-	(8
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	Patriarchen	NN	*)	patriarchen	sg	masc	-	8)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	eher	ADV	*	eher	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	als	KOKOM	(PP*	als	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	Zu	APPR	*	zu	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	mir	PPER	*))))	sich	sg	*	-	90)|(7)

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Im	APPRART	(VROOT(PSEUDO(PP*	in	-	-	-	(91
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Sturm	NN	*	sturm	sg	masc	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	der	ART	(NP*	der	sg	masc	-	(92
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	Leidenschaft	NN	*	leidenschaft	sg	masc	-	91)|92)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	im	APPRART	(PP*	in	sg	masc	-	(91
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	Wirbel	NN	*	wirbel	sg	masc	-	91)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	Der	ART	(NP*	der	sg	masc	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	Unentschlossenheit	NN	*))))	unentschlossenheit	sg	masc	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Verzeih	NE	*	verzeih	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Du	PPER	*	du	sg	*	-	(93|(7)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	wirst	VAFIN	*	werden	sg	-	-	93)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	Von	APPR	*	von	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	deinem	PPOSAT	*	dein	sg	masc	-	(82|(7)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	Assad	NN	*	assad	sg	masc	-	82)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	fürcht	VVFIN	*	fürchen	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	ferner	ADV	*	ferner	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	nun	ADV	*	nun	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	Nichts	PIS	*	nichts	*	neut	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	mehr	ADV	*	mehr	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	15	in	APPR	*	in	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	16	mir	PPER	*	sich	sg	*	-	(4)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	17	erkennen	VVINF	*	erkennen	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	18	wollen	VMFIN	*	wollen	pl	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	19	.	$.	*	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wär	XY	*	sein	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	Es	PPER	*	es	sg	neut	-	(90)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	diese	PDAT	*	dieser	sg	fem	-	(93
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	Furcht	NN	*	furcht	sg	fem	-	93)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	selbst	ADV	*	selbst	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	!	$.	*	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Mich	PPER	(VROOT(PSEUDO(S*	mich	sg	*	-	(7)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	dünkt	VVFIN	*	dünken	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	ich	PPER	(CS(S*	ich	sg	*	-	(7)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	weiß	VVFIN	*)	weiß	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	Aus	APPR	(S(NP(AP(PP*	aus	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	welchen	PWAT	*	welcher	pl	masc	-	(94
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	Fehlern	NN	*)	fehler	pl	masc	-	94)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	unsre	ADJA	*)	unsr	sg	-	-	(95|(37)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	Tugend	NN	*)	tugend	-	-	-	95)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	keimt	VVFIN	*)))	keimen	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Pfleg	NE	*	pfleg	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	diese	PDAT	*	dieser	sg	fem	-	(96)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	ferner	ADV	*	ferner	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	nur	ADV	*	nur	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	und	KON	*	und	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	jene	PDS	*	jener	pl	fem	-	(93)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	sollen	VMFIN	*	sollen	pl	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	Bei	APPR	*	bei	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	mir	PPER	*	sich	sg	*	-	(7)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	dir	PPER	*	dir	sg	*	-	(15)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	wenig	PIS	*	wenig	*	*	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	schaden	VVINF	*	schaden	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	.	$.	*	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Aber	KON	*	aber	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	geh	XY	*	geh	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Such	KON	*	such	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	du	PPER	*	du	sg	*	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	nun	ADV	*	nun	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	Nathan	NE	*	nathan	-	-	-	(1)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	wie	PWAV	*	wie	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	er	PPER	*	er	sg	masc	-	(1)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	dich	PPER	*	dich	sg	-	-	(15)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	gesucht	VVPP	*	suchen	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	;	$.	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	Und	KON	*	und	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	bring	VVFIN	*	bring	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	ihn	PPER	*	ihn	sg	masc	-	(1)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	her	PTKVZ	*	her	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	15	.	$.	*	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(7)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	muß	VMFIN	*	müssen	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	euch	PRF	*	euch	pl	*	-	(97)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	doch	ADV	*	doch	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	zusammen	ADV	*	zusammen	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	Verständigen	NN	*)	verständigen	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Wär	NN	*	sein	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	um	APPR	*	um	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	das	ART	*	der	sg	neut	-	(2
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	Mädchen	NN	*	mädchen	sg	neut	-	2)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	dir	PPER	*	dir	sg	*	-	(15)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	Im	APPRART	*	in	sg	neut	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	Ernst	NN	*	ernst	sg	neut	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	zu	PTKZU	*	zu	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	tun	VVINF	*	tun	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	:	$.	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	sei	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	ruhig	ADJD	*	ruhig	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	.	$.	*	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(S*	sie	sg	fem	-	(2)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	dein	ADJD	*)	dein	-	-	-	(102)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Auch	ADV	(VROOT(PSEUDO(S*	auch	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	soll	VMFIN	*	sollen	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	es	PPER	*	es	sg	neut	-	(99)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	Nathan	NE	*	nathan	sg	neut	-	(1)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	schon	ADV	*	schon	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	empfinden	VVINF	(VP*	empfinden	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	daß	KOUS	(S*	daß	-	-	-	(99)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	Er	PPER	(NP*	er	sg	masc	-	(1)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	ohne	APPR	(PP*	ohne	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	Schweinefleisch	NN	*)	schweinefleisch	sg	neut	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	ein	ART	*	ein	sg	neut	-	(71
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	Christenkind	NN	*)	christenkind	sg	neut	(MISC*)	71)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	Erziehen	VVINF	*	erziehen	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	dürfen	VMFIN	*)))	dürfen	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	15	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Geh	XY	*	geh	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(CS(S(NP*	der	sg	masc	-	(15
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Tempelherr	NN	*)	tempelherr	sg	masc	-	15)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	geht	VVFIN	*	gehen	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	ab	PTKVZ	*)	ab	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	und	KON	*	und	-	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	Sittah	NE	(S*	sittah	sg	*	-	(100)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	verläßt	VVFIN	*	verlassen	sg	-	-	-
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	den	ART	(NP*	der	sg	masc	-	(101
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	Sofa	NN	*)))	sofa	sg	masc	-	101)
Nathan_Act4_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

#end document
