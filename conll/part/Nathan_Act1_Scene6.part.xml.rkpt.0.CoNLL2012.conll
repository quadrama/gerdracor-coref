#begin document (Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll); part 000
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(CNP(NP*	der	sg	masc	-	(16
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	Tempelherr	NN	*)	tempelherr	sg	masc	-	16)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	2	und	KON	*	und	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	3	Daja	NE	(NP*	daja	-	-	(PER*)	(0
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	5	die	PRELS	(CS(S*	der	sg	fem	-	(0)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	6	den	ART	(VP(NP*	der	pl	masc	-	(16
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	7	Tempelherrn	NN	*)	tempelherr	pl	masc	-	16)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	8	schon	ADV	(AP(NP*	schon	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	9	eine	ART	*	ein	sg	fem	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	10	Zeit	NN	*)	zeit	sg	fem	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	11	lang	ADJD	*)	lang	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	12	von	APPR	(PP*	von	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	13	weiten	NN	*)	weit	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	14	beobachtet	VVPP	*)	beobachten	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	15	hatte	VAFIN	*)	haben	sg	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	16	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	17	und	KON	*	und	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	18	sich	PRF	(S*	sich	sg	-	-	(0)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	19	nun	ADV	*	nun	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	20	ihm	PPER	*	ihm	sg	neut	-	(16)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	21	nähert	VVFIN	*))))	nähern	sg	-	-	0)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	22	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	Der	ART	*	der	sg	masc	-	(5
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	Klosterbruder	NN	*	klosterbruder	sg	masc	-	5)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	3	wie	PWAV	*	wie	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	4	mich	PPER	*	mich	sg	*	-	(0)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	5	dünkt	VVFIN	*	dünken	sg	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	7	ließ	VVFIN	*	lassen	sg	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	8	in	APPR	*	in	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	9	Der	ART	*	der	sg	fem	-	(17
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	10	besten	ADJA	*	gut	sg	fem	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	11	Laun	NN	*	laun	sg	fem	-	17)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	12	'	$(	*	--	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	13	ihn	PPER	*	ihn	sg	masc	-	(16)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	14	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	15	.	$.	*	--	-	-	-	-

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	Doch	KON	(S*	doch	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	2	muß	VMFIN	*	müssen	sg	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(0)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	4	mein	PPOSAT	(VP(NP*	mein	sg	neut	-	(0)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	5	Paket	NN	*)	paket	sg	neut	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	6	nur	ADV	*	nur	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	7	wagen	VVINF	*))	wagen	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(16
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	16)

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nun	ADV	(VROOT(PSEUDO(S(ISU*	nun	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	2	vortrefflich	ADJD	*))	vortrefflich	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	Lügt	VVFIN	(S*	lügen	sg	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	2	Das	ART	(NP*	der	sg	neut	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	3	Sprichwort	NN	*)	sprichwort	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	4	wohl	ADV	*	wohl	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	5	:	$.	*	--	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	6	daß	KOUS	(S(AVP(S*	daß	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	7	Mönch	NN	(CNP*	mönch	-	-	-	(18)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	8	und	KON	*	und	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	9	Weib	NN	*))	weib	-	-	-	(19)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	11	und	KON	*)	und	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	12	Weib	NN	*))	weib	sg	masc	-	(19)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	13	Und	KON	(NP*	und	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	14	Mönch	NN	*	mönch	sg	masc	-	(18)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	15	des	ART	(NP*	der	sg	masc	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	16	Teufels	NN	*))	teufel	sg	masc	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	17	beide	PIAT	(S(NP*	beide	pl	masc	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	18	Krallen	NN	*)	kralle	pl	masc	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	19	sind	VAFIN	*)	sein	pl	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	20	?	$.	*))	--	-	-	-	-

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	Er	PPER	(VROOT(PSEUDO(S*	er	sg	masc	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	wirft	VVFIN	*	werfen	sg	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	2	mich	PPER	*	mich	sg	*	-	(4)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	3	heut	ADV	*	heut	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	4	aus	APPR	(PP*	aus	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	5	einer	PIS	*)	ein	sg	fem	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	6	in	APPR	(PP*	in	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	7	die	ART	*	der	sg	fem	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	8	andre	ADJA	*))	andre	sg	fem	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	Was	PWS	*	was	sg	neut	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	seh	XY	*	seh	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(0)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	4	?	$.	*	--	-	-	-	-

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	Edler	NE	*	edler	pl	masc	-	(16
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	2	Ritter	NE	*	ritter	pl	masc	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	4	Euch	PPER	*	euch	pl	*	-	16)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	5	?	$.	*	--	-	-	-	-

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	Gott	NN	*	gott	sg	masc	-	(20)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	2	Dank	FM	*	dank	sg	masc	-	(21)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	Gott	NN	(VROOT(PSEUDO*	gott	sg	masc	-	(20)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	tausend	CARD	(NP*	tausend	-	-	-	(21
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	2	Dank	NN	*)	dank	-	-	-	21)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	Wo	PWAV	(S*	wo	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	2	habt	VAFIN	*	haben	pl	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	3	Ihr	PPER	*	ihr	pl	*	-	(16)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	4	denn	ADV	*)	denn	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	5	Die	ART	(S(NP*	der	sg	fem	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	6	ganze	ADJA	*	ganz	sg	fem	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	7	Zeit	NN	*)	zeit	sg	fem	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	8	gesteckt	VVPP	*)	stecken	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	9	?	$.	*))	--	-	-	-	-

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ihr	PPER	(S*	ihr	pl	*	-	(16)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	2	seid	VAFIN	*	sein	pl	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	3	doch	ADV	(VP(AVP*	doch	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	4	wohl	ADV	*)	wohl	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	5	Nicht	PTKNEG	(AP*	nicht	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	6	krank	ADJD	*)	krank	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	7	gewesen	VAPP	*))	sein	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	8	?	$.	*))	--	-	-	-	-

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(16
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	16)

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nein	PTKANT	*	nein	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*	--	-	-	-	-

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	Gesund	ADJD	(VROOT(PSEUDO*	gesund	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	doch	ADV	*	doch	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(16
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	16)

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ja	PTKANT	*	ja	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*	--	-	-	-	-

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wir	PPER	(VROOT(PSEUDO(S*	wir	pl	*	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	waren	VAFIN	*	sein	pl	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	2	Euertwegen	NN	(VP*	euertwegen	pl	masc	-	(16)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	3	wahrlich	ADJD	*	wahrlich	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	4	ganz	ADV	*	ganz	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	5	Bekümmert	VVPP	*))	bekümmert	sg	neut	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(16
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	16)

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	So	ADV	(VROOT(PSEUDO(S*)	so	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ihr	PPER	(VROOT(PSEUDO(S*	ihr	pl	*	-	(16)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	wart	VVFIN	*	sein	pl	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	2	gewiß	ADV	(AP*	gewiß	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	3	verreist	VVPP	*))	verreisen	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(16
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	16)

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	Erraten	NN	(VROOT(PSEUDO*	erraten	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	kamt	VVFIN	*	kamen	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	2	heut	ADV	*	heut	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	3	erst	ADV	*	erst	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	4	wieder	ADV	*)	wieder	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(16
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	16)

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	Gestern	ADV	(VROOT(PSEUDO*	gestern	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	Auch	ADV	(VROOT(PSEUDO(S(NP*	auch	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	Rechas	NE	*	rechas	sg	*	-	(1|(2)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	2	Vater	NN	*)	vater	sg	masc	-	1)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	3	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	4	heut	ADV	(VP*	heut	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	5	angekommen	VVPP	*))	ankommen	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	nun	ADV	*	nun	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	2	darf	VMFIN	*	dürfen	sg	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	3	Recha	NE	*	recha	sg	neut	-	(2)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	4	doch	ADV	*	doch	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	5	wohl	ADV	(VP*	wohl	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	6	hoffen	VVINF	*))	hoffen	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	7	?	$.	*))	--	-	-	-	-

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(16
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	16)

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	Was	PWS	*	was	sg	neut	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	?	$.	*	--	-	-	-	-

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	Warum	PWAV	(VROOT(PSEUDO(S*	warum	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	sie	PPER	*	sie	pl	*	-	(2)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	2	Euch	PPER	(NP*	euch	pl	*	-	(16)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	3	so	ADV	*)	so	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	4	öfters	ADJD	(VP*	öfters	sg	neut	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	5	bitten	VVINF	*	bitten	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	6	lassen	VVINF	*))	lassen	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ihr	PPOSAT	(VROOT(PSEUDO(S(NP*	ihr	sg	masc	-	(1|(2)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	Vater	NN	*)	vater	sg	masc	-	1)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	2	ladet	VVFIN	*	laden	sg	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	3	Euch	PPER	*	euch	pl	*	-	(16)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	4	nun	ADV	*	nun	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	5	selber	ADV	*	selber	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	6	bald	ADV	*	bald	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	7	Aufs	NN	*	auf	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	8	dringlichste	VVFIN	*)	dringlich	pl	neut	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	Er	PPER	(VROOT(PSEUDO(S*	er	sg	masc	-	(1)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	kömmt	VVFIN	*	kömmen	sg	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	2	von	APPR	(PP*	von	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	3	Babylon	NE	*	babylon	-	-	-	(22)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	4	;	$.	*	--	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	5	Mit	APPR	(CO(PP*	mit	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	6	zwanzig	CARD	*	zwanzig	-	-	-	(23
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	7	hochbeladenen	ADJA	*	hochbeladen	pl	*	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	8	Kamelen	NN	*)	kamelen	pl	*	-	23)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	10	Und	KON	(S*	und	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	11	allem	PIS	(NP*	alle	sg	neut	-	(24
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	13	was	PRELS	(S*	was	*	neut	-	(24)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	14	an	APPR	(PP*	an	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	15	edeln	PPOSAT	*	edeln	-	-	-	(25
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	16	Spezereien	NN	*)	spezerei	pl	fem	-	25)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	17	,	$,	*	--	-	-	-	24)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	18	An	APPR	(CPP(PP*	an	pl	fem	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	19	Steinen	NN	*)	stein	pl	fem	-	(26)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	20	und	KON	*	und	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	21	an	APPR	(PP*	an	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	22	Stoffen	NN	(CNP*	stoff	pl	masc	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	23	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	24	Indien	NE	(MPN*	indien	sg	neut	(LOC*)	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	25	Und	NE	*	und	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	26	Persien	NE	*)	persien	sg	neut	(LOC*)	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	27	und	KON	*	und	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	28	Syrien	NE	*)))	syrien	sg	neut	(LOC*)	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	29	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	30	gar	ADV	*	gar	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	31	Sina	NE	(VP(MPN*	sina	sg	neut	(PER*)	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	32	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	33	Kostbares	NE	*)	kostbar	sg	neut	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	34	nur	ADV	*	nur	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	35	gewähren	VVINF	*)))))))	gewähren	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	36	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(16
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	16)

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	Kaufe	VVFIN	*	kaufe	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	nichts	PIS	*	nichts	*	neut	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	2	.	$.	*	--	-	-	-	-

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	Sein	PPOSAT	(VROOT(PSEUDO(S(NP*	sein	sg	neut	-	(27|(1)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	Volk	NN	*)	volk	sg	neut	-	27)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	2	verehret	VVFIN	*	verehren	sg	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	3	ihn	PPER	*	ihn	sg	masc	-	(1)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	4	als	APPR	(PP*	als	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	5	einen	ART	*	ein	sg	masc	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	6	Fürsten	NN	*))	fürst	sg	masc	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	Doch	KON	(VROOT(PSEUDO(S*	doch	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	daß	KOUS	(S*	daß	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	2	es	PPER	*	es	sg	neut	-	(27)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	3	ihn	PPER	*	ihn	sg	masc	-	(1)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	4	den	ART	(NP*	der	sg	masc	-	(28
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	5	Weisen	NN	*	weise	sg	masc	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	6	Nathan	NE	*)	nathan	sg	masc	-	28)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	7	nennt	VVFIN	*)	nennen	sg	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	9	Und	KON	(S*	und	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	10	nicht	PTKNEG	(NP*	nicht	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	11	vielmehr	ADV	*	vielmehr	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	12	den	ART	*	der	pl	fem	-	(29
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	13	Reichen	NN	*)	reiche	pl	fem	-	29)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	15	hat	VAFIN	*	haben	sg	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	16	mich	PPER	(VP*	mich	sg	*	-	(0)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	17	oft	ADV	*	oft	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	18	Gewundert	VVPP	*)))	gewundert	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	19	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(16
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	16)

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	Seinem	PPOSAT	(VROOT(PSEUDO(S(NP*	sein	sg	masc	-	(27|(1)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	Volk	NN	*)	volk	sg	masc	-	27)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	2	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	3	reich	ADJD	(CO*	reich	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	4	und	KON	*	und	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	5	weise	ADV	*)	weise	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	6	Vielleicht	ADV	*	vielleicht	sg	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	7	das	ART	(NP*	der	sg	neut	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	8	nämliche	ADJA	*))	nämlich	sg	neut	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	Vor	APPR	*	vor	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	allen	PIS	*	aller	pl	masc	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	2	aber	ADV	*	aber	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	3	Hätt	NN	*	hätt	-	-	-	(27
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	4	'	$(	*	--	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	5	s	PPER	*	--	-	-	-	27)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	6	ihn	PPER	*	ihn	sg	masc	-	(1)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	7	den	ART	*	der	sg	masc	-	(30
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	8	Guten	NN	*	gute	sg	masc	-	30)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	9	nennen	VVINF	*	nennen	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	10	müssen	VMINF	*	müssen	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	11	.	$.	*	--	-	-	-	-

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	Denn	KON	(VROOT(PSEUDO(S*	denn	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ihr	PPER	*	ihr	pl	*	-	(16)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	2	stellt	VVFIN	*	stellen	sg	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	3	Euch	PPER	*	euch	pl	*	-	(16)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	4	gar	ADV	(AVP*	gar	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	5	nicht	PTKNEG	*)	nicht	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	6	vor	PTKVZ	*	vor	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	8	wie	PWAV	(S(AP*	wie	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	9	gut	ADJD	*)	gut	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	10	er	PPER	*	er	sg	masc	-	(1)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	11	ist	VAFIN	*))	sein	sg	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	Als	KOUS	*	als	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	er	PPER	*	er	sg	masc	-	(1)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	2	erfuhr	VVFIN	*	erfahren	sg	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	4	wie	PWAV	*	wie	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	5	viel	PIAT	*	viel	*	*	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	6	Euch	PPER	*	euch	pl	*	-	(16)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	7	Recha	NE	*	recha	-	-	-	(2)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	8	schuldig	ADJD	*	schuldig	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	9	:	$.	*	--	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	10	Was	PWS	*	was	sg	neut	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	11	hätt	VAFIN	*	hätt	sg	neut	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	12	'	$(	*	--	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	14	in	APPR	*	in	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	15	diesem	PDAT	*	dieser	sg	masc	-	(31
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	16	Augenblicke	NN	*	augenblick	sg	masc	-	31)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	17	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	18	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	19	Er	PPER	*	er	sg	masc	-	(1)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	20	alles	PIS	*	alle	sg	neut	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	21	Euch	PPER	*	euch	sg	neut	-	(16)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	22	getan	VVPP	*	tun	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	23	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	24	gegeben	VVPP	*	geben	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	25	!	$.	*	--	-	-	-	-

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(16
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	16)

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ei	XY	*	ei	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	Versuchts	NN	(VROOT(PSEUDO(CS*	versucht	-	-	-	(32)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	und	KON	*	und	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	2	kommt	VVFIN	*	kommen	sg	-	-	(32
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	3	und	KON	*	und	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	4	seht	VVFIN	*)	sehen	sg	-	-	32)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(16
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	16)

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	Was	PWS	*	was	sg	neut	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	denn	ADV	*	denn	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	wie	PWAV	(VROOT(PSEUDO(S*	wie	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	schnell	ADJD	(PP*	schnell	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	2	Ein	ART	*	ein	sg	masc	-	(31
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	3	Augenblick	NN	*	augenblick	sg	masc	-	31)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	4	vorüber	APPO	*)	vorüber	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	5	ist	VAFIN	*)	sein	sg	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	Hätt	NN	*	hätt	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	'	$(	*	--	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(0)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	4	Wenn	KOUS	*	wenn	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	5	er	PPER	*	er	sg	masc	-	(1)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	6	so	ADV	*	so	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	7	gut	ADV	*	gut	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	8	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	9	wär	ADJD	*	sein	sg	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	10	'	$(	*	--	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	12	es	PPER	*	es	sg	neut	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	13	mir	PPER	*	sich	sg	*	-	(0)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	14	so	ADV	*	so	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	15	lange	ADJA	*	lang	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	16	Bei	NN	*	bei	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	17	ihm	PPER	*	ihm	sg	masc	-	(1)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	18	gefallen	VVINF	*	gefallen	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	19	lassen	VVINF	*	lassen	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	20	?	$.	*	--	-	-	-	-

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	Meint	VVFIN	(VROOT(PSEUDO(S*	meint	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ihr	PPER	*	ihr	pl	*	-	(16)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	2	etwa	ADV	*	etwa	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	4	Ich	PPER	(S*	ich	sg	*	-	(0)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	5	fühle	VVFIN	*	fühlen	sg	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	6	meinen	PPOSAT	(NP*	mein	sg	masc	-	(0)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	7	Wert	NN	*	wert	sg	masc	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	8	als	APPR	(PP*	als	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	9	Christin	NN	*))	christin	sg	fem	-	(33)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	10	nicht	PTKNEG	*))	nicht	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	11	?	$.	*))	--	-	-	-	-

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	Auch	ADV	*	auch	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	mir	PPER	*	sich	sg	*	-	(0)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	2	wards	VAFIN	*	ward	-	-	-	(34)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	3	vor	APPR	*	vor	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	4	der	ART	*	der	sg	fem	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	5	Wiege	NN	*	wiege	sg	fem	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	6	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	7	gesungen	VVPP	*	singen	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	9	Daß	KOUS	*	daß	-	-	-	(34
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	10	ich	PPER	*	ich	sg	*	-	(0)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	11	nur	ADV	*	nur	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	12	darum	PROAV	*	darum	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	13	meinem	PPOSAT	*	mein	sg	masc	-	(35|(0)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	14	Ehgemahl	NN	*	ehgemahl	sg	masc	-	35)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	15	Nach	APPR	*	nach	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	16	Palästina	NE	*	palästina	sg	neut	(MISC*)	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	17	folgen	VVINF	*	folgen	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	18	würd	VAFIN	*	würd	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	19	'	$(	*	--	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	20	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	21	um	KOUI	*	um	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	22	da	ADV	*	da	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	23	Ein	ART	*	ein	sg	neut	-	(2
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	24	Judenmädchen	NN	*	judenmädchen	sg	neut	-	2)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	25	zu	PTKZU	*	zu	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	26	erziehn	VVINF	*	erziehn	-	-	-	34)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	27	Mein	PPOSAT	*	mein	sg	-	-	(35|(0)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	28	lieber	ADJA	*	lieber	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	29	Ehgemahl	NN	*	ehgemahl	sg	fem	-	35)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	30	ein	ART	*	ein	sg	masc	-	(37
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	31	edler	ADJA	*	edel	sg	masc	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	32	Knecht	NN	*	knecht	sg	masc	-	37)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	33	In	APPR	*	in	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	34	Kaiser	NN	*	kaiser	*	*	-	(38
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	35	Friedrichs	NE	*	friedrich	sg	masc	-	38)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	36	Heere	NE	*	heer	pl	neut	-	36)

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(16
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	16)

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	Von	APPR	*	von	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	Geburt	NN	*	geburt	sg	masc	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	2	Ein	ART	*	ein	sg	masc	-	(37
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	3	Schweizer	NN	*	schweizer	sg	masc	(MISC*)	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	5	dem	PRELS	*	der	sg	masc	-	(37)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	6	die	ART	*	der	sg	fem	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	7	Ehr	NN	*	ehr	sg	fem	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	8	'	$(	*	--	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	9	und	KON	*	und	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	10	Gnade	NN	*	gnade	sg	fem	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	11	ward	VVFIN	*	werden	sg	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	12	Mit	APPR	*	mit	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	13	Seiner	PPOSAT	*	sein	sg	fem	-	(38|(37)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	14	Kaiserlichen	NN	*	kaiserlich	sg	fem	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	15	Majestät	NE	*	majestät	sg	fem	-	38)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	16	In	APPR	*	in	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	17	einem	ART	*	ein	sg	neut	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	18	Flusse	NN	*	flusse	sg	neut	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	19	zu	PTKZU	*	zu	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	20	ersaufen	VVINF	*	ersaufen	-	-	-	37)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	21	Wie	KOKOM	*	wie	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	22	vielmal	ADV	*	vielmal	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	23	habt	VAFIN	*	haben	pl	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	24	Ihr	PPER	*	ihr	pl	*	-	(0)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	25	mir	PPER	*	sich	sg	*	-	(4)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	26	das	PDS	*	der	sg	neut	-	(36)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	27	schon	ADV	*	schon	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	28	erzählt	VVFIN	*	erzählen	sg	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	29	?	$.	*	--	-	-	-	-

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	Hört	VVFIN	(VROOT(PSEUDO(S*	hören	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ihr	PPER	*	ihr	pl	*	-	(0)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	2	denn	ADV	(VP*	denn	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	3	gar	ADV	(AVP*	gar	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	4	nicht	PTKNEG	*)	nicht	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	5	auf	APPR	(PP*	auf	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	6	mich	PPER	*)	mich	sg	*	-	(4)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	7	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	8	verfolgen	VVINF	*)))	verfolgen	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	9	?	$.	*))	--	-	-	-	-

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	Verfolgen	NN	(VROOT(PSEUDO*	verfolgen	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	lieber	ADJA	(VROOT(PSEUDO(NP*	lieb	-	-	-	(20
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	Gott	NN	*)	gott	-	-	-	20)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(16
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	16)

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ja	PTKANT	*	ja	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	2	ja	PTKANT	*	ja	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	4	verfolgen	VVINF	*	verfolgen	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	5	.	$.	*	--	-	-	-	-

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(4)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	will	VMFIN	*	wollen	sg	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	2	nun	ADV	(AVP*	nun	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	3	einmal	ADV	*)	einmal	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	4	Euch	PPER	*	euch	-	-	-	(0)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	5	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	6	weiter	ADV	(NP*	weiter	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	7	sehn	CARD	*))	sehn	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	8	!	$.	*))	--	-	-	-	-

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nicht	PTKNEG	(VROOT(PSEUDO(VP*	nicht	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	hören	VVINF	*)	hören	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	Will	VMFIN	*	wollen	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	von	APPR	*	von	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	2	Euch	PPER	*	euch	sg	*	-	(0)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	3	an	APPR	*	an	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	4	eine	ART	*	ein	sg	fem	-	(39
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	5	Tat	NN	*	tat	sg	fem	-	39)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	6	Nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	7	fort	PTKVZ	*	fort	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	8	und	KON	*	und	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	9	fort	VVFIN	*	fort	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	10	erinnert	VVFIN	*	erinnern	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	11	sein	VAINF	*	sein	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	13	bei	APPR	*	bei	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	14	der	PRELS	*	der	sg	fem	-	(39)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	15	Ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	16	nichts	PIS	*	nichts	*	neut	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	17	gedacht	VVPP	*	denken	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	18	;	$.	*	--	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	19	die	ART	*	der	pl	*	-	(39)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	20	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	21	wenn	KOUS	*	wenn	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	22	ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	23	drüber	PROAV	*	drüber	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	24	denke	VVFIN	*	denken	sg	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	25	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	26	Zum	APPRART	*	zu	sg	neut	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	27	Rätsel	NN	*	rätsel	sg	neut	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	28	von	APPR	*	von	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	29	mir	PPER	*	sich	sg	*	-	(4)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	30	selbst	ADV	*	selbst	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	31	mir	PPER	*	sich	sg	*	-	(4)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	32	wird	VAFIN	*	werden	sg	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	33	.	$.	*	--	-	-	-	-

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	Zwar	ADV	*	zwar	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	möcht	VMFIN	*	möchen	sg	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	3	Ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	4	sie	PPER	*	sie	*	*	-	(39)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	5	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	6	gern	ADV	*	gern	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	7	bereuen	VVINF	*	bereuen	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	8	.	$.	*	--	-	-	-	-

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	Aber	KON	*	aber	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	seht	VVFIN	*	sehen	sg	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	2	;	$.	*	--	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	3	Eräugnet	NN	*	eräugnet	sg	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	4	so	ADV	*	so	-	-	-	(40
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	5	ein	ART	*	ein	sg	masc	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	6	Fall	NN	*	fall	sg	masc	-	40)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	7	sich	PRF	*	sich	sg	-	-	(40)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	8	wieder	ADV	*	wieder	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	9	:	$.	*	--	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	10	Ihr	PPER	*	ihr	pl	*	-	(0)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	11	Seid	NN	*	sein	pl	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	12	Schuld	NN	*	schuld	sg	fem	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	14	wenn	KOUS	*	wenn	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	15	ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	16	so	ADV	*	so	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	17	rasch	ADJD	*	rasch	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	18	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	19	handle	PTKVZ	*	handeln	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	20	;	$.	*	--	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	21	wenn	KOUS	*	wenn	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	22	Ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	23	mich	PRF	*	mich	sg	-	-	(4)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	24	vorher	ADV	*	vorher	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	25	erkund	ADJD	*	erkund	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	26	'	$(	*	--	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	27	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	28	–	$(	*	–	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	29	und	KON	*	und	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	30	brennen	VVFIN	*	brennen	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	31	lasse	VVFIN	*	lassen	sg	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	32	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	33	Was	PWS	*	was	sg	neut	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	34	brennt	VVFIN	*	brennen	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	35	.	$.	*	--	-	-	-	-

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	Bewahre	ADJA	(VROOT(PSEUDO(NP*	bewahr	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	Gott	NN	*	gott	-	-	-	(20)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*)))	--	-	-	-	-

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(16
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	16)

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	Von	APPR	*	von	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	heut	ADV	*	heut	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	3	an	APPR	*	an	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	4	tut	VVFIN	*	tun	sg	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	5	Mir	NE	*	sich	sg	*	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	6	den	ART	*	der	sg	masc	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	7	Gefallen	NN	*	gefalle	sg	masc	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	8	wenigstens	ADV	*	wenigstens	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	10	und	KON	*	und	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	11	kennt	VVFIN	*	kennen	sg	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	12	Mich	PPER	*	mich	sg	*	-	(4)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	13	weiter	ADV	*	weiter	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	14	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	15	.	$.	*	--	-	-	-	-

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	bitt	VVFIN	*	bitt	sg	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	3	Euch	PPER	*	euch	pl	*	-	(0)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	4	drum	ADV	*	drum	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	5	.	$.	*	--	-	-	-	-

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	Auch	ADV	(VROOT(PSEUDO(S*	auch	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	laßt	VVFIN	*	lassen	pl	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	2	Den	NE	(NP*	der	sg	masc	-	(1
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	3	Vater	NN	*)	vater	sg	masc	-	1)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	4	mir	PPER	*	sich	sg	*	-	(4)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	5	vom	APPRART	(PP*	von	sg	masc	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	6	Halse	NN	*))	halse	sg	masc	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	Jud	NE	*	jud	-	-	-	(41)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	'	$(	*	--	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	2	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	3	Jude	NN	*	jude	sg	fem	-	(42)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	4	.	$.	*	--	-	-	-	-

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(4)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	bin	VAFIN	*	sein	sg	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	2	ein	ART	(NP*	ein	sg	masc	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	3	plumper	ADJA	*	plumper	sg	masc	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	4	Schwab	NN	*))	schwab	sg	masc	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	Des	ART	(VROOT(PSEUDO(S(NP*	der	-	-	-	(43|(2
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	Mädchens	NE	*	mädchen	sg	*	-	2)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	2	Bild	NN	*)	bild	sg	neut	-	43)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	3	Ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	4	längst	ADV	*	längst	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	5	aus	APPR	(PP*	aus	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	6	meiner	PPOSAT	*	mein	sg	fem	-	(44|(4)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	7	Seele	NN	*)	seele	sg	fem	-	44)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	8	;	$.	*	--	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	9	wenn	KOUS	(S*	wenn	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	10	es	PPER	*	es	sg	neut	-	(43)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	11	je	ADV	*	je	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	12	Da	ADV	*	da	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	13	war	VAFIN	*))	sein	sg	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	14	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	Doch	KON	*	doch	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	Eures	NE	*	dein	sg	neut	-	(49)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	2	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	3	aus	APPR	*	aus	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	4	ihrer	PPOSAT	*	ihr	sg	fem	-	(46)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	5	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	6	.	$.	*	--	-	-	-	-

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(16
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	16)

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	solls	VMFIN	*	solls	-	-	-	(45)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	2	nun	ADV	*	nun	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	3	aber	ADV	*	aber	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	4	da	PTKVZ	*)	da	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	was	PWS	(VROOT(PSEUDO(S*	was	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	solls	VMFIN	*)	solls	-	-	-	(45)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wer	PWS	(VROOT(PSEUDO(S*	wer	sg	masc	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	weiß	VVFIN	*)	weiß	sg	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	Die	ART	(VROOT(PSEUDO(S(NP*	der	pl	fem	-	(47
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	Menschen	NN	*)	mensch	pl	fem	-	47)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	2	sind	VAFIN	*	sein	pl	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	3	nicht	PTKNEG	(AVP*	nicht	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	4	immer	ADV	*)	immer	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	6	wie	PWAV	(S*	wie	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	7	sie	PPER	*	sie	pl	*	-	(47)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	8	scheinen	VVFIN	*))	scheinen	pl	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(16
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	16)

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	Doch	KON	(VROOT(PSEUDO(S*	doch	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	selten	ADJD	(NP*	selten	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	2	etwas	PIAT	*	etwas	*	neut	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	3	Bessers	NN	*))	besser	sg	masc	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	Er	PPER	(VROOT(PSEUDO(S*	er	sg	masc	-	(16)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	geht	VVFIN	*)	gehen	sg	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wartet	VVIMP	(VROOT(PSEUDO(S*	warten	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	doch	ADV	*)	doch	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	eilt	VVFIN	*	eilen	pl	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	2	Ihr	PPER	*)	ihr	pl	*	-	(16)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(16
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	16)

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	Weib	NN	(VROOT(PSEUDO(S*	weib	-	-	-	(0)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	2	macht	VVFIN	*	machen	sg	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	3	mir	PPER	*	sich	sg	*	-	(4)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	4	die	ART	(NP*	der	pl	fem	-	(48
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	5	Palmen	NN	*)	palme	pl	fem	-	48)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	6	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	7	Verhaßt	NN	*	verhaßt	sg	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	9	worunter	PWS	(S*	worunter	sg	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	10	ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	11	so	ADV	*	so	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	12	gern	ADV	(AVP*	gern	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	13	sonst	ADV	*)	sonst	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	14	wandle	VVFIN	*))	wandeln	sg	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	15	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	So	ADV	*	so	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	geh	XY	*	geh	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	4	du	PPER	*	du	sg	masc	-	(16
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	5	deutscher	ADJA	*	deutsch	sg	masc	(MISC*)	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	6	Bär	NN	*	bär	sg	masc	-	16)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	7	!	$.	*	--	-	-	-	-

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	so	ADV	*	so	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	geh	XY	*	geh	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*	--	-	-	-	-

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	Und	KON	(S*	und	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	2	doch	ADV	*	doch	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	3	Muß	VMFIN	*	müssen	sg	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	4	ich	PPER	*	ich	sg	*	-	(0)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	5	die	ART	(NP*	der	sg	fem	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	6	Spur	NN	*))	Spur	sg	fem	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	7	des	ART	(VP(NP*	der	sg	masc	-	(16
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	8	Tieres	NN	*)	tier	sg	masc	-	16)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	9	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	10	verlieren	VVINF	*)	verlieren	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(S*	sie	sg	fem	-	(0)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	1	geht	VVFIN	*	gehen	sg	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	2	ihm	PPER	*	ihm	sg	masc	-	(16)
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	3	von	APPR	(PP*	von	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	4	weiten	PIS	*)	weiten	pl	fem	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	5	nach	PTKVZ	*)	nach	-	-	-	-
Nathan_Act1_Scene6.part.xml.rkpt.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

#end document
