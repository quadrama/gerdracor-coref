#begin document (Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll); part 000
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	0	Damöt	NE	(VROOT(PSEUDO*	damöt	-	-	_stage	-	-	-	-	(6)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	_stage	-	-	-	-	-

Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	0	Sylvia	NE	(VROOT(PSEUDO*	sylvia	-	-	_stage	(PER*)	-	-	-	(5)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	_stage	-	-	-	-	-

Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	0	DAMÖT	NE	(VROOT(PSEUDO*	damöt	-	-	damöt	(LOC*)	-	-	-	(6|(6)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	damöt	-	-	-	-	6)

Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	damöt	-	-	-	-	(6)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	1	sterbe	VVFIN	*	sterben	sg	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	2	ohne	APPR	(PP*	ohne	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	3	dich	PPER	*))	dich	sg	-	damöt	-	-	-	-	(5)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	4	.	$.	*))	--	-	-	damöt	-	-	-	-	-

Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	0	SYLVIA	NE	(VROOT(PSEUDO*	sylvia	sg	neut	sylvia	(PER*)	-	-	-	(5|(5)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	sylvia	-	-	-	-	5)

Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	0	Allein	ADV	(VROOT(PSEUDO(S*	allein	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	2	was	PWS	*	was	sg	neut	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	3	sprach	VVFIN	*	sprechen	sg	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	4	Montan	NE	*)	montan	-	-	sylvia	-	-	-	-	(0)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	5	?	$.	*))	--	-	-	sylvia	-	-	-	-	-

Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	0	DAMÖT	NE	(VROOT(PSEUDO*	damöt	-	-	damöt	(LOC*)	-	-	-	(6|(6)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	damöt	-	-	-	-	6)

Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	0	Montan	NE	(VROOT(PSEUDO(MPN*	montan	-	-	damöt	-	-	-	-	(0)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	1	?	$.	*)))	--	-	-	damöt	-	-	-	-	-

Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	0	was	PWS	*	was	sg	neut	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	1	er	PPER	*	er	sg	masc	damöt	-	-	-	-	(0)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	2	gesagt	VVPP	*	sagen	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	3	?	$.	*	--	-	-	damöt	-	-	-	-	-

Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	0	es	PPER	(VROOT(PSEUDO(S*	es	sg	neut	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	1	geht	VVFIN	*	gehen	sg	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	2	unmöglich	ADJD	*	unmöglich	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	3	an	PTKVZ	*)	an	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	4	.	$.	*))	--	-	-	damöt	-	-	-	-	-

Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	0	Er	PPER	(VROOT(PSEUDO(S*	er	sg	masc	damöt	-	-	-	-	(0)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	1	sprach	VVFIN	*	sprechen	sg	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	2	:	$.	*	--	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	3	Ich	PPER	(S*	ich	sg	*	damöt	-	-	-	-	(6)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	4	solle	VMFIN	*	sollen	sg	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	5	dich	PRF	*	dich	sg	-	damöt	-	-	-	-	(5)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	6	,	$,	*	--	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	7	du	PPER	(S*	du	sg	*	damöt	-	-	-	-	(5)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	8	solltest	VVFIN	*	sollen	sg	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	9	mich	PPER	(VP*	mich	sg	*	damöt	-	-	-	-	(6)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	10	verlassen	VVINF	*))))	verlassen	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	11	.	$.	*))	--	-	-	damöt	-	-	-	-	-

Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	0	Wenn	KOUS	*	wenn	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	1	dieses	PDAT	*	dieser	sg	neut	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	2	möglich	ADJD	*	möglich	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	3	wär	VAFIN	*	sein	sg	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	4	,	$,	*	--	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	5	so	ADV	*	so	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	6	müßten	VMFIN	*	müssen	pl	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	7	wir	PPER	*	wir	pl	*	damöt	-	-	-	-	(8)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	8	uns	PRF	*	uns	pl	*	damöt	-	-	-	-	(8)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	9	hassen	VVFIN	*	hassen	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	10	.	$.	*	--	-	-	damöt	-	-	-	-	-

Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	0	SYLVIA	NE	(VROOT(PSEUDO*	sylvia	sg	neut	sylvia	(PER*)	-	-	-	(5|(5)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	sylvia	-	-	-	-	5)

Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	0	Nein	PTKANT	(VROOT(PSEUDO(S*	nein	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	2	hassen	VVFIN	*	hassen	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	3	werd	VAFIN	(AVP(S*	werden	sg	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	4	ich	PPER	*	ich	sg	*	sylvia	-	-	-	-	(5)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	5	dich	PRF	*	dich	sg	-	sylvia	-	-	-	-	(6)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	6	,	$,	*	--	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	7	so	ADV	(S(AP*	so	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	8	lang	ADJD	*)	lang	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	9	ich	PPER	*	ich	sg	*	sylvia	-	-	-	-	(5)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	10	lebe	VVFIN	*))	leben	sg	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	11	,	$,	*	--	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	12	nie	ADV	*))	nie	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	13	.	$.	*))	--	-	-	sylvia	-	-	-	-	-

Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	0	DAMÖT	NE	(VROOT(PSEUDO*	damöt	-	-	damöt	(LOC*)	-	-	-	(6|(6)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	damöt	-	-	-	-	6)

Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	1	ich	PPER	*	ich	sg	masc	damöt	-	-	-	-	(6)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	2	dich	PRF	*	dich	sg	-	damöt	-	-	-	-	(5)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	3	gleichfalls	ADV	*	gleichfalls	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	4	nicht	PTKNEG	*)	nicht	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	5	.	$.	*))	--	-	-	damöt	-	-	-	-	-

Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	0	SYLVIA	NE	(VROOT(PSEUDO*	sylvia	sg	neut	sylvia	(PER*)	-	-	-	(5|(5)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	sylvia	-	-	-	-	5)

Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	1	raschelt	VVFIN	*	rascheln	sg	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	2	dort	ADV	*)	dort	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	3	?	$.	*))	--	-	-	sylvia	-	-	-	-	-

Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	0	Flieh	NE	(VROOT(PSEUDO(S*	flieh	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	2	flieh	VVFIN	*)	flieh	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	3	.	$.	*))	--	-	-	sylvia	-	-	-	-	-

Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	0	DAMÖT	NE	(VROOT(PSEUDO*	damöt	-	-	damöt	(LOC*)	-	-	-	(6|(6)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	damöt	-	-	-	-	6)

Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	0	Nein	PTKANT	*	nein	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	2	nein	PTKANT	*	nein	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	3	,	$,	*	--	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	4	es	PPER	*	es	sg	neut	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	5	ist	VAFIN	*	sein	sg	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	6	mein	PPOSAT	*	mein	sg	masc	damöt	-	-	-	-	(6)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	7	Hund	NN	*	hund	sg	masc	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	8	.	$.	*	--	-	-	damöt	-	-	-	-	-

Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	0	SYLVIA	NE	(VROOT(PSEUDO*	sylvia	sg	neut	sylvia	(PER*)	-	-	-	(5|(5)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	sylvia	-	-	-	-	5)

Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	0	So	ADV	(VROOT(PSEUDO(S*	so	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	1	muß	VMFIN	*	müssen	sg	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	2	ich	PPER	*	ich	sg	*	sylvia	-	-	-	-	(5)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	3	von	APPR	(VP(PP*	von	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	4	dir	PPER	*)	dir	sg	*	sylvia	-	-	-	-	(6)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	5	gehen	VVINF	*))	gehen	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	6	.	$.	*))	--	-	-	sylvia	-	-	-	-	-

Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	0	DAMÖT	NE	(VROOT(PSEUDO*	damöt	-	-	damöt	(LOC*)	-	-	-	(6|(6)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	damöt	-	-	-	-	6)

Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	0	Ach	ITJ	(VROOT(PSEUDO(S*	ach	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	2	warte	VVFIN	*	warten	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	3	doch	ADV	*)	doch	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	4	!	$.	*))	--	-	-	damöt	-	-	-	-	-

Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	0	Montan	NE	(VROOT(PSEUDO(S*	montan	-	-	damöt	-	-	-	-	(0)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	1	wird	VAFIN	*	werden	sg	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	2	uns	PPER	(VP*	uns	pl	*	damöt	-	-	-	-	(8)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	3	so	ADV	*	so	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	4	gleich	ADV	*	gleich	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	5	nicht	PTKNEG	*	nicht	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	6	sehen	VVINF	*))	sehen	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	7	.	$.	*))	--	-	-	damöt	-	-	-	-	-

Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	0	Ich	PPER	(VROOT(PSEUDO(CS(S*	ich	sg	*	damöt	-	-	-	-	(6)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	1	weiß	VVFIN	*	weiß	sg	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	2	nicht	PTKNEG	*	nicht	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	3	,	$,	*	--	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	4	was	PWS	(S*	was	sg	neut	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	5	er	PPER	*	er	sg	masc	damöt	-	-	-	-	(0)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	6	da	ADV	*	da	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	7	mit	APPR	(PP*	mit	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	8	seinem	PPOSAT	*	sein	sg	masc	damöt	-	-	-	-	(0)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	9	Unglück	NN	*)	unglück	sg	masc	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	10	will	VMFIN	*	wollen	sg	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	11	;	$.	*	--	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	12	Ich	PPER	(S*	ich	sg	*	damöt	-	-	-	-	(6)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	13	sag	VVIMP	*	sögen	sg	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	14	ihm	PPER	*	ihm	sg	masc	damöt	-	-	-	-	(0)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	15	frey	VVFIN	*	frey	-	-	damöt	(PER*)	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	16	–	PPER	*	–	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	17	Allein	ADV	(AVP*	allein	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	18	,	$,	*	--	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	19	wenn	KOUS	(S*	wenn	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	20	er	PPER	*	er	sg	masc	damöt	-	-	-	-	(0)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	21	spricht	VVFIN	*)))))	sprechen	sg	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	22	,	$,	*	--	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	23	schweig	VVFIN	(S*	schweig	sg	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	24	ich	PPER	*	ich	sg	*	damöt	-	-	-	-	(6)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	25	still	ADJD	*))	still	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	26	.	$.	*))	--	-	-	damöt	-	-	-	-	-

Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	0	Es	PPER	(VROOT(PSEUDO(S*	es	sg	neut	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	1	ist	VAFIN	*	sein	sg	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	2	,	$,	*	--	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	3	als	APPR	(S(S*	als	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	4	wenn	KOUS	*	wenn	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	5	ich	PPER	*	ich	sg	*	damöt	-	-	-	-	(6)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	6	ihm	PPER	*	ihm	sg	masc	damöt	-	-	-	-	(0)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	7	,	$,	*	--	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	8	was	PRELS	(S*	was	sg	neut	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	9	er	PPER	*	er	sg	masc	damöt	-	-	-	-	(0)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	10	sagt	VVFIN	*))	sagen	sg	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	11	,	$,	*	--	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	12	müßte	VMFIN	*	müssen	sg	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	13	glauben	VVINF	*))	glauben	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	14	.	$.	*))	--	-	-	damöt	-	-	-	-	-

Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	0	Doch	KON	(VROOT(PSEUDO(S*	doch	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	2	meine	PPOSAT	(NP*	mein	sg	fem	damöt	-	-	-	-	(5|(6)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	3	Sylvia	NE	*))	sylvia	sg	fem	damöt	-	-	-	-	5)|(5)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	4	!	$.	*))	--	-	-	damöt	-	-	-	-	-

Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	0	dich	PRF	*	dich	sg	-	damöt	-	-	-	-	(5)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	1	soll	VMFIN	*	sollen	sg	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	2	er	PPER	*	er	sg	masc	damöt	-	-	-	-	(0)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	3	mir	PPER	*	sich	sg	*	damöt	-	-	-	-	(6)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	4	nicht	PTKNEG	*	nicht	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	5	rauben	VVFIN	*	rauben	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	6	.	$.	*	--	-	-	damöt	-	-	-	-	-

Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	0	SYLVIA	NE	(VROOT(PSEUDO*	sylvia	sg	neut	sylvia	(PER*)	-	-	-	(5|(5)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	sylvia	-	-	-	-	5)

Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	0	Dich	APPR	(VROOT(PSEUDO(AVP(PP*	dich	sg	*	sylvia	-	-	-	-	(6)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	1	mir	PPER	*)	sich	sg	*	sylvia	-	-	-	-	(5)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	2	desgleichen	ADV	*	desgleichen	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	3	nicht	PTKNEG	*)	nicht	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	4	.	$.	*))	--	-	-	sylvia	-	-	-	-	-

Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	0	Allein	ADV	(VROOT(PSEUDO(S*	allein	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	2	wo	PWAV	*	wo	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	3	fliehn	VVFIN	*	fliehn	pl	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	4	wir	PPER	*	wir	pl	*	sylvia	-	-	-	-	(8)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	5	hin	PTKVZ	*)	hin	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	6	?	$.	*))	--	-	-	sylvia	-	-	-	-	-

Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	0	Ich	PPER	(VROOT(PSEUDO(CS(S*	ich	sg	*	sylvia	-	-	-	-	(5)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	1	seh	VVFIN	*	seh	sg	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	2	ihm	PPER	*	ihm	sg	masc	sylvia	-	-	-	-	(0)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	3	stets	ADV	*	stets	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	4	um	APPR	(PP*	um	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	5	mich	PPER	*))	mich	sg	*	sylvia	-	-	-	-	(5)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	6	,	$,	*	--	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	7	ich	PPER	(S*	ich	sg	*	sylvia	-	-	-	-	(5)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	8	bin	VAFIN	*	sein	sg	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	9	auch	ADV	*	auch	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	10	,	$,	*	--	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	11	wo	PWAV	(S*	wo	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	12	ich	PPER	*	ich	sg	*	sylvia	-	-	-	-	(5)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	13	bin	VAFIN	*)))	sein	sg	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	14	.	$.	*))	--	-	-	sylvia	-	-	-	-	-

Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	0	Sein	PPOSAT	(VROOT(PSEUDO(S(NP*	sein	sg	neut	sylvia	-	-	-	-	(0)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	1	ernsthaft	ADJD	*	ernsthaft	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	2	Reden	NN	*)	rede	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	3	macht	VVFIN	*	machen	sg	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	4	,	$,	*	--	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	5	daß	KOUS	(S*	daß	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	6	ich	PPER	*	ich	sg	*	sylvia	-	-	-	-	(5)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	7	mich	PRF	*	mich	sg	-	sylvia	-	-	-	-	(5)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	8	vor	APPR	(PP*	vor	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	9	ihm	PPER	*)	ihm	sg	masc	sylvia	-	-	-	-	(0)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	10	scheue	VVFIN	*	scheue	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	11	;	$.	*	--	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	12	Doch	KON	(S*	doch	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	13	folg	VVFIN	*	folg	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	14	ich	PPER	*	ich	sg	*	sylvia	-	-	-	-	(5)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	15	dießmal	ADV	*	dießmal	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	16	ihm	PPER	*	ihm	sg	masc	sylvia	-	-	-	-	(0)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	17	,	$,	*	--	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	18	so	ADV	(S*	so	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	19	folg	VVFIN	*	folg	sg	masc	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	20	der	ART	(NP*	der	sg	masc	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	21	That	NE	*)	that	sg	masc	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	22	die	ART	(NP*	der	sg	fem	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	23	Reue	NN	*)))))	reue	sg	fem	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	24	.	$.	*))	--	-	-	sylvia	-	-	-	-	-

Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	0	DAMÖT	NE	(VROOT(PSEUDO*	damöt	-	-	damöt	(LOC*)	-	-	-	(6|(6)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	damöt	-	-	-	-	6)

Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	0	Verhindre	NN	(VROOT(PSEUDO(CO(NP*	verhindre	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	1	diesen	PDAT	(NP*	dieser	sg	masc	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	2	Schmerz	NN	*))	schmerz	sg	masc	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	3	und	KON	*	und	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	4	folg	VVFIN	(S*	folg	sg	masc	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	5	ihm	PPER	*	ihm	sg	masc	damöt	-	-	-	-	(0)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	6	diesmal	ADV	(AVP*	diesmal	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	7	nicht	PTKNEG	*)))	nicht	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	8	.	$.	*))	--	-	-	damöt	-	-	-	-	-

Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	0	Hier	ADV	*	hier	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	1	frage	VVFIN	*	fragen	sg	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	2	nur	ADV	*	nur	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	3	dein	PPOSAT	*	dein	-	-	damöt	-	-	-	-	(9|(5)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	4	Herz	NN	*	herz	-	-	damöt	-	-	-	-	9)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	5	,	$,	*	--	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	6	und	KON	*	und	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	7	thu	VVFIN	*	thu	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	8	,	$,	*	--	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	9	was	PWS	*	was	sg	neut	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	10	dieses	PDAT	*	dieser	sg	neut	damöt	-	-	-	-	(9)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	11	spricht	VVFIN	*	sprechen	sg	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	12	.	$.	*	--	-	-	damöt	-	-	-	-	-

Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	0	SYLVIA	NE	(VROOT(PSEUDO*	sylvia	sg	neut	sylvia	(PER*)	-	-	-	(5|(5)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	sylvia	-	-	-	-	5)

Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	0	Mein	PPOSAT	*	mein	sg	masc	sylvia	-	-	-	-	(9|(5)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	1	Herz	NN	*	herz	sg	masc	sylvia	-	-	-	-	9)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	2	spricht	VVFIN	*	sprechen	sg	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	3	:	$.	*	--	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	4	Widersteh	NE	*	widersteh	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	5	dem	PDS	*	der	sg	neut	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	6	,	$,	*	--	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	7	was	PWS	*	was	sg	neut	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	8	Montan	NE	*	montan	sg	neut	sylvia	-	-	-	-	(0)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	9	begehret	VVFIN	*	begehren	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	10	–	XY	*	–	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	11	–	XY	*	–	-	-	sylvia	-	-	-	-	-

Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	0	DAMÖT	NE	(VROOT(PSEUDO*	damöt	-	-	damöt	(LOC*)	-	-	-	(6|(6)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	damöt	-	-	-	-	6)

Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	0	Und	KON	(VROOT(PSEUDO*	und	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	1	sey	VVIMP	(AP(S*	sey	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	2	Damöten	NN	*)	damöte	sg	neut	damöt	-	-	-	-	(6)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	3	gut	ADJD	*)	gut	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	4	.	$.	*))	--	-	-	damöt	-	-	-	-	-

Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	0	SYLVIA	NE	(VROOT(PSEUDO*	sylvia	sg	neut	sylvia	(PER*)	-	-	-	(5|(5)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	sylvia	-	-	-	-	5)

Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	0	Dein	PPOSAT	*	dein	sg	masc	sylvia	-	-	-	-	(10|(6)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	1	Wunsch	NN	*	wunsch	sg	masc	sylvia	-	-	-	-	10)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	2	war	VAFIN	*	sein	sg	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	3	dir	PPER	*	dir	sg	*	sylvia	-	-	-	-	(6)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	4	gewähret	VVPP	*	gewähret	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	5	,	$,	*	--	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	6	Eh	NN	*	eh	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	7	du	PPER	*	du	sg	*	sylvia	-	-	-	-	(6)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	8	ihn	PPER	*	ihn	sg	masc	sylvia	-	-	-	-	(10)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	9	noch	ADV	*	noch	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	10	gethan	ADJD	*	gethan	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	11	;	$.	*	--	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	12	mein	PPOSAT	*	mein	sg	masc	sylvia	-	-	-	-	(11|(5)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	13	Wunsch	NN	*	wunsch	sg	masc	sylvia	-	-	-	-	11)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	14	ist	VAFIN	*	sein	sg	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	15	deinem	PPOSAT	*	dein	sg	masc	sylvia	-	-	-	-	(6)|(10)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	16	gleich	ADJD	*	gleich	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	17	.	$.	*	--	-	-	sylvia	-	-	-	-	-

Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	0	DAMÖT	NE	(VROOT(PSEUDO*	damöt	-	-	damöt	(LOC*)	-	-	-	(6|(6)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	damöt	-	-	-	-	6)

Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	0	Mein	PPOSAT	(VROOT(PSEUDO(S(NP*	mein	sg	neut	damöt	-	-	-	-	(10|(6)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	1	Wunsch	NN	*)	wunsch	sg	neut	damöt	-	-	-	-	10)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	2	kam	VVFIN	*	kommen	sg	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	3	ihm	PPER	*	ihm	sg	*	damöt	-	-	-	-	(11)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	4	zuvor	ADV	*)	zuvor	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	5	.	$.	*))	--	-	-	damöt	-	-	-	-	-

Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	0	SYLVIA	NE	(VROOT(PSEUDO*	sylvia	sg	neut	sylvia	(PER*)	-	-	-	(5|(5)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	sylvia	-	-	-	-	5)

Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	0	Damöt	NE	(VROOT(PSEUDO(AP(S(NP*	damöt	-	-	sylvia	-	-	-	-	(6)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	2	Montan	NE	*)	montan	sg	neut	sylvia	-	-	-	-	(0)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	3	kömmt	VVFIN	*)	kömmen	sg	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	4	,	$,	*	--	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	5	weich	ADJD	*)	weich	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	6	!	$.	*))	--	-	-	sylvia	-	-	-	-	-

Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	0	DAMÖT	NE	(VROOT(PSEUDO*	damöt	-	-	damöt	(LOC*)	-	-	-	(6|(6)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	damöt	-	-	-	-	6)

Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	0	Wo	PWAV	(VROOT(PSEUDO(S*	wo	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	1	kömmt	VVFIN	*	kömmen	sg	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	2	er	PPER	*	er	sg	masc	damöt	-	-	-	-	(0)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	3	denn	ADV	*)	denn	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	4	?	$.	*))	--	-	-	damöt	-	-	-	-	-

Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	0	Ach	ITJ	(VROOT(PSEUDO(S*)	ach	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	1	Kind	NN	*	kind	sg	neut	damöt	-	-	-	-	(5)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	2	!	$.	*))	--	-	-	damöt	-	-	-	-	-

Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	0	du	PPER	(VROOT(PSEUDO(S*	du	sg	*	damöt	-	-	-	-	(5)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	1	willst	VMFIN	*	wollen	sg	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	2	,	$,	*	--	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	3	ich	PPER	(S*	ich	sg	*	damöt	-	-	-	-	(6)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	4	soll	VMFIN	*	sollen	sg	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	5	dich	PRF	(VP*	dich	sg	-	damöt	-	-	-	-	(5)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	6	meiden	VVINF	*)	meiden	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	7	;	$.	*	--	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	8	Ich	PPER	(S*	ich	sg	*	damöt	-	-	-	-	(6)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	9	muß	VMFIN	*	müssen	sg	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	10	,	$,	*	--	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	11	weil	KOUS	(S*	weil	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	12	du	PPER	*	du	sg	*	damöt	-	-	-	-	(5)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	13	es	PPER	*	es	sg	neut	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	14	willst	VMFIN	*))))	wollen	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	15	–	XY	*	–	sg	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	16	ich	PPER	*	ich	sg	*	damöt	-	-	-	-	(6)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	17	muß	VMFIN	*	müssen	sg	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	18	–	XY	*	–	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	19	ja	ADV	(S*	ja	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	20	–	VVFIN	*	–	sg	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	21	ich	PPER	(S*	ich	sg	*	damöt	-	-	-	-	(6)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	22	muß	VMFIN	*	müssen	sg	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	23	scheiden	VVINF	*))	scheiden	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	24	.	$.	*))	--	-	-	damöt	-	-	-	-	-

Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	0	Will	NE	(VROOT(PSEUDO(S*	wollen	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	1	gehen	VVFIN	*)	gehen	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	2	.	$.	*))	--	-	-	damöt	-	-	-	-	-

Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	0	SYLVIA	NE	(VROOT(PSEUDO*	sylvia	sg	neut	sylvia	(PER*)	-	-	-	(5|(5)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	sylvia	-	-	-	-	5)

Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	0	Nun	ADV	(VROOT(PSEUDO(S*	nun	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	1	,	$,	*	--	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	2	mußt	VMFIN	*	mussen	sg	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	3	du	PPER	*	du	sg	*	sylvia	-	-	-	-	(6)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	4	denn	ADV	*	denn	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	5	gleich	ADV	(NP*	gleich	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	6	gehn	CARD	*))	gehn	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	7	?	$.	*))	--	-	-	sylvia	-	-	-	-	-

Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	1	Damöt	NN	*	damöt	-	-	sylvia	-	-	-	-	(6)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	2	!	$.	*))	--	-	-	sylvia	-	-	-	-	-

Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	0	DAMÖT	NE	(VROOT(PSEUDO*	damöt	-	-	damöt	(LOC*)	-	-	-	(6|(6)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	damöt	-	-	-	-	6)

Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	0	Du	PPER	(VROOT(PSEUDO(S*	du	sg	*	damöt	-	-	-	-	(5)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	1	willst	VMFIN	*	wollen	sg	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	2	es	PPER	*	es	sg	neut	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	3	ja	ADV	*)	ja	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	4	.	$.	*))	--	-	-	damöt	-	-	-	-	-

Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	0	SYLVIA	NE	(VROOT(PSEUDO*	sylvia	sg	neut	sylvia	(PER*)	-	-	-	(5|(5)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	sylvia	-	-	-	-	5)

Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	0	Montan	NE	(VROOT(PSEUDO(S*	montan	-	-	sylvia	-	-	-	-	(0)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	1	will	VMFIN	*	wollen	sg	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	2	es	PPER	*	es	sg	neut	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	3	ja	ADV	*	ja	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	4	nu	ADV	*)	nu	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	5	.	$.	*))	--	-	-	sylvia	-	-	-	-	-

Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	0	Damöt	NE	(VROOT(PSEUDO(MPN*	damöt	-	-	sylvia	-	-	-	-	(6)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	1	!	$.	*)))	--	-	-	sylvia	-	-	-	-	-

Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	0	DAMÖT	NE	(VROOT(PSEUDO*	damöt	-	-	damöt	(LOC*)	-	-	-	(6|(6)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	damöt	-	-	-	-	6)

Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	0	Ach	ITJ	(VROOT(PSEUDO(S*)	ach	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	1	Sylvia	NE	*	sylvia	-	-	damöt	-	-	-	-	(5)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	2	!	$.	*))	--	-	-	damöt	-	-	-	-	-

Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	0	Doris	NE	(VROOT(PSEUDO(CNP*	doris	-	-	damöt	(PER*)	-	-	-	(2)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	1	und	KON	*	und	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	2	Chloe	NN	*)	chloe	-	-	damöt	-	-	-	-	(1)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	3	kömmt	VVFIN	*	kömmen	sg	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	4	.	$.	*))	--	-	-	damöt	-	-	-	-	-

Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	0	Montan	NE	(VROOT(PSEUDO(S*	montan	-	-	damöt	-	-	-	-	(0)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	1	kömmt	VVFIN	*	kömmen	sg	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	2	auch	ADV	*	auch	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	3	mit	APPR	(PP*	mit	-	-	damöt	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	4	ihnen	PPER	*))	ihnen	pl	*	damöt	-	-	-	-	(12)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	5	.	$.	*))	--	-	-	damöt	-	-	-	-	-

Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	0	SYLVIA	NE	(VROOT(PSEUDO*	sylvia	sg	neut	sylvia	(PER*)	-	-	-	(5|(5)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	sylvia	-	-	-	-	5)

Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	0	O	NE	(VROOT(PSEUDO(NP*	O	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	1	weh	ADV	*)	weh	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	2	!	$.	*))	--	-	-	sylvia	-	-	-	-	-

Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	0	er	PPER	(VROOT(PSEUDO(S*	er	sg	masc	sylvia	-	-	-	-	(0)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	1	ist	VAFIN	*	sein	sg	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	2	schon	ADV	(AVP*	schon	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	3	da	ADV	*)	da	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	4	,	$,	*	--	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	5	mich	PRF	*	mich	sg	*	sylvia	-	-	-	-	(5)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	6	schrecken	VVFIN	*)	schrecken	pl	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	7	seine	PPOSAT	(NP*	sein	pl	fem	sylvia	-	-	-	-	(0)
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	8	Minen	NN	*)	mine	pl	fem	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	9	.	$.	*))	--	-	-	sylvia	-	-	-	-	-

Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	0	Komm	VVIMP	*	komm	pl	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	1	!	$.	*	--	-	-	sylvia	-	-	-	-	-

Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	0	Wollen	NN	(VROOT(PSEUDO*	wolle	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	1	gehen	VVFIN	*	gehen	-	-	sylvia	-	-	-	-	-
Schaeferinsel_Act3_Scene4.part.xml.st5r.0.Dirndl.conll	000	2	.	$.	*))	--	-	-	sylvia	-	-	-	-	-

#end document
