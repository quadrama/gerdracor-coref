#begin document (Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll); part 000
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*))	nathan	-	-	nathan	-	-	-	-	(1)

Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	0	allein	ADV	(VROOT(PSEUDO*	allein	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	1	.	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	0	Hm	XY	*	hm	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	1	!	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	0	hm	XY	*	hm	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	1	!	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	*	–	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	1	wunderlich	ADJD	*	wunderlich	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	2	!	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	1	Wie	PWAV	(S*	wie	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	2	ist	VAFIN	*	sein	sg	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	3	Mir	PPER	*	sich	sg	*	nathan	-	-	-	-	(1)
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	4	denn	ADV	*)	denn	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	5	?	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	1	Was	PWS	(S*	was	sg	neut	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	2	will	VMFIN	*)	wollen	sg	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	3	der	ART	(NP*	der	sg	masc	nathan	-	-	-	-	(7
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	4	Sultan	NN	*)	sultan	sg	masc	nathan	-	-	-	-	7)
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	5	?	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	0	was	PWS	*	was	sg	neut	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	1	?	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	1	Ich	PPER	(S*	ich	sg	*	nathan	-	-	-	-	(1)
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	2	bin	VAFIN	*	sein	sg	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	3	Auf	APPR	(VP(PP*	auf	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	4	Geld	NN	*)	geld	sg	neut	nathan	-	-	-	-	(15)
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	5	gefaßt	VVPP	*))	fassen	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	6	;	$.	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	7	und	KON	(S*	und	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	8	er	PPER	*	er	sg	masc	nathan	-	-	-	-	(7)
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	9	will	VMFIN	*	wollen	sg	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	10	–	ART	(NP*	–	*	*	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	11	Wahrheit	NN	*))	wahrheit	sg	fem	nathan	-	-	-	-	(16)
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	12	.	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	0	Wahrheit	NN	(VROOT(PSEUDO*	wahrheit	sg	fem	nathan	-	-	-	-	(16)
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	1	!	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	1	will	VMFIN	*	wollen	sg	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	2	sie	PPER	*	sie	sg	fem	nathan	-	-	-	-	(16)
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	3	so	ADV	(CAVP*	so	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	4	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	5	–	KON	*	–	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	6	so	ADV	(AP*	so	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	7	bar	ADJD	(CAP*	bar	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	8	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	9	so	ADV	(AP*	so	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	10	blank	ADJD	*))))	blank	-	-	nathan	(PER*)	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	11	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	12	–	$.	*	–	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	13	als	KOKOM	(S*	als	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	14	ob	KOUS	*	ob	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	15	Die	ART	(NP*	der	sg	fem	nathan	-	-	-	-	(16
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	16	Wahrheit	NN	*)	wahrheit	sg	fem	nathan	-	-	-	-	16)
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	17	Münze	NN	*	münze	sg	-	nathan	-	-	-	-	(17)
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	18	wäre	VAFIN	*))	sein	sg	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	19	!	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	1	Ja	PTKANT	(S*	ja	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	2	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	3	wenn	KOUS	*	wenn	-	-	nathan	-	-	-	-	(18
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	4	noch	ADV	(NP*	noch	-	-	nathan	-	-	-	-	18)
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	5	Uralte	ADJA	*	uralt	pl	neut	nathan	-	-	-	-	(17
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	6	Münze	NN	*)	münze	sg	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	7	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	8	die	PRELS	(VP*	der	pl	*	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	9	gewogen	VVPP	*)	wiegen	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	10	ward	VVFIN	*)	werden	-	-	nathan	-	-	-	-	17)
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	11	!	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	1	Das	PDS	(S*	der	sg	neut	nathan	-	-	-	-	(18)
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	2	ginge	VVFIN	*)	gehen	sg	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	3	noch	ADV	*	noch	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	4	!	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	0	Allein	ADV	*	allein	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	1	so	ADV	*	so	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	2	neue	ADJA	*	neu	sg	*	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	3	Münze	NN	*	münze	sg	*	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	4	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	5	Die	PWS	*	der	sg	fem	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	6	nur	ADV	*	nur	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	7	der	ART	*	der	sg	masc	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	8	Stempel	NN	*	stempel	sg	masc	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	9	macht	VVFIN	*	machen	sg	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	10	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	11	die	PRELS	*	der	sg	fem	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	12	man	PIS	*	man	sg	*	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	13	aufs	APPRART	*	auf	sg	neut	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	14	Brett	NN	*	brett	sg	neut	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	15	Nur	ADV	*	nur	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	16	zählen	VVINF	*	zählen	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	17	darf	VMFIN	*	dürfen	sg	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	18	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	19	das	PDS	*	der	sg	neut	nathan	-	-	-	-	(17)
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	20	ist	VAFIN	*	sein	sg	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	21	sie	PPER	*	sie	sg	fem	nathan	-	-	-	-	(16)
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	22	doch	ADV	*	doch	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	23	nun	ADV	*	nun	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	24	nicht	PTKNEG	*	nicht	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	25	!	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	0	Wie	PWAV	(VROOT(PSEUDO(S*	wie	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	1	Geld	NN	(NP*	geld	sg	neut	nathan	-	-	-	-	(15)
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	2	in	APPR	(PP*	in	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	3	Sack	NE	*))	sack	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	4	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	5	so	ADV	(S*	so	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	6	striche	VVFIN	*	strich	sg	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	7	man	PIS	*	man	sg	*	nathan	-	-	-	-	(19)
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	8	in	APPR	(PP*	in	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	9	Kopf	NN	*)	kopf	sg	masc	nathan	-	-	-	-	(20)
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	10	Auch	ADV	(NP*	auch	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	11	Wahrheit	NN	*)	wahrheit	sg	fem	nathan	-	-	-	-	(16)
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	12	ein	PTKVZ	*))	ein	sg	neut	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	13	?	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	0	Wer	PWS	(VROOT(PSEUDO(S*	wer	sg	masc	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	1	ist	VAFIN	*	sein	sg	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	2	denn	ADV	*	denn	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	3	hier	ADV	*	hier	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	4	der	ART	(NP*	der	sg	masc	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	5	Jude	NN	*))	jude	sg	masc	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	6	?	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	0	Ich	PPER	(VROOT(PSEUDO(CNP*	ich	sg	*	nathan	-	-	-	-	(1)
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	1	oder	KON	*	oder	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	2	er	PPER	*)	er	sg	masc	nathan	-	-	-	-	(7)
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	3	?	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	*	–	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	1	Doch	KON	*	doch	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	2	wie	PWAV	*	wie	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	3	?	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	0	Sollt	VMFIN	*	sollen	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	1	'	$(	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	2	er	PPER	*	er	sg	masc	nathan	-	-	-	-	(7)
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	3	auch	ADV	*	auch	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	4	wohl	ADV	*	wohl	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	5	Die	ART	*	der	sg	fem	nathan	-	-	-	-	(16
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	6	Wahrheit	NN	*	wahrheit	sg	fem	nathan	-	-	-	-	16)
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	7	nicht	PTKNEG	*	nicht	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	8	in	APPR	*	in	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	9	Wahrheit	NN	*	wahrheit	sg	fem	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	10	fodern	VVINF	*	fodern	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	11	?	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	*	–	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	1	Zwar	ADV	*	zwar	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	2	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	3	Zwar	ADV	*	zwar	sg	masc	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	4	der	ART	*	der	sg	masc	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	5	Verdacht	NN	*	verdacht	sg	masc	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	6	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	7	daß	KOUS	*	daß	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	8	er	PPER	*	er	sg	masc	nathan	-	-	-	-	(7)
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	9	die	ART	*	der	sg	fem	nathan	-	-	-	-	(16
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	10	Wahrheit	NN	*	wahrheit	sg	fem	nathan	-	-	-	-	16)
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	11	nur	ADV	*	nur	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	12	Als	APPR	*	als	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	13	Falle	NN	*	fall	sg	fem	nathan	-	-	-	-	(21)
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	14	brauche	VVFIN	*	brauchen	sg	fem	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	15	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	16	wär	VAFIN	*	sein	sg	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	17	'	$(	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	18	auch	ADV	*	auch	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	19	gar	ADV	*	gar	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	20	zu	PTKA	*	zu	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	21	klein	ADJD	*	klein	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	22	!	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	1	Zu	APPR	(NP(PP*	zu	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	2	klein	ADJD	*))	klein	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	3	?	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	1	Was	PWS	(S*	was	sg	neut	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	2	ist	VAFIN	*	sein	sg	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	3	für	APPR	(AP(CPP(PP*	für	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	4	einen	ART	*	ein	sg	masc	nathan	-	-	-	-	(22
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	5	Großen	NN	*)	groß	sg	masc	nathan	-	-	-	-	22)
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	6	denn	KON	*	denn	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	7	Zu	NN	*)	zu	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	8	klein	ADJD	*))	klein	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	9	?	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	1	Gewiß	PTKANT	(S*	gewiß	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	2	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	3	gewiß	ADV	*	gewiß	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	4	:	$.	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	5	er	PPER	*	er	sg	masc	nathan	-	-	-	-	(7)
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	6	stürzte	VVFIN	*	stürzen	sg	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	7	mit	APPR	(PP*	mit	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	8	Der	ART	*	der	sg	fem	nathan	-	-	-	-	(23
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	9	Türe	NN	*))	türe	sg	fem	nathan	-	-	-	-	23)
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	10	so	ADV	(PP*	so	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	11	ins	APPRART	*	in	sg	neut	nathan	-	-	-	-	(1
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	12	Haus	NN	*)	haus	sg	neut	nathan	-	-	-	-	1)
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	13	!	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	0	Man	PIS	(VROOT(PSEUDO(S*	man	sg	*	nathan	-	-	-	-	(19)
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	1	pocht	VVFIN	*	pochen	sg	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	2	doch	ADV	*	doch	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	3	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	4	hört	VVFIN	(S*	hören	sg	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	5	Doch	NE	*	doch	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	6	erst	ADV	*	erst	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	7	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	8	wenn	KOUS	(S*	wenn	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	9	man	PIS	(NP*	man	sg	*	nathan	-	-	-	-	(19)
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	10	als	APPR	(PP*	als	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	11	Freund	NN	*))	freund	sg	masc	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	12	sich	PRF	*	sich	sg	-	nathan	-	-	-	-	(19)
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	13	naht	VVFIN	*)))	nahen	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	14	.	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	1	Ich	PPER	*	ich	sg	*	nathan	-	-	-	-	(1)
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	2	muß	VMFIN	*	müssen	sg	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	3	Behutsam	NN	(NP*	behutsam	sg	masc	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	4	gehn	CARD	*)	gehn	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	5	!	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	*	–	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	1	Und	KON	*	und	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	2	wie	PWAV	*	wie	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	3	?	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	0	wie	PWAV	*	wie	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	1	das	PDS	*	der	sg	neut	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	2	?	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	1	So	ADV	(AVP*	so	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	2	ganz	ADV	*)	ganz	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	3	Stockjude	NN	(S(VP(VP*	stockjude	-	-	nathan	-	-	-	-	(24)
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	4	sein	VAINF	*)	sein	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	5	zu	PTKZU	(VZ*	zu	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	6	wollen	VMINF	*))	wollen	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	7	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	8	geht	VVFIN	*	gehen	sg	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	9	schon	ADV	*	schon	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	10	nicht	PTKNEG	*)	nicht	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	11	.	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	1	Und	KON	(NP(AVP(CAVP*	und	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	2	ganz	ADV	*	ganz	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	3	und	KON	*	und	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	4	gar	ADV	*)	gar	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	5	nicht	PTKNEG	*)	nicht	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	6	Jude	NN	*	jude	sg	masc	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	7	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	8	geht	VVFIN	(S*	gehen	sg	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	9	noch	ADV	*	noch	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	10	minder	ADV	*))	minder	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	11	.	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	0	Denn	KON	(VROOT(PSEUDO(S*	denn	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	1	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	2	wenn	KOUS	*	wenn	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	3	kein	PIAT	(NP*	kein	sg	masc	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	4	Jude	NN	*)	jude	sg	masc	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	5	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	6	dürft	VVFIN	(S*	dürfen	sg	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	7	er	PPER	*	er	sg	masc	nathan	-	-	-	-	(7)
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	8	mich	PRF	(VP*	mich	sg	-	nathan	-	-	-	-	(1)
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	9	nur	ADV	*	nur	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	10	fragen	VVINF	*))	fragen	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	11	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	12	Warum	PWAV	(S*	warum	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	13	kein	PIAT	(NP*	kein	sg	masc	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	14	Muselmann	NN	*)))	muselmann	sg	masc	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	15	?	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	*	–	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	1	Das	PDS	*	der	sg	neut	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	2	wars	FM	*	war	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	3	!	$.	*	--	-	-	nathan	-	-	-	-	-

Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	0	Das	PDS	(VROOT(PSEUDO(S*	der	sg	neut	nathan	-	-	-	-	(25)
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	1	kann	VMFIN	*	können	sg	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	2	Mich	PPER	(VP*	mich	sg	*	nathan	-	-	-	-	(1)
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	3	retten	VVINF	*))	retten	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	4	!	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	1	Nicht	PTKNEG	(S*	nicht	sg	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	2	die	ART	(S(NP*	der	sg	fem	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	3	Kinder	NN	*)	kind	sg	fem	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	4	bloß	VVFIN	*)	bloß	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	5	,	$,	*	--	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	6	speist	VVFIN	*	speisen	sg	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	7	man	PIS	*	man	sg	*	nathan	-	-	-	-	(19)
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	8	Mit	APPR	(PP*	mit	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	9	Märchen	NN	*)	märchen	sg	*	nathan	-	-	-	-	(26)
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	10	ab	PTKVZ	*)	ab	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	11	.	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	1	Er	PPER	(S*	er	sg	masc	nathan	-	-	-	-	(7)
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	2	kömmt	VVFIN	*)	kömmen	sg	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	3	.	$.	*))	--	-	-	nathan	-	-	-	-	-

Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	0	Er	PPER	(VROOT(PSEUDO(S*	er	sg	masc	nathan	-	-	-	-	(7)
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	1	komme	VVFIN	*	kommen	sg	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	2	nur	ADV	*)	nur	-	-	nathan	-	-	-	-	-
Nathan_Act3_Scene6.part.xml.rkpt.0.Dirndl.conll	000	3	!	$.	*))	--	-	-	nathan	-	-	-	-	-

#end document
