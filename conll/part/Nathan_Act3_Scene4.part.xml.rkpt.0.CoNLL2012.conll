#begin document (Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll); part 000
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Szene	NN	(VROOT(PSEUDO(S*	szene	sg	fem	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	:	$.	*	--	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	ein	ART	(NP*	ein	sg	masc	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	Audienzsaal	NN	*	audienzsaal	sg	masc	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	in	APPR	(PP*	in	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	dem	ART	*	der	sg	neut	-	(15
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	Palaste	NN	*	palaste	sg	neut	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	des	ART	(NP*	der	sg	masc	-	(7
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	Saladin	NN	*))))	saladin	sg	masc	-	15)|7)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Saladin	NE	(VROOT(PSEUDO(CNP*	saladin	sg	*	-	(7)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	und	KON	*	und	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	Sittah	NE	*)	sittah	sg	*	-	(16)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*))	saladin	-	-	-	(7)

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	im	APPRART	(VROOT(PSEUDO(CPP(PP*	in	sg	masc	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Hereintreten	NN	*)	hereintreten	sg	masc	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	gegen	APPR	(PP*	gegen	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	die	ART	*	der	sg	fem	-	(17
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	Türe	NN	*))	türe	sg	fem	-	17)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Hier	ADV	(VROOT(PSEUDO(S*	hier	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	bringt	VVFIN	*	bringen	sg	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	den	ART	(NP*	der	sg	masc	-	(1
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	Juden	NN	*)	Jude	sg	masc	(MISC*)	1)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	her	PTKVZ	*	her	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	so	ADV	(S*	so	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	bald	ADV	*	bald	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	er	PPER	*	er	sg	masc	-	(1)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	kömmt	VVFIN	*))	kömmen	sg	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Er	PPER	(VROOT(PSEUDO(S*	er	sg	masc	-	(1)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	scheint	VVFIN	*	scheinen	sg	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	sich	PRF	(VP*	sich	sg	-	-	(1)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	eben	ADV	(AVP*	eben	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	nicht	PTKNEG	*)	nicht	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	übereilen	VVINF	*)))	übereilen	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	SITTAH	NE	(VROOT(PSEUDO*	sittah	-	-	-	(16
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	16)

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Er	PPER	(VROOT(PSEUDO(S*	er	sg	masc	-	(1)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	war	VAFIN	*	sein	sg	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	auch	ADV	*	auch	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	wohl	ADV	*	wohl	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	bei	APPR	(PP*	bei	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	der	ART	*	der	sg	fem	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	Hand	NN	*)	hand	sg	fem	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	nicht	PTKNEG	(VP*	nicht	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	gleich	ADV	*	gleich	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	Zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	finden	VVINF	*)))	finden	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Schwester	NN	(VROOT(PSEUDO*	schwester	sg	masc	-	(16)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Schwester	NN	(VROOT(PSEUDO*	schwester	sg	masc	-	(16)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	SITTAH	NE	(VROOT(PSEUDO*	sittah	-	-	-	(16
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	16)

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Tust	VVFIN	(VROOT(PSEUDO(S*	tust	sg	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	du	PPER	*	du	sg	*	-	(7)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	doch	ADV	*	doch	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	Als	APPR	(S*	als	-	-	-	(18
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	stünde	VVFIN	*	stehen	sg	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	dir	PPER	*	dir	sg	*	-	(7)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	ein	ART	(NP*	ein	sg	neut	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	Treffen	NN	*)	treffen	sg	neut	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	vor	PTKVZ	*))	vor	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	18)

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO*	und	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	das	ART	(NP*	der	sg	neut	-	(18)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	Mit	APPR	(PP*	mit	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	Waffen	NN	*)	waffe	pl	fem	-	(19
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	die	PRELS	(S*	der	sg	fem	-	(19)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	ich	PPER	*	ich	sg	*	-	(7)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	nicht	PTKNEG	(VP(VP*	nicht	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	gelernt	VVPP	*)	lernen	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	führen	VVINF	*))))	führen	-	-	-	19)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(CS(S*	ich	sg	*	-	(7)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	soll	VMFIN	*	sollen	sg	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	mich	PRF	(VP*	mich	sg	-	-	(7)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	stellen	VVINF	*))	stellen	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	soll	VMFIN	(S*	sollen	sg	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	besorgen	VVINF	(VP*	besorgen	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	lassen	VVINF	*	lassen	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	Soll	VMFIN	(S*	sollen	pl	fem	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	Fallen	NN	(VP*	falle	pl	fem	-	(20|(19)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	legen	VVINF	*)	legen	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	;	$.	*	--	-	-	-	20)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	soll	VMFIN	(S*	sollen	sg	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	auf	APPR	(VP(PP*	auf	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	15	Glatteis	NN	*)	glatteis	sg	masc	-	(19)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	16	führen	VVINF	*))))))	führen	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	17	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wenn	KOUS	*	wenn	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	hätt	VAFIN	*	hätt	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(7)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	das	PDS	*	der	sg	neut	-	(20)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	gekonnt	VVPP	*	gekonnt	sg	neut	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	?	$.	*	--	-	-	-	-

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wo	PWAV	*	wo	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	hätt	VAFIN	*	hätt	pl	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(7)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	das	ART	*	der	sg	neut	-	(20)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	Gelernt	NN	*	gelernt	sg	neut	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	?	$.	*	--	-	-	-	-

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Und	KON	*	und	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	soll	VMFIN	*	sollen	sg	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	das	PDS	*	der	sg	neut	-	(20)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	alles	PIS	*	alle	sg	neut	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	ah	VVFIN	*	ah	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	wozu	PWAV	*	wozu	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	?	$.	*	--	-	-	-	-

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wozu	PWAV	(VROOT(PSEUDO*	wozu	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Um	KOUI	(NP(VP*	um	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	Geld	NN	*	geld	sg	neut	-	(21)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	fischen	VVINF	*))	fischen	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	Geld	NN	*)	geld	sg	neut	-	(21)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Um	APPR	(PP*	um	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	Geld	NN	*	geld	sg	neut	-	(21)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	Geld	NN	(VP*	geld	sg	neut	-	(22)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	einem	ART	(NP*	ein	sg	neut	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	Juden	NN	*)	Jude	sg	neut	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	abzubangen	VVIZU	*))	abbangen	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	Geld	NN	*	geld	sg	neut	-	(21)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Zu	APPR	*	zu	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	solchen	PIAT	*	solcher	pl	fem	-	(20
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	kleinen	ADJA	*	klein	pl	fem	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	Listen	NN	*	liste	pl	fem	-	20)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	wär	VAFIN	*	sein	sg	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	'	$(	*	--	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	ich	PPER	*	ich	sg	*	-	(7)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	endlich	ADV	*	endlich	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	Gebracht	NN	*	gebracht	sg	masc	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	der	ART	*	der	sg	masc	-	(21
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	Kleinigkeiten	NN	*	kleinigkeit	pl	fem	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	kleinste	ADJA	*	klein	sg	fem	-	21)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	mir	PPER	*	sich	sg	*	-	(7)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	Zu	NN	*	zu	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	15	schaffen	VVINF	*	schaffen	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	16	?	$.	*	--	-	-	-	-

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	SITTAH	NE	(VROOT(PSEUDO*	sittah	-	-	-	(16
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	16)

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Jede	PIAT	(VROOT(PSEUDO(S(CNP(NP*	jeder	sg	fem	-	(23
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Kleinigkeit	NN	*)	kleinigkeit	sg	fem	-	23)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	zu	APPR	(NP(PP*	zu	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	sehr	ADV	(AP*	sehr	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	Verschmäht	ADJD	*))	verschmäht	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	die	PDS	*))	der	sg	fem	-	(23)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	rächt	VVFIN	*	rächen	sg	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	sich	PRF	*	sich	sg	-	-	(23)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	Bruder	NN	*)	bruder	sg	masc	-	(7)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Leider	ADV	(VROOT(PSEUDO(AP*	leider	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	wahr	ADJD	*)	wahr	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Und	KON	(S*	und	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	wenn	KOUS	*	wenn	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	nun	ADV	*	nun	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	dieser	PDAT	(NP*	dieser	sg	masc	-	(1
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	Jude	NN	*))	jude	sg	masc	-	1)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	gar	ADV	(NP*	gar	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	der	ART	*	der	sg	masc	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	gute	ADJA	*	gut	sg	masc	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	Vernünftge	ADJA	(S(NP*	vernünftg	sg	masc	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	Mann	NN	*)	mann	sg	masc	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	wie	PWAV	(S*	wie	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	15	der	ART	(NP*	der	sg	masc	-	(3
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	16	Derwisch	NN	*)	derwisch	sg	masc	-	3)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	17	dir	PPER	*	dir	sg	*	-	(16)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	18	Ihn	PPER	(VP*	ihn	sg	masc	-	(1)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	19	ehedem	ADV	*	ehedem	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	20	beschrieben	VVPP	*))))	beschreiben	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	21	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	SITTAH	NE	(VROOT(PSEUDO*	sittah	-	-	-	(16
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	16)

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	O	ITJ	(VROOT(PSEUDO(S*)	O	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	nun	ADV	(S*	nun	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	dann	ADV	*)	dann	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	hat	VAFIN	*	haben	sg	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	es	PPER	*	es	sg	neut	-	(20)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	dann	ADV	*	dann	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	für	APPR	(PP*	für	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	Not	NN	*))	not	-	-	-	(24)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Die	ART	(VROOT(PSEUDO(S(NP*	der	sg	fem	-	(20
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Schlinge	NN	*)	schling	sg	fem	-	20)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	liegt	VVFIN	*)	liegen	sg	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	Ja	PTKANT	(S*	ja	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	nur	ADV	(NP*	nur	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	dem	ART	*	der	sg	masc	-	(25
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	geizigen	ADJA	*	geizig	sg	masc	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	besorglichen	ADJA	*	besorglichen	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	25)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	Furchtsamen	ADJA	*	furchtsam	pl	masc	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	Juden	NN	*)	Jude	pl	masc	(MISC*)	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	:	$.	*	--	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	nicht	PTKNEG	(NP*	nicht	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	dem	ART	*	der	sg	neut	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	15	guten	ADJA	*	gut	sg	neut	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	16	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	17	nicht	PTKNEG	(NP*	nicht	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	18	Dem	ART	*	der	sg	neut	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	19	weisen	ADJA	*	weisen	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	20	Manne	NN	*)))	manne	sg	neut	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	21	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Dieser	PDS	(VROOT(PSEUDO(S*	dieser	sg	masc	-	(26)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	ja	ADV	(AP*	ja	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	so	ADV	(AVP*	so	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	Schon	ADV	*)	schon	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	unser	ADJD	*	unser	sg	neut	-	(27)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	ohne	APPR	(PP*	ohne	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	Schlinge	NN	*)))	schling	pl	masc	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Das	ART	*	der	sg	neut	-	(28
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Vergnügen	NN	*	vergnügen	sg	neut	-	28)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	Zu	PTKZU	*	zu	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	hören	VVINF	*	hören	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	wie	KOKOM	*	wie	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	ein	ART	*	ein	sg	masc	-	(26
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	solcher	PIAT	*	solcher	sg	masc	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	Mann	NN	*	mann	sg	masc	-	26)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	sich	PRF	*	sich	sg	-	-	(26)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	ausredt	VVFIN	*	ausredt	sg	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	Mit	APPR	*	mit	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	welcher	PWAT	*	welcher	sg	fem	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	dreisten	ADJA	*	dreist	sg	fem	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	15	Stärk	NN	*	stärk	sg	fem	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	16	'	$(	*	--	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	17	entweder	KON	*	entweder	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	18	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	19	er	PPER	*	er	sg	masc	-	(26)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	20	Die	ART	*	der	sg	fem	-	(20
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	21	Stricke	NN	*	strick	sg	fem	-	20)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	22	kurz	ADJD	*	kurz	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	23	zerreißet	VVPP	*	zerreißet	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	24	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	25	oder	KON	*	oder	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	26	auch	ADV	*	auch	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	27	Mit	APPR	*	mit	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	28	welcher	PWAT	*	welcher	sg	fem	-	(29
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	29	schlauen	ADJA	*	schlau	pl	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	30	Vorsicht	NN	*	vorsicht	sg	-	-	29)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	31	er	PPER	*	er	sg	masc	-	(26)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	32	die	ART	*	der	sg	fem	-	(20
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	33	Netze	NN	*	netz	sg	fem	-	20)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	34	Vorbei	VVFIN	*	vorbei	sg	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	35	sich	PRF	*	sich	sg	-	-	(26)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	36	windet	VVFIN	*	winden	sg	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	37	:	$.	*	--	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	38	dies	PDS	*	dieser	sg	neut	-	(28
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	39	Vergnügen	NN	*	vergnügen	sg	neut	-	28)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	40	hast	VAFIN	*	haben	sg	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	41	Du	PPER	*	du	sg	*	-	(7)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	42	obendrein	ADV	*	obendrein	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	43	.	$.	*	--	-	-	-	-

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nun	ADV	(VROOT(PSEUDO(S*	nun	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	das	PDS	*	der	sg	neut	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	wahr	ADJD	*)	wahr	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Gewiß	ADV	*	gewiß	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	Ich	PPER	*	ich	sg	*	-	(7)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	freue	VVFIN	*	freuen	sg	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	mich	PRF	*	mich	sg	-	-	(7)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	darauf	PROAV	*	darauf	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	.	$.	*	--	-	-	-	-

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	SITTAH	NE	(VROOT(PSEUDO*	sittah	-	-	-	(16
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	16)

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	So	ADV	(VROOT(PSEUDO(S*	so	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	kann	VMFIN	*	können	sg	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	dich	PRF	*	dich	sg	-	-	(7)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	ja	ADV	*	ja	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	Auch	ADV	(VP(VP(NP*	auch	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	weiter	ADV	*	weiter	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	nichts	PIS	*)	nichts	*	neut	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	verlegen	VVINF	*)	verlegen	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	machen	VVINF	*))	machen	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Denn	KON	(VROOT(PSEUDO(S*	denn	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ists	NE	*	ist	sg	-	-	(1)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	einer	PIS	*	ein	sg	masc	-	(30
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	aus	APPR	(PP*	aus	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	der	ART	*	der	sg	fem	-	(31
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	Menge	NN	*)	menge	sg	fem	-	31)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	bloß	PTKVZ	*	bloß	-	-	-	30)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	ists	ADV	(S*	ists	-	-	-	(1)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	bloß	ADV	(S(PP*	bloß	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	Ein	ART	*	ein	sg	neut	-	(30
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	Jude	NN	*	jude	sg	neut	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	wie	PWAV	(S*	wie	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	ein	ART	(NP*	ein	sg	neut	-	(31
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	15	Jude	NN	*	jude	sg	neut	-	30)|31)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	16	:	$.	*	--	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	17	gegen	APPR	(PP*	gegen	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	18	den	ART	*	der	sg	masc	-	(31)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	19	Wirst	NN	*))	wirst	sg	masc	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	20	du	PPER	*	du	sg	*	-	(7)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	21	dich	PRF	*	dich	sg	-	-	(7)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	22	doch	ADV	*	doch	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	23	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	24	schämen	VVINF	*	schämen	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	25	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	26	so	ADV	(VP*	so	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	27	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	28	scheinen	VVINF	*)	scheinen	pl	masc	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	29	Wie	KOKOM	(NP*	wie	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	30	er	PPER	*))))	er	sg	masc	-	(31)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	31	die	ART	(AP(NP*	der	pl	masc	-	(32
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	32	Menschen	NN	*)	mensch	pl	masc	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	33	all	PIAT	*))	all	*	*	-	32)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	34	sich	PRF	*	sich	sg	-	-	(31)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	35	denkt	VVFIN	*))	denken	sg	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	36	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Vielmehr	ADV	(VROOT(PSEUDO(S*	vielmehr	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	Wer	PWS	(NP(S*	wer	sg	masc	-	(33
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	sich	PRF	*	sich	sg	-	-	(33)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	ihm	PPER	*	ihm	sg	masc	-	(31)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	besser	ADJD	*	gut	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	zeigt	VVFIN	*)	zeigen	sg	-	-	33)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	der	PDS	*)	der	sg	masc	-	(33)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	zeigt	VVFIN	*	zeigen	sg	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	sich	PRF	*	sich	sg	-	-	(33)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	ihm	PPER	*	ihm	sg	masc	-	(31)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	Als	APPR	(PP*	als	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	Geck	NN	*)	geck	sg	masc	-	(34)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	15	als	APPR	(PP*	als	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	16	Narr	NN	*))	narr	sg	masc	-	(34)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	17	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	So	ADV	(VROOT(PSEUDO(S*	so	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	muß	VMFIN	*	müssen	sg	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(7)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	ja	ADV	*	ja	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	wohl	ADV	*	wohl	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	gar	ADV	(NP*	gar	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	Schlecht	NN	*)	schlecht	sg	neut	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	handeln	VVFIN	*	handeln	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	daß	KOUS	(S*	daß	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	von	APPR	(PP*	von	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	mir	PPER	*)	sich	sg	*	-	(7)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	der	ART	(NP*	der	sg	masc	-	(35
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	Schlechte	NN	*)	schlecht	pl	neut	-	35)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	15	Schlecht	ADJD	*	schlecht	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	16	denke	VVFIN	*))	denken	sg	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	17	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	SITTAH	NE	(VROOT(PSEUDO*	sittah	-	-	-	(16
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	16)

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Traun	NE	(VROOT(PSEUDO(MPN*	traun	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*)))	--	-	-	-	-

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	wenn	KOUS	(VROOT(PSEUDO(S(S*	wenn	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	du	PPER	*	du	sg	*	-	(7)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	schlecht	ADJD	*	schlecht	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	handeln	VVFIN	*)	handeln	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	nennst	ADV	*	nennen	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	Ein	ART	(VP(NP*	ein	sg	neut	-	(32
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	jedes	PIAT	(NP*	jeder	sg	neut	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	Ding	NN	*))	ding	sg	neut	-	32)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	nach	APPR	(PP*	nach	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	seiner	PPOSAT	*	sein	sg	fem	-	(36|(32)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	Art	NN	*)	Art	sg	fem	-	36)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	brauchen	VVINF	*)))	brauchen	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Was	PWS	*	was	sg	neut	-	(37
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	hätt	VAFIN	*	hätt	sg	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	ein	ART	*	ein	sg	masc	-	(38
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	Weiberkopf	NN	*	weiberkopf	sg	masc	-	38)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	erdacht	VVPP	*	erdachen	-	-	-	37)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	das	PRELS	*	der	sg	neut	-	(37)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	er	PPER	*	er	sg	masc	-	(38)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	Nicht	PTKNEG	*	nicht	sg	neut	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	zu	PTKZU	*	zu	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	beschönen	VVINF	*	beschönen	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	wüßte	VMFIN	*	wissen	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	!	$.	*	--	-	-	-	-

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	SITTAH	NE	(VROOT(PSEUDO*	sittah	-	-	-	(16
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	16)

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Zu	PTKZU	*	zu	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	beschönen	VVINF	*	beschönen	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*	--	-	-	-	-

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Das	ART	(VROOT(PSEUDO(S(NP*	der	sg	neut	-	(20
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	feine	ADJA	*	fein	sg	neut	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	spitze	ADJA	*	spitz	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	Ding	NN	*	ding	sg	neut	-	20)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	besorg	ADJD	(S*	besorg	sg	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	ich	PPER	*	ich	sg	*	-	(7)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	nur	ADV	*	nur	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	In	APPR	(PP*	in	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	meiner	PPOSAT	*	mein	sg	fem	-	(7)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	plumpen	ADJA	*	plump	sg	fem	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	Hand	NN	*)))	hand	sg	fem	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	zerbricht	VVFIN	*)	zerbrechen	sg	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	15	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	So	ADV	(NP(CS(S*	so	-	-	-	(19
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	was	PWS	*	was	*	neut	-	19)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	Will	VMFIN	*	wollen	*	neut	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	ausgeführt	VVPP	(VP*	ausführen	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	sein	VAINF	*))	sein	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	wies	VVFIN	(S*	weisen	sg	-	-	(19)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	erfunden	VVPP	*	erfinden	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	ist	VAFIN	*))	sein	sg	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	:	$.	*	--	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	Mit	APPR	(NP(PP*	mit	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	aller	PIAT	*	aller	sg	fem	-	(39
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	Pfiffigkeit	NN	*)	pfiffigkeit	sg	fem	-	39)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	15	Gewandtheit	NN	*))	gewandtheit	sg	fem	-	(39)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	16	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Doch	KON	(NP*	doch	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	Mags	NN	*)	mag	-	-	-	(40)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	doch	ADV	(AVP*	doch	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	nur	ADV	*)	nur	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	mags	ADV	(S*)	mags	-	-	-	(40)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	*	ich	sg	*	-	(7)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	tanze	VVFIN	*	tanzen	sg	-	-	(41)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	wie	PWAV	*	wie	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	ich	PPER	*	ich	sg	*	-	(7)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	kann	VMFIN	*	können	sg	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	Und	KON	*	und	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	könnt	VVFIN	*	können	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	'	$(	*	--	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	es	PPER	*	es	-	-	-	(41)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	freilich	ADV	*	freilich	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	lieber	ADV	*	lieber	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	–	CARD	*	–	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	15	schlechter	ADJD	*	schlecht	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	16	noch	ADV	*	noch	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	17	Als	APPR	*	als	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	18	besser	ADJD	*	gut	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	19	.	$.	*	--	-	-	-	-

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	SITTAH	NE	(VROOT(PSEUDO*	sittah	-	-	-	(16
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	16)

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Trau	NN	(VROOT(PSEUDO(S*	trau	sg	*	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	dir	PPER	*	dir	sg	*	-	(7)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	auch	ADV	*	auch	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	nur	ADV	*	nur	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	zu	PTKA	(AP*	zu	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	wenig	PIS	*))	wenig	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(6)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	stehe	VVFIN	*	stehen	sg	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	dir	PPER	*	dir	sg	*	-	(7)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	für	APPR	(PP*	für	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	dich	PPER	*))	dich	sg	*	-	(7)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wenn	KOUS	(VROOT(PSEUDO(S*	wenn	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	du	PPER	(NP*	du	sg	*	-	(7)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	nur	ADV	*)	nur	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	willst	VMFIN	*)	wollen	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Daß	KOUS	(S*	daß	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	uns	PPER	*	uns	pl	*	-	(42)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	die	ART	(NP*	der	pl	masc	-	(43
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	Männer	NN	*))	mann	pl	masc	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	deines	PPOSAT	(NP*	dein	sg	masc	-	(7)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	gleichen	ADJA	*	gleich	pl	-	-	43)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	doch	ADV	(S*	doch	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	So	ADV	(AVP*	so	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	gern	ADV	*)	gern	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	bereden	VVINF	*	bereden	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	möchten	VMFIN	*)	möchten	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	nur	ADV	*	nur	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	ihr	PPOSAT	*	ihr	sg	fem	-	(44|(43)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	15	Schwert	NN	*	schwert	pl	-	-	44)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	16	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	17	Ihr	PPOSAT	(S(NP*	ihr	pl	*	-	(44|(43)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	18	Schwert	NN	*)	schwert	pl	-	-	44)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	19	nur	ADV	*	nur	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	20	habe	VAFIN	*	haben	sg	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	21	sie	PPER	(VP*	sie	sg	fem	-	(43)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	22	so	ADV	(AP*	so	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	23	weit	ADJD	*)	weit	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	24	gebracht	VVPP	*)))	bringen	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	25	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(S(NP*	der	sg	masc	-	(7
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Löwe	NN	*)	löwe	sg	masc	-	7)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	schämt	VVFIN	*	schämen	sg	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	sich	PRF	*	sich	sg	-	-	(7)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	freilich	ADV	*	freilich	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	wenn	KOUS	(S*	wenn	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	er	PPER	*	er	sg	masc	-	(7)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	mit	APPR	(PP*	mit	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	Dem	ART	*	der	sg	neut	-	(16
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	Fuchse	NN	*)	fuchse	-	-	-	16)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	jagt	VVFIN	*	jagen	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	–	NN	(CNP(NP*	–	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	des	ART	(NP*	der	sg	masc	-	(16
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	15	Fuchses	NN	*))	fuchs	sg	masc	-	16)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	16	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	17	nicht	PTKNEG	(NP*	nicht	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	18	der	ART	*	der	sg	masc	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	19	List	NN	*))))	list	sg	masc	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	20	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	daß	KOUS	*	daß	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	die	ART	(NP*	der	pl	neut	-	(42
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	Weiber	NN	*)	weiber	pl	neut	-	42)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	doch	ADV	(AVP*	doch	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	so	ADV	*)	so	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	gern	ADV	*	gern	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	den	ART	(NP*	der	sg	masc	-	(45
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	Mann	NN	*	mann	sg	masc	-	45)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	Zu	APPR	(PP*	zu	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	sich	PRF	(NP*	sich	sg	-	-	(42)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	herunter	ADV	*)))	herunter	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	hätten	VAFIN	*)	haben	pl	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Geh	XY	*	geh	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	nur	ADV	(S*)	nur	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	geh	XY	*	geh	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ich	PPER	(S*	ich	sg	*	-	(7)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	glaube	VVFIN	*	glauben	sg	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	meine	PPOSAT	(VP(NP*	mein	sg	fem	-	(20|(7)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	Lektion	NN	*)	lektion	sg	fem	-	20)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	können	VMINF	*)))	können	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	SITTAH	NE	(VROOT(PSEUDO*	sittah	-	-	-	(16
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	16)

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Was	PWS	*	was	sg	neut	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	?	$.	*	--	-	-	-	-

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	ich	PPER	*	ich	sg	*	-	(6)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	soll	VMFIN	*	sollen	sg	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	gehn	CARD	*	gehn	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	?	$.	*	--	-	-	-	-

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Du	PPER	(VROOT(PSEUDO(S*	du	sg	*	-	(16)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	wolltest	VVFIN	*	wolltest	sg	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	doch	ADV	(VP*	doch	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	bleiben	VVINF	*))	bleiben	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	SITTAH	NE	(VROOT(PSEUDO*	sittah	-	-	-	(16
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	16)

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wenn	KOUS	(VROOT(PSEUDO(S*	wenn	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	auch	ADV	(AVP*	auch	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	nicht	PTKNEG	*)	nicht	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	bleiben	VVINF	*)	bleiben	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	.	$.	(S(ISU*	--	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	.	$.	*	--	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	.	$.	*)	--	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	im	APPRART	(PP*	in	sg	neut	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	Gesicht	NN	*)	gesicht	sg	neut	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	euch	PPER	(VP*	euch	pl	*	-	(7)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	bleiben	VVINF	*)	bleiben	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	–	VAFIN	*)	–	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	Doch	KON	(S*	doch	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	hier	ADV	*)	hier	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	im	APPRART	(PP*	in	sg	neut	-	(46
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	15	Nebenzimmer	NN	*)	nebenzimmer	sg	neut	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	16	–	XY	*))	–	-	-	-	46)

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Da	KOUS	*	da	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	zu	PTKZU	*	zu	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	horchen	VVINF	*	horchen	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	?	$.	*	--	-	-	-	-

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Auch	ADV	(VROOT(PSEUDO(S*	auch	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	das	PDS	*	der	sg	neut	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	Schwester	NN	*	schwester	sg	neut	-	(16)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	wenn	KOUS	(S*	wenn	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	ich	PPER	*	ich	sg	*	-	(7)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	soll	VMFIN	*))	sollen	sg	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	bestehn	VVFIN	*	bestehn	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Fort	NN	(S*	fort	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	fort	PTKVZ	*)	fort	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	der	ART	(VROOT(PSEUDO(S(NP*	der	sg	fem	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Vorhang	NN	*)	vorhang	sg	fem	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	rauscht	VVFIN	*	rauschen	sg	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	er	PPER	*	er	sg	masc	-	(1)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	kömmt	VVFIN	*)	kömmen	sg	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	doch	ADV	(AVP*	doch	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	daß	KOUS	*)	daß	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	Du	PPER	(S*	du	sg	*	-	(16)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	ja	ADV	*	ja	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	da	ADV	(VP*	da	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	verweilst	VVPP	*))	verweilen	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(7)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	sehe	VVFIN	*	sehen	sg	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	nach	PTKVZ	*)	nach	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Indem	KOUS	(VROOT(PSEUDO(S(S*	indem	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	sie	PPER	*	sie	pl	*	-	(16)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	sich	PRF	*	sich	pl	-	-	(16)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	durch	APPR	(AP(PP*	durch	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	die	ART	*	der	sg	fem	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	eine	ART	(NP*	ein	sg	fem	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	Türe	NN	*))	türe	sg	fem	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	entfernt	ADJD	*)	entfernt	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	tritt	VVFIN	(S*	treten	sg	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	Nathan	NE	*	nathan	sg	*	-	(1)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	zu	APPR	(PP*	zu	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	der	ART	*	der	sg	fem	-	(17
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	andern	PIS	*)	anderer	-	-	-	17)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	herein	PTKVZ	*))	herein	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	15	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	16	und	KON	(S*	und	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	17	Saladin	NE	*	saladin	sg	*	-	(7)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	18	hat	VAFIN	*	haben	sg	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	19	sich	PRF	(VP*	sich	sg	-	-	(7)
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	20	gesetzt	VVPP	*)))	setzen	-	-	-	-
Nathan_Act3_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	21	.	$.	*))	--	-	-	-	-

#end document
