#begin document (Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll); part 000
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Montan	NE	(VROOT(PSEUDO*	montan	-	-	-	(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Corydon	NE	(VROOT(PSEUDO(S*	corydon	-	-	-	(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	in	APPR	(PP*	in	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	Schäfertracht	NN	(CNP*	schäfertracht	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	und	KON	*	und	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	einer	ART	(NP*	ein	sg	fem	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	5	langen	ADJA	*	lang	sg	fem	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	6	schwarzen	ADJA	*	schwarz	sg	fem	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	7	Peruque	NN	*)	peruque	sg	fem	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	8	und	KON	*	und	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	9	großen	ADJA	(NP*	groß	sg	fem	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	10	Säbel	NN	*))))	säbel	sg	fem	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	(LOC*)	(7|(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Wohin	PWAV	(VROOT(PSEUDO(S*	wohin	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	wirds	PWAV	*	wird	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	nun	ADV	*	nun	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	noch	ADV	(NP*	noch	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	gehn	CARD	*))	gehn	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	ich	PPER	(VROOT(PSEUDO(DL(S*	ich	sg	*	-	(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	bin	VAFIN	*	sein	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	des	ART	(NP*	der	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	Laufens	NN	*)	laufen	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	satt	ADJD	*)	satt	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	5	;	$.	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	6	Ich	PPER	(S*	ich	sg	*	-	(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	7	wette	VVFIN	*	wetten	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	9	daß	KOUS	(S*	daß	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	10	der	ART	(NP*	der	sg	masc	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	11	Schelm	NN	*)	schelm	sg	masc	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	12	mich	PPER	*	mich	sg	*	-	(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	13	gar	ADV	*	gar	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	14	zum	APPRART	(PP*	zu	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	15	Besten	NN	*)	gut	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	16	hat	VAFIN	*)))	haben	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	17	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	-	(0|(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Nein	PTKANT	(VROOT(PSEUDO(S*	nein	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	nein	PTKANT	(AVP(S*	nein	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	hier	ADV	*	hier	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	5	bleiben	VVFIN	*	bleiben	pl	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	6	wir	PPER	*)	wir	pl	*	-	(8)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	8	hier	ADV	*)	hier	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	9	wird	VAFIN	*	werden	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	10	uns	PPER	*	uns	pl	*	-	(8)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	11	niemand	PIS	*	niemand	sg	masc	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	12	stören	VVFIN	*)	stören	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	13	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	(LOC*)	(7|(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Wie	PWAV	*	wie	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	stehts	ADV	*	stehts	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	möchte	VMFIN	*	möchten	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	gern	ADV	*	gern	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	einmal	ADV	*	einmal	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	was	PWS	(S*	was	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	5	neues	ADJA	(NP(AP*	neu	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	6	hören	VVFIN	(NP(S*	hören	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	7	;	$.	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	8	Ich	PPER	(S*	ich	sg	*	-	(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	9	bin	VAFIN	*	sein	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	11	der	ART	(NP*	der	sg	masc	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	12	Teufel	NN	*)	teufel	sg	masc	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	13	hohls	PTKVZ	*))	hohl	sg	masc	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	15	rund	ADV	(S*	rund	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	16	um	APPR	(PP*	um	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	17	die	ART	*	der	sg	fem	-	(9
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	18	Welt	NN	*)	welt	sg	fem	-	9)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	19	herum	PTKVZ	*))))	herum	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	20	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	21	Zu	APPR	(CPP(PP*	zu	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	22	Wasser	NN	*)	wasser	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	23	und	KON	*	und	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	24	zu	APPR	(PP*	zu	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	25	Land	NN	*)))	land	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	26	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	27	und	KON	(S*	und	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	28	doch	ADV	*	doch	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	29	noch	ADV	(AP*	noch	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	30	ochsendumm	ADJD	*)))	ochsendumm	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	31	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	Teufel	NN	*	teufel	sg	*	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	hilft	VVFIN	*	helfen	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	michs	ADV	*	mich	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	nun	ADV	*	nun	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	6	daß	KOUS	(S*	daß	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	7	ich	PPER	*	ich	sg	*	-	(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	8	die	ART	(NP*	der	sg	fem	-	(9
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	9	Welt	NN	*)	welt	sg	fem	-	9)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	10	durchkrochen	VVPP	*	durchkrechen	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	12	Und	KON	(VP*	und	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	13	da	ADV	*	da	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	14	gewesen	VAPP	*)	sein	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	15	bin	VAFIN	*	sein	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	16	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	17	wohin	PWAV	(S*	wohin	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	18	kein	PIAT	(NP*	kein	sg	masc	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	19	Mensch	NN	*)	mensch	sg	masc	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	20	gerochen	VVPP	*)))	gerochen	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	21	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Ich	PPER	*	ich	sg	*	-	(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	habe	VAFIN	*	haben	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	viel	PIS	*	viel	*	*	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	gesehn	ADJD	*	gesehn	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	5	allein	ADV	*	allein	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	7	ich	PPER	*	ich	sg	*	-	(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	8	weiß	VVFIN	*	weiß	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	9	nicht	PTKNEG	*	nicht	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	10	was	PWS	*	was	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	11	.	$.	*	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Vor	APPR	(VROOT(PSEUDO(S(PP*	vor	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	meinen	PPOSAT	*	mein	pl	-	-	(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	Augen	NN	*)	auge	pl	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	schwebt	VVFIN	*	schweben	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	mir	PPER	(NP*	sich	sg	*	-	(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	5	stets	ADV	*)	stets	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	6	bald	ADV	(S*	bald	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	7	dieß	VVFIN	*	dassen	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	8	bald	ADV	(NP*	bald	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	9	das	PDS	*)))	der	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Von	APPR	(VROOT(PSEUDO(CS(S(PP*	von	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	Nova	NE	(MPN*	--	sg	fem	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	Zembla	NE	*))	zembla	sg	fem	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	an	PTKVZ	*	an	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	5	bis	KOUS	(CS(S*	bis	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	6	zu	APPR	(PP*	zu	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	7	den	ART	*	der	pl	fem	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	8	Hottentotten	NN	*)	hottentotte	pl	fem	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	10	Bin	NE	*	sein	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	11	ich	PPER	*	ich	sg	*	-	(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	12	zu	APPR	(CPP(PP*	zu	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	13	Pferd	NN	(CNP*	pferd	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	14	und	KON	*	und	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	15	Fuß	NN	*))	fuß	sg	masc	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	16	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	17	mit	APPR	(PP*	mit	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	18	Kriegs-	TRUNC	(CNP*	krieg	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	19	und	KON	*	und	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	20	Kaufmannsflotten	NN	*))	kaufmannsflotte	pl	*	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	21	;	$.	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	22	Durch	APPR	(PP*	durch	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	23	Japan	NE	(CNP*	japan	sg	neut	(LOC*)	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	24	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	25	Asien	NE	*	asien	sg	neut	(LOC*)	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	26	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	27	Rom	NE	*	rom	sg	neut	(LOC*)	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	28	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	29	Schweden	NE	*	schweden	sg	neut	(LOC*)	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	30	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	31	Afrika	NE	*	afrika	sg	neut	(LOC*)	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	32	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	33	Von	APPR	(MPN*	von	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	34	Fez	NE	*)	fez	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	35	und	KON	*	und	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	36	Surinam	NE	*)	surinam	sg	neut	(LOC*)	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	37	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	38	bis	KOUS	(S*	bis	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	39	nach	APPR	(PP*	nach	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	40	Batavia	NE	*)	batavia	-	-	(LOC*)	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	41	;	$.	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	42	Denn	KON	(S*	denn	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	43	durch	APPR	(VP(CPP(PP*	durch	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	44	die	ART	*	der	sg	fem	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	45	neue	ADJA	*	neu	sg	fem	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	46	Welt	NN	*)	welt	sg	fem	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	47	bis	APPR	(PP*	bis	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	48	zu	APPR	*	zu	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	49	den	ART	*	der	pl	fem	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	50	Patagonen	NN	*	patagon	pl	fem	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	51	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	52	Wo	PWAV	(CS(S*	wo	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	53	lauter	PIAT	(NP*	laut	*	*	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	54	Riesen	NN	*)	riese	pl	*	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	55	sind	VAFIN	*	sein	pl	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	56	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	57	bis	KOUS	(CS(S*	bis	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	58	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	59	wo	PWAV	(S*	wo	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	60	die	ART	(NP*	der	sg	fem	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	61	Zwerge	NN	*)	zwerg	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	62	wohnen	VVFIN	*)	wohnen	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	63	;	$.	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	64	Ins	APPRART	(S(PP*	in	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	65	Land	NN	*	land	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	66	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	67	wo	PWAV	(S*	wo	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	68	Mensch	NN	(CNP*	mensch	sg	masc	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	69	und	KON	*	und	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	70	Vieh	NN	*)	vieh	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	71	aus	APPR	(PP*	aus	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	72	einer	ART	*	ein	sg	fem	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	73	Pfütze	NN	*)	pfütze	sg	fem	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	74	säuft	VVFIN	*))	säufen	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	75	;	$.	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	76	Da	ADV	*	da	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	77	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	78	wo	PWAV	(S*	wo	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	79	ein	ART	(NP*	ein	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	80	wildes	ADJA	*	wild	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	81	Volk	NN	*)	volk	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	82	mit	APPR	(PP*	mit	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	83	Affenschwänzen	NN	*)	affenschwanz	pl	fem	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	84	läuft	VVFIN	*)	laufen	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	85	;	$.	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	86	Dort	ADV	(S*	dort	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	87	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	88	wo	PWAV	*	wo	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	89	die	ART	(NP*	der	pl	masc	-	(10
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	90	Mohren	NN	*)	mohr	pl	masc	-	10)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	91	sind	VAFIN	*)))	sein	pl	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	92	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	93	die	ART	(S*	der	pl	*	-	(10)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	94	splitternackend	ADJD	*	splitternackend	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	95	gehen	VVFIN	*	gehen	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	96	;	$.	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	97	An	APPR	(PP*	an	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	98	Orten	NN	*))))	ort	pl	masc	-	(11
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	99	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	100	welche	PWAT	(S*	welcher	pl	masc	-	(11)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	101	selbst	ADV	(PP*	selbst	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	102	der	ART	*	der	sg	fem	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	103	Teufel	NN	*)))))	teufel	sg	fem	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	104	nicht	PTKNEG	*	nicht	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	105	gesehen	VVPP	*))))))	sehen	-	-	-	11)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	106	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	107	Bin	NE	(S*	sein	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	108	ich	PPER	*	ich	sg	*	-	(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	109	herumgetrollt	VVFIN	*)))	herumgrollen	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	110	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	111	und	KON	*	und	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	112	komme	VVFIN	(S*	kommen	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	113	nun	ADV	*	nun	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	114	hieher	ADV	*	hieher	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	115	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	116	Und	KON	(S*	und	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	117	find	ADJD	(NP*	find	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	118	ein	ART	*	ein	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	119	schönes	ADJA	*	schön	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	120	Land	NN	*)	land	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	121	beynah	VVFIN	*	beynah	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	122	von	APPR	(AP(PP*	von	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	123	Menschen	NN	*)	mensch	pl	masc	-	(12)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	124	leer	ADJD	*))))	leer	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	125	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	glaub	VVFIN	*	glaub	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	es	PPER	(S*	es	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	ist	VAFIN	*	sein	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	5	hier	ADV	*	hier	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	6	gar	ADV	*	gar	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	7	ein	ART	(NP*	ein	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	8	Nest	NN	*	nest	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	9	voll	ADJD	(NP*	voll	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	10	Eremiten	NN	*))))	eremite	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(S(NP*	der	sg	masc	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	Himmel	NN	*)	himmel	sg	masc	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	wolle	VMFIN	*	wollen	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	mich	PPER	*	mich	sg	*	-	(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	vor	APPR	(PP*	vor	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	5	dieser	PDAT	*	dieser	sg	fem	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	6	Brut	NN	*)	--	sg	fem	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	7	behüten	VVFIN	*)	behüten	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Nein	PTKANT	(VROOT(PSEUDO(S*	nein	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	dazu	PROAV	*	dazu	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	taug	VVFIN	*	taug	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	ich	PPER	*	ich	sg	masc	-	(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	5	nicht	PTKNEG	*	nicht	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	6	;	$.	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	7	ich	PPER	(S*	ich	sg	masc	-	(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	8	bin	VAFIN	*	sein	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	9	ein	ART	(NP*	ein	sg	masc	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	10	Menschenfreund	NN	*	menschenfreund	sg	masc	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	12	Ich	PPER	(CO(S*	ich	sg	*	-	(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	13	suche	VVFIN	*	suchen	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	14	sie	PPER	*	sie	pl	masc	-	(12)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	15	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	16	wo	PWAV	(S*	wo	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	17	man	PIS	*	man	sg	*	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	18	sie	PPER	(VP*	sie	sg	fem	-	(12)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	19	nie	ADV	*	nie	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	20	zu	PTKZU	(VZ*	zu	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	21	finden	VVINF	*))	finden	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	22	meynt	VVFIN	*))	meynen	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	23	;	$.	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	24	Doch	KON	(S*	doch	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	25	sage	VVFIN	*	sagen	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	26	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	27	guter	ADJA	(NP*	gut	sg	masc	-	(0
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	28	Freund	NN	*))))))	freund	sg	masc	-	0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	29	!	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	bist	VAFIN	(VROOT(PSEUDO(S*	sein	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	du	PPER	*	du	sg	*	-	(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	hier	ADV	(VP(AP*	hier	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	stets	ADV	*)	stets	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	gewesen	VAPP	*))	sein	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Wie	PWAV	(VROOT(PSEUDO(S*	wie	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	hast	VAFIN	*	haben	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	du	PPER	(VP*	du	sg	*	-	(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	ausserdem	PIS	*	außerdem	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	dir	PPER	*	dir	sg	*	-	(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	5	diesen	PDAT	(NP*	dieser	sg	masc	-	(13
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	6	Ort	NN	*)	ort	sg	masc	-	13)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	7	erlesen	VVINF	*))	erlesen	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	8	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Wie	PWAV	(VROOT(PSEUDO(S*	wie	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	heißt	VVFIN	*	heißen	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	denn	ADV	*	denn	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	dieses	PDAT	(NP*	dieser	sg	neut	-	(13
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	Land	NN	*))	land	sg	neut	-	13)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	-	(0|(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Arkadien	NE	(VROOT(PSEUDO*	arkadien	sg	neut	-	(13)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	(LOC*)	(7|(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Ists	ADV	(VROOT(PSEUDO(S(ISU*	ist	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	wahr	ADJD	*))	wahr	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Arkadien	NE	(VROOT(PSEUDO(MPN*	arkadien	sg	neut	-	(13)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	!	$.	*)))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Ey	NE	(VROOT(PSEUDO(NP*	ey	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	Ey	NE	*)	ey	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	das	PDS	(VROOT(PSEUDO(S*	der	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	ja	ADV	(AVP(AP*	ja	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	schön	ADJD	*)	schön	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	5	fürwahr	ADV	*))	fürwahr	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	6	!	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	hätte	VAFIN	*	haben	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	nicht	PTKNEG	(VP*	nicht	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	gedacht	VVPP	*	denken	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	5	daß	KOUS	(S(S*	daß	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	6	ichs	ADV	*	ichs	-	-	-	(14)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	7	noch	ADV	*	noch	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	8	würde	VAFIN	*	werden	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	9	finden	VVINF	(VP*	finden	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	11	Ich	PPER	(S*	ich	sg	masc	-	(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	12	hab	VAFIN	*	hab	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	13	es	PPER	(VP*	es	sg	neut	-	(14)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	14	recht	ADV	*	recht	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	15	gesucht	VVPP	*))))	suchen	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	16	;	$.	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	17	doch	ADV	*	doch	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	18	kann	VMFIN	*	können	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	19	ich	PPER	*	ich	sg	masc	-	(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	20	nicht	PTKNEG	*	nicht	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	21	ergründen	VVINF	(VP*	ergründen	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	22	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	23	Wer	PWS	(S*	wer	sg	masc	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	24	dies	PDS	*	dieser	sg	neut	-	(14
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	25	berühmte	ADJA	(VP(NP*	berühmt	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	26	Land	NN	*)	land	sg	neut	-	14)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	27	an	APPR	(PP*	an	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	28	diesen	PDAT	*	dieser	sg	masc	-	(13
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	29	Ort	NN	*)	ort	sg	masc	-	13)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	30	gesetzt	VVPP	*)	setzen	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	31	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	32	Ich	PPER	(S*	ich	sg	masc	-	(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	33	hab	VAFIN	*	heben	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	34	es	PPER	(VP*	es	sg	neut	-	(14)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	35	für	APPR	(PP*	für	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	36	ein	ART	*	ein	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	37	Theil	NN	*	theil	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	38	von	APPR	(PP*	von	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	39	Asien	NE	*))	asien	sg	neut	(LOC*)	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	40	geschätzt	VVPP	*)))))))	schätzen	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	41	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	-	(0|(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Ganz	ADV	(VROOT(PSEUDO(S(AVP*	ganz	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	recht	ADV	*	recht	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	Arkadien	NE	(S(NP*	arkadien	pl	fem	-	(14)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	5	wo	PWAV	(S*	wo	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	6	vor	APPR	(PP*	vor	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	7	sehr	ADV	(AP*	sehr	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	8	langen	ADJA	*)	lang	pl	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	9	Jahren	NN	*)	jahr	pl	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	11	Wenn	KOUS	(S*	wenn	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	12	man	PIS	*	man	sg	*	-	(15)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	13	den	ART	(NP*	der	pl	masc	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	14	Dichtern	NN	*)	dichter	pl	masc	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	15	glaubt	VVFIN	*	glauben	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	16	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	17	die	ART	(S(NP*	der	pl	masc	-	(16
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	18	ersten	ADJA	*	erster	pl	masc	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	19	Schäfer	NE	*)	schäfer	pl	masc	-	16)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	20	waren	VAFIN	*	sein	pl	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	21	;	$.	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	22	Dies	PDS	(S(NP*	dieser	sg	neut	-	(14
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	23	schöne	ADJA	*	schön	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	24	Land	NN	*)	land	sg	neut	-	14)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	25	war	VAFIN	*	sein	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	26	zwar	ADV	*	zwar	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	27	Asien	NE	(NP*	asien	sg	neut	(LOC*)	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	28	ein	ART	(NP*	ein	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	29	Stück	NN	*)))))))	stück	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	30	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	31	Doch	KON	(S*	doch	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	32	dieses	PDAT	(NP*	dieser	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	33	Land	NN	*)	land	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	34	beut	VVFIN	*	beuen	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	35	uns	PPER	*	uns	pl	*	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	36	de	NE	(NP*	de	-	-	-	(16
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	37	alten	ADJA	(NP*	alt	sg	masc	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	38	Schäfer	NE	*	schäfer	sg	masc	-	16)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	39	Glück	NN	*)))))	glück	sg	masc	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	40	;	$.	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	41	Und	KON	(S(AVP(S*	und	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	42	da	KOUS	*	da	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	43	wir	PPER	*	wir	pl	*	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	44	gänzlich	ADJD	*	gänzlich	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	45	hier	ADV	(AVP*	hier	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	46	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	47	wie	PWAV	(S*	wie	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	48	jene	PDS	(NP*	jener	sg	fem	-	(16
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	49	Schäfer	NE	*	schäfer	sg	fem	-	16)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	50	,	$,	*)))	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	51	leben	VVFIN	*)	leben	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	52	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	53	So	ADV	*)	so	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	54	hab	VAFIN	*	hab	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	55	ich	PPER	(VP*	ich	sg	*	-	(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	56	ihm	PPER	*	ihm	sg	masc	-	(13)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	57	dazu	PROAV	*	dazu	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	58	den	ART	(NP*	der	sg	masc	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	59	Namen	NN	*)	name	sg	masc	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	60	auch	ADV	*	auch	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	61	gegeben	VVPP	*)))	geben	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	62	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	(LOC*)	(7|(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Zum	APPRART	(VROOT(PSEUDO(PP*	zu	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	Henker	NN	*)	henker	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	das	PDS	(VROOT(PSEUDO(S*	der	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	dumm	ADJD	*	dumm	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	;	$.	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	ich	PPER	(S*	ich	sg	*	-	(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	5	hätt	VVFIN	*	hätt	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	6	es	PPER	*	es	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	7	gern	ADV	(VP*	gern	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	8	geglaubt	VVPP	*	glauben	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	10	Wenn	KOUS	(S*	wenn	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	11	du	PPER	*	du	sg	*	-	(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	12	des	ART	(NP*	der	sg	masc	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	13	süssen	ADJA	*	süssen	sg	masc	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	14	Traums	NN	*)	traum	sg	masc	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	15	mich	PPER	(VP*	mich	sg	*	-	(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	16	nicht	PTKNEG	(AVP*	nicht	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	17	so	ADV	*)	so	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	18	bald	ADV	*	bald	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	19	beraubt	VVPP	*)))	berauben	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	20	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	21	Es	PPER	(S*	es	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	22	sey	VVFIN	*	sey	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	23	Arkadien	NE	*)))	arkadien	pl	fem	-	(14)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	24	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	tändelst	VVFIN	*	tändelen	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	du	PPER	(NP*	du	sg	*	-	(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	Montan	NE	*))	montan	-	-	-	(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	hintergehst	ADV	(PP*	hintergehen	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	dich	PRF	*	dich	sg	-	-	(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	selbst	ADV	*)	selbst	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	nebst	VVFIN	*	nebst	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	5	mir	PPER	*)	sich	sg	*	-	(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	-	(0|(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Das	PDS	(VROOT(PSEUDO(S*	der	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	geht	VVFIN	*	gehen	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	wohl	ADV	*	wohl	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	an	PTKVZ	*)	an	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Das	ART	(VROOT(PSEUDO(S*	der	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	man	PIS	(NP*	man	sg	*	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	ein	ART	(NP*	ein	sg	neut	-	(13
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	neues	ADJA	*	neu	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	Land	NN	*	land	sg	neut	-	13)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	5	mit	APPR	(PP*	mit	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	6	alten	ADJA	*	alt	pl	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	7	Namen	NN	*)))	name	pl	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	8	nennet	VVFIN	*	nennen	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	10	Wer	PWS	(CS(S*	wer	sg	masc	-	(17)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	11	nur	ADV	*	nur	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	12	Neu	ADJD	*	neu	*	*	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	13	Spanien	NE	*	spanien	sg	neut	(LOC*)	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	15	Neu	ADJD	*	neu	*	*	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	16	Holl-	TRUNC	(CNP*	holl	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	17	und	KON	*	und	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	18	England	NE	*)	england	sg	neut	(LOC*)	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	19	kennet	VVFIN	*)	kennen	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	20	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	21	Dem	PDS	(S*	der	sg	masc	-	(17)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	22	dünkt	VVFIN	*	dünken	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	23	es	PPER	*	es	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	24	gar	ADV	(AVP*	gar	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	25	nicht	PTKNEG	*)	nicht	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	26	fremd	ADJD	*)))	fremd	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	27	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	(LOC*)	(7|(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Die	ART	(VROOT(PSEUDO(CS(S(NP*	der	pl	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	Länder	NN	*)	land	pl	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	kenn	VVFIN	*	kenn	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	wohl	ADV	*)	wohl	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	6	Den	PDS	(S(CS(S*	den	sg	masc	-	(18)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	7	will	VMFIN	*	wollen	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	8	ich	PPER	*	ich	sg	*	-	(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	9	sehn	CARD	(NP*	sehn	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	11	der	PRELS	(S*	der	sg	masc	-	(18)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	12	mir	PPER	*	sich	sg	*	-	(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	13	das	PDS	*	der	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	14	streitig	PTKVZ	*	streitig	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	15	machen	VVINF	*	machen	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	16	soll	VMFIN	*)))	sollen	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	17	;	$.	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	18	Doch	KON	(S*	doch	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	19	es	PPER	*	es	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	20	mag	VMFIN	*	mögen	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	21	immer	ADV	(AP*	immer	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	22	seyn	ADJD	*)	seyn	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	23	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	24	ich	PPER	(S*	ich	sg	*	-	(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	25	kann	VMFIN	*	können	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	26	den	ART	(NP*	der	sg	masc	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	27	Namen	NN	*)	name	sg	masc	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	28	leiden	VVFIN	*)))	leiden	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	29	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	30	Ich	PPER	*	ich	sg	*	-	(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	31	war	VAFIN	*	sein	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	32	auch	ADV	(AP*	auch	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	33	gleich	ADV	*	gleich	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	34	bereit	ADJD	*	bereit	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	35	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	36	als	KOUS	(S*	als	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	37	Schäfer	NE	*	schäfer	sg	*	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	38	mich	PRF	*	mich	sg	*	-	(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	39	zu	PTKZU	(VZ*	zu	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	40	kleiden	VVINF	*)	kleiden	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	41	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	42	So	ADV	(S*	so	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	43	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	44	wie	PWAV	*	wie	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	45	du	PPER	*	du	sg	*	-	(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	46	mich	PRF	*	mich	sg	*	-	(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	47	hier	ADV	*	hier	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	48	siehst	VVFIN	*)))))	sehen	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	49	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	-	(0|(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Doch	KON	(VROOT(PSEUDO(CS(S*	doch	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	dieser	PDAT	(NP*	dieser	sg	masc	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	Haarbusch	NN	*)	haarbusch	sg	masc	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	hier	ADV	*	hier	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	Und	KON	(NP*	und	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	5	dieses	PDAT	*	dieser	sg	neut	-	(19
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	6	große	ADJA	*	groß	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	7	Schwerd	NN	*))	schwerd	sg	neut	-	19)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	9	was	PWS	(S*	was	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	10	soll	VMFIN	*	sollen	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	11	der	ART	(NP*	der	sg	masc	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	12	Anputz	NN	*)	anputz	sg	masc	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	13	dir	PPER	*	dir	sg	*	-	(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	14	In	APPR	(PP*	in	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	15	deiner	PPOSAT	*	dein	sg	fem	-	(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	16	Schäfertracht	NN	*)))	schäfertracht	sg	fem	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	17	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	(LOC*)	(7|(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Wie	PWAV	(VROOT(PSEUDO*	wie	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	ist	VAFIN	(VROOT(PSEUDO(S*	sein	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	das	PDS	*	der	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	hier	ADV	(NP(AVP*	hier	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*)	nicht	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	Mode	NN	*))	mode	sg	fem	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	-	(0|(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Wenn	KOUS	(VROOT(PSEUDO(S*	wenn	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	das	PDS	*	der	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	die	ART	(NP*	der	pl	masc	-	(20
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	Schäfer	NE	*)	schäfer	pl	masc	-	20)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	sehn	CARD	(VP(NP*	sehn	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	6	sie	PPER	(S*	sie	pl	*	-	(20)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	7	fürchten	VVFIN	*	fürchten	pl	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	8	sich	PRF	*))	sich	pl	-	-	(20)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	9	zu	PTKZU	(VZ*	zu	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	10	tode	VVINF	*)))	tode	sg	masc	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	(LOC*)	(7|(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Doch	KON	(VROOT(PSEUDO(S*	doch	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	weiß	VVFIN	*	weiß	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	denn	ADV	(NP*	denn	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	6	ob	KOUS	(S*	ob	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	7	man	PIS	*	man	sg	*	-	(15)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	8	auch	ADV	(NP*	auch	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	9	Schelmen	NN	*)	schelm	pl	masc	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	10	trauen	VVFIN	*))	trauen	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	11	kann	VMFIN	*)	können	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	12	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Mit	APPR	(VROOT(PSEUDO(S(PP*	mit	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	diesem	PDAT	*	dieser	sg	masc	-	(19
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	Säbel	NN	*)	säbel	sg	masc	-	19)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	hier	ADV	*	hier	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	steh	VVFIN	*	steh	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	5	ich	PPER	*	ich	sg	*	-	(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	6	für	APPR	(PP*	für	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	7	zwanzig	CARD	*	zwanzig	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	8	Mann	NN	*))	mann	*	masc	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	-	(0|(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Trau	NE	(VROOT(PSEUDO(S(CS(S*	trau	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	uns	PRF	*	uns	pl	*	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	nur	ADV	*	nur	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	auf	APPR	(PP*	auf	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	5	mein	PPOSAT	*	mein	sg	neut	-	(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	6	Wort	NN	*))	wort	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	8	hier	ADV	(S*	hier	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	9	weiß	VVFIN	*	weißn	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	10	man	PIS	*	man	sg	*	-	(15)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	11	nichts	PIS	(NP*	nichts	*	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	12	von	APPR	(PP*	von	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	13	Morden	NN	*))))	mord	pl	masc	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	15	In	APPR	(PP*	in	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	16	diesem	PDAT	*	dieser	sg	neut	-	(13
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	17	Land	NN	*)	land	sg	neut	-	13)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	18	ist	VAFIN	*	sein	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	19	noch	ADV	(VP(VP(NP(AP*	noch	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	20	kein	PIAT	*)	kein	sg	masc	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	21	Mensch	NN	*)	mensch	sg	masc	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	22	erwürget	VVPP	*)	erwürgen	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	23	worden	VAPP	*))	werden	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	24	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	(LOC*)	(7|(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Zum	APPRART	(VROOT(PSEUDO(PP*	zu	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	Element	NN	*)	element	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	so	ADV	(VROOT(PSEUDO(S*	so	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	werd	VVFIN	*	werden	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	nicht	PTKNEG	(NP*	nicht	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	der	ART	*	der	sg	masc	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	5	erste	ADJA	*)	erster	sg	masc	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	6	seyn	ADJD	*)	seyn	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	ändre	VVFIN	*	ändren	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	meinen	PPOSAT	(NP*	mein	pl	-	-	(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	Staat	NN	*)	staat	sg	masc	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	und	KON	*	und	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	5	geh	VVIMP	(S*	gehen	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	6	dir	PPER	*	dir	sg	*	-	(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	7	alles	PIS	*	alle	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	8	ein	ART	(S*	ein	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	9	;	$.	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	10	Doch	KON	(S*	doch	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	11	sage	VVFIN	*	sagen	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	12	mit	PTKVZ	*))	mit	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	14	wie	PWAV	(S*	wie	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	15	du	PPER	*	du	sg	*	-	(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	16	an	APPR	(VP(PP*	an	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	17	diesen	PDAT	*	dieser	sg	masc	-	(13
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	18	Ort	NN	*)	ort	sg	masc	-	13)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	19	gekommen	VVPP	*))))	kommen	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	20	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	-	(0|(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Ach	ITJ	(VROOT(PSEUDO(S*)	ach	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	(LOC*)	(7|(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Nun	ADV	(VROOT(PSEUDO*	nun	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	was	PWS	(S*	was	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	ach	VVFIN	*)	ach	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	was	PWS	*	was	*	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	giebts	ADV	*	giebt	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	hast	VAFIN	*	haben	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	du	PPER	(VP*	du	sg	*	-	(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	vorgenommen	VVPP	*))	vornehmen	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Ey	NE	(VROOT(PSEUDO(NP*	ey	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	Ey	NE	*)	ey	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	-	(0|(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Das	ART	(VROOT(PSEUDO(S(NP*	der	sg	neut	-	(21
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	Glück	NN	*)	glück	sg	neut	-	21)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	hat	VAFIN	*	haben	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	mich	PPER	*	mich	sg	*	-	(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	ins	APPRART	(PP*	in	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	5	Elend	NN	*)	elend	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	6	hergejagt	VVFIN	*	hergejagen	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	7	;	$.	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	8	Das	ART	(NP*	der	sg	neut	-	(21
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	9	Glück	NN	*	glück	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	11	das	PRELS	(S*	der	sg	neut	-	(21)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	12	bis	APPR	(PP*	bis	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	13	hieher	ADV	*)	hieher	sg	masc	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	14	mir	PPER	*	sich	sg	*	-	(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	15	seine	PPOSAT	(NP*	sein	sg	fem	-	(21)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	16	Treu	NN	*)	treu	sg	fem	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	17	versagt	VVPP	*)))	versagen	-	-	-	21)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	18	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Es	PPER	(VROOT(PSEUDO(S*	es	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	mußt	VMFIN	*	mussen	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	ein	ART	(NP*	ein	sg	masc	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	finstrer	ADJA	*	finstr	sg	masc	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	Thurm	NN	*)	thurm	sg	masc	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	5	an	APPR	(PP*	an	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	6	mir	PPER	*)	sich	sg	*	-	(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	7	die	ART	(S(NP*	der	sg	fem	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	8	Neider	NN	*)	neider	*	*	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	9	rächen	VVFIN	*)	rächen	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	11	Und	KON	(S*	und	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	12	ich	PPER	*	ich	sg	*	-	(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	13	ergriff	VVFIN	*	ergreifen	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	14	die	ART	(NP*	der	sg	fem	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	15	Flucht	NN	*)))	flucht	sg	fem	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	16	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	(LOC*)	(7|(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	war	VAFIN	*	sein	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	denn	ADV	*	denn	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	dein	PPOSAT	(NP*	dein	sg	neut	-	(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	Verbrechen	NN	*))	verbrechen	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	-	(0|(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(S(NP*	der	sg	masc	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	schönsten	ADJA	*	schön	pl	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	Liebe	NN	*	liebe	pl	*	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	Glück	NN	*)	glück	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	;	$.	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	5	man	PIS	*	man	sg	*	-	(15)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	6	brachte	VVFIN	*	bringen	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	7	mich	PPER	*	mich	sg	*	-	(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	8	darum	PROAV	(PP*	darum	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	10	Und	KON	(S*	und	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	11	nahm	VVFIN	*	nehmen	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	12	mich	PPER	*))	mich	sg	*	-	(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	13	in	APPR	(PP*	in	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	14	Verhaft	NN	*))	verhaft	sg	fem	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	15	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	(LOC*)	(7|(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Verflucht	NN	(VROOT(PSEUDO*	verflucht	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	das	ART	(VROOT(PSEUDO(S*	der	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	heiß	ADJD	*	heiß	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	dumm	ADJD	*)	dumm	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	-	(0|(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Gleich	ADV	(VROOT(PSEUDO(S(AVP*	gleich	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	drauf	PROAV	*)	drauf	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	starb	VVFIN	*	sterben	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	meine	PPOSAT	(NP*	mein	sg	fem	-	(22|(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	Frau	NN	*))	frau	sg	fem	-	22)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	(LOC*)	(7|(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Wie	PWAV	(VROOT(PSEUDO(S*	wie	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	hieß	VVFIN	*	heißen	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	sie	PPER	*)	sie	sg	fem	-	(22)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	-	(0|(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Celimene	NN	(VROOT(PSEUDO*))	celimene	-	-	-	(22)

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	(LOC*)	(7|(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Wie	PWAV	(VROOT(PSEUDO*	wie	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Celimene	NN	(VROOT(PSEUDO*	celimene	-	-	-	(22)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	–	XY	*	–	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	halt	ADV	(S*)	halt	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	–	XY	*	–	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	Ich	PPER	(S*	ich	sg	*	-	(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	kannt	VVFIN	*	kennen	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	einst	ADV	*	einst	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	5	eine	ART	(NP*	ein	sg	fem	-	(22
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	6	Schöne	NN	*))	schön	sg	fem	-	22)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	8	Die	PDS	(S*	der	sg	fem	-	(22)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	9	hieß	VVFIN	*	heißen	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	10	gerade	ADV	(AVP*	gerade	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	11	so	ADV	*))	so	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Potzstern	NN	(VROOT(PSEUDO*	potzstern	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	wer	PWS	(VROOT(PSEUDO(S*	wer	sg	masc	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	war	VAFIN	*	sein	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	sie	PPER	*	sie	*	*	-	(22)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	doch	ADV	*)	doch	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Still	NE	(VROOT(PSEUDO*	still	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	–	XY	*	–	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	–	XY	*	–	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	jetzo	ADV	(AP(AVP*	jetzo	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	fällt	VVFIN	(S*	fallen	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	5	mirs	PPER	*	mir	sg	*	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	6	ein	PTKVZ	*	ein	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	8	ja	ADV	*	ja	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	10	ja	ADV	*	ja	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	12	ich	PPER	(CS(S*	ich	sg	*	-	(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	13	weiß	VVFIN	*	weiß	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	14	es	PPER	*	es	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	15	noch	ADV	*)	noch	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	16	:	$.	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	17	Sie	PPER	(S(AVP(S*	sie	sg	fem	-	(22)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	18	war	VAFIN	*	sein	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	19	von	APPR	(PP*	von	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	20	gutem	ADJA	*	gut	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	21	Stand	NN	*)	stand	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	22	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	23	reich	ADJD	(CAP*	reich	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	24	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	25	klug	ADJD	*	klug	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	26	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	27	schön	ADJD	(AP*	schön	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	28	vom	APPRART	(PP*	von	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	29	Gesichte	NN	*))))	gesicht	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	30	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	31	Jedoch	KON	*)	jedoch	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	32	erzehle	VVFIN	*	erzehlen	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	33	mir	PPER	*	sich	sg	*	-	(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	34	doch	ADV	*))))	doch	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	35	ferner	ADV	*	ferner	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	36	die	ART	(NP*	der	sg	fem	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	37	Geschichte	NN	*))	geschichte	sg	fem	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	38	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	-	(0|(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	floh	VVFIN	*	fliehen	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	;	$.	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	es	PPER	(S*	es	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	förderte	VVFIN	*	fördert	sg	fem	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	5	Verzweiflung	NN	(NP*	verzweiflung	sg	fem	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	6	meinen	PPOSAT	(NP*	mein	sg	masc	-	(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	7	Schritt	NN	*))))	schritt	sg	masc	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	nahm	VVFIN	*	nehmen	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	nebst	ADV	*	nebst	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	einem	ART	(NP*	ein	sg	masc	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	Knecht	NE	*	knecht	sg	masc	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	5	drey	NE	*)	drey	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	6	kleine	ADJA	(NP*	klein	pl	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	7	Kinder	NN	*)	kind	pl	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	8	mit	PTKVZ	*)	mit	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Zwey	NE	(VROOT(PSEUDO(S(S*	zwey	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	waren	VAFIN	*	sein	pl	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	nur	ADV	*	nur	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	von	APPR	(PP*	von	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	mir	PPER	*))	sich	sg	*	-	(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	6	eins	CARD	*	eins	sg	neut	-	(5)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	7	war	VAFIN	*	sein	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	8	von	APPR	(PP*	von	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	9	meinem	PPOSAT	*	mein	sg	masc	-	(7|(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	10	Freunde	NN	*))	freund	sg	masc	-	7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(CS(S*	ich	sg	*	-	(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	floh	VVFIN	*)	floh	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	und	KON	*	und	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	kam	VVFIN	(S*	kommen	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	5	hieher	PTKVZ	*)	hieher	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	7	hier	ADV	(S*	hier	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	8	leb	VVFIN	*	leb	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	9	ich	PPER	*	ich	sg	*	-	(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	10	ohne	APPR	(PP*	ohne	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	11	Feinde	NN	*)))	feind	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	(LOC*)	(7|(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Doch	KON	(VROOT(PSEUDO(S*	doch	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	warum	PWAV	*	warum	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	nahmst	VVFIN	*	nahmen	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	du	PPER	*	du	sg	*	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	denn	ADV	*	denn	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	5	des	ART	(NP*	der	sg	masc	-	(5|(7
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	6	Freundes	NN	*)	freund	sg	masc	-	7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	7	Kind	NN	*	kind	sg	neut	-	5)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	8	mit	APPR	(PP*	mit	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	9	dir	PPER	*))	dir	sg	*	-	(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	10	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	-	(0|(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	O	NE	(VROOT(PSEUDO(S*	O	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	der	ART	(S*	der	sg	masc	-	(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	zog	VVFIN	*	ziehen	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	in	APPR	(PP*	in	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	5	die	ART	*	der	sg	fem	-	(9
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	6	Welt	NN	*)))	welt	sg	fem	-	9)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	(LOC*)	(7|(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Darinnen	ADV	*	darin	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	gleicht	VVFIN	*	gleichen	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	er	PPER	*	er	sg	masc	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	mir	PPER	*	sich	sg	*	-	(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	.	$.	*	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Wir	PPER	(VROOT(PSEUDO(S(CS(S*	wir	pl	*	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	hätten	VAFIN	*	haben	pl	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	uns	PPER	(VP*	uns	pl	*	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	recht	ADV	(AP*	recht	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	gut	ADJD	*)	gut	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	5	zusammen	ADV	*	zusammen	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	6	schicken	VVINF	*)	schicken	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	7	sollen	VMFIN	*)	sollen	pl	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	9	Ich	PPER	(S*	ich	sg	*	-	(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	10	hätte	VAFIN	*	haben	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	11	recht	ADV	(AVP*	recht	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	12	mit	APPR	(PP*	mit	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	13	ihm	PPER	*))	ihm	sg	masc	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	14	die	ART	(NP*	der	sg	fem	-	(9
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	15	Welt	NN	*)	welt	sg	fem	-	9)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	16	durchstreichen	VVINF	*	durchstreichen	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	17	wollen	VMFIN	*))	wollen	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	18	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	19	Ich	PPER	*	ich	sg	*	-	(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	20	reist	VVFIN	*	reisen	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	21	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	22	und	KON	(S*	und	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	23	überließ	VVFIN	*	überlassen	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	24	mich	PPER	*	mich	sg	*	-	(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	25	Wellen	NN	(NP*	welle	pl	fem	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	26	Sturm	NN	(CNP*	sturm	sg	masc	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	27	und	KON	*	und	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	28	Wind	NN	*))))	wind	sg	masc	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	29	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Befahl	NE	(VROOT(PSEUDO(S(AVP(NP*	befahl	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	dem	ART	(CNP(NP*	der	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	Himmel	NN	*)	himmel	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	Haus	NN	*	haus	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	5	und	KON	*	und	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	6	Hof	NN	*	hof	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	7	und	KON	*	und	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	8	Weib	NN	*	weib	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	9	und	KON	*	und	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	10	Kind	NN	*))	kind	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	12	Und	KON	*)	und	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	13	bin	VAFIN	*	sein	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	14	fast	ADV	(NP(AP*	fast	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	15	zwanzig	CARD	*)	zwanzig	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	16	Jahr	NN	*)	jahr	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	17	die	ART	(VP(NP*	der	sg	fem	-	(9
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	18	ganze	ADJA	*	ganz	sg	fem	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	19	Welt	NN	*)	welt	sg	fem	-	9)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	20	durchkrochen	VVPP	*))	durchkrochen	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	21	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Nur	ADV	(VROOT(PSEUDO(S*	nur	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	bin	VAFIN	*	sein	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	masc	-	(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*	nicht	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	entflohn	VVINF	(VP*	entflohn	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	6	und	KON	(S*	und	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	7	hab	VAFIN	*	hab	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	8	auch	ADV	(VP*	auch	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	9	nichts	PIS	*	nichts	*	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	10	verbrochen	VVPP	*	verbrechen	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	12	Doch	KON	(S*	doch	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	13	meiner	PPOSAT	(NP(NP*	mein	sg	fem	-	(23|(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	14	Kinder	NN	*)	kind	*	*	-	23)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	15	Glück	NN	*)	glück	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	16	empfahl	VVFIN	*	empfehlen	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	17	mir	PPER	*	sich	sg	*	-	(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	18	die	ART	(NP*	der	sg	fem	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	19	Natur	NN	*))))))	natur	sg	fem	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	20	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	-	(0|(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Wer	PWS	*	wer	sg	masc	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	waren	VAFIN	*	sein	pl	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	sie	PPER	*	sie	pl	*	-	(23)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	?	$.	*	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	(LOC*)	(7|(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Ein	ART	(VROOT(PSEUDO(CNP(NP*	ein	sg	masc	-	(3
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	Sohn	NN	*)	sohn	sg	masc	-	3)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	und	KON	*	und	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	eine	ART	(NP*	ein	sg	fem	-	(5
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	Tochter	NN	*	tochter	sg	fem	-	5)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	5	nur	ADV	*))	nur	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	-	(0|(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Wie	PWAV	(VROOT(PSEUDO(S*	wie	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	aber	ADV	*	aber	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	hieß	VVFIN	*	heißen	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	dein	PPOSAT	(NP*	dein	sg	masc	-	(3|(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	Sohn	NN	*))	sohn	sg	masc	-	3)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	(LOC*)	(7|(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Leander	NE	(VROOT(PSEUDO*	leander	-	-	(PER*)	(3)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*))	montan	-	-	-	(0)

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	sieht	VVFIN	(VROOT(PSEUDO(S(S*	sehen	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	ihn	PPER	*)	ihn	sg	masc	-	(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	steif	VVFIN	*	steif	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	an	PTKVZ	*)	an	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Meinem	PPOSAT	(VROOT(PSEUDO(S(NP*	mein	sg	masc	-	(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	Herzen	NN	*)	herz	sg	masc	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	Sagt	VVFIN	*	sagt	sg	masc	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	hier	ADV	*	hier	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	die	ART	(NP*	der	sg	fem	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	5	Ahndung	NN	*)	ahndung	sg	fem	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	6	was	PWS	(S*	was	*	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	7	mit	APPR	(PP*	mit	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	8	Hoffnungsvollen	NN	*)	hoffnungsvolle	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	9	Schmerzen	NN	*))	schmerz	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Noch	ADV	(VROOT(PSEUDO(NP*	noch	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	eins	CARD	*)	einer	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Mein	PPOSAT	(VROOT(PSEUDO(NP*	mein	sg	masc	-	(7|(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	werther	ADJA	*	werther	sg	masc	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	Freund	NN	*)	freund	sg	masc	-	7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	verzeih	ADJD	*	verzeih	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	wie	PWAV	*	wie	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	nennst	ADV	*	nennen	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	du	PPER	*	du	sg	*	-	(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	5	dich	PRF	*	dich	sg	-	-	(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	6	?	$.	*	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	(LOC*)	(7|(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Ich	PPER	*	ich	sg	*	-	(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	?	$.	*	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Orgon	NE	(VROOT(PSEUDO*	orgon	-	-	-	(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	-	(0|(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Orgon	NE	(VROOT(PSEUDO(MPN*	orgon	-	-	-	(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	?	$.	*)))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	(LOC*)	(7|(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Ja	PTKANT	(VROOT(PSEUDO(S*	ja	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	der	ART	(NP*	der	sg	masc	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	Teufel	NN	*)	teufel	sg	masc	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	hole	VVFIN	*	holen	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	5	mich	PPER	*)	mich	sg	*	-	(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	6	!	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Allein	ADV	(VROOT(PSEUDO*	allein	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	wie	PWAV	(S*	wie	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	heissest	ADV	(NP*	heissest	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	du	PPER	*))	du	sg	*	-	(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	-	(0|(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Oronte	NE	(VROOT(PSEUDO*	oronen	sg	-	-	(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	(LOC*)	(7|(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Wie	PWAV	(VROOT(PSEUDO*	wie	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Oronte	NE	(VROOT(PSEUDO(MPN*	oronte	sg	-	-	(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	?	$.	*)))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	-	(0|(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	O	NE	(VROOT(PSEUDO(NP*	O	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	Zufall	NN	*)	zufall	-	-	-	(24)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	der	ART	(VROOT(PSEUDO(S*	der	sg	masc	-	(24)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	mich	PPER	*	mich	sg	*	-	(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	noch	ADV	*	noch	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	allein	ADV	*	allein	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	beglücken	VVINF	*	beglücken	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	5	konnte	VMFIN	*)	können	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	6	!	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Umarme	NN	(VROOT(PSEUDO(S*	umarmen	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	mich	PPER	*	mich	sg	*	-	(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	mein	PPOSAT	(NP*	mein	sg	masc	-	(7|(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	Freund	NN	*	freund	sg	masc	-	7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	5	,	$,	*))))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	(LOC*)	(7|(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Zum	APPRART	(VROOT(PSEUDO(PP*	zu	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	Teufel	NN	*	teufel	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	ists	ADV	(S(AVP*	ists	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	denn	ADV	*)	denn	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	5	wahr	ADJD	*))	wahr	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Bist	VAFIN	(VROOT(PSEUDO(S*	sein	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	du	PPER	*	du	sg	*	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	mein	PPOSAT	(NP*	mein	sg	masc	-	(0|(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	Freund	NN	*	freund	sg	masc	-	0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	5	Oront	NN	*))	oront	sg	-	-	(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	-	(0|(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	bin	VAFIN	*	sein	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	es	PPER	(NP*	es	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	es	PPER	(S*	es	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	5	ist	VAFIN	*	sein	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	6	klar	ADJD	*)))	klar	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	(LOC*)	(7|(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Ach	ITJ	(VROOT(PSEUDO(S*)	ach	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	liebster	ADJA	(NP*	liebe	sg	masc	-	(0
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	Herzensfreund	NN	*)	herzensfreund	sg	masc	-	0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	fresse	VVFIN	*	fressen	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	dich	PRF	*	dich	sg	*	-	(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	für	APPR	(PP*	für	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	Freuden	NN	*))	freude	pl	fem	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	-	(0|(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	O	NE	(VROOT(PSEUDO(NP*	O	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	Himmel	NN	*)	himmel	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	welche	PWAT	(VROOT(PSEUDO(S(NP*	welcher	sg	fem	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	Lust	NN	*)	lust	sg	fem	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	erweckt	VVFIN	*	erwecken	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	das	ART	(NP*	der	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	Glück	NN	*)	glück	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	5	uns	PPER	*	uns	pl	*	-	(8)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	6	Beiden	NN	*)	beiden	pl	fem	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Umart	NE	(VROOT(PSEUDO(S*	umart	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	ihn	PPER	(AP*	ihn	sg	masc	-	(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	sehr	ADV	*	sehr	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	hitzig	ADJD	*))	hitzig	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Ach	ITJ	(VROOT(PSEUDO(S*)	ach	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	Organ	NN	*	organ	-	-	-	(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	(LOC*)	(7|(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Ach	ITJ	(VROOT(PSEUDO(S*)	ach	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	Oront	ITJ	(S*)	oront	-	-	-	(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	-	(0|(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Ach	ITJ	(VROOT(PSEUDO(S*)	ach	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	Corydon	NE	*	corydon	-	-	-	(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	(LOC*)	(7|(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Montan	NE	(VROOT(PSEUDO(MPN*	montan	sg	neut	-	(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	!	$.	*)))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	-	(0|(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Ach	ITJ	(VROOT(S*))	ach	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	(LOC*)	(7|(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Ach	ITJ	(VROOT(S*))	ach	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	-	(0|(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO*))	ich	sg	*	-	(0)

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	(LOC*)	(7|(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO*))	ich	sg	*	-	(7)

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	-	(0|(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Bin	NE	(VROOT(PSEUDO*))	sein	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	(LOC*)	(7|(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Bin	NE	(VROOT(PSEUDO*))	sein	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	-	(0|(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Entzückt	VVPP	*	entzückt	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	(LOC*)	(7|(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Entzückt	VVPP	*	entzückt	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	-	(0|(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Ich	PPER	*	ich	sg	*	-	(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	kann	VMFIN	*	können	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	(LOC*)	(7|(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Ich	PPER	*	ich	sg	*	-	(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	kann	VMFIN	*	können	sg	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	-	(0|(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Kann	VMFIN	*	können	sg	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	(LOC*)	(7|(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Kann	VMFIN	(VROOT(PSEUDO(S*	können	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	Corydon	NE	(CNP*	corydon	sg	neut	-	(8|(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	und	KON	*	und	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	Montan	NE	*)	montan	sg	neut	-	8)|(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	zugleich	ADV	*	zugleich	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	6	sich	PRF	(AP*	sich	pl	-	-	(8)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	7	umarmend	ADJD	*	umarmend	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	8	.	$.	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	9	Nicht	PTKNEG	(AVP*	nicht	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	10	mehr	ADV	*)))	mehr	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Corydon	NE	*	corydon	sg	neut	-	(8|(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	und	KON	*	und	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	Montan	NE	*	montan	sg	neut	-	8)|(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	zugleich	ADV	*	zugleich	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	5	sich	PRF	*	sich	pl	-	-	(8)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	6	umarmend	ADJD	*	umarmend	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	7	.	$.	*	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Corydon	NE	*	corydon	-	-	-	(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	fällt	VVFIN	*	fallen	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	um	PTKVZ	*	um	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	und	KON	*	und	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	reißt	VVFIN	*	reißen	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	5	den	ART	*	der	sg	masc	-	(0
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	6	Montan	NN	*	montan	sg	masc	-	0)|(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	7	mit	APPR	*	mit	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	8	nieder	PTKVZ	*	nieder	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	9	.	$.	*	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Schweigen	NN	(VROOT(PSEUDO(S(NP*	schweigen	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	eine	ART	(NP*	ein	sg	fem	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	Weile	NN	*))	weile	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	stille	VVFIN	*)	stille	sg	fem	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	-	(0|(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	O	NE	(VROOT(PSEUDO(NP*	O	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	größtes	ADJA	*	groß	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	Glück	NN	*	glück	sg	neut	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	der	ART	(NP*	der	sg	fem	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	Erden	NN	*))	erde	sg	fem	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	(LOC*)	(7|(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Für	APPR	(VROOT(PSEUDO(S(PP*	für	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	Freuden	NN	*)	freude	pl	fem	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	möcht	VVFIN	*	möchen	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	ich	PPER	(NP*	ich	sg	*	-	(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	5	ja	ADV	*))	ja	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	6	–	XY	*	–	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	7	möcht	VVFIN	(S*	möchen	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	8	ich	PPER	*	ich	sg	*	-	(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	9	des	ART	(VP(NP*	der	sg	masc	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	10	Teufels	NN	*)	teufel	sg	masc	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	11	werden	VAINF	*))	werden	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	-	(0|(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Ja	PTKANT	*	ja	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	ja	PTKANT	*	ja	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	du	PPER	*	du	sg	*	-	(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	5	bists	VVFIN	*	bists	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	6	.	$.	*	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*))	corydon	-	-	-	(7)

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	einander	ADV	(VROOT(PSEUDO(AP*	einander	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	steif	ADJD	*	steif	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	ansehend	ADJD	*)	ansehend	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Du	PPER	(VROOT(PSEUDO(NP*	du	sg	*	-	(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	auch	ADV	*)	auch	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	-	(0|(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	0	Doch	KON	(VROOT(PSEUDO(S*	doch	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	1	noch	ADV	(NP*	noch	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	2	ein	ART	*	ein	sg	masc	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	3	größer	ADJD	*	groß	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	4	Glück	NN	*)	glück	sg	masc	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	5	Muß	VMFIN	*	müssen	sg	masc	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	6	dir	PPER	*	dir	sg	*	-	(7)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	7	entdecket	VVFIN	*	entdecken	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	8	seyn	ADJD	(AP*	seyn	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	10	komm	ADJD	(AP*	komm	sg	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	11	nur	ADV	(PP*	nur	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	12	mit	APPR	*	mit	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	13	mir	PPER	*)))	sich	sg	*	-	(0)
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	14	zurück	PTKVZ	*)	zurück	-	-	-	-
Schaeferinsel_Act3_Scene1.part.xml.st5r.0.CoNLL2012.conll	000	15	.	$.	*))	--	-	-	-	-

#end document
