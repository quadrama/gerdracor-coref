#begin document (Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll); part 000
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Saladin	NE	(VROOT(PSEUDO(CNP*	saladin	sg	*	-	(7)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	und	KON	*	und	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	Nathan	NE	*)	nathan	sg	*	-	(1)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Tritt	VVFIN	(VROOT(PSEUDO(S*	treten	sg	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	näher	ADJD	*	nah	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	Jude	NN	*)	jude	sg	masc	-	(1)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	Näher	ADJD	*	nah	pl	masc	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*	--	-	-	-	-

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	Nur	ADV	(S*	nur	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	ganz	ADV	*	ganz	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	her	PTKVZ	*)	her	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	Nur	ADV	*	nur	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	ohne	APPR	*	ohne	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	Furcht	NN	*	furcht	sg	fem	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Die	ART	(VROOT(PSEUDO(NP*	der	sg	fem	-	(15)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	bleibe	FM	(MPN*	bleiben	sg	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	deinem	FM	*	dein	sg	masc	-	(16|(7)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	Feinde	FM	*))	feind	sg	-	-	16)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Du	PPER	(VROOT(PSEUDO(S*	du	sg	*	-	(1)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	nennst	VVFIN	*	nennen	sg	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	dich	PRF	*)	dich	sg	-	-	(1)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	Nathan	NE	*	nathan	-	-	-	(17)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ja	PTKANT	*	ja	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*	--	-	-	-	-

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Den	ART	(VROOT(PSEUDO(NP*	der	sg	masc	-	(17
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	weisen	ADJA	*	weisen	sg	masc	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	Nathan	NN	*)	nathan	sg	-	-	17)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nein	PTKANT	*	nein	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*	--	-	-	-	-

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wohl	ADV	(VROOT(PSEUDO(S*)	wohl	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	nennst	VVFIN	(VROOT(PSEUDO(S*	nennen	sg	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	du	PPER	*	du	sg	*	-	(1)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	dich	PRF	*	dich	sg	-	-	(1)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	nennt	VVFIN	(S*	nennen	sg	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	dich	PPER	*	dich	sg	-	-	(1)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	das	ART	(NP*	der	sg	neut	-	(18
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	Volk	NN	*)))	volk	sg	neut	-	18)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Kann	VMFIN	*	können	sg	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	sein	VAINF	*	sein	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	das	ART	*	der	sg	neut	-	(18
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	Volk	NN	*	volk	sg	neut	-	18)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	!	$.	*	--	-	-	-	-

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Du	PPER	(VROOT(PSEUDO(CS(S*	du	sg	*	-	(1)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	glaubst	VVFIN	*	glauben	sg	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	doch	ADV	*	doch	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*)	nicht	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	daß	KOUS	(S*	daß	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	ich	PPER	*	ich	sg	*	-	(7)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	Verächtlich	ADJD	*	verächtlich	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	von	APPR	(PP*	von	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	des	ART	(NP*	der	sg	neut	-	(18
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	Volkes	NN	*)	volk	sg	neut	-	18)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	Stimme	NN	*)	stimme	sg	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	12	denke	VVFIN	*))	denken	sg	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	13	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ich	PPER	(S*	ich	sg	*	-	(7)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	habe	VAFIN	*	haben	sg	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	längst	ADV	(VP*	längst	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	gewünscht	VVPP	*	wünschen	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	den	ART	(S(VP(NP*	der	sg	masc	-	(1
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	Mann	NN	*)	mann	sg	masc	-	1)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	kennen	VVINF	*))	kennen	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	Den	NE	*	der	sg	masc	-	(1)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	12	es	PPER	*	es	sg	neut	-	(18)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	13	den	ART	(NP*	der	sg	masc	-	(19
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	14	Weisen	NN	*))))	weise	sg	masc	-	19)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	15	nennt	VVFIN	*	nennen	sg	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	16	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	wenn	KOUS	*	wenn	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	es	PPER	*	es	sg	neut	-	(18)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	ihn	PPER	*	ihn	sg	masc	-	(1)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	Zum	APPRART	(PP*	zu	sg	masc	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	Spott	NN	*)	spott	sg	masc	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	so	ADV	*	so	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	nennte	VVFIN	*)	nennen	sg	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wenn	KOUS	*	wenn	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	dem	ART	*	der	sg	neut	-	(18
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	Volke	NN	*	volk	sg	neut	-	18)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	weise	VVFIN	*	weise	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	Nichts	PIS	*	nichts	*	neut	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	weiter	ADV	*	weiter	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	wär	ADJD	*	sein	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	'	$(	*	--	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	als	APPR	*	als	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	klug	ADJD	*	klug	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	?	$.	*	--	-	-	-	-

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	klug	VVFIN	*	klug	sg	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	nur	ADV	(NP*	nur	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	der	PDS	*	der	sg	masc	-	(20
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	20)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	Der	PRELS	(S*	der	sg	masc	-	(20)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	sich	PRF	*	sich	sg	-	-	(20)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	auf	APPR	(PP*	auf	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	seinen	PPOSAT	*	sein	sg	masc	-	(21|(20)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	Vorteil	NN	*)	vorteil	sg	masc	-	21)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	gut	ADJD	*	gut	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	versteht	VVFIN	*)))	verstehen	sg	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	12	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Auf	APPR	(VROOT(PSEUDO(PP*	auf	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	seinen	PPOSAT	*	sein	sg	masc	-	(21|(20)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	wahren	ADJA	*	wahr	sg	masc	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	Vorteil	NN	*	vorteil	sg	masc	-	21)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	meinst	ADV	(S*	meinst	sg	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	du	PPER	*	du	sg	*	-	(1)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	doch	ADV	*))	doch	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Dann	ADV	*	dann	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	freilich	ADV	*	freilich	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	wär	VAFIN	*	sein	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	'	$(	*	--	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	der	ART	*	der	sg	masc	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	Eigennützigste	NN	*	eigennützigst	sg	masc	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	Der	ART	*	der	sg	masc	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	Klügste	NN	*	klügste	sg	masc	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	.	$.	*	--	-	-	-	-

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Dann	ADV	*	dann	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	wär	VAFIN	*	sein	sg	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	freilich	ADV	*	freilich	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	klug	ADJD	*	klug	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	und	KON	*	und	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	weise	VVFIN	*	weise	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	Nur	ADV	*	nur	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	eins	PIS	*	eins	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	.	$.	*	--	-	-	-	-

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(7)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	höre	VVFIN	*	hören	sg	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	dich	PRF	(VP*	dich	sg	-	-	(1)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	erweisen	VVINF	*	erweisen	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	was	PWS	(S*	was	sg	neut	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	Du	PPER	*	du	sg	*	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	widersprechen	VVINF	*	widersprechen	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	willst	VMFIN	*)))	wollen	sg	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	Des	ART	(NP*	der	sg	*	-	(56
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	Menschen	NN	*)	mensch	pl	masc	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	wahre	ADJA	*	wahr	pl	masc	-	56)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	Vorteile	NN	(NP*	vorteil	pl	masc	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	die	PRELS	(S*	der	pl	masc	-	(22)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	das	ART	(NP*	der	sg	neut	-	(18
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	Volk	NN	*)	volk	sg	neut	-	18)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	kennt	VVFIN	*	kennen	sg	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	12	kennst	VVFIN	(S*	kennen	sg	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	13	du	PPER	*)))	du	sg	*	-	(1)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	14	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Hast	VAFIN	(VROOT(PSEUDO(CS(S*	haben	sg	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	du	PPER	*	du	sg	*	-	(1)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	kennen	VVINF	*)	kennen	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	wenigstens	ADV	*	wenigstens	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	gesucht	VVPP	*	suchen	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	Hast	NN	(S*	haben	pl	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	drüber	PROAV	(VP*	drüber	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	nachgedacht	VVPP	*)))	nachdenken	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	:	$.	*	--	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	das	ART	(NP*	der	sg	neut	-	(23)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	12	auch	ADV	(AP*	auch	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	13	allein	ADV	(AP*	allein	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	14	Macht	NN	*))	macht	sg	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	15	schon	ADV	(AP*	schon	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	16	den	ART	*)	der	sg	masc	-	(24
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	17	Weisen	NN	*))	weise	sg	masc	-	24)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	18	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Der	ART	*	der	sg	masc	-	(24)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	sich	PRF	*	sich	sg	-	-	(25)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	jeder	PIS	*	jeder	sg	masc	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	dünkt	ADJD	*	dünken	sg	masc	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	Zu	PTKZU	*	zu	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	sein	VAINF	*	sein	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	.	$.	*	--	-	-	-	-

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nun	ADV	(VROOT(PSEUDO(S*	nun	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	der	ART	(NP*	der	sg	fem	-	(26
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	Bescheidenheit	NN	*	bescheidenheit	sg	fem	-	26)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	genug	ADV	*))	genug	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Denn	KON	(VROOT(PSEUDO(S*	denn	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	sie	PPER	(VP*	sie	*	*	-	(26)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	nur	ADV	(AVP*	nur	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	immerdar	ADV	*)	immerdar	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	hören	VVINF	*)	hören	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	wo	PWAV	(S*	wo	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	Man	NE	(NP*	man	sg	*	-	(25)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	trockene	ADJA	*	trocken	sg	-	-	(27
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	Vernunft	NN	*)	vernunft	sg	fem	-	27)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	erwartet	VVPP	*))	erwarten	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	13	ekelt	VVFIN	*)	ekeln	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	14	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Er	PPER	(VROOT(PSEUDO(S*	er	sg	masc	-	(7)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	springt	VVFIN	*	springen	sg	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	auf	PTKVZ	*)	auf	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Laß	VVIMP	(VROOT(PSEUDO(S*	lassen	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	uns	PPER	*	uns	pl	*	-	(28)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	zur	APPRART	(VP(PP*	zu	sg	fem	-	(29
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	Sache	NN	*)	sache	sg	fem	-	29)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	kommen	VVINF	*))	kommen	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Aber	KON	*	aber	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	aber	KON	*	aber	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	Aufrichtig	ADJD	*	aufrichtig	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	Jud	NE	*	jud	-	-	-	(1)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	'	$(	*	--	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	aufrichtig	ADJD	*	aufrichtig	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	!	$.	*	--	-	-	-	-

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Sultan	NE	(VROOT(PSEUDO(S*	sultan	-	-	-	(7)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(1)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	Will	VMFIN	*	wollen	sg	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	sicherlich	ADV	*	sicherlich	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	dich	PRF	(VP*	dich	sg	*	-	(7)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	so	ADV	*	so	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	bedienen	VVINF	*)	bedienen	pl	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	daß	KOUS	(S*	daß	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	Ich	PPER	(NP*	ich	sg	*	-	(1)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	deiner	PPOSAT	*	dein	sg	-	-	(7)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	12	fernern	ADV	*	fernern	pl	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	13	Kundschaft	NN	*	kundschaft	sg	fem	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	14	würdig	ADJD	*)	würdig	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	15	bleibe	VVFIN	*))	bleiben	sg	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	16	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Bedienen	NN	(VROOT(PSEUDO*	bediener	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	wie	PWAV	(VROOT(PSEUDO*	wie	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Du	PPER	(VROOT(PSEUDO(CS(S*	du	sg	*	-	(7)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	sollst	VMFIN	*	sollen	sg	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	das	ART	(NP*	der	sg	neut	-	(30
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	Beste	NN	*)	gut	sg	neut	-	30)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	haben	VAFIN	*	haben	pl	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	Von	APPR	(PP*	von	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	allem	PIS	*))	alle	sg	neut	-	(31)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	sollst	VMFIN	(S*	sollen	sg	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	es	PPER	*	es	sg	neut	-	(30)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	um	APPR	(VP(PP*	um	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	den	ART	*	der	sg	masc	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	12	billigsten	ADJA	*	billig	sg	masc	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	13	Preis	NN	*)	preis	sg	masc	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	14	haben	VAINF	*)))	haben	pl	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	15	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wovon	PWAV	(VROOT(PSEUDO(S*	wovon	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	sprichst	ADV	(NP*	sprichen	sg	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	du	PPER	*))	du	sg	*	-	(1)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	doch	ADV	(VROOT(PSEUDO(PP(AVP*	doch	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	wohl	ADV	*)	wohl	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	Von	APPR	*	von	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	deinen	PPOSAT	*	dein	pl	fem	-	(32|(1)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	Waren	NN	*)	sein	pl	fem	-	32)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	*	*	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	Schachern	NN	(S*	schach	sg	neut	-	(33
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	wird	VAFIN	*	werden	sg	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	mit	APPR	(PP*	mit	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	dir	PPER	*))	dir	sg	*	-	33)|(1)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	Schon	ADV	(NP*	schon	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	meine	PPOSAT	*	mein	sg	fem	-	(34|(7)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	Schwester	NN	*)	schwester	sg	fem	-	34)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	(	$(	*	--	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	Das	PDS	*	der	sg	neut	-	(33)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	der	ART	*	der	sg	fem	-	(34
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	Horcherin	NN	*	horcherin	sg	fem	-	34)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	!	$.	*	--	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	)	$(	*	--	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	–	$(	*	–	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	Ich	PPER	*	ich	sg	*	-	(7)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	habe	VAFIN	*	haben	sg	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	mit	APPR	*	mit	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	dem	ART	*	der	sg	neut	-	(35
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	Kaufmann	NN	*	kaufmann	sg	neut	-	35)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	12	nichts	PIS	*	nichts	*	neut	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	13	zu	PTKZU	*	zu	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	14	tun	VVINF	*	tun	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	15	.	$.	*	--	-	-	-	-

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	So	ADV	(VROOT(PSEUDO(S(S*	so	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	wirst	VVFIN	*	werden	sg	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	du	PPER	*	du	sg	*	-	(7)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	ohne	APPR	(VP(PP*	ohne	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	Zweifel	NN	*)	zweifel	sg	masc	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	wissen	VVINF	*))	wissen	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	wollen	VMFIN	*	wollen	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	Was	PWS	(S*	was	sg	neut	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	ich	PPER	*	ich	sg	*	-	(1)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	auf	APPR	(PP*	auf	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	meinem	PPOSAT	*	mein	sg	masc	-	(36|(1)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	12	Wege	NN	*)	weg	sg	masc	-	36)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	13	von	APPR	(PP*	von	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	14	dem	ART	*	der	sg	neut	-	(16
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	15	Feinde	NN	*	feind	sg	neut	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	16	,	$,	*	--	-	-	-	16)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	17	Der	PRELS	(S*	der	sg	masc	-	(16)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	18	allerdings	ADV	*	allerdings	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	19	sich	PRF	*	sich	sg	-	-	(16)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	20	wieder	ADV	*	wieder	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	21	reget	VVFIN	*))	reget	sg	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	22	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	23	etwa	ADV	(VP*	etwa	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	24	Bemerkt	NN	*	bemerkt	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	25	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	26	getroffen	VVPP	*)))	treffen	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	27	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	Wenn	KOUS	(S*	wenn	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(1)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	unverhohlen	ADJD	*)	unverhohlen	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	.	$.	*	--	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	.	$.	*	--	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Auch	ADV	(VROOT(PSEUDO(S(AVP*	auch	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	darauf	PROAV	*)	darauf	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	bin	VAFIN	*	sein	sg	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	masc	-	(7)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	eben	ADV	*	eben	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	mit	APPR	(NP(PP*	mit	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	dir	PPER	*)	dir	sg	*	-	(1)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	Gesteuert	NN	*))	gesteuert	sg	neut	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Davon	PROAV	(VROOT(PSEUDO(S*	davon	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	weiß	VVFIN	*	weiß	sg	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(7)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	schon	ADV	*	schon	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	so	ADV	(S*	so	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	viel	PIS	*	viel	*	*	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	Ich	PPER	*	ich	sg	*	-	(7)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	nötig	ADJD	*	nötig	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	habe	VAFIN	*))	haben	sg	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	Kurz	NN	*	kurz	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	–	XY	*	–	-	-	-	-

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Gebiete	NN	(VROOT(PSEUDO(CNP*	gebiet	pl	neut	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	Sultan	NN	*)	sultan	pl	neut	-	(7)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(7)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	heische	VVFIN	*	heisch	sg	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	deinen	PPOSAT	(NP*	dein	sg	masc	-	(1)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	Unterricht	NN	*)	unterricht	sg	masc	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	in	APPR	(PP*	in	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	ganz	ADV	*))	ganz	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	Was	PWS	(S*	was	sg	neut	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	anderm	PIS	*	ander	sg	neut	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	ganz	ADV	(S*	ganz	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	was	PIS	(NP*	was	sg	neut	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	anderm	PIS	*)))	ander	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	Da	KOUS	*	da	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	du	PPER	*	du	sg	*	-	(1)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	nun	ADV	*	nun	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	So	ADV	*	so	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	weise	ADJD	*	weise	sg	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	bist	VAFIN	*	sein	sg	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	:	$.	*	--	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	so	ADV	*	so	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	sage	VVFIN	*	sagen	sg	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	mir	PPER	*	sich	sg	*	-	(7)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	doch	ADV	*	doch	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	12	einmal	ADV	*	einmal	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	13	–	$(	*	–	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	14	Was	PWS	*	was	sg	neut	-	(37
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	15	für	APPR	*	für	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	16	ein	ART	*	ein	sg	neut	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	17	Glaube	NN	*	glaube	sg	neut	-	37)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	18	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	19	was	PWS	*	was	sg	neut	-	(38
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	20	für	APPR	*	für	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	21	ein	ART	*	ein	sg	neut	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	22	Gesetz	NN	*	gesetz	sg	neut	-	38)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	23	Hat	VAFIN	*	haben	sg	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	24	dir	PPER	*	dir	sg	*	-	(1)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	25	am	PTKA	*	an	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	26	meisten	PIS	*	meister	*	*	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	27	eingeleuchtet	VVPP	*	eingeuchten	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	28	?	$.	*	--	-	-	-	-

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Sultan	NE	*	sultan	-	-	-	(7)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	Ich	PPER	*	ich	sg	*	-	(1)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	bin	VAFIN	*	sein	sg	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	ein	ART	*	ein	sg	neut	-	(39
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	Jud	NN	*	jud	sg	neut	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	'	$(	*	--	-	-	-	39)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	.	$.	*	--	-	-	-	-

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	ich	PPER	*	ich	sg	*	-	(7)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	ein	ART	(NP*	ein	sg	masc	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	Muselmann	NN	*))	muselmann	sg	masc	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(S(NP*	der	sg	masc	-	(40
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	Christ	NN	*)	christ	sg	masc	-	40)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	zwischen	APPR	(PP*	zwischen	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	uns	PPER	*))	uns	pl	*	-	(28)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	Von	APPR	(PP*	von	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	diesen	PDAT	*	dieser	pl	fem	-	(41
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	drei	CARD	*	drei	-	-	-	41)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	Religionen	NN	*)	religion	pl	fem	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	kann	VMFIN	(S*	können	sg	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	doch	ADV	*	doch	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	eine	PIS	(VP(NP(AVP*	ein	sg	fem	-	(37)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	nur	ADV	*)	nur	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	Die	ART	*	der	sg	fem	-	(42
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	wahre	NN	*)	wahr	sg	fem	-	42)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	sein	VAINF	*))	sein	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	sg	masc	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ein	ART	(NP*	ein	sg	masc	-	(43
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	Mann	NN	*	mann	sg	masc	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	wie	KOKOM	(CS(S*	wie	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	du	PPER	*	du	sg	*	-	43)|(1)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	bleibt	VVFIN	(S*	bleiben	sg	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	da	ADV	*	da	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	Nicht	PTKNEG	(VP*	nicht	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	stehen	VVINF	*)))	stehen	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	12	wo	PWAV	(S*	wo	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	13	der	ART	(NP*	der	sg	masc	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	14	Zufall	NN	*	zufall	sg	masc	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	15	der	ART	(NP*	der	sg	fem	-	(44
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	16	Geburt	NN	*))	geburt	sg	fem	-	44)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	17	Ihn	PPER	(VP*	ihn	sg	masc	-	(43)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	18	hingeworfen	VVPP	*	hinwerfen	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	19	:	$.	*))))	--	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	20	oder	KON	*	oder	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	21	wenn	KOUS	(S(S*	wenn	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	22	er	PPER	*	er	sg	masc	-	(43)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	23	bleibt	VVFIN	*)	bleiben	sg	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	24	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	25	Bleibt	VVFIN	*	bleiben	sg	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	26	er	PPER	*	er	sg	masc	-	(43)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	27	aus	APPR	(PP*	aus	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	28	Einsicht	NN	(CNP*	einsicht	sg	fem	-	(45)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	29	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	30	Gründen	NN	*	grund	pl	masc	-	(46)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	31	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	32	Wahl	NN	*))	wahl	sg	*	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	33	des	ART	(NP*	der	sg	masc	-	(21
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	34	Bessern	NN	*))	besser	sg	masc	-	21)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	35	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wohlan	NN	(VROOT(PSEUDO*	wohlan	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	so	ADV	(VROOT(PSEUDO(S*	so	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	teile	VVFIN	*	teilen	sg	fem	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	deine	PPOSAT	(NP*	dein	sg	fem	-	(47|(1)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	Einsicht	NN	*)	einsicht	sg	fem	-	47)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	mir	PPER	*	sich	sg	fem	-	(7)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	Dann	ADV	*	dann	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	mit	PTKVZ	*)	mit	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Laß	KOUS	(VROOT(PSEUDO(CO(VP(NP(S*	lassen	sg	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	mich	PPER	*	mich	sg	*	-	(7)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	die	ART	(VP(NP*	der	sg	fem	-	(48
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	Gründe	NN	*)	grund	pl	masc	-	48)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	hören	VVINF	*))	hören	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	denen	PRELS	(S*	der	pl	masc	-	(48)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	Ich	PPER	*	ich	sg	*	-	(7)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	selber	ADV	*))	selber	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	nachzugrübeln	VVIZU	*)	nachzugrübeln	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	nicht	PTKNEG	(NP*	nicht	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	12	die	ART	*	der	sg	fem	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	13	Zeit	NN	*	zeit	sg	fem	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	14	Gehabt	NN	*))	haben	sg	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	15	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Laß	KOUS	(VROOT(PSEUDO(S*	lassen	sg	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	mich	PPER	*	mich	sg	*	-	(7)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	die	ART	(NP*	der	sg	fem	-	(49
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	Wahl	NN	*	wahl	sg	fem	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	die	PRELS	(S*	der	sg	fem	-	(49)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	diese	PDAT	(NP*	dieser	pl	masc	-	(48
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	Gründe	NN	*)	grund	pl	masc	-	49)|48)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	Bestimmt	VVFIN	*))	bestimmt	sg	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	–	PPER	(S*	–	sg	*	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	versteht	VVFIN	*	verstehen	sg	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	12	sich	PRF	*	sich	sg	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	14	im	APPRART	(VP(PP*	in	sg	neut	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	15	Vertrauen	NN	*	vertrauen	sg	neut	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	16	–	NE	*)	–	sg	neut	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	17	wissen	VVINF	*	wissen	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	18	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	19	Damit	KOUS	(S*	damit	sg	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	20	ich	PPER	*	ich	sg	*	-	(7)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	21	sie	PPER	*	sie	*	*	-	(49)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	22	zu	APPR	(PP*	zu	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	23	meiner	PIS	*)	mein	sg	fem	-	(7)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	24	mache	VVFIN	*))))	machen	sg	fem	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	25	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	Wie	PWAV	*	wie	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Du	PPER	(VROOT(PSEUDO(S*	du	sg	*	-	(1)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	stutzest	VVFIN	*)	stutzesen	sg	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	wägst	VVFIN	(VROOT(PSEUDO(S*	wägsen	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	mich	PPER	*	mich	sg	*	-	(7)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	mit	APPR	(PP*	mit	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	dem	ART	*	der	sg	masc	-	(50
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	Auge	NN	*))	auge	sg	masc	-	50)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	Kann	VMFIN	(S*	können	sg	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	Wohl	ADV	(VP*	wohl	sg	*	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	sein	VAINF	*	sein	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	daß	KOUS	(S*	daß	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	ich	PPER	*	ich	sg	*	-	(7)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	der	ART	(NP*	der	sg	masc	-	(51
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	erste	ADJA	*	erster	sg	masc	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	Sultan	NN	*)	sultan	sg	masc	-	51)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	bin	VAFIN	*))	sein	sg	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	12	Der	ART	(S*	der	sg	masc	-	(51)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	13	eine	ART	(NP*	ein	sg	fem	-	(52
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	14	solche	PIAT	(NP*	solcher	sg	fem	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	15	Grille	NN	*))	grille	sg	fem	-	52)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	16	hat	VAFIN	*))	haben	sg	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	17	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	18	die	ART	(S*	der	sg	fem	-	(52)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	19	mich	PPER	*	mich	sg	*	-	(7)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	20	Doch	KON	(AP(S*	doch	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	21	eines	ART	(NP*	ein	sg	neut	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	22	Sultans	NN	*))	sultan	sg	neut	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	23	eben	ADV	*	eben	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	24	nicht	PTKNEG	(AVP*	nicht	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	25	so	ADV	*	so	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	26	ganz	ADV	*)	ganz	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	27	Unwürdig	ADJD	*)	unwürdig	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	28	dünkt	VVFIN	*)	dünken	sg	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	29	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	Nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	wahr	PTKVZ	*	wahr	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	?	$.	*	--	-	-	-	-

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	So	ADV	(S*	so	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	rede	VVFIN	*	reden	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	doch	ADV	*)	doch	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Sprich	NE	(VROOT(PSEUDO(MPN*	sprich	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*)))	--	-	-	-	-

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	Oder	NE	*	oder	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	willst	VVFIN	(S*	wollen	sg	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	du	PPER	*)	du	sg	*	-	(1)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	einen	ART	(NP*	ein	sg	masc	-	(53
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	Augenblick	NN	*	augenblick	sg	masc	-	53)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	Dich	PPER	(VP*	dich	sg	*	-	(1)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	bedenken	VVINF	*)))	bedenken	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Gut	ADJD	*	gut	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(7)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	geb	VVFIN	*	geb	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	'	$(	*	--	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	ihn	PPER	*	ihn	sg	masc	-	(53)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	dir	PPER	*	dir	sg	*	-	(1)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	.	$.	*	--	-	-	-	-

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	(	$(	*	--	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	Ob	KOUS	*	ob	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	sie	PPER	*	sie	-	-	-	(34)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	wohl	ADV	*	wohl	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	horcht	VVFIN	*	horchen	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	?	$.	*	--	-	-	-	-

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(DL(S*	ich	sg	*	-	(7)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	will	VMFIN	*	wollen	sg	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	sie	PPER	(VP*	sie	pl	*	-	(34)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	doch	ADV	*	doch	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	belauschen	VVINF	*))	belauschen	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	Will	VMFIN	(S*	wollen	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	hören	VVINF	*	hören	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	ob	KOUS	(S*	ob	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	ichs	NE	*	ich	sg	*	-	(54)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	recht	ADJD	(VP*	recht	sg	neut	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	12	gemacht	VVPP	*))))	machen	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	13	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	)	$(	*	--	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	Denk	NN	*	denk	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	nach	PTKVZ	*	nach	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	!	$.	*	--	-	-	-	-

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Geschwind	NN	(VROOT(PSEUDO(S*	geschwind	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	denk	VVFIN	*	denk	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	nach	PTKVZ	*)	nach	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	*	ich	sg	*	-	(7)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	säume	VVFIN	*	säumen	sg	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	zurück	PTKVZ	*	zurück	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	Zu	PTKZU	*	zu	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	kommen	VVINF	*	kommen	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	.	$.	*	--	-	-	-	-

Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Er	PPER	(VROOT(PSEUDO(S*	er	sg	masc	-	(7)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	geht	VVFIN	*	gehen	sg	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	in	APPR	(PP*	in	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	das	ART	*	der	sg	neut	-	(55
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	Nebenzimmer	NN	*	nebenzimmer	sg	neut	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	nach	APPR	(S(PP*	nach	-	-	-	-
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	welchem	PRELS	*)	welcher	sg	neut	-	(55)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	sich	PRF	*	sich	sg	-	-	(34)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	Sittah	NE	*	sittah	sg	*	-	(34)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	begeben	VVFIN	*)))	begeben	-	-	-	55)
Nathan_Act3_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

#end document
