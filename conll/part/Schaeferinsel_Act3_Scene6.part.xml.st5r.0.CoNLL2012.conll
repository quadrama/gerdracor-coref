#begin document (Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll); part 000
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	Corydon	NE	(VROOT(PSEUDO(CNP*	corydon	-	-	-	(7)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	2	Montan	NE	*	montan	sg	neut	-	(0)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	4	Damöt	NE	*	damöt	sg	neut	-	(6)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	6	Sylvia	NE	*	sylvia	sg	neut	(PER*)	(5)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	8	Silvander	NE	*	silvander	sg	neut	-	(3)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	10	Doris	NE	*	doris	sg	neut	(PER*)	(2)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	12	Chloe	NE	*)	chloe	sg	neut	(PER*)	(1)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	13	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*))	corydon	-	-	-	(7)

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	in	APPR	(VROOT(PSEUDO(PP*	in	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	ordentlicher	ADJA	*	ordentlich	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	2	Schäfertracht	NN	*)	schäfertracht	sg	fem	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	Zu	APPR	(VROOT(PSEUDO(PP*	zu	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	Montan	NE	*)	montan	sg	neut	-	(0)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	Gelt	NN	(VROOT(PSEUDO(S(CNP*	gelt	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	2	Brüderchen	NN	*)	brüderchen	sg	neut	-	(0)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	4	nun	ADV	*	nun	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	5	wird	VAFIN	*	werden	sg	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	6	kein	PIAT	(VP(NP*	kein	sg	masc	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	7	Schäfer	NN	*	schäfer	sg	masc	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	8	vor	APPR	(PP*	vor	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	9	mir	PPER	*))	sich	sg	*	-	(7)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	10	laufen	VVINF	*))	laufen	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	11	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	Damöt	NE	(VROOT(PSEUDO*	damöt	-	-	-	(6)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	und	KON	*	und	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	2	Sylvia	NE	(S(NP*	sylvia	-	-	(PER*)	(5)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	3	sehn	NE	*)	sehn	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	4	ihn	PPER	*	ihn	sg	masc	-	(7)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	5	bewundernd	ADJD	*	bewundernd	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	6	an	PTKVZ	*)	an	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	O	XY	*	O	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	weh	XY	*	weh	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	2	!	$.	*	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	wie	PWAV	*	wie	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	durftet	VMFIN	*	durften	sg	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	2	mich	PPER	*	mich	sg	*	-	(7)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	3	!	$.	*	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	giebt	VVFIN	(VROOT(PSEUDO(S*	gieben	sg	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	es	PPER	*	es	sg	neut	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	2	hier	ADV	*	hier	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	3	nichts	PIS	(NP*	nichts	*	neut	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	4	zu	PTKZU	(VZ*	zu	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	5	saufen	VVINF	*)))	saufen	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	CHLOE	NE	(VROOT(PSEUDO*	chloe	-	-	(LOC*)	(1
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	Ja	PTKANT	(VROOT(PSEUDO(CS(S*	ja	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	2	Milch	NN	*)	milch	sg	fem	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	3	und	KON	*	und	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	4	Wasser	NN	(S*))	wasser	sg	neut	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	(LOC*)	(7
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	Gut	ADJD	(VROOT(PSEUDO(S*	gut	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	2	es	PPER	(S*	es	sg	neut	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	3	hat	VAFIN	*	haben	sg	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	4	noch	ADV	*	noch	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	5	Zeit	NN	(NP*	zeit	sg	fem	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	6	damit	PROAV	*)))	damit	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	(LOC*)	(3
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	Montan	NE	(VROOT(PSEUDO(MPN*	montan	sg	neut	-	(0)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	!	$.	*)))	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	ach	XY	(VROOT(PSEUDO*	ach	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	mein	PPOSAT	(NP*	mein	-	-	-	(0|(3)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	2	Montan	NE	*)	montan	-	-	-	0)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	für	APPR	(VROOT(PSEUDO(S(PP*	für	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	alles	PIS	*	alle	sg	neut	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	3	was	PRELS	(S*	was	sg	neut	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	4	ich	PPER	*	ich	sg	*	-	(3)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	5	litt	VVFIN	*	leiden	sg	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	7	Und	KON	(S*	und	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	8	was	PWS	*	was	*	neut	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	9	für	APPR	(PP*	für	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	10	Elend	NN	*)	elend	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	11	dir	PPER	*	dir	sg	*	-	(0)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	12	der	ART	(NP*	der	sg	masc	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	13	Himmel	NN	*)	himmel	sg	masc	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	14	zugeschicket	VVPP	*)))	zugchicken	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	15	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	16	Hat	VAFIN	*	haben	sg	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	17	dieser	PDAT	(NP*	dieser	sg	masc	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	18	frohe	ADJA	*	froh	sg	masc	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	19	Tag	NN	*)	tag	sg	masc	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	20	uns	PPER	(VP*	uns	pl	*	-	(8)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	21	insgesamt	ADV	*	insgesamt	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	22	beglücket	VVPP	*))	beglücken	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	23	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	Ach	ITJ	(VROOT(PSEUDO(S*)	ach	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	Schwester	NN	*	schwester	sg	masc	-	(5)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	Umarmt	NE	*	umarmt	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	Sylvien	NE	*	sylvien	pl	fem	-	(5)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	3	welche	PWAT	*	welcher	pl	fem	-	(5)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	4	erschrickt	VVPP	*	erschricken	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	5	und	KON	*	und	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	6	zurück	ADV	*	zurück	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	7	tritt	VVFIN	*	treten	sg	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	8	.	$.	*	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	-	(0
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	Sylvia	NE	(VROOT(PSEUDO(MPN*	sylvia	-	-	-	(5)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	?	$.	*)))	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	Wie	PWAV	(VROOT(PSEUDO*	wie	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	Himmel	NN	(VROOT(PSEUDO*	himmel	sg	masc	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	(LOC*)	(7
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	Er	PPER	(VROOT(PSEUDO(S*	er	sg	masc	-	(3)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	hat	VAFIN	*	haben	sg	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	2	Recht	NN	*)	recht	sg	neut	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	Vermenge	NN	*	vermenge	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	nun	ADV	*	nun	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	2	nicht	PTKNEG	*	nicht	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	3	mehr	ADV	*	mehr	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	4	mit	APPR	*	mit	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	5	deinem	PIS	*	dein	sg	masc	-	(21)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	6	mein	PPOSAT	*	mein	sg	masc	-	(10|(7)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	7	Geschlecht	NN	*	geschlecht	sg	neut	-	10)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	9	Zu	APPR	*	zu	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	10	Silvander	NE	*	silvander	-	-	-	(3)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	11	.	$.	*	--	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	12	Umarme	NN	*	umarme	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	13	mich	PPER	*	mich	sg	*	-	(7)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	14	mein	PPOSAT	*	mein	sg	masc	-	(5|(7)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	15	Kind	NN	*	kind	sg	masc	-	5)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	16	,	$,	*	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	Zu	APPR	(VROOT(PSEUDO(PP*	zu	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	Silvander	NE	*)	silvander	-	-	-	(3)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(S*	sie	sg	fem	-	(5)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	springt	VVFIN	*	springen	sg	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	2	zurück	PTKVZ	*)	zurück	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	-	(0
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	Dein	PPOSAT	(VROOT(PSEUDO(NP*	dein	sg	masc	-	(5|(7)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	Kind	NN	*)	kind	sg	masc	-	5)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	(LOC*)	(7
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	Mein	PPOSAT	(VROOT(PSEUDO(NP*	mein	sg	masc	-	(5|(7)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	Kind	NN	*)	kind	sg	masc	-	5)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	O	ITJ	(VROOT(PSEUDO(S*)	O	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	Freude	NN	*	freude	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	So	ADV	(VROOT(PSEUDO(S*	so	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	seh	VVFIN	*	seh	sg	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(7)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	3	endlich	ADV	*	endlich	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	4	noch	ADV	(NP*	noch	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	5	die	ART	*	der	sg	fem	-	(10
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	6	längst	ADV	(AP*	längst	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	7	verlohrnen	ADJA	*)	verlohrn	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	8	Beyde	NN	*))	beyde	-	-	-	10)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	9	!	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	-	(0
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	Lenore	NN	(VROOT(PSEUDO*	lenore	-	-	-	(2)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	(LOC*)	(7
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(S*	sie	sg	fem	-	(5)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	ists	ADV	*	ists	sg	*	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	2	nicht	PTKNEG	*)	nicht	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	Es	PPER	(VROOT(PSEUDO(S*	es	sg	neut	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	2	Luise	NN	*)	luise	sg	fem	(PER*)	(5)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	-	(0
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	Wie	PWAV	(VROOT(PSEUDO*	wie	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	(LOC*)	(3
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	Ja	PTKANT	*	ja	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	2	ja	PTKANT	*	ja	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	4	wir	PPER	*	wir	pl	*	-	(8)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	5	irrten	VVFIN	*	irrten	pl	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	6	uns	PRF	*	uns	pl	-	-	(8)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	7	.	$.	*	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	-	(0
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	Lenore	NE	(VROOT(PSEUDO(MPN*	lenore	-	-	-	(2)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	!	$.	*)))	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	(LOC*)	(7
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	Das	PDS	(VROOT(PSEUDO(CS(S*	der	sg	neut	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	2	die	PIS	*	der	sg	fem	-	(2)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	4	Ich	PPER	(S*	ich	sg	*	-	(7)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	5	hab	VVFIN	*	hab	sg	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	6	es	PPER	(VP*	es	sg	neut	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	7	gleich	ADV	*	gleich	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	8	entdeckt	VVPP	*)))	entdecken	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	10	man	PIS	(S*	man	sg	*	-	(11)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	11	hatte	VAFIN	*	haben	sg	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	12	dich	PPER	(VP*	dich	sg	-	-	(0)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	13	belogen	VVPP	*)))	belügen	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	14	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	-	(0
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	Ach	ITJ	(VROOT(PSEUDO(S*)	ach	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	kann	VMFIN	(VROOT(PSEUDO(S*	können	sg	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	es	PPER	*	es	sg	neut	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	2	möglich	ADJD	(VP*	möglich	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	3	seyn	VAINF	*))	seyn	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	Ach	ITJ	(VROOT(PSEUDO(S*)	ach	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	wär	VAFIN	(VROOT(PSEUDO(S*	sein	sg	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	ich	PPER	*	ich	sg	*	-	(0)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	2	doch	ADV	(VP*	doch	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	3	betrogen	VVPP	*))	betrügen	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	(LOC*)	(7
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	Du	PPER	*	du	sg	*	-	(0)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	bist	VAFIN	*	sein	sg	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	2	betrogen	VVPP	*	betrügen	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	4	ja	PTKANT	*	ja	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	5	.	$.	*	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	Sieh	NE	(VROOT(PSEUDO(S*	sieh	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	2	kennst	VVFIN	*	kennen	sg	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	3	du	PPER	*	du	sg	*	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	4	diese	PDAT	(NP*	dieser	sg	fem	-	(12
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	5	Hand	NN	*))	hand	sg	fem	-	12)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	Giebt	VVFIN	(VROOT(PSEUDO(S*	gieben	sg	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	ihm	PPER	*	ihm	sg	masc	-	(0)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	2	einen	ART	(NP*	ein	sg	masc	-	(13
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	3	Brief	NN	*))	brief	sg	masc	-	13)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	-	(0
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	Sehr	ADV	(VROOT(PSEUDO(AVP*	sehr	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	wohl	ADV	*)	wohl	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	(LOC*)	(7
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	Lies	NE	(VROOT(PSEUDO*	lies	sg	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*))	montan	-	-	-	(0)

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	liest	VVFIN	*	lesen	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	Himmel	NN	(VROOT(PSEUDO*	himmel	sg	masc	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	ach	XY	*	ach	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	das	PDS	*	der	sg	neut	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	war	VAFIN	*	sein	sg	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	2	mir	PPER	*	sich	sg	*	-	(0)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	3	unbekannt	ADJD	*	unbekannt	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	5	Zu	APPR	*	zu	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	6	Doris	NE	*	doris	-	-	(PER*)	(2)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	7	.	$.	*	--	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	8	Ach	ITJ	*	ach	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	9	Tochter	NN	*	tochter	-	-	-	(2)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	10	!	$.	*	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	Zu	APPR	(VROOT(PSEUDO(PP*	zu	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	Doris	NE	*)	doris	-	-	(PER*)	(2)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	Zu	APPR	(VROOT(PSEUDO(PP*	zu	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	Damöt	NN	*)	damöt	-	-	-	(6)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	Ach	ITJ	(VROOT(PSEUDO(S*)	ach	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	mein	PPOSAT	(NP*	mein	sg	masc	-	(6|(0)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	2	Sohn	NN	*)	sohn	sg	masc	-	6)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	Umarmt	VVFIN	(VROOT(PSEUDO(S*	umarmen	sg	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	sie	PPER	*)	sie	sg	fem	-	(9)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	von	APPR	(VROOT(PSEUDO(S(AVP(S(PP*	von	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	mir	PPER	*)	sich	sg	*	-	(0)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	2	kommt	VVFIN	*	kommen	sg	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	3	euer	PPOSAT	(NP*	eu	pl	fem	-	(9)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	4	Leben	NN	*))	leben	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	6	Nun	ADV	*)	nun	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	7	kann	VMFIN	*	können	sg	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	8	ich	PPER	*	ich	sg	*	-	(0)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	9	der	ART	(VP(NP*	der	sg	fem	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	10	Natur	NN	*)	natur	sg	fem	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	11	nicht	PTKNEG	*	nicht	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	12	länger	ADJD	*	lang	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	13	widerstreben	VVINF	*))	widerstreben	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	14	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	Verlaßt	NN	(VROOT(PSEUDO(NP*	verlaßen	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	einander	PRF	(NP*	einander	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	2	nie	ADV	*))	nie	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	Führt	VVFIN	(VROOT(PSEUDO(S*	führen	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	Damöt	NE	(CNP*	damöt	-	-	-	(6)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	2	und	KON	*	und	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	3	Sylvia	NE	*)	sylvia	-	-	(PER*)	(5)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	4	zusammen	PTKVZ	*)	zusammen	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	zu	APPR	(VROOT(PSEUDO(MPN*	zu	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	Corydon	NE	*)	corydon	-	-	-	(7)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(0)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	weiß	VVFIN	*	weiß	sg	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	3	du	PPER	*	du	sg	*	-	(7)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	4	willigst	ADV	*	willigst	sg	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	5	drein	PTKVZ	*)	drein	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	(LOC*)	(7
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	Von	APPR	(VROOT(PSEUDO(DL(PP*	von	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	Herzen	NN	*	herz	pl	masc	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	2	gern	ADV	*)	gern	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	3	;	$.	*	--	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	4	was	PWS	(S*	was	sg	neut	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	5	kann	VMFIN	*	können	sg	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	6	nur	ADV	(NP*	nur	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	7	größre	ADJA	*	größr	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	8	Freude	NN	*	freude	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	9	seyn	NE	*)))	seyn	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	10	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	DAMÖT	NE	(VROOT(PSEUDO*	damöt	-	-	(LOC*)	(6
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	6)

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	Ach	ITJ	(VROOT(PSEUDO(S*)	ach	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	mein	PPOSAT	(NP*	mein	-	-	-	(0|(6)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	2	Montan	NE	*)	montan	-	-	-	0)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	ach	XY	*	ach	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	(LOC*)	(3
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	Ach	ITJ	(VROOT(PSEUDO(S*)	ach	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	Montan	NE	(VROOT(PSEUDO(MPN*	montan	sg	neut	-	(0)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	!	$.	*)))	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	ach	XY	*	ach	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	DAMÖT	NE	(VROOT(PSEUDO*	damöt	-	-	(LOC*)	(6
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	6)

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	O	ITJ	(VROOT(PSEUDO(S*)	O	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	Vergnügen	NN	*	vergnügen	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	SYLVIA	NE	(VROOT(PSEUDO*	sylvia	sg	neut	(PER*)	(5
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	So	ADV	(VROOT(PSEUDO(CS(S*	so	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	darf	VMFIN	*	dürfen	sg	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	2	er	PPER	*	er	sg	masc	-	(6)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	3	nun	ADV	*	nun	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	4	bey	APPR	(PP*	bey	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	5	mir	PPER	*)	sich	sg	*	-	(5)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	6	gehn	CARD	(VP*	gehn	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	8	essen	VVINF	*))	essen	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	10	weiden	VVFIN	*	weiden	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	12	liegen	VVFIN	(S*	liegen	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	14	Und	KON	(S*	und	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	15	doch	ADV	*	doch	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	16	nichts	PIS	*	nichts	*	neut	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	17	Böses	NN	*	böse	sg	neut	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	18	thun	PTKVZ	*)))	thun	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	19	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	-	(0
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	Ja	PTKANT	(VROOT(PSEUDO(S*	ja	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	2	dieses	PDS	*	dieser	sg	neut	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	3	steht	VVFIN	*	stehen	sg	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	4	euch	PPER	*)	euch	pl	*	-	(14)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	5	frey	NE	*	frey	-	-	(PER*)	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	DAMÖT	NE	(VROOT(PSEUDO*	damöt	-	-	(LOC*)	(6
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	6)

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	Ach	ITJ	(VROOT(PSEUDO(S*	ach	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	2	liebste	VVFIN	*	lieb	-	-	-	(5
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	3	Sylvia	NE	*)	sylvia	-	-	-	5)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(6)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	lebe	VVFIN	*	leben	sg	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	2	nun	ADV	*	nun	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	3	aufs	APPRART	(PP*)	auf	sg	neut	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	4	neu	ADJD	*)	neu	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	SYLVIA	NE	(VROOT(PSEUDO*	sylvia	sg	neut	(PER*)	(5
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	Für	APPR	(VROOT(PSEUDO(S(PP*	für	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	Freuden	NN	*)	freude	sg	masc	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	2	sterb	VVFIN	*	sterb	sg	masc	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(5)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	4	fast	ADV	*)	fast	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	Ach	ITJ	(VROOT(PSEUDO(S*	ach	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	2	mein	PPOSAT	(NP*	mein	sg	neut	-	(6|(5)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	3	Damöt	NN	*))	damöt	-	-	-	6)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	-	(0
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	Silvander	NE	*	silvander	-	-	-	(3)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	2	Ich	PPER	*	ich	sg	*	-	(0)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	3	schenke	VVFIN	*	schenken	sg	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	4	dir	PPER	*	dir	sg	*	-	(3)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	5	mein	PPOSAT	*	mein	sg	neut	-	(2|(0)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	6	Kind	NN	*	kind	sg	neut	-	2)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	8	Führt	VVFIN	*	führen	sg	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	9	ihm	PPER	*	ihm	sg	masc	-	(3)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	10	die	ART	*	der	sg	fem	-	(2
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	11	Doris	NE	*	doris	sg	fem	(PER*)	2)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	12	.	$.	*	--	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	13	allein	ADV	*	allein	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	14	nicht	PTKNEG	*	nicht	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	15	den	ART	*	der	sg	masc	-	(3
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	16	Leander	NN	*	leander	sg	masc	(PER*)	3)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	17	.	$.	*	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	Führt	VVFIN	(VROOT(PSEUDO(S*	führen	sg	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	ihm	PPER	*	ihm	sg	masc	-	(3)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	2	die	ART	(NP*	der	sg	fem	-	(2
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	3	Doris	NE	*))	doris	sg	fem	(PER*)	2)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	Verstehst	VVFIN	*	verstehst	sg	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	du	PPER	*	du	sg	*	-	(3)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	2	es	PPER	*	es	sg	neut	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	3	!	$.	*	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	denn	KON	(VROOT(PSEUDO(S*	denn	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	hier	ADV	*	hier	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	2	bleib	VVFIN	*	bleib	sg	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(0)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	4	so	ADV	*	so	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	5	wie	KOKOM	(NP*	wie	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	6	mein	PPOSAT	*	mein	sg	masc	-	(2|(0)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	7	Kind	NN	*))	kind	sg	masc	-	2)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	(LOC*)	(7
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	Ist	VAFIN	(VROOT(PSEUDO(S*	sein	sg	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	das	PDS	*	der	sg	neut	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	3	so	ADV	*	so	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	4	ists	ADV	(AVP*	ists	*	neut	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	5	gewiß	ADV	*)	gewiß	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	7	daß	KOUS	(S*	daß	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	8	wir	PPER	*	wir	pl	*	-	(15)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	9	geschieden	VVPP	*	scheiden	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	10	sind	VAFIN	*))	sein	pl	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	(LOC*)	(3
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	Wie	PWAV	*	wie	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	so	ADV	*	so	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	geschieden	VVPP	*	scheiden	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	?	$.	*	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	nein	PTKANT	*	nein	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	Hier	ADV	(VROOT(PSEUDO(S*	hier	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	bleib	VVFIN	*	bleib	sg	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(3)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	3	ungezwungen	ADJD	*	ungezwung	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	4	;	$.	*	--	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	5	Der	ART	(S(NP*	der	sg	masc	-	(16
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	6	Ort	NN	*)	ort	sg	masc	-	16)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	7	ist	VAFIN	*	sein	sg	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	8	meine	PPOSAT	(NP*	mein	sg	fem	-	(3)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	9	Lust	NN	*	lust	sg	fem	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	11	wo	PWAV	(S*	wo	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	12	mir	PPER	*	sich	sg	*	-	(3)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	13	mein	PPOSAT	(NP*	mein	sg	masc	-	(3)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	14	Glück	NN	*)	glück	sg	neut	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	15	gelungen	VVPP	*))))	gelingen	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	16	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	(LOC*)	(7
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	Nein	PTKANT	(VROOT(PSEUDO(S*	nein	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	2	nein	PTKANT	(AVP(S*	nein	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	4	hier	ADV	*	hier	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	5	bleib	VVFIN	*	bleibn	sg	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	6	ich	PPER	*	ich	sg	*	-	(7)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	7	nicht	PTKNEG	*)	nicht	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	9	und	KON	*)	und	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	10	du	PPER	*	du	sg	*	-	(3)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	11	mußt	VMFIN	*	mussen	sg	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	12	mit	APPR	(PP*	mit	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	13	mir	PPER	*)	sich	sg	*	-	(7)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	14	fort	PTKVZ	*)	fort	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	15	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	SILVANDER	NE	(VROOT(PSEUDO*	silvander	sg	neut	(LOC*)	(3
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	Doch	KON	(VROOT(PSEUDO(S*	doch	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	ohne	APPR	(PP*	ohne	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	2	Doris	NE	*)	doris	*	neut	(PER*)	(2)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	3	hat	VAFIN	*	haben	sg	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	4	die	ART	(NP*	der	sg	fem	-	(17
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	5	Welt	NN	*)	welt	sg	fem	-	17)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	6	nicht	PTKNEG	*	nicht	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	7	einen	ART	(NP*	ein	sg	masc	-	(18
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	8	Ort	NN	*	ort	sg	masc	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	18)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	10	Der	PRELS	(S*	der	sg	masc	-	(18)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	11	mir	PPER	*	sich	sg	*	-	(3)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	12	gefallen	VVINF	*	fallen	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	13	kann	VMFIN	*)))	können	sg	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	14	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	(LOC*)	(7
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	O	ITJ	(VROOT(PSEUDO(DL(S*)	O	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	2	die	ART	(S*	der	sg	fem	-	(2)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	3	muß	VMFIN	*	müssen	sg	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	4	mit	APPR	(VP(PP*	mit	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	5	uns	PPER	*)	uns	pl	*	-	(19)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	6	ziehen	VVINF	*)))	ziehen	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	DORIS	NE	(VROOT(PSEUDO*	doris	sg	neut	(LOC*)	(2
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	2)

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	Ja	PTKANT	*	ja	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	2	ja	PTKANT	*	ja	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	4	ich	PPER	*	ich	sg	*	-	(2)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	5	ziehe	VVFIN	*	ziehen	sg	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	6	mit	PTKVZ	*	mit	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	7	.	$.	*	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	-	(0
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	Willst	VVFIN	(VROOT(PSEUDO(S*	willen	sg	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	du	PPER	*	du	sg	*	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	2	den	ART	(NP*	der	sg	masc	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	3	Vater	NN	*)	vater	sg	masc	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	4	fliehen	VVINF	*)	fliehen	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	DORIS	NE	(VROOT(PSEUDO*	doris	sg	neut	(LOC*)	(2
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	2)

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	Den	ART	(VROOT(PSEUDO(NP*	der	sg	masc	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	Vater	NN	*)	vater	sg	masc	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	Wer	PWS	*	wer	sg	masc	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	2	der	ART	*	der	sg	masc	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	3	?	$.	*	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	(LOC*)	(7
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	Solch	PIAT	(VROOT(PSEUDO(S(NP*	solch	*	*	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	Zeug	NN	*)	zeug	sg	*	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	2	hast	VAFIN	*	haben	sg	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	3	du	PPER	(VP*	du	sg	*	-	(0)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	4	gemacht	VVPP	*))	machen	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(S*	sie	sg	fem	-	(2)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	kennt	VVFIN	*	kennen	sg	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	2	dich	PRF	*	dich	sg	-	-	(0)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*	nicht	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	4	einmal	ADV	*)	einmal	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	MONTAN	NE	(VROOT(PSEUDO*	montan	sg	neut	-	(0
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	Das	PDS	(VROOT(PSEUDO(S*	der	sg	neut	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	that	VVFIN	*	that	sg	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(0)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	3	mit	APPR	(PP*	mit	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	4	Bedacht	NN	*))	bedacht	sg	masc	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	eh	ADV	(NP*	eh	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	2	das	ART	*	der	sg	neut	-	(20
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	3	feste	ADJA	*	fest	sg	neut	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	4	Land	NN	*)	land	sg	neut	-	20)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	5	mich	PPER	*	mich	sg	*	-	(0)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	6	wieder	ADV	*	wieder	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	7	sollt	VMFIN	*	sollen	sg	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	8	erblicken	VVINF	*	erblicken	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	9	;	$.	*	--	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	10	Eh	VVINF	(S*	eh	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	11	will	VMFIN	*	wollen	sg	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	12	ich	PPER	*	ich	sg	*	-	(0)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	13	weder	KON	*	weder	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	14	mich	PPER	*	mich	sg	*	-	(0)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	15	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	16	noch	KON	(VP(CNP*	noch	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	17	Kind	NN	*	kind	sg	neut	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	18	noch	KON	*	noch	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	19	Freund	NN	*)	freund	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	20	,	$,	*	--	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	21	beglücken	VVINF	*)))	beglücken	-	-	-	-
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	22	.	$.	*))	--	-	-	-	-

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	CORYDON	NE	(VROOT(PSEUDO*	corydon	sg	neut	(LOC*)	(7
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(NP*	der	sg	masc	-	(0
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	1	Trotzkopf	NN	*)	trotzkopf	sg	masc	-	0)
Schaeferinsel_Act3_Scene6.part.xml.st5r.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

#end document
