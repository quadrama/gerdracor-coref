#begin document (Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll); part 000
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nathan	NE	(VROOT(PSEUDO(CNP*	nathan	-	-	-	(1)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	und	KON	*	und	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	der	ART	(NP*	der	sg	masc	-	(5
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	Klosterbruder	NN	*))	klosterbruder	sg	masc	-	5)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*))	nathan	-	-	-	(1)

Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	im	APPRART	(VROOT(PSEUDO(PP*	in	sg	neut	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Näherkommen	NN	*)	näherkommen	sg	neut	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Habt	VVIMP	(VROOT(PSEUDO(S(S*	haben	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	nochmals	ADV	*)	nochmals	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	guter	ADJA	(NP*	gut	*	*	-	(5
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	Bruder	NN	*	bruder	sg	*	-	5)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	vielen	PIAT	(NP*	vieler	*	*	-	(15
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	Dank	NN	*)))	dank	sg	*	-	15)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	!	$.	*))	--	-	-	-	-

Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	(LOC*)	(5
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ihr	PPER	*	ihr	pl	*	-	(1)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	desgleichen	ADV	*)	desgleichen	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	*	ich	sg	*	-	(1)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	?	$.	*	--	-	-	-	-

Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	von	APPR	(VROOT(PSEUDO(PP*	von	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Euch	PPER	*)	euch	pl	*	-	(5)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	wofür	PWAV	(VROOT(PSEUDO*	wofür	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Für	APPR	(VROOT(PSEUDO(PP*	für	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	meinen	PPOSAT	*	mein	sg	masc	-	(16|(1)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	Eigensinn	NN	*	eigensinn	sg	masc	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	Euch	PPER	(VP*	euch	sg	masc	-	(5)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	aufzudringen	VVIZU	*))	aufdringen	sg	masc	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	16)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	Was	PWS	(S*	was	sg	neut	-	(17
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	Ihr	PPER	*	ihr	pl	*	-	(5)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	braucht	VVFIN	*)	brauchen	sg	-	-	17)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	?	$.	*))	--	-	-	-	-

Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ja	PTKANT	*	ja	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	wenn	KOUS	*	wenn	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	ihm	PPER	*	ihm	sg	masc	-	(16)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	Eurer	NN	*	eurer	sg	*	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	nur	ADV	*	nur	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	Auch	ADV	*	auch	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	nachgegeben	VVPP	*	nachgeben	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	hätt	VAFIN	*	hätt	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	'	$(	*	--	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	;	$.	*	--	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	Ihr	PPER	*	ihr	pl	*	-	(5)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	mit	APPR	*	mit	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	Gewalt	NN	*	gewalt	sg	fem	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	15	Nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	16	wolltet	VMFIN	*	wollten	sg	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	17	reicher	ADJD	*	reich	sg	fem	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	18	sein	VAINF	*	sein	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	19	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	20	als	KOKOM	*	als	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	21	ich	PPER	*	ich	sg	*	-	(1)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	22	.	$.	*	--	-	-	-	-

Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	(LOC*)	(5
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Das	ART	(VROOT(PSEUDO(S(NP*	der	sg	neut	-	(18
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Buch	NN	*)	buch	sg	neut	-	18)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	Gehört	VVFIN	*	gehört	sg	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	ja	ADV	*	ja	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	ohnedem	PIS	(S*	ohnedem	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	mir	PPER	*	sich	sg	*	-	(5)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	;	$.	*	--	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	gehört	VVFIN	(S*	gehören	sg	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	Ja	PTKANT	(NP(AP(AP(S*	ja	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	ohnedem	PIS	(NP*	ohnedem	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	der	ART	(NP*	der	sg	masc	-	(2
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	Tochter	NN	*)	tochter	sg	masc	-	2)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	;	$.	*)	--	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	15	ja	ADV	*	ja	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	16	so	ADV	(NP*	so	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	17	Der	ART	*	der	sg	masc	-	(2
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	18	Tochter	NN	*))	tochter	sg	masc	-	2)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	19	ganzes	ADJA	*)	ganz	sg	neut	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	20	väterliches	ADJA	*)	väterlich	sg	neut	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	21	Erbe	NN	*))))	erbe	sg	neut	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	22	.	$.	*))	--	-	-	-	-

Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Je	ADV	*	je	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	nu	PTKANT	(S*	nu	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	sie	PPER	*	sie	sg	fem	-	(2)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	hat	VAFIN	*)	haben	sg	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	ja	ADV	(NP*	ja	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	Euch	PPER	*)	euch	pl	*	-	(1)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Gott	NN	*	gott	sg	masc	-	(19)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	gebe	VVFIN	*	geben	sg	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	nur	ADV	(NP*	nur	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	Daß	KOUS	(S*	daß	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	Ihr	PPER	*	ihr	pl	*	-	(19)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	es	PPER	*	es	sg	neut	-	(20)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	nie	ADV	(VP(VP*	nie	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	bereuen	VVINF	*)	bereuen	-	-	-	(21)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	dürft	VMINF	*)	dürfen	sg	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	so	ADV	(VP(VP(PP(AP*	so	-	-	-	(20
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	viel	PIS	*)	viel	*	*	-	20)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	Für	APPR	*	für	sg	*	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	15	sie	PPER	*)	sie	sg	fem	-	(2)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	16	getan	VVPP	*)	tun	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	17	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	18	haben	VAINF	*))))	haben	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	19	!	$.	*))	--	-	-	-	-

Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Kann	VMFIN	*	können	sg	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	ich	PPER	*	ich	sg	*	-	(1)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	das	PDS	*	der	sg	neut	-	(21)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	?	$.	*	--	-	-	-	-

Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Das	PDS	(VROOT(PSEUDO(S*	der	sg	neut	-	(21)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	kann	VMFIN	*	können	sg	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(1)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	nie	ADV	*)	nie	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Seid	VAFIN	(VROOT(PSEUDO(S*	sein	pl	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	unbesorgt	ADJD	*)	unbesorgt	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	(LOC*)	(5
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nu	XY	(VROOT(PSEUDO*	nu	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	nu	XY	*	nu	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Die	ART	(VROOT(PSEUDO(CNP(NP*	der	pl	*	-	(22
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Patriarchen	NN	*)	patriarch	pl	*	-	22)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	und	KON	*	und	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	die	ART	(NP*	der	pl	*	-	(23
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	Tempelherren	NN	*))	tempelherr	pl	*	-	23)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	.	$.	*	--	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	.	$.	*	--	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Vermögen	VVFIN	*	vermögen	pl	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	mir	PPER	*	sich	sg	*	-	(1)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	des	ART	*	der	sg	masc	-	(24
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	Bösen	NN	*	böse	sg	masc	-	24)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	nie	ADV	*	nie	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	so	ADV	*	so	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	viel	PIAT	*	viel	*	*	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	Zu	NN	*	zu	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	tun	VVINF	*	tun	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	daß	KOUS	*	daß	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	irgend	ADV	*	irgend	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	was	PIS	*	was	*	neut	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	mich	PPER	*	mich	sg	*	-	(1)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	reuen	VVINF	*	reuen	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	15	könnte	VMFIN	*	können	sg	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	16	:	$.	*	--	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	17	Geschweige	NN	*	geschweige	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	18	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	19	das	PRELS	*	der	sg	neut	-	(20)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	20	!	$.	*	--	-	-	-	-

Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Und	KON	(S*	und	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	seid	VAFIN	*	sein	pl	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	Ihr	PPER	*	ihr	pl	*	-	(5)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	denn	ADV	*	denn	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	so	ADV	*)	so	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	ganz	ADV	(S(VP*	ganz	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	Versichert	VVPP	*	versichert	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	daß	KOUS	(S*	daß	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	ein	ART	(NP*	ein	sg	masc	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	Tempelherr	NN	*)	tempelherr	sg	masc	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	es	PPER	*	es	sg	neut	-	(25)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	ist	VAFIN	*))	sein	sg	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	15	Der	ART	(NP*	der	sg	masc	-	(25)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	16	Euern	NN	*))	euer	pl	fem	-	(8|(5)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	17	Patriarchen	NN	(S*	patriarch	pl	fem	-	8)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	18	hetzt	VVFIN	*)	hetzen	sg	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	19	?	$.	*))	--	-	-	-	-

Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	(LOC*)	(5
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Es	PPER	(VROOT(PSEUDO(S*	es	sg	neut	-	(25)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	kann	VMFIN	*	können	sg	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	Beinah	NE	*	beinah	sg	masc	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	kein	PIAT	(VP(NP*	kein	sg	masc	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	andrer	PIS	*)	andrer	sg	masc	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	sein	VAINF	*))	sein	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ein	ART	(VROOT(PSEUDO(AVP(AP(NP*	ein	sg	masc	-	(26
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Tempelherr	NN	*	tempelherr	sg	masc	-	26)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	Sprach	NE	*)	sprach	sg	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	kurz	ADJD	*	kurz	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	vorher	ADV	(CO(S(AVP*	vorher	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	mit	APPR	(PP*	mit	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	ihm	PPER	*)	ihm	sg	masc	-	(8)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	;	$.	*)	--	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	und	KON	*	und	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	was	PWS	(S*	was	sg	neut	-	(27
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	ich	PPER	*	ich	sg	*	-	(5)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	hörte	VVFIN	*))	hören	sg	-	-	27)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	Das	PDS	(S*	der	sg	neut	-	(27)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	klang	VVFIN	*)))	klingen	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	15	darnach	PROAV	*)	darnach	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	16	.	$.	*))	--	-	-	-	-

Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Es	PPER	(VROOT(PSEUDO(S*	es	sg	neut	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	doch	ADV	*	doch	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	aber	ADV	*	aber	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	nur	ADV	(NP*	nur	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	Ein	ART	*	ein	sg	masc	-	(26
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	einziger	ADJA	*	einzig	sg	masc	-	26)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	itzt	NN	*	itzt	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	in	APPR	(PP*	in	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	Jerusalem	NE	*)))	jerusalem	sg	neut	(LOC*)	(14)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Und	KON	*	und	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	diesen	PDS	*	dieser	sg	masc	-	(26)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	kenn	VVFIN	*	kenn	sg	masc	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	'	$(	*	--	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	ich	PPER	*	ich	sg	*	-	(1)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	.	$.	*	--	-	-	-	-

Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Dieser	PDS	(VROOT(PSEUDO(S*	dieser	sg	masc	-	(26)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	mein	PPOSAT	(NP*	mein	sg	masc	-	(1)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	Freund	NN	*))	freund	sg	masc	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ein	ART	(VROOT(PSEUDO(NP*	ein	sg	masc	-	(26
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	junger	ADJA	*	jung	sg	masc	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	edler	ADJA	*	edel	sg	masc	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	offner	ADJA	*	offn	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	Mann	NN	*)	mann	*	masc	-	26)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	!	$.	*))	--	-	-	-	-

Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	(LOC*)	(5
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ganz	ADV	(VROOT(PSEUDO(NP*	ganz	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	recht	NN	*	recht	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	;	$.	*	--	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	Der	ART	(NP*	der	sg	masc	-	(26
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	nämliche	ADJA	*))	nämlich	sg	masc	-	26)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Doch	KON	(S*	doch	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	was	PIS	*	was	*	neut	-	(28
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	man	PIS	*	man	sg	*	-	(29)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	und	KON	*	und	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	was	PWS	(S*	was	sg	neut	-	28)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	Man	PIS	(VP*	man	sg	*	-	(29)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	sein	VAINF	*	sein	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	muß	VMFIN	(S*	müssen	sg	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	in	APPR	(VP(PP*	in	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	der	ART	*	der	sg	fem	-	(30
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	Welt	NN	*)))	welt	sg	fem	-	30)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	15	das	PDS	(S*	der	sg	neut	-	(28)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	16	paßt	VVFIN	*	passen	sg	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	17	ja	ADV	*))	ja	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	18	wohl	ADV	*	wohl	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	19	Nicht	PTKNEG	(AVP*	nicht	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	20	immer	ADV	*)))	immer	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	21	.	$.	*))	--	-	-	-	-

Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Leider	ADV	(VROOT(PSEUDO(CO(AVP*	leider	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	nicht	PTKNEG	*))	nicht	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	So	ADV	(S*	so	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	tue	VVFIN	*	tun	sg	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	wers	APPRART	(PP*)	wers	-	-	-	(25)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	Auch	ADV	*	auch	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	immer	ADV	*	immer	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	ist	VAFIN	*)	sein	sg	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	sein	PPOSAT	(CNP(NP*	sein	sg	neut	-	(25)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	Schlimmstes	NN	*)	schlimmst	sg	neut	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	oder	KON	*	oder	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	Bestes	NN	*)	best	sg	neut	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	!	$.	*))	--	-	-	-	-

Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Mit	APPR	*	mit	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Euerm	PDAT	*	euerm	*	*	-	(18|(5)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	Buche	NN	*	buch	sg	neut	-	18)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	Bruder	NN	*	bruder	sg	neut	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	trotz	APPR	*	trotz	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	'	$(	*	--	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	ich	PPER	*	ich	sg	*	-	(1)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	allen	PIS	*	aller	sg	masc	-	(25)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	;	$.	*	--	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	Und	KON	*	und	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	gehe	VVFIN	*	gehen	sg	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	graden	ADJA	*	grad	-	-	-	(31
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	Wegs	NN	*	weg	-	-	-	31)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	15	damit	PROAV	*	damit	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	16	zum	APPRART	*	zu	sg	neut	-	(7
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	17	Sultan	NN	*	sultan	sg	neut	-	7)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	18	.	$.	*	--	-	-	-	-

Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	(LOC*)	(5
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Viel	PIAT	(VROOT(PSEUDO(NP*	viel	*	*	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Glücks	NN	*)	glück	sg	neut	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(5)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	will	VMFIN	*	wollen	sg	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	Euch	PPER	(VP*	euch	pl	*	-	(1)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	denn	ADV	*	denn	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	nur	ADV	(AVP*	nur	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	hier	ADV	*)	hier	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	verlassen	VVPP	*))	verlassen	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	habt	VAFIN	*	haben	pl	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	sie	PPER	*	sie	pl	*	-	(2)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	nicht	PTKNEG	(VP(AVP*	nicht	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	einmal	ADV	*)	einmal	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	gesehn	VVPP	*))	gesehn	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Kommt	VVFIN	*	kommen	sg	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	ja	ADV	(AP*	ja	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	Doch	KON	(AVP(S*	doch	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	bald	ADV	*)	bald	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	doch	KON	*)	doch	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	fleißig	ADJD	*	fleißig	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	wieder	ADV	*)	wieder	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Wenn	KOUS	(S*	wenn	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	nur	ADV	*	nur	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	heut	ADV	*)	heut	sg	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	Der	ART	(NP*	der	sg	masc	-	(8
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	Patriarch	NN	*)	patriarch	sg	masc	-	8)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	noch	ADV	(S(NP*	noch	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	nichts	PIS	*)	nichts	*	neut	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	erfährt	VVFIN	*)	erfahren	sg	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	!	$.	*))	--	-	-	-	-

Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Doch	KON	*	doch	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	was	PWS	*	was	sg	neut	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	?	$.	*	--	-	-	-	-

Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Sagt	VVFIN	(VROOT(PSEUDO(S*	sagen	sg	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	ihm	PPER	*	ihm	sg	masc	-	(8)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	auch	ADV	(AVP*	auch	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	heute	ADV	*)	heute	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	was	PWS	(S*	was	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	Ihr	PPER	*	ihr	pl	*	-	(5)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	wollt	VMFIN	*))	wollen	pl	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	(LOC*)	(5
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	*	ich	sg	*	-	(5)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	.	$.	*	--	-	-	-	-

Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Lebt	VVPP	(VROOT(PSEUDO(VP*	leben	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	wohl	ADV	(S*))	wohl	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Geht	VVFIN	(VROOT(PSEUDO(S*	gehen	sg	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	ab	PTKVZ	*)	ab	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Vergeßt	VVIMP	(VROOT(PSEUDO(S*	vergeßen	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	uns	PPER	*	uns	pl	*	-	(32)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	ja	ADV	*	ja	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	Bruder	NN	*)	bruder	-	-	-	(5)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	!	$.	*))	--	-	-	-	-

Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Gott	NN	*	gott	-	-	-	(33)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Daß	KOUS	(VROOT(PSEUDO(S*	daß	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	ich	PPER	*	ich	sg	*	-	(1)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	gleich	ADV	*	gleich	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	hier	ADV	*	hier	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	unter	APPR	(PP*	unter	-	-	-	(34
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	freiem	ADJA	*	frei	sg	masc	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	Himmel	NN	*)	himmel	sg	masc	-	34)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	Auf	APPR	(PP*	auf	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	meine	PPOSAT	*	mein	sg	fem	-	(35|(1)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	Kniee	NN	*)	kniee	sg	fem	-	35)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	sinken	VVINF	*	sinken	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	kann	VMFIN	*)	können	sg	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	!	$.	*))	--	-	-	-	-

Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wie	PWAV	(VROOT(PSEUDO(S*	wie	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	sich	PRF	*	sich	sg	-	-	(36)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	Der	ART	(NP*	der	sg	masc	-	(36
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	Knoten	NN	*	knoten	sg	masc	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	der	PRELS	(S*	der	sg	masc	-	(36)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	so	ADV	(AVP*	so	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	oft	ADV	*)	oft	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	mir	PPER	*	sich	sg	*	-	(1)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	bange	ADV	*	bange	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	machte	VVFIN	*))	machen	sg	-	-	36)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	Nun	ADV	*	nun	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	von	APPR	(PP*	von	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	sich	PRF	*	sich	sg	-	-	(36)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	15	selber	ADV	*)	selber	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	16	löset	VVFIN	*)	lösen	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	17	!	$.	*))	--	-	-	-	-

Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Gott	NN	*	gott	-	-	-	(33)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	wie	PWAV	(VROOT(PSEUDO(S(AP*	wie	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	leicht	ADJD	*)	leicht	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	Mir	PPER	*	sich	-	-	-	(1)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	wird	VAFIN	*	werden	sg	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	daß	KOUS	(S*	daß	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	ich	PPER	*	ich	sg	*	-	(1)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	nun	ADV	(VP*	nun	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	weiter	ADV	*	weiter	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	auf	APPR	(PP*	auf	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	der	ART	*	der	sg	fem	-	(30
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	Welt	NN	*	welt	sg	fem	-	30)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	Nichts	PIS	*)	nichts	*	neut	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	verbergen	VVINF	*))	verbergen	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	15	habe	VAFIN	*))	haben	sg	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	16	!	$.	*))	--	-	-	-	-

Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	daß	KOUS	(VROOT(PSEUDO(S*	daß	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	ich	PPER	*	ich	sg	*	-	(1)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	vor	APPR	(PP*	vor	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	Den	ART	*	der	pl	masc	-	(29
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	Menschen	NN	*)	mensch	pl	masc	-	29)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	nun	ADV	*	nun	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	so	ADV	(AP*	so	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	frei	ADJD	*)	frei	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	kann	VMFIN	*	können	sg	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	wandeln	VVINF	(VP*	wandeln	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	als	APPR	(PP*	als	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	Vor	APPR	(CNP(NP(PP*	vor	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	dir	PPER	*)	dir	sg	*	-	(33
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	15	der	PRELS	(CS(S*	der	sg	masc	-	(33)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	16	du	PPER	(VP*	du	sg	*	-	(33)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	17	allein	ADV	*	allein	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	18	den	ART	(NP*	der	pl	masc	-	(29
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	19	Menschen	NN	*)	mensch	pl	masc	-	29)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	20	nicht	PTKNEG	*	nicht	-	-	-	33)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	21	Nach	APPR	(PP*	nach	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	22	seinen	PPOSAT	*	sein	pl	fem	-	(37|(29)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	23	Taten	NN	*	tat	pl	fem	-	37)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	24	brauchst	ADV	*)	brauchen	sg	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	25	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	26	richten	VVINF	*)))	richten	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	27	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	28	die	ART	(S*	der	sg	fem	-	(37)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	29	So	ADV	(NP(AVP*	so	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	30	selten	ADJD	*)	selten	pl	masc	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	31	seine	PPOSAT	*	sein	pl	masc	-	(29)
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	32	Taten	NN	*)	tat	pl	masc	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	33	sind	VAFIN	*)))	sein	pl	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	34	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	35	o	FM	(MPN*	O	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	36	Gott	NN	*)))))	gott	-	-	-	-
Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	37	!	$.	*))	--	-	-	-	-

Nathan_Act5_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*))	–	-	-	-	-

#end document
