#begin document (Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll); part 000
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Daja	NE	(VROOT(PSEUDO*	daja	-	-	(PER*)	(0)
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	eilig	ADJD	(AP*	eilig	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	herbei	ADV	*)	herbei	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nathan	NE	(VROOT(PSEUDO*	nathan	-	-	-	(1)
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	O	NE	(VROOT(PSEUDO(NP(MPN*	O	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Nathan	NE	*)	nathan	-	-	-	(1
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	Nathan	NE	*)	nathan	-	-	-	1)
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nun	ADV	(VROOT(PSEUDO(S*)	nun	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Was	PWS	*	was	sg	neut	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	gibts	ADV	*	gibt	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Er	PPER	(VROOT(PSEUDO(S*	er	sg	masc	-	(16)
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	läßt	VVFIN	*	lassen	sg	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	sich	PRF	*	sich	sg	-	-	(16)
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	wieder	ADV	(NP*	wieder	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	sehn	CARD	*))	sehn	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Er	PPER	(VROOT(PSEUDO(S*	er	sg	masc	-	(16)
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	läßt	VVFIN	*	lassen	sg	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	Sich	PRF	*	sich	sg	-	-	(16)
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	wieder	ADV	(NP*	wieder	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	sehn	CARD	*))	sehn	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wer	PWS	*	wer	sg	masc	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	Daja	NE	*	daja	-	-	(PER*)	(0)
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	?	$.	*	--	-	-	-	-

Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	wer	PWS	*	wer	sg	masc	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	?	$.	*	--	-	-	-	-

Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Er	PPER	*	er	sg	masc	-	(16)
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	er	PPER	*	er	sg	masc	-	(16)
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Er	PPER	*	er	sg	masc	-	(17)
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	?	$.	*	--	-	-	-	-

Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Er	PPER	*	er	sg	masc	-	(17)
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	?	$.	*	--	-	-	-	-

Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	KON	*	–	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Wann	PWAV	*	wann	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	läßt	VVFIN	*	lassen	sg	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	sich	PRF	*	sich	sg	-	-	(17)
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	der	ART	*	der	sg	masc	-	(17)
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	sehn	CARD	*	sehn	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	!	$.	*	--	-	-	-	-

Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ja	PTKANT	*	ja	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	so	ADV	*	so	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	Nur	ADV	*	nur	-	-	-	(18
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	euer	PPOSAT	*	eu	sg	masc	-	(19)
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	Er	PPER	*	er	sg	masc	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	heißt	VVFIN	*	heißen	sg	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	er	PPER	*	er	sg	masc	-	18)|(17)
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	.	$.	*	--	-	-	-	-

Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Das	PDS	*	der	sg	neut	-	(18)
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	sollt	VMFIN	*	sollen	sg	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	'	$(	*	--	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	er	PPER	*	er	sg	masc	-	(17)
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	!	$.	*	--	-	-	-	-

Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Und	KON	*	und	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	wenn	KOUS	*	wenn	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	er	PPER	*	er	sg	masc	-	(17)
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	auch	ADV	*	auch	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	ein	ART	*	ein	sg	neut	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	Engel	NN	*	engel	sg	neut	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	wäre	VAFIN	*	sein	sg	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	!	$.	*	--	-	-	-	-

Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Er	PPER	(VROOT(PSEUDO(CS(S*	er	sg	masc	-	(16)
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	wandelt	VVFIN	*	wandeln	sg	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	untern	APPR	(PP*	untern	-	-	-	(20
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	Palmen	NN	*)	palme	pl	fem	-	20)
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	wieder	ADV	*	wieder	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	auf	APPR	(PP*	auf	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	Und	NN	*)	und	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	ab	PTKVZ	*)	ab	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	;	$.	*	--	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	und	KON	*	und	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	bricht	VVFIN	(S*	brechen	sg	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	von	APPR	(PP*	von	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	Zeit	NN	*)	zeit	sg	fem	-	(21)
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	zu	APPR	(PP*	zu	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	Zeit	NN	*)))	zeit	sg	fem	-	(21)
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	15	sich	PRF	*	sich	sg	-	-	(16)
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	16	Datteln	NN	*	dattel	pl	neut	-	(22)
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	17	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(VP(AP*	sie	sg	fem	-	(22)
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	essend	ADJD	*))	essend	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	und	KON	*	und	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	als	APPR	(PP*	als	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	Tempelherr	NN	*)	tempelherr	sg	masc	-	(23)
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Was	PWS	*	was	sg	neut	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	quält	VVFIN	*	quälen	pl	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	Ihr	PPER	*	ihr	pl	*	-	(1)
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	mich	PPER	*	mich	sg	*	-	(0)
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	?	$.	*	--	-	-	-	-

Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ihr	PPER	*	ihr	pl	*	-	(24|(2)
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	gierig	ADJD	*	gierig	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	Aug	NN	*	aug	-	-	-	24)
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	'	$(	*	--	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	erriet	VVFIN	*	erraten	sg	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	ihn	PPER	*	ihn	sg	masc	-	(16)
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	hinter	APPR	*	hinter	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	Den	ART	*	der	pl	fem	-	(20
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	dicht	ADJD	*	dicht	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	verschränkten	ADJA	*	verschränkt	pl	fem	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	Palmen	NN	*	palme	pl	fem	-	20)
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	schon	ADV	*	schon	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	;	$.	*	--	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	und	KON	*	und	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	15	folgt	VVFIN	*	folgen	sg	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	16	Ihm	PPER	*	ihm	sg	neut	-	(16)
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	17	unverrückt	ADJD	*	unverrückt	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	18	.	$.	*	--	-	-	-	-

Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(S*	sie	sg	fem	-	(2)
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	läßt	VVFIN	*	lassen	sg	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	Euch	PPER	*	euch	pl	*	-	(1)
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	bitten	VVINF	(VP*	bitten	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	–	KOUS	(S*	–	pl	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	Euch	PPER	(NP*	euch	pl	-	-	(1)
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	Beschwören	NN	*)	beschwören	pl	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	–	NN	*	–	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	ungesäumt	ADJD	(AP*	ungesäumen	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	ihn	PPER	(VP*	ihn	sg	masc	-	(16)
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	anzugehn	VVIZU	*)))))	anzugehn	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	O	ITJ	(VROOT(PSEUDO(S*)	O	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	eilt	VVFIN	*	eilen	sg	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(S*	sie	sg	fem	-	(2)
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	wird	VAFIN	*	werden	sg	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	Euch	PPER	(VP*	euch	pl	*	-	(1)
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	aus	APPR	(PP*	aus	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	dem	ART	*	der	sg	neut	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	Fenster	NN	*)	fenster	sg	neut	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	winken	VVINF	*	winken	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	Ob	KOUS	(S*	ob	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	er	PPER	*	er	sg	masc	-	(16)
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	hinauf	ADV	*	hinauf	sg	masc	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	geht	VVFIN	*	gehen	sg	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	oder	KON	*	oder	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	weiter	ADV	(PP*	weiter	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	ab	APPR	*	ab	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	15	Sich	NE	*)	sich	sg	-	-	(16)
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	16	schlägt	VVFIN	*)))	schlagen	sg	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	17	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	O	ITJ	(VROOT(PSEUDO(S*)	O	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	eilt	VVFIN	*	eilen	sg	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	So	ADV	*	so	-	-	-	(25
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	wie	KOKOM	*	wie	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(1)
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	vom	APPRART	*	von	sg	neut	-	(26
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	Kamele	NN	*	kamel	sg	neut	-	26)
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	Gestiegen	VVPP	*	gestieg	sg	neut	-	25)
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	Ihm	PPER	*	ihm	sg	masc	-	(16)
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	zu	PTKVZ	*	zu	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	;	$.	*	--	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	und	KON	*	und	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	meld	ADJD	*	meld	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	'	$(	*	--	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	ihm	PPER	*	ihm	sg	masc	-	(16)
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	meine	PPOSAT	*	mein	sg	fem	-	(1)
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	Wiederkunft	NN	*	wiederkunft	sg	fem	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	15	.	$.	*	--	-	-	-	-

Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Gib	VVIMP	(VROOT(PSEUDO(S*	geben	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Acht	CARD	*	acht	-	-	-	(27)
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	der	ART	(CS(S(NP*	der	sg	masc	-	(16
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	Biedermann	NE	*)	biedermann	sg	masc	(PER*)	16)
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	hat	VAFIN	*	haben	sg	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	nur	ADV	(VP(VP(NP*	nur	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	mein	PPOSAT	*	mein	sg	masc	-	(28|(1)
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	Haus	NN	*	haus	sg	neut	-	28)
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	In	APPR	(PP*	in	sg	neut	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	meinem	PPOSAT	*	mein	sg	neut	-	(1)
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	Absein	NN	*))	absein	sg	neut	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	betreten	VVINF	*)	betreten	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	wollen	VMINF	*))	wollen	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	15	;	$.	*	--	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	16	Und	KON	(S*	und	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	17	kömmt	VVFIN	*	kömmen	sg	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	18	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	19	ungern	VVINF	(VP*	ungern	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	20	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	21	wenn	KOUS	(S*	wenn	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	22	der	ART	(NP*	der	sg	masc	-	(1
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	23	Vater	NN	*)	vater	sg	masc	-	1)
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	24	selbst	ADV	(VP(NP*	selbst	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	25	Ihn	PPER	*)	ihn	sg	masc	-	(16)
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	26	laden	VVINF	*)	laden	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	27	läßt	VVFIN	*)))))	lassen	sg	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	28	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Geh	XY	*	geh	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	sag	VVFIN	*	sag	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	'	$(	*	--	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	ich	PPER	*	ich	sg	*	-	(1)
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	laß	VVFIN	*	lassen	sg	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	'	$(	*	--	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	ihn	PPER	*	ihn	sg	masc	-	(16)
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	bitten	VVFIN	*	bitten	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	Ihn	PPER	*	ihn	sg	masc	-	(16)
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	herzlich	ADJD	*	herzlich	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	bitten	VVINF	*	bitten	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	.	$.	*	--	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	15	.	$.	*	--	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	16	.	$.	*	--	-	-	-	-

Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	All	PIAT	*	all	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	umsonst	ADV	*	umsonst	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*	--	-	-	-	-

Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Er	PPER	(VROOT(PSEUDO(S*	er	sg	masc	-	(16)
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	kömmt	VVFIN	*	kömmen	sg	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	Euch	PPER	*	euch	pl	*	-	(1)
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*)	nicht	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Denn	KON	(S*	denn	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	kurz	ADJD	*	kurz	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	;	$.	*	--	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	er	PPER	*	er	sg	masc	-	(16)
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	kömmt	VVFIN	*)	kömmen	sg	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	zu	APPR	*	zu	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	keinem	PIAT	(NP*	kein	sg	masc	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	Juden	NN	*)	Jude	sg	masc	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	So	ADV	(VROOT(PSEUDO*	so	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	geh	XY	*	gehen	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	geh	XY	*	geh	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	wenigstens	ADV	(S*	wenigstens	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	ihn	PPER	(VP*	ihn	sg	masc	-	(16)
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	anzuhalten	VVIZU	*)	anhalten	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	;	$.	*	--	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	Ihn	PPER	*	ihn	sg	masc	-	(16)
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	9	wenigstens	ADV	*	wenigstens	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	10	mit	APPR	(PP*	mit	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	11	deinen	PPOSAT	*	dein	pl	neut	-	(29|(0)
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	12	Augen	NN	*))	auge	pl	neut	-	29)
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	13	zu	APPR	*	zu	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	14	Begleiten	NN	*	begleit	pl	fem	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	15	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	Geh	XY	*	geh	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	ich	PPER	(S*	ich	sg	*	-	(1)
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	komme	VVFIN	*	kommen	sg	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	gleich	ADV	*	gleich	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	dir	PPER	*	dir	sg	*	-	(0)
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	nach	PTKVZ	*)	nach	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nathan	NE	(VROOT(PSEUDO(S(AVP(S*	nathan	-	-	-	(1)
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	1	eilet	VVFIN	*	eilet	sg	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	2	hinein	PTKVZ	*)	hinein	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	4	und	KON	*)	und	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	5	Daja	NE	*	daja	-	-	(PER*)	(0)
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	6	heraus	PTKVZ	*)	heraus	-	-	-	-
Nathan_Act1_Scene4.part.xml.rkpt.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

#end document
