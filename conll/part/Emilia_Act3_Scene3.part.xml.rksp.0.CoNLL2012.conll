#begin document (Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll); part 000
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(NP*	der	sg	masc	-	(0
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	1	Prinz	NN	*)	prinz	sg	masc	-	0)
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	0	Marinelli	NE	(VROOT(PSEUDO*	marinelli	sg	masc	(PER*)	(3)
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	0	Dort	ADV	(VROOT(PSEUDO(S*	dort	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	1	kömmt	VVFIN	*	kömmen	sg	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	2	sie	PPER	*	sie	sg	fem	-	(8)
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	4	die	ART	(NP*	der	sg	fem	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	5	Allee	NN	*)	allee	sg	fem	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	6	herauf	PTKVZ	*)	herauf	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(S*	sie	sg	fem	-	(8)
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	1	eilet	VVFIN	*	eilet	sg	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	2	vor	APPR	(PP*	vor	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	3	dem	ART	*	der	sg	neut	-	(10
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	4	Bedienten	NN	*)	bedient	sg	neut	-	10)
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	5	her	PTKVZ	*)	her	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	0	Die	ART	(VROOT(PSEUDO(S(NP*	der	sg	fem	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	1	Furcht	NN	*	furcht	sg	fem	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	3	wie	PWAV	(S*	wie	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	4	es	PPER	*	es	sg	neut	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	5	scheinet	VVFIN	*))	scheinen	sg	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	7	beflügelt	VVFIN	*	beflügeln	sg	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	8	ihre	PPOSAT	(NP*	ihr	sg	fem	-	(8)
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	9	Füße	NN	*))	fuß	sg	fem	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(S*	sie	sg	fem	-	(8)
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	1	muß	VMFIN	*	müssen	sg	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	2	noch	ADV	(VP(NP*	noch	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	3	nichts	PIS	*)	nichts	*	neut	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	4	argwohnen	VVINF	*))	argwohnen	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(S*	sie	sg	fem	-	(8)
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	1	glaubt	VVFIN	*	glauben	sg	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	2	sich	PRF	(VP*	sich	sg	-	-	(8)
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	3	nur	ADV	(PP*	nur	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	4	vor	APPR	*	vor	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	5	Räubern	NN	*)	räuber	pl	masc	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	6	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	7	retten	VVINF	*)))	retten	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	1	Aber	KON	*	aber	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	2	wie	PWAV	(S(AVP*	wie	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	3	lange	ADV	*)	lange	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	4	kann	VMFIN	*	können	sg	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	5	das	PDS	(VP*	der	sg	neut	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	6	dauern	VVINF	*))	dauern	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	7	?	$.	*))	--	-	-	-	-

Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	0	So	ADV	(VROOT(PSEUDO(S*	so	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	1	haben	VAFIN	*	haben	pl	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	2	wir	PPER	*	wir	pl	*	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	3	sie	PPER	*	sie	*	*	-	(8)
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	4	doch	ADV	*	doch	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	5	fürs	APPRART	(PP*	für	sg	neut	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	6	erste	ADJA	*))	erster	sg	neut	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	1	wird	VAFIN	*	werden	sg	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	2	die	ART	(NP*	der	sg	fem	-	(13
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	3	Mutter	NN	*)	mutter	sg	fem	-	13)
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	4	sie	PPER	*	sie	*	*	-	(8)
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	5	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	6	aufsuchen	VVINF	*)	aufsuchen	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	7	?	$.	*))	--	-	-	-	-

Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	0	Wird	VAFIN	*	werden	sg	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	1	der	ART	*	der	sg	masc	-	(9
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	2	Graf	NN	*	graf	sg	masc	-	9)
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	3	ihr	PPOSAT	*	ihr	sg	masc	-	(8)
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	4	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	5	nachkommen	VVINF	*	nachkommen	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	6	?	$.	*	--	-	-	-	-

Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	1	sind	VAFIN	*	sein	pl	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	2	wir	PPER	*	wir	pl	*	-	(3)|(0)
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	3	alsdann	ADV	*	alsdann	pl	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	4	weiter	PTKVZ	*)	weiter	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	0	Wie	PWAV	(VROOT(PSEUDO(S*	wie	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	1	kann	VMFIN	*	können	sg	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(0)
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	3	sie	PPER	(VP*	sie	pl	*	-	(8)
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	4	ihnen	PPER	*	ihnen	pl	*	-	(13)|(9)
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	5	vorenthalten	VVPP	*))	vorenthalten	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	0	Auf	APPR	(VROOT(PSEUDO(S(PP*	auf	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	1	das	ART	(NP*	der	sg	neut	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	2	alles	PIS	*))	alle	sg	neut	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	3	weiß	VVFIN	*	weiß	sg	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	4	ich	PPER	*	ich	sg	*	-	(3)
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	5	freilich	ADV	*	freilich	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	6	noch	ADV	*	noch	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	7	nichts	PIS	(NP*	nichts	*	neut	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	8	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	9	antworten	VVINF	*)))	antworten	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	0	Aber	KON	(VROOT(PSEUDO(S*	aber	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	1	wir	PPER	*	wir	pl	*	-	(0)|(3)
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	2	müssen	VMFIN	*	müssen	pl	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	3	sehen	VVINF	*)	sehen	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	0	Gedulden	NE	(VROOT(PSEUDO*	gedulden	pl	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	1	Sie	PPER	(S*	sie	pl	*	-	(0)
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	2	sich	PRF	*	sich	pl	-	-	(0)
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	4	gnädiger	ADJA	(NP*	gnädig	sg	masc	-	(0
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	5	Herr	NN	*))	herr	sg	masc	-	0)
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(S(NP*	der	sg	masc	-	(14
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	1	erste	ADJA	*	erster	sg	masc	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	2	Schritt	NN	*)	schritt	sg	masc	-	14)
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	3	mußte	VMFIN	*	müssen	sg	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	4	doch	ADV	(VP(VP*	doch	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	5	getan	VVPP	*)	tun	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	6	sein	VAINF	*))	sein	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*))	–	-	-	-	-

Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	0	Wozu	PWAV	(VROOT(PSEUDO*	wozu	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	0	wenn	KOUS	(VROOT(PSEUDO(S*	wenn	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	1	wir	PPER	*	wir	pl	*	-	(0)|(3)
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	2	ihn	PPER	*	ihn	sg	masc	-	(14)
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	3	zurücktun	VVINF	(VP*	zurücktun	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	4	müssen	VMINF	*))	müssen	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	0	Vielleicht	ADV	(VROOT(PSEUDO(S*	vielleicht	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	1	müssen	VMFIN	*	müssen	pl	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	2	wir	PPER	*	wir	pl	*	-	(3)|(0)
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*)	nicht	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	1	Da	ADV	(S*	da	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	2	sind	VAFIN	*	sein	pl	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	3	tausend	CARD	(NP*	tausend	-	-	-	(15
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	4	Dinge	NN	*	ding	pl	neut	-	15)
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	6	auf	APPR	(S(PP*	auf	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	7	die	PRELS	*)	der	pl	masc	-	(15)
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	8	sich	PRF	(NP*	sich	sg	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	9	weiter	ADV	*)	weiter	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	10	fußen	VVFIN	*)))	fußen	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	11	läßt	VVFIN	*	lassen	sg	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	1	Und	KON	(S*	und	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	2	vergessen	VVINF	*	vergessen	pl	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	3	Sie	PPER	*	sie	pl	*	-	(0)
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	4	denn	ADV	*)	denn	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	5	das	ART	(NP*	der	sg	neut	-	(16
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	6	Vornehmste	NN	*)	vornehmste	sg	neut	-	16)
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	7	?	$.	*))	--	-	-	-	-

Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	-	(16)
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	1	kann	VMFIN	*	können	sg	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(0)
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	3	vergessen	VVINF	(VP*	vergessen	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	5	woran	PWAV	(S*	woran	sg	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	6	ich	PPER	*	ich	sg	*	-	(0)
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	7	sicher	ADV	(VP(AVP*	sicher	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	8	noch	ADV	*	noch	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	9	nicht	PTKNEG	*)	nicht	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	10	gedacht	VVPP	*)	denken	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	11	habe	VAFIN	*)))	haben	sg	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	12	?	$.	*))	--	-	-	-	-

Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	1	Das	ART	(NP*	der	sg	neut	-	(16
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	2	Vornehmste	NN	*)	vornehmste	sg	neut	-	16)
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	0	was	PWS	*	was	sg	neut	-	(16)
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	2	das	PDS	*	der	sg	neut	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	3	?	$.	*	--	-	-	-	-

Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	0	MARINELLI	NE	(VROOT(PSEUDO*	marinelli	sg	neut	(LOC*)	(3|(3)
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	3)

Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	0	Die	ART	(VROOT(PSEUDO(VP(NP*	der	sg	fem	-	(17
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	1	Kunst	NN	*)	kunst	sg	fem	-	17)
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	2	zu	PTKZU	(VZ*	zu	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	3	gefallen	VVINF	*)	fallen	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	5	zu	PTKZU	(VP(VZ*	zu	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	6	überreden	VVINF	*)	überreden	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	8	–	KOUS	(S*	–	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	9	die	ART	(NP*	der	sg	fem	-	(17)
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	10	einem	ART	(AP(NP*	ein	sg	neut	-	(0
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	11	Prinzen	NN	*	prinz	sg	neut	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	12	,	$,	*)	--	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	13	welcher	ADJA	*))	welcher	sg	fem	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	14	liebt	VVFIN	*	lieben	sg	-	-	0)
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	15	,	$,	*	--	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	16	nie	ADV	*	nie	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	17	fehlet	VVFIN	*)))	fehlen	sg	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	18	.	$.	*))	--	-	-	-	-

Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	0	DER	NE	(VROOT(PSEUDO(MPN*	der	-	-	-	(0|(0
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	1	PRINZ	NE	*)	prinz	-	-	-	0)
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	0)

Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	0	Nie	ADV	*	nie	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	1	fehlet	VVFIN	*	fehlen	sg	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	0	Außer	APPR	(VROOT(PSEUDO(PP*	außer	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	2	wo	PWAV	(S*	wo	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	3	er	PPER	*	er	sg	masc	-	(0)
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	4	sie	PPER	*	sie	sg	fem	-	(17)
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	5	gerade	ADV	*	gerade	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	6	am	APPRART	(PP*	an	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	7	nötigsten	ADJA	*)	nötig	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	8	brauchte	VVFIN	*))	brauchen	sg	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	1	Ich	PPER	*	ich	sg	*	-	(0)
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	2	habe	VAFIN	*	haben	sg	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	3	von	APPR	*	von	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	4	dieser	PDAT	*	dieser	sg	fem	-	(17
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	5	Kunst	NN	*	kunst	sg	fem	-	17)
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	6	schon	ADV	*	schon	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	7	heut	ADV	*	heut	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	8	'	$[	*	--	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	9	einen	ART	*	ein	sg	masc	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	10	zu	PTKZU	*	zu	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	11	schlechten	ADJA	*	schlecht	sg	masc	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	12	Versuch	NN	*	versuch	sg	masc	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	13	gemacht	VVPP	*	machen	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	14	.	$.	*	--	-	-	-	-

Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	0	Mit	APPR	*	mit	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	1	allen	PIDAT	*	aller	pl	fem	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	2	Schmeicheleien	NN	*	schmeichelei	pl	fem	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	3	und	KON	*	und	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	4	Beteuerungen	NN	*	beteuerung	pl	fem	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	5	konnt	VVFIN	*	konnen	sg	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	6	'	$[	*	--	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	7	ich	PPER	*	ich	sg	*	-	(0)
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	8	ihr	PPOSAT	*	ihr	sg	fem	-	(8)
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	9	auch	ADV	*	auch	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	10	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	11	ein	ART	*	ein	sg	neut	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	12	Wort	NN	*	wort	sg	neut	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	13	auspressen	VVPP	*	auspressen	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	14	.	$.	*	--	-	-	-	-

Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	0	Stumm	NE	(VROOT(PSEUDO*	stumm	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	1	und	KON	*	und	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	2	niedergeschlagen	ADJD	(CS(S(CAP*	niederschlagen	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	3	und	KON	*	und	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	4	zitternd	ADJD	*)	zitternd	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	5	stand	VVFIN	*	stehen	sg	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	6	sie	PPER	*	sie	sg	fem	-	(8)
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	7	da	ADV	*)	da	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	8	;	$.	*	--	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	9	wie	KOKOM	(NP*	wie	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	10	eine	ART	*	ein	sg	fem	-	(18
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	11	Verbrecherin	NN	*	verbrecherin	sg	fem	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	13	die	PRELS	(S*	der	sg	fem	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	14	ihr	PPOSAT	(NP*	ihr	sg	fem	-	(18)
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	15	Todesurteil	NN	*)	todesurteil	sg	neut	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	16	höret	VVFIN	*)))	höret	sg	neut	-	18)
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	17	.	$.	*))	--	-	-	-	-

Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	0	Ihre	PPOSAT	(VROOT(PSEUDO(S(NP*	ihr	sg	fem	-	(8)
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	1	Angst	NN	*)	angst	sg	fem	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	2	steckte	VVFIN	*	stecken	sg	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	3	mich	PPER	*	mich	sg	fem	-	(0)
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	4	an	PTKVZ	*	an	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	6	ich	PPER	(CS(S*	ich	sg	*	-	(0)
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	7	zitterte	VVFIN	*	zittern	sg	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	8	mit	PTKVZ	*)	mit	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	10	und	KON	*	und	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	11	schloß	VVFIN	(S*	schließen	sg	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	12	mit	APPR	(PP*	mit	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	13	einer	ART	*	ein	sg	fem	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	14	Bitte	NN	*	bitte	sg	fem	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	15	um	APPR	(PP*	um	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	16	Vergebung	NN	*)))))	vergebung	sg	fem	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	17	.	$.	*))	--	-	-	-	-

Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	0	Kaum	ADV	*	kaum	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	1	getrau	ADV	*	getrau	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	2	'	$[	*	--	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(0)
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	4	mir	PPER	*	sich	sg	*	-	(0)
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	6	sie	PPER	*	sie	*	*	-	(8)
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	7	wieder	ADV	*	wieder	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	8	anzureden	VVINF	*	anreden	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	9	.	$.	*	--	-	-	-	-

Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	1	Bei	APPR	*	bei	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	2	ihrem	PPOSAT	*	ihr	sg	masc	-	(8)
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	3	Eintritte	NN	*	eintritt	sg	masc	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	4	wenigstens	ADV	*	wenigstens	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	5	wag	ADV	*	wag	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	6	'	$[	*	--	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	7	ich	PPER	*	ich	sg	*	-	(0)
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	8	es	PPER	*	es	sg	neut	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	9	nicht	PTKNEG	*	nicht	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	10	zu	PTKZU	*	zu	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	11	sein	VAINF	*	sein	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	12	.	$.	*	--	-	-	-	-

Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(S*	sie	pl	*	-	(3
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	2	Marinelli	NE	*	marinelli	sg	masc	(LOC*)	3)|(3)
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	4	müssen	VMFIN	*	müssen	pl	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	5	sie	PPER	*	sie	pl	*	-	(8)
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	6	empfangen	VVFIN	*)	empfangen	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(CS(S*	ich	sg	*	-	(0)
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	1	will	VMFIN	*	wollen	sg	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	2	hier	ADV	*	hier	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	3	in	APPR	(PP*	in	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	4	der	ART	*	der	sg	fem	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	5	Nähe	NN	*)	nähe	sg	fem	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	6	hören	VVFIN	*	hören	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	8	wie	PWAV	(S*	wie	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	9	es	PPER	*	es	sg	neut	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	10	abläuft	VVFIN	*))	ablaufen	sg	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	11	;	$.	*	--	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	12	und	KON	*	und	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	13	kommen	VVFIN	(S*	kommen	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	15	wenn	KOUS	(S*	wenn	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	16	ich	PPER	*	ich	sg	*	-	(0)
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	17	mich	PRF	(VP*	mich	sg	-	-	(0)
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	18	mehr	ADV	*	mehr	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	19	gesammelt	VVPP	*)	sammeln	-	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	20	habe	VAFIN	*)))	haben	sg	-	-	-
Emilia_Act3_Scene3.part.xml.rksp.0.CoNLL2012.conll	000	21	.	$.	*))	--	-	-	-	-

#end document
