#begin document (Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll); part 000
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Szene	NN	*	szene	sg	-	-	(15)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	:	$.	*	--	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	die	ART	*	der	pl	*	-	(16
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	Palmen	NN	*	palme	pl	*	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	vor	APPR	*	vor	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	Nathans	NE	*	nathan	sg	*	-	(17|(1)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	Hause	NN	*	haus	sg	neut	-	17)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	8	wo	PWAV	*	wo	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	9	der	ART	*	der	sg	masc	-	16)|(18)

Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*))	tempelherr	-	-	-	-

Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	auf	PTKVZ	(VROOT(PSEUDO(S*	auf	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	und	KON	*	und	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	nieder	ADV	*	nieder	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	geht	VVFIN	*)	gehen	sg	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ins	APPRART	(VROOT(PSEUDO(S(PP*	in	-	-	-	(17
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	Haus	NN	*)	haus	sg	neut	-	17)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	nun	ADV	*	nun	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	will	VMFIN	*	wollen	sg	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	einmal	ADV	*	einmal	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	nicht	PTKNEG	*)	nicht	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	Er	PPER	(S*	er	sg	masc	-	(1)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	wird	VAFIN	*	werden	sg	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	Sich	PRF	(VP(VP*	sich	sg	-	-	(1)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	endlich	ADV	*	endlich	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	doch	ADV	*	doch	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	wohl	ADV	*	wohl	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	sehen	VVINF	*)	sehen	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	8	lassen	VVINF	*))	lassen	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	9	!	$.	*))	--	-	-	-	-

Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	*	*	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	Man	PIS	(S*	man	sg	*	-	(0)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	Bemerkte	NN	*	bemerkt	sg	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	mich	PPER	*	mich	sg	*	-	(4)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	ja	ADV	(AVP*	ja	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	sonst	ADV	*	sonst	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	so	ADV	*))	so	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	bald	ADV	(NP*	bald	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	9	so	ADV	(AVP*	so	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	10	gern	ADV	*))	gern	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	11	!	$.	*))	--	-	-	-	-

Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	Wills	NE	*	wills	-	-	-	(19)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	noch	ADV	(VP*	noch	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	erleben	VVINF	*	erleben	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	daß	KOUS	(S*	daß	-	-	-	(19
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	er	PPER	*	er	sg	masc	-	(1)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	sichs	ADV	(AP*	sichs	-	-	-	(47)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	8	verbittet	VVPP	*	verbitten	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	19)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	10	Vor	APPR	(VP(PP*	vor	-	-	-	(20|(17
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	11	seinem	PPOSAT	*	sein	sg	neut	-	(1)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	12	Hause	NN	*)	haus	sg	neut	-	17)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	13	mich	PPER	*	mich	sg	*	-	(4)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	14	so	ADV	*	so	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	15	fleißig	ADJD	*	fleißig	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	16	finden	VVINF	*))	finden	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	17	Zu	NN	*	zu	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	18	lassen	VVFIN	*	lassen	-	-	-	20)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	19	Sehr	ADV	(AP*	sehr	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	20	ärgerlich	ADJD	*)))	ärgerlich	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	21	.	$.	*))	--	-	-	-	-

Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	Was	PWS	(S*	was	sg	neut	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	hat	VAFIN	*	haben	sg	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	mich	PPER	*	mich	sg	*	-	(4)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	denn	ADV	*	denn	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	nun	ADV	*	nun	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	so	ADV	*)	so	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	Erbittert	NN	(NP*	erbittert	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	8	gegen	APPR	(PP*	gegen	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	9	ihn	PPER	*))	ihn	sg	masc	-	(1)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	10	?	$.	*))	--	-	-	-	-

Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	Er	PPER	*	er	sg	masc	-	(1)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	sagte	VVFIN	*	sagen	sg	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	ja	ADV	*	ja	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	:	$.	*	--	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	Noch	ADV	*	noch	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	schlüg	ADJD	*	schlüg	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	'	$(	*	--	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	8	er	PPER	*	er	sg	masc	-	(1)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	9	mir	PPER	*	sich	sg	*	-	(4)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	10	nichts	PIS	*	nichts	*	neut	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	11	ab	PTKVZ	*	ab	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	12	.	$.	*	--	-	-	-	-

Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	Saladin	NE	(MPN*	saladin	*	*	-	(7)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	Hats	NE	*)	hat	*	*	-	(21)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	über	APPR	(VP(PP*	über	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	sich	PRF	*)	sich	sg	-	-	(7)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	genommen	VVPP	*)	nehmen	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	ihn	PPER	(VP*	ihn	sg	masc	-	(21|(1)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	8	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	9	stimmen	VVINF	*)))	stimmen	-	-	-	21)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	Wie	PWAV	*	wie	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	sollte	VMFIN	(VROOT(PSEUDO(S*	sollen	sg	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	wirklich	ADJD	*	wirklich	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	wohl	ADV	*	wohl	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	in	APPR	(NP(PP*	in	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	mir	PPER	*)	sich	sg	*	-	(4)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	der	ART	*	der	sg	masc	-	(22
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	Christ	NN	*)	christ	sg	masc	-	22)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	Noch	ADV	(VP(AP*	noch	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	8	tiefer	ADJD	*)	tief	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	9	nisten	VVINF	*	nisten	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	11	als	KOKOM	(NP*	als	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	12	in	APPR	(PP*	in	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	13	ihm	PPER	*)	ihm	sg	masc	-	(1)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	14	der	ART	*	der	sg	masc	-	(23
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	15	Jude	NN	*)))	jude	sg	masc	-	23)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	16	?	$.	*))	--	-	-	-	-

Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	sg	masc	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	Wer	PWS	(S*	wer	sg	masc	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	kennt	VVFIN	*)	kennen	sg	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	sich	PRF	(NP*	sich	sg	-	-	(24)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	recht	ADV	*)	recht	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wie	PWAV	(VROOT(PSEUDO(CS(S*	wie	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	könnt	VVFIN	*	können	pl	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	ihm	PPER	*	ihm	sg	masc	-	(1)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	denn	ADV	*	denn	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	sonst	ADV	*	sonst	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	Den	ART	(NP*	der	pl	masc	-	(2
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	kleinen	ADJA	*	klein	pl	masc	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	8	Raub	NN	*)	raub	sg	masc	-	2)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	9	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	10	gönnen	VVINF	*	gönnen	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	11	wollen	VMFIN	*)	wollen	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	13	den	ART	(S*	der	sg	masc	-	(2)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	14	Er	PPER	(NP*	er	sg	masc	-	(1)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	15	sichs	CARD	*	sich	sg	neut	-	(1)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	16	zu	APPR	(PP*	zu	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	17	solcher	PIAT	*	solcher	sg	fem	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	18	Angelegenheit	NN	*))	angelegenheit	sg	fem	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	19	Gemacht	VVPP	*	gemacht	sg	fem	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	20	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	21	den	ART	(VP(NP*	der	sg	masc	-	(25
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	22	Christen	NN	*)	christ	sg	masc	(MISC*)	25)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	23	abzujagen	VVIZU	*)))	abjagen	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	24	?	$.	*))	--	-	-	-	-

Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	Freilich	ADV	*	freilich	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	;	$.	*	--	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	Kein	PIAT	(NP*	kein	sg	masc	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	kleiner	ADJA	*	klein	sg	masc	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	Raub	NN	*	raub	sg	masc	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	ein	ART	(NP*	ein	sg	masc	-	(26
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	8	solch	PIAT	(NP*	solch	*	*	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	9	Geschöpf	NN	*)))	geschöpf	sg	masc	-	26)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	10	!	$.	*))	--	-	-	-	-

Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	Geschöpf	NN	*	geschöpf	sg	-	-	(26)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Und	KON	*	und	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	wessen	PDS	*	wessen	-	-	-	(26)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	Doch	KON	(NP*	doch	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	des	ART	*	der	sg	masc	-	(27
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	Sklaven	NN	*)	sklave	sg	masc	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	nicht	PTKNEG	(NP*	nicht	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	der	ART	(CVP(VP(NP*	der	sg	masc	-	(27)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	auf	APPR	(AP(PP*	auf	-	-	-	27)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	8	Des	ART	*	der	sg	neut	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	9	Lebens	NN	*)	leben	sg	neut	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	10	öden	ADJA	*)	öde	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	11	Strand	NN	*)	strand	sg	masc	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	12	den	ART	(NP*	der	sg	masc	-	(2
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	13	Block	NN	*)	block	sg	masc	-	2)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	14	geflößt	VVPP	*)	flößen	sg	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	15	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	16	Und	KON	*	und	sg	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	17	sich	PRF	(VP*	sich	sg	-	-	(27)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	18	davon	PROAV	*	davon	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	19	gemacht	VVPP	*)))	machen	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	20	?	$.	*))	--	-	-	-	-

Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Des	ART	(VROOT(PSEUDO(S(NP*	der	-	-	-	(1
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	Künstlers	NN	*)	künstler	sg	*	-	1)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	doch	ADV	*	doch	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	Wohl	ADV	(PP*	wohl	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	mehr	ADV	(AVP*	mehr	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	der	ART	(CS(S*	der	sg	masc	-	(1)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	in	APPR	(PP*	in	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	8	dem	ART	*	der	sg	neut	-	(2
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	9	hingeworfnen	ADJA	*	hingeworfn	sg	neut	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	10	Blocke	NN	*	blocke	sg	neut	-	2)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	11	Die	ART	(NP*	der	sg	fem	-	(28
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	12	göttliche	ADJA	*	göttlich	sg	fem	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	13	Gestalt	NN	*))	gestalt	sg	fem	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	14	sich	PRF	*	sich	sg	-	-	(1)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	15	dachte	VVFIN	*)	denken	sg	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	16	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	17	die	ART	(S*	der	sg	fem	-	(28)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	18	Er	PPER	(NP(S*	er	sg	masc	-	28)|(2)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	19	Bleibt	VVFIN	*	bleiben	sg	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	20	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	21	Trotz	APPR	(PP*	trotz	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	22	dem	ART	*	der	sg	masc	-	(27
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	23	Christen	NN	*))	christ	sg	masc	(MISC*)	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	24	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	25	der	PRELS	(S*	der	sg	masc	-	(27)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	26	sie	PPER	*	sie	sg	fem	-	(2)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	27	zeugte	VVFIN	*))	zeugen	sg	-	-	27)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	28	–	NN	*	–	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	29	bleibt	VVFIN	*)))	bleiben	sg	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	30	In	APPR	*	in	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	31	Ewigkeit	NN	*	ewigkeit	sg	fem	-	(30)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	32	der	ART	(NP*	der	sg	masc	-	(1
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	33	Jude	NN	*)))	jude	sg	masc	-	1)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	34	.	$.	*))	--	-	-	-	-

Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	Wenn	KOUS	*	wenn	sg	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	mir	PRF	*	sich	sg	*	-	(4)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	Sie	PPER	*	sie	sg	-	-	(2)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	lediglich	ADV	*	lediglich	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	als	APPR	*	als	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	Christendirne	NN	*	christendirne	sg	fem	(PER*)	(31)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	8	denke	VVFIN	*	denken	sg	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	10	Sie	PPER	*	sie	pl	*	-	(2)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	11	sonder	ADV	*	sonder	pl	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	12	alles	PIS	*	alle	sg	neut	-	(28
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	13	das	PDS	*	der	sg	neut	-	(28)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	14	mir	PPER	*	sich	sg	*	-	(4)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	15	denke	VVFIN	*	denken	sg	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	16	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	17	was	PWS	*	was	sg	neut	-	28)|(28)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	18	Allein	ADV	*	allein	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	19	ihr	PPER	*	ihr	sg	fem	-	(2)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	20	so	ADV	*	so	-	-	-	(32
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	21	ein	ART	*	ein	sg	masc	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	22	Jude	NN	*	jude	sg	masc	-	32)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	23	geben	VVINF	*	geben	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	24	konnte	VMFIN	*	können	sg	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	25	:	$.	*	--	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	26	–	XY	*	–	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	27	Sprich	NN	*	sprich	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	28	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	29	Herz	NN	*	herz	-	-	-	(33)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	30	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	31	–	NN	*	–	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	32	was	PWS	*	was	sg	neut	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	33	wär	VAFIN	*	sein	sg	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	34	'	$(	*	--	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	35	an	APPR	*	an	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	36	ihr	PPER	*	ihr	sg	neut	-	(2)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	37	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	38	das	PRELS	*	der	sg	neut	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	39	dir	PPER	*	dir	sg	neut	-	(33)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	40	gefiel	VVFIN	*	gefallen	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	41	?	$.	*	--	-	-	-	-

Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nichts	PIS	*	nichts	*	neut	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	wenig	ADV	(VROOT(PSEUDO(S*)	wenig	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Selbst	ADV	*	selbst	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	ihr	PPOSAT	*	ihr	sg	fem	-	(34|(2)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	Lächeln	NN	*	lächeln	pl	masc	-	34)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	wär	VAFIN	*	sein	sg	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	'	$(	*	--	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	es	PPER	*	es	sg	neut	-	(34)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	nichts	PIS	*	nichts	*	neut	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	8	Als	APPR	*	als	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	9	sanfte	ADJA	*	sanft	pl	masc	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	10	schöne	ADJA	*	schön	pl	masc	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	11	Zuckung	NN	*	zuckung	sg	fem	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	12	ihrer	PPOSAT	*	ihr	pl	fem	-	(2)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	13	Muskeln	NN	*	muskel	pl	fem	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	14	;	$.	*	--	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	15	Wär	NN	*	sein	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	16	'	$(	*	--	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	17	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	18	was	PWS	*	was	sg	neut	-	(35
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	19	sie	PPER	*	sie	pl	masc	-	(2)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	20	lächeln	VVFIN	*	lächeln	pl	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	21	macht	VVFIN	*	machen	sg	-	-	35)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	22	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	23	des	ART	*	der	sg	neut	-	(36
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	24	Reizes	NN	*	reiz	sg	neut	-	36)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	25	unwert	ADJD	*	unwert	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	26	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	27	In	APPR	*	in	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	28	den	PRELS	*	der	pl	fem	-	(36)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	29	es	PPER	*	es	sg	neut	-	(35)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	30	sich	PRF	*	sich	sg	-	-	(35)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	31	auf	APPR	*	auf	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	32	ihrem	PPOSAT	*	ihr	sg	neut	-	(37|(2)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	33	Munde	NN	*	mund	sg	neut	-	37)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	34	kleidet	VVFIN	*	kleiden	sg	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	35	:	$.	*	--	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	36	–	XY	*	–	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	37	Nein	NN	*	nein	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	38	;	$.	*	--	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	39	selbst	ADV	*	selbst	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	40	ihr	PPOSAT	*	ihr	sg	neut	-	(34|(2)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	41	Lächeln	NN	*	lächeln	sg	neut	-	34)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	42	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	43	!	$.	*	--	-	-	-	-

Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	hab	VVFIN	*	hab	sg	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	es	PPER	*	es	sg	neut	-	(34)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	ja	ADV	*	ja	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	Wohl	NN	*	wohl	sg	neut	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	schöner	ADJD	*	schön	pl	neut	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	noch	ADV	*	noch	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	8	an	APPR	*	an	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	9	Aberwitz	NE	*	aberwitz	sg	masc	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	11	an	APPR	*	an	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	12	Tand	NN	*	tand	sg	masc	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	14	An	APPR	*	an	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	15	Höhnerei	NN	*	höhnerei	sg	fem	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	16	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	17	an	APPR	*	an	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	18	Schmeichler	NE	*	schmeichler	pl	masc	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	19	und	KON	*	und	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	20	an	APPR	*	an	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	21	Buhler	NE	*	buhler	pl	masc	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	22	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	23	Verschwenden	NN	*	verschwend	pl	*	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	24	sehn	CARD	*	sehn	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	25	!	$.	*	--	-	-	-	-

Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	Hats	NE	*	hat	-	-	-	(34)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	da	ADV	(S*)	da	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	mich	PPER	(S(NP*	mich	sg	*	-	(4)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	auch	ADV	*)	auch	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	bezaubert	VVPP	*)	bezaubern	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Hats	NE	(VROOT(PSEUDO(S*	hats	-	-	-	(34)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	da	ADV	*	da	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	mir	PPER	(VP*	sich	sg	*	-	(4)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	auch	ADV	*	auch	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	den	ART	(NP*	der	sg	masc	-	(38
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	Wunsch	NN	*)	wunsch	sg	masc	-	38)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	entlockt	VVPP	*)	entlocken	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	8	mein	PPOSAT	(VP(NP*	mein	sg	neut	-	(39|(4)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	9	Leben	NN	*)	leben	sg	neut	-	39)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	10	In	APPR	(PP*	in	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	11	seinem	PPOSAT	*	sein	sg	neut	-	(36|(34)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	12	Sonnenscheine	NN	*)	sonnenschein	sg	neut	-	36)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	13	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	14	verflattern	VVINF	*)))	verflattern	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	15	?	$.	*))	--	-	-	-	-

Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ich	PPER	(S*	ich	sg	*	-	(4)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	wüßte	VVFIN	*	wissen	sg	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*)	nicht	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	bin	VAFIN	*	sein	sg	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	auf	APPR	(PP*	auf	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	den	ART	*	der	sg	masc	-	(1)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	doch	ADV	(NP(AP*	doch	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	launisch	ADJD	*)	launisch	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	Der	NN	*))	der	sg	masc	-	(1)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	8	diesen	PDAT	(NP*	dieser	pl	masc	-	(28
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	9	höhern	ADJA	*	höhern	pl	masc	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	10	Wert	NN	*	wert	sg	masc	-	28)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	11	allein	ADV	*)	allein	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	12	ihr	PPER	*	ihr	sg	fem	-	(2)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	13	gab	VVFIN	*)	geben	sg	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	14	?	$.	*))	--	-	-	-	-

Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wie	PWAV	*	wie	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	das	PDS	*	der	sg	neut	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	warum	PWAV	(VROOT(PSEUDO*	warum	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	Wenn	KOUS	(NP(S*	wenn	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	den	ART	(NP*	der	sg	masc	-	(40
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	Spott	NN	*)	spott	sg	masc	-	40)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	verdiente	VVFIN	*)	verdienen	sg	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	Mit	APPR	(S(PP*	mit	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	8	dem	PRELS	*)	der	sg	*	-	(40)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	9	mich	PPER	*	mich	sg	*	-	(4)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	10	Saladin	NE	*	saladin	sg	*	(PER*)	(7)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	11	entließ	VVFIN	*))	entlassen	sg	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	12	!	$.	*))	--	-	-	-	-

Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Schon	ADV	(VROOT(PSEUDO(S*	schon	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	schlimm	ADJD	*	schlimm	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	Genug	NN	*	genug	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	daß	KOUS	(S*	daß	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	Saladin	NN	*	saladin	sg	neut	-	(7)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	es	PPER	(VP*	es	sg	neut	-	(41)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	glauben	VVINF	*)	glauben	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	8	konnte	VMFIN	*))	können	sg	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	9	!	$.	*))	--	-	-	-	-

Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wie	PWAV	(VROOT(PSEUDO(S(AP*	wie	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	klein	ADJD	*)	klein	sg	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	ihm	PPER	(VP*	ihm	sg	masc	-	(7)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	da	ADV	*	da	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	scheinen	VVINF	*)	scheinen	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	mußte	VMFIN	*)	müssen	sg	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	!	$.	*))	--	-	-	-	-

Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	wie	PWAV	(VROOT(PSEUDO(AP*	wie	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	Verächtlich	ADJD	*)	verächtlich	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	Und	KON	(NP*	und	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	das	PDS	*	der	sg	neut	-	(42
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	alles	PIS	(NP*	alle	sg	neut	-	42)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	um	APPR	(PP*	um	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	ein	ART	*	ein	sg	neut	-	(43
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	Mädchen	NN	*)))	mädchen	sg	neut	-	43)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	?	$.	*))	--	-	-	-	-

Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	Curd	NE	*	curd	-	-	-	(18)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Curd	NE	(VROOT(PSEUDO(MPN*	curd	-	-	-	(18)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*)))	--	-	-	-	-

Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	das	PDS	(VROOT(PSEUDO(S*	der	sg	neut	-	(42)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	geht	VVFIN	*	gehen	sg	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	so	ADV	*	so	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*)	nicht	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Lenk	NE	*	lenk	-	-	(PER*)	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	'	$(	*	--	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	ein	PTKVZ	*	ein	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*	--	-	-	-	-

Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wenn	KOUS	(VROOT(PSEUDO(S*	wenn	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	vollends	ADV	*	vollends	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	Mir	NE	(MPN*	sich	sg	*	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	Daja	NE	*)	daja	-	-	(PER*)	(0)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	nur	ADV	(S*	nur	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	was	PWS	*	was	sg	neut	-	(41)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	vorgeplaudert	VVPP	*	vorgeplaudern	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	hätte	VAFIN	*)	haben	sg	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	9	Was	PWS	(S*	was	sg	neut	-	(41)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	10	schwerlich	ADJD	(VP*	schwerlich	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	11	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	12	erweisen	VVINF	*))	erweisen	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	13	stünde	VVFIN	*))	stehen	sg	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	14	?	$.	*))	--	-	-	-	-

Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	Sieh	NE	(NP*	sieh	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	Da	ADV	(S*	da	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	tritt	VVFIN	*	treten	sg	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	er	PPER	*	er	sg	masc	-	(1)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	endlich	ADV	*	endlich	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	8	in	APPR	(VP(PP*	in	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	9	Gespräch	NN	*)	gespräch	sg	neut	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	10	vertieft	VVPP	*)))	vertiefen	sg	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	12	Aus	APPR	*	aus	sg	masc	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	13	seinem	PPOSAT	(NP*	sein	sg	neut	-	(17|(1)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	14	Hause	NN	*)	haus	sg	neut	-	17)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	15	!	$.	*))	--	-	-	-	-

Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ha	NE	*	ha	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	mit	APPR	*	mit	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	wem	PWS	*	wem	sg	masc	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*	--	-	-	-	-

Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	Mit	APPR	(NP(PP*	mit	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	ihm	PPER	*))	ihm	sg	masc	-	(5)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Mit	APPR	(VROOT(PSEUDO(PP*	mit	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	meinem	PPOSAT	*	mein	sg	masc	-	(5|(4)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	Klosterbruder	NN	*)	klosterbruder	sg	masc	-	5)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ha	NE	*	ha	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	so	ADV	(VROOT(PSEUDO(S*	so	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	weiß	VVFIN	*	weiß	sg	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	Er	PPER	(NP*	er	sg	masc	-	(1)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	sicherlich	ADV	*	sicherlich	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	schon	ADV	*	schon	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	alles	PIS	*))	alle	sg	neut	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	!	$.	*))	--	-	-	-	-

Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	ist	VAFIN	(VROOT(PSEUDO(S*	sein	sg	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	wohl	ADV	*	wohl	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	gar	ADV	*	gar	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	Dem	ART	(VP(NP*	der	sg	neut	-	(8
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	Patriarchen	NN	*)	patriarch	sg	neut	-	8)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	schon	ADV	*	schon	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	verraten	VVPP	*))	verraten	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	!	$.	*))	--	-	-	-	-

Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ha	NE	*	ha	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Was	PWS	*	was	sg	neut	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	hab	VAFIN	*	hab	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(18|(4)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	Querkopf	NN	*	querkopf	sg	masc	-	18)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	nun	ADV	*	nun	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	gestiftet	VVPP	*	stiften	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	!	$.	*	--	-	-	-	-

Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	Daß	KOUS	*	daß	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	Ein	ART	*	ein	sg	masc	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	einz	NN	*	einz	sg	masc	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	'	$(	*	--	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	ger	ADJA	*	g	pl	masc	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	Funken	NN	*	funke	pl	masc	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	dieser	PDAT	*	dieser	sg	fem	-	(44
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	8	Leidenschaft	NN	*	leidenschaft	sg	fem	-	44)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	9	Doch	ADV	*	doch	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	10	unsers	PPOSAT	*	unsers	-	-	-	(45|(24)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	11	Hirns	NN	*	hirn	-	-	-	45)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	12	so	ADV	*	so	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	13	viel	PIS	*	viel	*	*	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	14	verbrennen	VVINF	*	verbrennen	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	15	kann	VMFIN	*	können	sg	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	16	!	$.	*	--	-	-	-	-

Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	Geschwind	NN	*	geschwind	sg	masc	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	entschließ	VVFIN	*	entschlassen	sg	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	dich	PPER	*	dich	sg	*	-	(18)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	was	PWS	*	was	sg	neut	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	nunmehr	ADV	*	nunmehr	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	zu	PTKZU	*	zu	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	8	tun	VVINF	*	tun	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	9	!	$.	*	--	-	-	-	-

Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	will	VMFIN	*	wollen	sg	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	hier	ADV	*	hier	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	seitwärts	ADV	*	seitwärts	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	ihrer	PPOSAT	*	ihr	sg	fem	-	(46)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	warten	VVINF	*	warten	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	;	$.	*	--	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	–	XY	*	–	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	8	ob	KOUS	*	ob	-	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	9	Vielleicht	ADV	*	vielleicht	sg	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	10	der	ART	*	der	sg	masc	-	(5
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	11	Klosterbruder	NN	*	klosterbruder	sg	masc	-	5)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	12	ihn	PPER	*	ihn	sg	masc	-	(1)
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	13	verläßt	VVFIN	*	verlassen	sg	-	-	-
Nathan_Act5_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	14	.	$.	*	--	-	-	-	-

#end document
