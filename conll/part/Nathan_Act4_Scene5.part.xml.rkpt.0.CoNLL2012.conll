#begin document (Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll); part 000
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Saladin	NE	(VROOT(PSEUDO(CNP*	saladin	sg	*	-	(7)
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	und	KON	*	und	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	Sittah	NE	*)	sittah	sg	*	-	(15)
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	SITTAH	NE	(VROOT(PSEUDO*	sittah	-	-	-	(15
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ganz	ADV	(VROOT(PSEUDO(S(ISU*	ganz	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	sonderbar	ADJD	*))	sonderbar	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Gelt	NN	(VROOT(PSEUDO(NP*	gelt	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	Sittah	NE	*)	sittah	sg	-	-	(15)
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Muß	VMFIN	(VROOT(PSEUDO(S*	müssen	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	mein	PPOSAT	(NP*	mein	-	-	-	(16|(7)
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	Assad	NN	*)	assad	-	-	-	16)
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	nicht	PTKNEG	(VP(VP*	nicht	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	ein	ART	(NP*	ein	sg	masc	-	(17
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	braver	ADJD	*	brav	sg	masc	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	17)
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	Ein	ART	(NP*	ein	sg	masc	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	schöner	ADJA	*	schön	sg	masc	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	junger	ADJA	*	jung	sg	masc	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	Mann	NN	*))	mann	sg	masc	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	gewesen	VAPP	*)	sein	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	12	sein	VAINF	*))	sein	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	13	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	SITTAH	NE	(VROOT(PSEUDO*	sittah	-	-	-	(15
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wenn	KOUS	(VROOT(PSEUDO(S*	wenn	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	er	PPER	*	er	sg	masc	-	(16)
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	so	ADV	*	so	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	war	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	und	KON	(S*	und	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	zu	APPR	(PP*	zu	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	diesem	PDAT	*	dieser	sg	masc	-	(18
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	Bilde	NN	*)	bild	sg	masc	-	18)
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	Der	ART	(NP*	der	sg	masc	-	(19
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	Tempelherr	NN	*)	tempelherr	sg	masc	-	19)
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	12	vielmehr	ADV	(VP*	vielmehr	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	13	gesessen	VVPP	*)))	sitzen	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	14	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	Aber	KON	(S*	aber	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	Wie	PWAV	*	wie	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	hast	VAFIN	*	haben	sg	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	du	PPER	*	du	sg	*	-	(7)
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	doch	ADV	*)	doch	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	vergessen	VVINF	(S*	vergessen	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	können	VMFIN	*	können	pl	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	dich	PRF	(VP*	dich	sg	-	-	(7)
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	Nach	APPR	(PP*	nach	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	seinen	PPOSAT	*	sein	pl	neut	-	(20|(19)
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	Eltern	NN	*)	eltern	pl	neut	-	20)
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	12	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	13	erkundigen	VVINF	*)))	erkundigen	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	14	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	(21
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	ins	APPRART	(PP*	in	sg	neut	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	besondre	ADJA	*)	besondre	sg	neut	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	wohl	ADV	*	wohl	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	nach	APPR	(PP*	nach	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	seiner	PPOSAT	*	sein	sg	fem	-	(22|(19)
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	Mutter	NN	*))	mutter	sg	fem	-	22)
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ob	KOUS	(VROOT(PSEUDO(S*	ob	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	seine	PPOSAT	(NP*	sein	pl	masc	-	(22|(19)
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	Mutter	NN	*)	mutter	pl	masc	-	22)
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	hier	ADV	*	hier	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	zu	APPR	(PP*	zu	-	-	-	(23
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	Lande	NN	*	land	sg	neut	-	23)
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	nie	ADV	*)	nie	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	Gewesen	NN	*	gewesen	*	neut	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	sei	VAFIN	*)	sein	sg	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	Nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	wahr	PTKVZ	*	wahr	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	?	$.	*	--	-	-	-	21)

Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	SITTAH	NE	(VROOT(PSEUDO*	sittah	-	-	-	(15
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Das	PDS	(VROOT(PSEUDO(S*	der	sg	neut	-	(21)
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	machst	VVFIN	*	machen	sg	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	du	PPER	*	du	sg	*	-	(7)
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	gut	ADJD	*)	gut	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	O	ITJ	*	O	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	möglicher	ADJD	*	möglich	sg	masc	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	wär	VAFIN	*	sein	sg	masc	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	nichts	PIS	*	nichts	*	neut	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	!	$.	*	--	-	-	-	-

Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Denn	KON	(VROOT(PSEUDO(CS(S*	denn	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	Assad	NE	*	assad	sg	masc	-	(16)
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	war	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	Bei	APPR	(AP(PP*	bei	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	hübschen	ADJA	*	hübsch	pl	masc	-	(24
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	Christendamen	NN	*)	christendam	pl	masc	-	24)
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	so	ADV	*	so	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	willkommen	ADJD	*))	willkommen	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	Auf	APPR	(VP(PP*	auf	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	hübsche	ADJA	*	hübsch	pl	masc	-	(24
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	Christendamen	NN	*)	christendame	pl	masc	-	24)
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	12	so	ADV	*	so	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	13	erpicht	VVPP	*	erpichen	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	15	Daß	KOUS	(S*	daß	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	16	einmal	ADV	*	einmal	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	17	gar	ADV	(NP*	gar	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	18	die	ART	*	der	sg	fem	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	19	Rede	NN	*)	rede	sg	fem	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	20	ging	VVFIN	*	gehen	sg	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	21	–	$.	*	–	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	22	Nun	ADV	(S*	nun	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	23	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	24	nun	ADV	*	nun	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	25	;	$.	*	--	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	26	Man	PIS	(S*	man	sg	*	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	27	spricht	VVFIN	*	sprechen	sg	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	28	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	29	gern	ADV	*	gern	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	30	davon	PTKVZ	*)))))	davon	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	31	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	Genug	NN	*	genug	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	;	$.	*	--	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	ich	PPER	(S*	ich	sg	*	-	(7)
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	hab	VAFIN	*	heben	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	Ihn	PPER	*	ihn	sg	masc	-	(25)
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	wieder	ADV	*)	wieder	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	will	VMFIN	*	wollen	sg	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	mit	APPR	*	mit	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	allen	PIS	*	aller	pl	*	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	seinen	PPOSAT	(NP*	sein	pl	*	-	(16)
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	Fehlern	NN	*	fehler	pl	masc	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	Mit	APPR	(VP(PP*	mit	pl	*	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	allen	PIAT	*	aller	pl	*	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	Launen	NN	*	laune	pl	*	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	seines	PPOSAT	(NP*	sein	sg	neut	-	(16)
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	weichen	ADJA	*	weich	sg	neut	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	12	Herzens	NN	*))	Herz	sg	neut	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	13	Ihn	PPER	*	ihn	sg	masc	-	(16)
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	14	wieder	ADV	*	wieder	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	15	haben	VAINF	*))	haben	pl	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	16	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	Oh	NE	*	oh	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	das	ART	(VROOT(PSEUDO(S(NP*	der	sg	neut	-	(2
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	Mädchen	NN	*)	mädchen	sg	neut	-	2)
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	muß	VMFIN	*	müssen	sg	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	Ihm	PPER	*	ihm	sg	masc	-	(19)
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	Nathan	NE	(CNP*	nathan	-	-	-	(1)
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	geben	VVINF	*	geben	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	.	$.	*))))	--	-	-	-	-

Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Meinst	ADV	(VROOT(PSEUDO(S*	meinst	sg	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	du	PPER	*	du	sg	*	-	(15)
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	nicht	PTKNEG	*)	nicht	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	SITTAH	NE	(VROOT(PSEUDO*	sittah	-	-	-	(15
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ihm	PPER	(VROOT(PSEUDO(S*	ihm	sg	*	-	(19)
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	geben	VVFIN	*)	geben	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ihm	PPER	(VROOT(PSEUDO(S*	ihm	sg	*	-	(19)
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	lassen	VVFIN	*)	lassen	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Allerdings	ADV	(VROOT(PSEUDO(S*)	allerdings	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	hätte	VAFIN	*	haben	sg	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	Nathan	NE	*	nathan	-	-	-	(1)
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	So	ADV	(S(AVP*	so	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	bald	ADV	*)	bald	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	er	PPER	*	er	sg	masc	-	(1)
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	ihr	PPOSAT	(NP*	ihr	sg	masc	-	(2)
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	Vater	NN	*)	vater	sg	masc	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	ist	VAFIN	*)	sein	sg	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	12	für	APPR	(PP*	für	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	13	Recht	NN	*	recht	sg	neut	-	(26)
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	14	Auf	APPR	(PP*	auf	sg	neut	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	15	sie	PPER	*)))	sie	pl	*	-	(2)
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	16	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wer	PWS	*	wer	sg	masc	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	ihr	PPER	*	ihr	sg	fem	-	(2)
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	das	ART	*	der	sg	neut	-	(27
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	Leben	NN	*	leben	sg	neut	-	27)
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	so	ADV	*	so	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	erhielt	VVFIN	*	erhalten	sg	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	Tritt	VVFIN	*	treten	sg	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	einzig	ADJD	*	einzig	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	in	APPR	*	in	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	die	ART	*	der	pl	neut	-	(28
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	Rechte	NN	*	recht	pl	neut	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	12	des	ART	*	der	sg	masc	-	(20
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	14	der	PRELS	*	der	sg	masc	-	(20)
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	15	ihr	PPOSAT	*	ihr	sg	masc	-	28)|20)|(2)
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	16	Es	PPER	*	es	sg	neut	-	(27)
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	17	gab	VVFIN	*	geben	sg	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	18	.	$.	*	--	-	-	-	-

Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	SITTAH	NE	(VROOT(PSEUDO*	sittah	-	-	-	(15
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wie	PWAV	(VROOT(PSEUDO(S*	wie	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	also	ADV	*	also	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	Saladin	NN	*)	saladin	sg	*	(PER*)	(7)
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	wenn	KOUS	(VROOT(PSEUDO(S*	wenn	-	-	-	(29
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	du	PPER	*	du	sg	*	-	29)|(7)
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	Nur	ADV	*	nur	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	gleich	ADV	*	gleich	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	das	ART	(NP*	der	sg	neut	-	(2
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	Mädchen	NN	*)	mädchen	sg	neut	-	2)
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	zu	APPR	(PP*	zu	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	dir	PPER	*)	dir	sg	*	-	(7)
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	nähmst	VVFIN	*)	nähmsen	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(S*	sie	pl	*	-	(2)
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	nur	ADV	*	nur	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	Dem	ART	(NP*	der	sg	neut	-	(1
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	unrechtmäßigen	ADJA	*	unrechtmäßig	pl	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	Besitzer	NN	*)	besitzer	pl	masc	-	1)
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	gleich	ADV	*	gleich	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	Entzögest	NN	*)	entzögest	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Täte	VVFIN	(VROOT(PSEUDO(S*	täte	sg	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	das	PDS	*	der	sg	neut	-	(29)
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	wohl	ADV	*	wohl	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	Not	NN	*)	not	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	SITTAH	NE	(VROOT(PSEUDO*	sittah	-	-	-	(15
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Not	NN	(VROOT(PSEUDO(S*	not	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	nun	ADV	*	nun	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	Wohl	ADV	*	wohl	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	eben	ADV	*	eben	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	nicht	PTKNEG	*)	nicht	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	Die	ART	(NP*	der	sg	fem	-	(30
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	liebe	ADJA	*)	lieb	sg	fem	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	Neubegier	NN	*	neubegier	*	*	-	30)
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	Treibt	VVFIN	*	treiben	sg	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	mich	PPER	(VP*	mich	sg	*	-	(6)
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	allein	ADV	*	allein	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	dir	PPER	*	dir	sg	*	-	(7)
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	diesen	PDAT	(NP*	dieser	sg	masc	-	(29
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	Rat	NN	*)	Rat	sg	masc	-	29)
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	12	geben	VVINF	*))	geben	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	13	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Denn	KON	(VROOT(PSEUDO(S(S*	denn	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	von	APPR	(PP*	von	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	gewissen	ADJA	*	gewiß	pl	masc	-	(31
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	Männern	NN	*)	mann	pl	masc	-	31)
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	mag	VMFIN	*	mögen	sg	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	ich	PPER	*	ich	sg	masc	-	(6)
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	gar	ADV	*	gar	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	Zu	NN	*	zu	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	gern	ADV	*	gern	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	so	ADV	*	so	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	bald	ADV	*	bald	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	12	wie	KOKOM	(AP*	wie	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	13	möglich	ADJD	*))	möglich	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	15	wissen	VVFIN	*	wissen	pl	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	16	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	17	was	PWS	(S*	was	sg	neut	-	(32)
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	18	Sie	PPER	*	sie	pl	*	-	(31)
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	19	für	APPR	(VP(VP(PP*	für	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	20	ein	ART	*	ein	sg	neut	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	21	Mädchen	NN	*)	mädchen	sg	neut	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	22	lieben	VVINF	*)	lieben	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	23	können	VMINF	*)))	können	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	24	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nun	ADV	*	nun	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	So	ADV	*	so	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	schick	ADJD	*	schick	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	und	KON	*	und	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	laß	VVFIN	*	lassen	sg	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	sie	PPER	*	sie	sg	fem	-	(2)
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	holen	VVINF	*	holen	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	.	$.	*	--	-	-	-	-

Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	SITTAH	NE	(VROOT(PSEUDO*	sittah	-	-	-	(15
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Darf	VMFIN	(VROOT(PSEUDO(S*	dürfen	sg	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	ich	PPER	*	ich	sg	*	-	(6)
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	Bruder	NN	*)	bruder	-	-	-	(7)
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nur	ADV	(VROOT(PSEUDO(S*	nur	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	schone	VVFIN	*	schon	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	Nathans	NE	*)	nathan	-	-	-	(1)
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nathan	NE	(VROOT(PSEUDO(S*	nathan	-	-	-	(1)
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	muß	VMFIN	*	müssen	sg	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	durchaus	ADV	*	durchaus	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	Nicht	PTKNEG	(VP*	nicht	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	glauben	VVINF	*)	glauben	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	daß	KOUS	(S*	daß	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	man	PIS	(NP*	man	sg	*	-	(7)
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	mit	APPR	(PP*	mit	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	Gewalt	NN	*))	gewalt	sg	fem	-	(33)
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	ihn	PPER	*	ihn	sg	masc	-	(1)
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	von	APPR	(VP(PP*	von	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	12	Ihr	PPER	*)	ihr	pl	*	-	(2)
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	13	trennen	VVINF	*)	trennen	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	14	wolle	VMFIN	*))	wollen	sg	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	15	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	SITTAH	NE	(VROOT(PSEUDO*	sittah	-	-	-	(15
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Sorge	NN	*	sorge	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	.	$.	*	--	-	-	-	-

Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	ich	PPER	*	ich	sg	*	-	(7)
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	Ich	PPER	*	ich	sg	*	-	(7)
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	muß	VMFIN	*	müssen	sg	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	schon	ADV	*	schon	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	selbst	ADV	(AP*	selbst	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	sehn	CARD	*)	sehn	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	wo	PWAV	(S*	wo	-	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	Al-Hafi	NE	*	al-hafi	-	-	(LOC*)	(3)
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	bleibt	VVFIN	*))	bleiben	sg	-	-	-
Nathan_Act4_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

#end document
