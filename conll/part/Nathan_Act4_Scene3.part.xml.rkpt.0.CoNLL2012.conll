#begin document (Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll); part 000
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Szene	NN	(VROOT(PSEUDO(S*	szene	sg	fem	-	(15)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	:	$.	*	--	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	ein	ART	(NP*	ein	sg	masc	-	(16
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	Zimmer	NN	*	zimmer	sg	masc	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	im	APPRART	(PP*	in	sg	masc	-	(17
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	Palaste	NN	*	palast	sg	masc	-	17)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	des	ART	(NP*	der	sg	masc	-	(7
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	Saladin	NN	*	saladin	sg	masc	-	7)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	9	in	APPR	(VP(CVP(VP(PP*	in	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	10	welches	PRELS	*)	welcher	sg	neut	-	(16)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	11	von	APPR	(PP*	von	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	12	Sklaven	NN	*	sklave	pl	fem	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	13	eine	ART	(NP*	ein	sg	fem	-	(18
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	14	Menge	NN	*	menge	sg	fem	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	15	Beutel	NN	*))	beutel	-	-	-	18)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	16	getragen	VVPP	*)	tragen	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	17	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	18	und	KON	*	und	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	19	auf	APPR	(VP(PP*	auf	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	20	dem	ART	*	der	sg	neut	-	(19
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	21	Boden	NN	*)	boden	sg	neut	-	19)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	22	neben	APPR	(PP*	neben	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	23	einander	PPER	*)	einander	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	24	gestellt	VVPP	*))	stellen	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	25	werden	VAINF	*)))))	werden	-	-	-	16)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	26	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Saladin	NE	(VROOT(PSEUDO*	saladin	sg	*	-	(7)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	und	KON	*	und	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	bald	ADV	(S(AVP*	bald	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	darauf	PROAV	*)	darauf	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	Sittah	NE	*)	sittah	sg	-	-	(20)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*))	saladin	-	-	-	(7

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	der	ART	*	der	sg	masc	-	(7)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	dazu	PROAV	*	dazu	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	kömmt	VVFIN	*	kömmen	sg	-	-	7)

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nun	ADV	(VROOT(PSEUDO(S(ISU*	nun	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	wahrlich	ADJD	*))	wahrlich	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	das	PDS	(VROOT(PSEUDO(S*	der	sg	neut	-	(21)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	hat	VAFIN	*	haben	sg	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	noch	ADV	(NP(AP*	noch	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	kein	PIAT	*)	kein	sg	neut	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	Ende	NN	*))	ende	sg	neut	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ist	VAFIN	(S*	sein	sg	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	Des	ART	(NP*	der	sg	masc	-	(21
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	Dings	NN	*)	dings	sg	masc	-	21)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	noch	ADV	*	noch	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	viel	PIS	*	viel	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	zurück	PTKVZ	*)	zurück	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	EIN	NE	(VROOT(PSEUDO(MPN*	ein	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	SKLAVE	NE	*)	sklave	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wohl	ADV	(VROOT(PSEUDO(S*	wohl	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	noch	ADV	(NP*	noch	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	die	ART	*	der	sg	fem	-	(22
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	Hälfte	NN	*))	hälfte	sg	fem	-	22)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	So	ADV	(VROOT(PSEUDO(S*	so	-	-	-	(23
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	tragt	VVFIN	*	tragen	sg	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	das	ART	(NP*	der	sg	neut	-	(22
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	übrige	ADJA	*)	übrig	sg	neut	-	22)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	zu	APPR	(PP*	zu	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	Sittah	NE	*))	sittah	-	-	-	23)|(20)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	Und	KON	*	und	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	Wo	PWAV	(S*	wo	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	bleibt	VVFIN	*	bleiben	sg	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	Al-Hafi	NE	*)	al-hafi	sg	*	-	(3)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Das	PDS	(VROOT(PSEUDO(S(NP*	der	sg	neut	-	(18)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	hier	ADV	*)	hier	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	soll	VMFIN	*	sollen	sg	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	sogleich	ADV	(VP(NP*	sogleich	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	Al-Hafi	NE	*)	al-hafi	-	-	-	(3)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	zu	APPR	(PP*	zu	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	sich	PRF	*)	sich	sg	-	-	(3)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	nehmen	VVINF	*))	nehmen	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	Oder	NE	*	oder	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	ob	KOUS	(S*	ob	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	Ichs	NE	*	ich	-	-	-	(18)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	nicht	PTKNEG	(AP*	nicht	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	vielmehr	ADV	*))	vielmehr	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	dem	ART	(S(NP*	der	sg	masc	-	(24
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	Vater	NN	*)	vater	sg	masc	-	24)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	8	schicke	VVFIN	*)	schicken	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	9	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Hier	ADV	(VROOT(PSEUDO(S*	hier	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	Fällt	VVFIN	*	fallen	pl	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	mir	PPER	*	sich	sg	*	-	(7)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	es	PPER	*	es	sg	neut	-	(18)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	doch	ADV	*	doch	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	nur	ADV	(PP*	nur	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	durch	APPR	*	durch	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	die	ART	*	der	pl	masc	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	8	Finger	NN	*))	finger	pl	masc	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	Zwar	ADV	*	zwar	*	*	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	Man	PIS	(NP(CS(S*	man	sg	*	-	(7)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	wird	VAFIN	*	werden	sg	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	wohl	ADV	*	wohl	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	endlich	ADV	*	endlich	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	hart	ADJD	*)	hart	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	;	$.	*	--	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	8	und	KON	(S(AVP*	und	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	9	nun	ADV	*)	nun	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	10	gewiß	ADV	*	gewiß	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	11	Solls	NN	*	soll	-	-	-	(25)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	12	Künste	NN	(VP*	kunst	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	13	kosten	VVINF	*)))	kosten	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	15	mir	PPER	(VP*	sich	sg	*	-	(25|(7)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	16	viel	PIS	*	viel	*	*	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	17	abzuzwacken	VVIZU	*))	abzwacken	-	-	-	25)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	18	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Bis	APPR	(VROOT(PSEUDO(S(S(PP*	bis	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	wenigstens	ADV	*)	wenigstens	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	die	ART	(NP*	der	pl	neut	-	(26
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	Gelder	NN	*	geld	pl	neut	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	aus	APPR	(PP*	aus	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	Ägypten	NE	*)	ägypten	sg	neut	-	26)|(27)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	Zur	APPRART	(PP*	zu	sg	fem	-	(17
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	Stelle	NN	*))	stelle	sg	fem	-	17)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	8	kommen	VVFIN	*)	kommen	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	10	mag	VMFIN	*	mögen	sg	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	11	das	ART	(NP*	der	sg	neut	-	(28
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	12	Armut	NN	*)	armut	sg	neut	-	28)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	13	sehn	PPOSAT	(AP(NP*	sehn	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	14	Wies	NN	*)	wies	-	-	-	(28)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	15	fertig	ADJD	*)	fertig	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	16	wird	VAFIN	*)	werden	sg	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	17	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	Die	ART	*	der	pl	masc	-	(29
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	Spenden	NN	*	spende	pl	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	bei	APPR	*	bei	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	dem	ART	*	der	sg	neut	-	(30
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	Grabe	NN	*	grabe	sg	neut	-	29)|30)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	Wenn	KOUS	*	wenn	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	8	die	ART	*	der	sg	fem	-	(29)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	9	nur	ADV	*	nur	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	10	fortgehn	FM	*	fortgehn	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	11	!	$.	*	--	-	-	-	-

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wenn	KOUS	(VROOT(PSEUDO(S*	wenn	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	die	ART	(NP*	der	pl	masc	-	(31
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	Christenpilger	NN	*	christenpilger	pl	masc	(MISC*)	31)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	Mit	APPR	(PP*	mit	sg	fem	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	leeren	ADJA	*	leer	pl	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	Händen	NN	*))	hand	pl	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	nur	ADV	*	nur	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	8	abziehn	VVINF	*	abziehn	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	9	dürfen	VMFIN	*)	dürfen	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	10	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wenn	KOUS	(VROOT(PSEUDO(S*	wenn	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	nur	ADV	*	nur	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	–	NN	*)))	–	-	-	-	-

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	SITTAH	NE	(VROOT(PSEUDO*	sittah	-	-	-	(20
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	20)

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	soll	VMFIN	*	sollen	sg	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	nun	ADV	(NP*	nun	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	das	PDS	*))	der	sg	neut	-	(23)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	soll	VMFIN	*	sollen	sg	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	das	ART	(PP*	der	sg	neut	-	(22
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	Geld	NN	*	geld	sg	neut	-	22)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	Bei	APPR	(PP*	bei	sg	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	mir	PPER	*)))	sich	sg	*	-	(6)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Mach	VVIMP	*	mach	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	dich	PRF	*	dich	sg	*	-	(32)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	davon	PROAV	*	davon	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	bezahlt	VVPP	*	bezahlen	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	;	$.	*	--	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	und	KON	*	und	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	leg	VVFIN	*	leg	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	8	Auf	APPR	*	auf	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	9	Vorrat	NN	*	vorrat	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	11	wenn	KOUS	*	wenn	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	12	was	PIS	*	was	sg	neut	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	13	übrig	ADJD	*	übrig	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	14	bleibt	VVFIN	*	bleiben	sg	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	15	.	$.	*	--	-	-	-	-

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	SITTAH	NE	(VROOT(PSEUDO*	sittah	-	-	-	(20
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	20)

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ist	VAFIN	(VROOT(PSEUDO(S*	sein	sg	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	Nathan	NE	(MPN*	nathan	sg	fem	-	(1)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	Noch	NE	*)	noch	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	mit	APPR	(PP*	mit	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	dem	ART	*	der	sg	neut	-	(33
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	Tempelherrn	NN	*)	tempelherr	sg	neut	-	33)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	da	PTKVZ	*)	da	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	8	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Er	PPER	(VROOT(PSEUDO(S*	er	sg	masc	-	(1)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	sucht	VVFIN	*	suchen	sg	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	Ihn	PPER	*	ihn	sg	masc	-	(33)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	aller	PIAT	(NP*	aller	pl	masc	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	Orten	NN	*))	ort	pl	masc	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	SITTAH	NE	(VROOT(PSEUDO*	sittah	-	-	-	(20
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	20)

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Sieh	VVIMP	(VROOT(PSEUDO(S(S*	sieh	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	doch	ADV	*)	doch	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	was	PWS	*	was	sg	neut	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	ich	PPER	*	ich	sg	*	-	(6)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	hier	ADV	*	hier	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	Indem	KOUS	(VP(S*	indem	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	8	mir	PPER	*	sich	sg	*	-	(6)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	9	so	ADV	*	so	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	10	mein	PPOSAT	(NP*	mein	sg	neut	-	(6)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	11	alt	ADJD	*	alt	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	12	Geschmeide	NN	*)	geschmeide	pl	*	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	13	durch	APPR	(PP*	durch	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	14	Die	ART	*	der	pl	fem	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	15	Hände	NN	*)	hand	pl	fem	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	16	geht	VVFIN	*)	gehen	sg	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	17	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	18	gefunden	VVPP	*))	finden	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	19	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ihm	PPER	(VROOT(PSEUDO(AP(NP*	ihm	sg	*	-	(7)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	ein	ART	*	ein	sg	masc	-	(34
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	klein	ADJD	*	klein	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	Gemälde	NN	*)	gemälde	-	-	-	34)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	zeigend	ADJD	*)	zeigend	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ha	XY	*	ha	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	mein	PPOSAT	(VROOT(PSEUDO(NP*	mein	sg	masc	-	(35|(7)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	Bruder	NN	*)	bruder	sg	masc	-	35)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Das	PDS	*	der	sg	neut	-	(34)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	er	PPER	*	er	sg	masc	-	(36)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	er	PPER	*	er	sg	masc	-	(36)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	!	$.	*	--	-	-	-	-

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	War	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	er	PPER	*	er	sg	masc	-	(36)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*	--	-	-	-	-

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	war	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	er	PPER	*	er	sg	masc	-	(36)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*	--	-	-	-	-

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	ah	XY	*	ah	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ah	NE	*	ah	-	-	-	(35
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	wackrer	ADJA	*	wackrer	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	lieber	ADJA	(NP*	lieber	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	Junge	NN	*	junge	-	-	-	35)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	daß	KOUS	(S*	daß	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	ich	PPER	*	ich	sg	*	-	(7)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	8	dich	PRF	*	dich	sg	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	9	So	ADV	*	so	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	10	früh	ADJD	*	früh	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	11	verlor	VVFIN	*))	verlieren	sg	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	12	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Was	PWS	*	was	sg	neut	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	hätt	VAFIN	*	hätt	sg	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(7)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	erst	ADV	*	erst	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	mit	APPR	*	mit	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	dir	PPER	*	dir	sg	*	-	(35)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	8	An	APPR	*	an	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	9	deiner	PPOSAT	*	dein	sg	fem	-	(35)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	10	Seit	NN	*	seit	sg	fem	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	11	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	12	erst	ADV	*	erst	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	13	unternommen	VVPP	*	unternehmen	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	14	!	$.	*	--	-	-	-	-

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	Sittah	NE	*	sittah	sg	-	-	(20)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	Laß	NN	(NP*	lassen	sg	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	mir	PPER	(NP*	sich	sg	*	-	(7)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	das	ART	*	der	sg	neut	-	(34
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	Bild	NN	*))	bild	sg	neut	-	34)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Auch	ADV	*	auch	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	kenn	KOUS	*	kenn	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	ichs	ADJD	*	ichs	-	-	-	(52)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	schon	ADV	*	schon	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	:	$.	*	--	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	er	PPER	*	er	sg	masc	-	(35)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	gab	VVFIN	*	geben	sg	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	8	Es	PPER	*	es	sg	neut	-	(34)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	9	deiner	PPOSAT	*	dein	sg	fem	-	(37|(20)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	10	ältern	NN	*	ältern	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	11	Schwester	NN	*	schwester	sg	neut	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	13	seiner	PPOSAT	*	sein	sg	fem	-	(35)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	14	Lilla	NN	*	lilla	sg	fem	(PER*)	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	15	,	$,	*	--	-	-	-	37)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	16	Die	NN	*	der	sg	fem	-	(37)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	17	eines	ART	*	ein	sg	neut	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	18	Morgens	NN	*	morgen	sg	neut	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	19	ihn	PPER	*	ihn	sg	masc	-	(35)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	20	so	ADV	*	so	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	21	ganz	ADV	*	ganz	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	22	und	KON	*	und	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	23	gar	ADV	*	gar	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	24	Nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	25	aus	APPR	*	aus	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	26	den	ART	*	der	pl	masc	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	27	Armen	NN	*	arme	pl	masc	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	28	lassen	VVINF	*	lassen	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	29	wollt	VMFIN	*	wollen	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	30	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	31	.	$.	*	--	-	-	-	-

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Es	PPER	(VROOT(PSEUDO(S*	es	sg	neut	-	(38)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	war	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	Der	ART	(NP*	der	sg	masc	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	letzte	ADJA	*	letzter	sg	masc	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	den	PRELS	(S*	der	sg	masc	-	(38
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	er	PPER	*	er	sg	masc	-	(35)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	ausritt	VVFIN	*)))	ausreten	sg	-	-	38)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ah	NE	(NP*	ah	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	ich	PPER	(S*	ich	sg	*	-	(7)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	ließ	VVFIN	*	lassen	sg	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	Ihn	PPER	*))	ihn	sg	masc	-	(35)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	reiten	VVFIN	*	reiten	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	8	und	KON	*	und	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	9	allein	ADV	*	allein	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	10	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ah	NE	*	ah	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	Lilla	NE	*	lilla	-	-	(PER*)	(37)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	starb	VVFIN	(CS(S*	sterben	sg	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	Vor	APPR	(PP*	vor	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	Gram	NN	*))	gram	sg	neut	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	8	und	KON	*	und	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	9	hat	VAFIN	(S*	haben	sg	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	10	mirs	ADV	(VP(VP*	mir	-	-	-	(39)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	11	nie	ADV	*	nie	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	12	vergeben	VVPP	*	vergeben	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	14	daß	KOUS	(S*	daß	-	-	-	(39)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	15	Ich	PPER	*	ich	sg	*	-	(7)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	16	so	ADV	*))	so	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	17	allein	ADV	*	allein	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	18	ihn	PPER	*	ihn	sg	masc	-	(35)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	19	reiten	VVINF	*	reiten	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	20	lassen	VVINF	*)))	lassen	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	21	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	Er	PPER	(S*	er	sg	masc	-	(35)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	Blieb	VVFIN	*	blieb	sg	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	weg	PTKVZ	*)	weg	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	SITTAH	NE	(VROOT(PSEUDO*	sittah	-	-	-	(20
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	20)

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(NP*	der	sg	masc	-	(35
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	arme	ADJA	*	arm	sg	masc	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	Bruder	NN	*)	bruder	sg	masc	-	35)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Laß	NN	(VROOT(PSEUDO(S*	lassen	sg	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	nur	ADV	*	nur	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	gut	ADJD	*	gut	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	Sein	NN	*)	sein	sg	neut	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	Einmal	ADV	(S*)	einmal	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	bleiben	VVFIN	(S*	bleiben	pl	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	wir	PPER	*	wir	pl	*	-	(40)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	doch	ADV	*	doch	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	alle	PIS	*	alle	pl	*	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	weg	PTKVZ	*)	weg	pl	*	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	Zudem	PROAV	*	zudem	sg	neut	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	–	XY	*	–	sg	neut	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	wer	PWS	*	wer	sg	masc	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	weiß	VVFIN	*	weiß	sg	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	?	$.	*	--	-	-	-	-

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(S(NP*	der	sg	masc	-	(41
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	Tod	NN	*)	tod	sg	masc	-	41)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	ists	ADV	*	ist	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	nicht	PTKNEG	(PP*	nicht	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	allein	ADV	*	allein	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	Der	PRELS	(S*	der	sg	masc	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	einem	ART	(NP*	ein	sg	masc	-	(42
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	8	Jüngling	NN	*	jüngling	sg	masc	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	9	seiner	PPOSAT	(NP*	sein	sg	fem	-	(35)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	10	Art	NN	*))	Art	sg	fem	-	42)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	11	das	ART	(NP*	der	sg	neut	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	12	Ziel	NN	*)	ziel	sg	neut	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	13	Verrückt	VVFIN	*)))	verrückt	sg	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	14	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Er	PPER	(VROOT(PSEUDO(S*	er	sg	masc	-	(42)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	hat	VAFIN	*	haben	sg	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	der	ART	(NP(CNP(NP*	der	sg	masc	-	(43
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	Feinde	NN	*	feind	sg	masc	-	43)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	mehr	ADV	*)	mehr	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	;	$.	*	--	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	und	KON	*	und	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	oft	ADV	(NP*	oft	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	8	Erliegt	NN	*))	erliegen	sg	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	9	der	ART	(NP*	der	sg	masc	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	10	Stärkste	NN	*))	stärkst	sg	masc	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	11	gleich	ADV	*	gleich	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	12	dem	ART	(NP*	der	sg	masc	-	(44
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	13	Schwächsten	NN	*))	schwache	sg	masc	-	44)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	14	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	Nun	ADV	(NP*	nun	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	Sei	NN	*	sein	sg	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	wie	KOKOM	(S*	wie	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	ihm	PPER	*	ihm	sg	masc	-	(35)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	sei	VAFIN	*))	sein	sg	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ich	PPER	(S*	ich	sg	*	-	(7)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	muß	VMFIN	*	müssen	sg	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	das	ART	(VP(NP*	der	sg	neut	-	(34
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	Bild	NN	*)	bild	sg	neut	-	34)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	doch	ADV	*	doch	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	mit	APPR	(PP*	mit	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	Dem	ART	*	der	sg	neut	-	(33
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	8	jungen	ADJA	*	jung	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	9	Tempelherrn	NN	*)	tempelherr	sg	masc	-	33)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	10	vergleichen	VVINF	*)	vergleichen	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	11	;	$.	*	--	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	12	muß	VMFIN	*	müssen	sg	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	13	Doch	KON	*	doch	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	14	sehn	CARD	*	sehn	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	15	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	16	wie	KON	(S*	wie	-	-	-	(45
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	17	viel	ADV	*	viel	*	*	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	18	mich	PPER	*	mich	sg	*	-	(7)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	19	meine	PPOSAT	(NP*	mein	sg	fem	-	(7)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	20	Phantasie	NN	*)))	phantasie	sg	fem	-	45)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	21	Getäuscht	NN	*	getäuscht	sg	fem	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	22	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	SITTAH	NE	(VROOT(PSEUDO*	sittah	-	-	-	(20
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	20)

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nur	ADV	*	nur	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	darum	PROAV	*	darum	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	bring	FM	*	bring	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	ichs	APPRART	*	ichs	-	-	-	(34)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	.	$.	*	--	-	-	-	-

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Aber	KON	*	aber	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	gib	VVIMP	*	geben	sg	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	Doch	KON	*	doch	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	gib	VVIMP	*	geben	sg	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	!	$.	*	--	-	-	-	-

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(DL(S*	ich	sg	*	-	(6)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	will	VMFIN	*	wollen	sg	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	dir	PPER	*	dir	sg	*	-	(7)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	das	PDS	*	der	sg	neut	-	(45)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	wohl	ADV	*	wohl	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	sagen	VVINF	*)	sagen	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	;	$.	*	--	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	das	ART	(S(NP*	der	sg	neut	-	(45)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	8	Versteht	NN	*)	verstehen	sg	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	9	ein	ART	(NP*	ein	sg	neut	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	10	weiblich	ADJD	*	weiblich	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	11	Aug	NN	*)	aug	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	12	am	PTKA	(AP*	an	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	13	besten	ADJD	*)))	gut	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	14	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*))	saladin	-	-	-	(7)

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	zu	APPR	(VROOT(PSEUDO(CO(PP*	zu	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	einem	ART	*	ein	sg	neut	-	(46
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	Türsteher	NN	*)	türsteher	sg	neut	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	der	ART	(NP*	der	sg	masc	-	(46)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	hereintritt	NN	*))	hereintreten	sg	masc	-	46)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wer	PWS	(VROOT(PSEUDO(S*	wer	sg	masc	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	da	ADV	*)	da	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	der	ART	(NP*	der	sg	masc	-	(33
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	Tempelherr	NN	*)	tempelherr	sg	masc	-	33)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	Er	PPER	*	er	sg	masc	-	(33)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	komm	VVIMP	*	kommen	sg	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	!	$.	*	--	-	-	-	-

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	SITTAH	NE	(VROOT(PSEUDO*	sittah	-	-	-	(20
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	20)

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Euch	ADV	*	euch	-	-	-	(47)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	Zu	PTKZU	*	zu	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	stören	VVINF	*	stören	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	:	$.	*	--	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	ihn	PPER	*	ihn	sg	masc	-	(33)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	mit	APPR	*	mit	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	meiner	PPOSAT	*	mein	sg	fem	-	(48|(6)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	8	Neugier	NN	*	neugier	sg	fem	-	48)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	9	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	10	Zu	APPR	*	zu	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	11	irren	VVINF	*	irren	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	12	–	XY	*	–	-	-	-	-

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Sie	PPER	(VROOT(PSEUDO(CS(S*	sie	sg	fem	-	(20)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	setzt	VVFIN	*	setzen	sg	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	sich	PRF	*	sich	sg	-	-	(20)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	seitwärts	ADV	*	seitwärts	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	auf	APPR	(PP*	auf	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	einen	ART	*	ein	sg	masc	-	(49
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	Sofa	NN	*))	sofa	sg	masc	-	49)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	und	KON	*	und	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	8	läßt	VVFIN	(S*	lassen	sg	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	9	den	ART	(NP*	der	sg	masc	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	10	Schleier	NN	*)	schleier	sg	masc	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	11	fallen	VVINF	*))	fallen	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	SALADIN	NE	(VROOT(PSEUDO*	saladin	sg	neut	(LOC*)	(7
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	7)

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Gut	ADJD	(VROOT(PSEUDO*	gut	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	so	ADV	(S*)	so	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	gut	ADJD	(VROOT(PSEUDO*	gut	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	(	$(	*	--	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	Und	KON	*	und	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	nun	ADV	*	nun	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	sein	PPOSAT	*	sein	-	-	-	(50|(33)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	Ton	NN	*	ton	-	-	-	50)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	!	$.	*	--	-	-	-	-

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wie	PWAV	(VROOT(PSEUDO(S*	wie	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	der	ART	(VP(AVP*	der	sg	masc	-	(50)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	wohl	ADV	*)	wohl	sg	masc	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	sein	VAINF	*)	sein	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	wird	VAFIN	*)	werden	sg	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	1	Assads	NE	*	assad	-	-	(LOC*)	(35)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	2	Ton	NE	*	ton	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	3	Schläft	NE	*	schläft	sg	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	4	auch	ADV	*	auch	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	5	wohl	ADV	*	wohl	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	6	wo	PWAV	*	wo	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	7	in	APPR	*	in	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	8	meiner	PPOSAT	*	mein	sg	fem	-	(51|(7)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	9	Seele	NN	*	seele	sg	fem	-	51)
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	10	noch	ADV	*	noch	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	11	!	$.	*	--	-	-	-	-
Nathan_Act4_Scene3.part.xml.rkpt.0.CoNLL2012.conll	000	12	)	$(	*	--	-	-	-	-

#end document
