#begin document (Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll); part 000
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Szene	NN	(VROOT(PSEUDO*	szene	sg	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	:	$.	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	in	APPR	(PP*	in	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	Nathans	NE	*	nathan	sg	*	-	(15|(1)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	Hause	NN	*)	haus	sg	neut	-	15)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Recha	NE	(VROOT(PSEUDO(CNP*	recha	-	-	-	(2)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	und	KON	*	und	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	Daja	NE	*)	daja	-	-	(PER*)	(0)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	RECHA	NE	(VROOT(PSEUDO*	recha	-	-	(LOC*)	(2
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	2)

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wie	PWAV	(VROOT(PSEUDO(S*	wie	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	Daja	NE	*	daja	-	-	(PER*)	(0)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	drückte	VVFIN	*	drücken	sg	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	sich	PRF	*	sich	sg	-	-	(1)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	mein	PPOSAT	(NP*	mein	sg	masc	-	(1|(2)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	Vater	NN	*)	vater	sg	masc	-	1)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	8	aus	PTKVZ	*)	aus	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	9	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	»	XY	*	»	-	-	-	(16
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ich	PPER	*	ich	sg	*	-	(2)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	dürf	VMFIN	*	dürf	sg	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	'	$(	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	ihn	PPER	*	ihn	sg	masc	-	(17)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	jeden	PIAT	*	jeder	sg	masc	-	(18
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	Augenblick	NN	*	augenblick	sg	masc	-	18)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	erwarten	VVINF	*	erwarten	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	8	?	$.	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	9	«	XY	*	«	-	-	-	16)

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Das	PDS	(VROOT(PSEUDO(S*	der	sg	neut	-	(16)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	klingt	VVFIN	*	klingen	sg	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	–	NE	*	–	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	wahr	PTKVZ	*)	wahr	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	als	KOKOM	(S*	als	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	ob	KOUS	*	ob	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	er	PPER	*	er	sg	masc	-	(17)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	noch	ADV	*	noch	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	so	ADV	*)	so	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	bald	ADV	(S*	bald	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	Erscheinen	NN	*	erscheinen	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	8	werde	VAFIN	*)	werden	sg	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	Wie	PWAV	(S*	wie	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	viel	PIAT	(NP*	viel	*	*	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	Augenblicke	NN	*)	augenblick	*	*	-	(19)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	Sind	VAFIN	*)	sein	sg	*	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	aber	ADV	(AVP*	aber	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	schon	ADV	*)	schon	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	vorbei	ADV	*	vorbei	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	8	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	*	*	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ah	NE	*	ah	sg	*	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	nun	ADV	(S*	nun	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	:	$.	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	wer	PWS	(S*	wer	sg	masc	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	denkt	VVFIN	*))	denken	sg	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	An	APPR	*	an	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	die	ART	(NP*	der	pl	fem	-	(20
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	8	verflossenen	ADJA	*)	verflossen	pl	fem	-	20)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	9	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ich	PPER	(S*	ich	sg	*	-	(2)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	will	VMFIN	*	wollen	sg	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	allein	ADV	(VP(PP*	allein	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	In	APPR	*	in	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	jedem	PIAT	*	jeder	sg	masc	-	(21
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	nächsten	ADJA	*	nächster	sg	masc	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	Augenblicke	NN	*)	augenblick	pl	*	-	21)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	8	leben	VVINF	*))	leben	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Er	PPER	(VROOT(PSEUDO(S*	er	sg	masc	-	(22)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	wird	VAFIN	*	werden	sg	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	doch	ADV	(VP(AVP*	doch	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	einmal	ADV	*)	einmal	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	kommen	VVINF	*	kommen	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	der	PRELS	(S*	der	sg	masc	-	(22)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	ihn	PPER	*	ihn	sg	masc	-	(17)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	8	bringt	VVFIN	*)))	bringen	sg	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	O	KON	(VROOT(PSEUDO(S*	O	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	der	ART	(NP*	der	sg	fem	-	(23
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	verwünschten	ADJA	*	verwünscht	sg	fem	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	Botschaft	NN	*)	botschaft	sg	fem	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	von	APPR	(PP*	von	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	dem	ART	*	der	sg	masc	-	(7
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	Sultan	NE	*))	sultan	sg	masc	-	23)|7)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Denn	KON	(VROOT(PSEUDO(S*	denn	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	Nathan	NE	*	nathan	sg	*	-	(1)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	hätte	VAFIN	*	haben	sg	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	sicher	ADJD	*	sicher	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	ohne	APPR	(PP*	ohne	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	sie	PPER	*)	sie	pl	*	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	Ihn	PPER	*	ihn	sg	masc	-	(17)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	gleich	ADV	*	gleich	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	8	mit	APPR	(PP*	mit	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	9	hergebracht	VVPP	*))	herbringen	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	RECHA	NE	(VROOT(PSEUDO*	recha	-	-	(LOC*)	(2
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	2)

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Und	KON	*	und	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	wenn	KOUS	*	wenn	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	er	PPER	*	er	sg	masc	-	(22)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	nun	ADV	*	nun	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	Gekommen	NN	*	gekommen	sg	neut	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	dieser	PDAT	*	dieser	sg	masc	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	Augenblick	NN	*	augenblick	sg	masc	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	8	wenn	KOUS	*	wenn	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	9	denn	ADV	*	denn	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	10	Nun	ADV	*	nun	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	11	meiner	PIAT	*	mein	pl	masc	-	(24|(25|(2)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	12	Wünsche	NN	*	wunsch	pl	masc	-	25)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	13	wärmster	ADJD	*	wärmster	pl	masc	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	15	innigster	ADJA	*	innig	sg	masc	-	24)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	16	Erfüllet	NN	*	erfüllet	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	17	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	18	:	$.	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	19	was	PWS	*	was	sg	neut	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	20	dann	ADV	*	dann	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	21	?	$.	*	--	-	-	-	-

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	was	PWS	*	was	sg	neut	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	dann	ADV	*	dann	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	?	$.	*	--	-	-	-	-

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Was	PWS	*	was	sg	neut	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	dann	ADV	*	dann	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Dann	ADV	*	dann	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	hoff	VVFIN	*	hoff	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(0)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	daß	KOUS	*	daß	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	auch	ADV	*	auch	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	meiner	PPOSAT	*	mein	pl	masc	-	(26|(0)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	8	Wünsche	NN	*	wunsch	pl	masc	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	9	wärmster	ADJA	*	wärmster	pl	masc	-	26)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	10	Soll	NN	*	sollen	sg	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	11	in	APPR	*	in	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	12	Erfüllung	NN	*	erfüllung	sg	fem	-	(27)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	13	gehen	VVINF	*	gehen	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	14	.	$.	*	--	-	-	-	-

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	RECHA	NE	(VROOT(PSEUDO*	recha	-	-	(LOC*)	(2
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	2)

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(CS(S*	was	sg	neut	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	wird	VAFIN	*	werden	sg	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	dann	ADV	*	dann	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	In	APPR	(PP*	in	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	meiner	PPOSAT	*	mein	sg	fem	-	(28|(2)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	Brust	NN	*	brust	sg	fem	-	28)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	an	APPR	(PP*	an	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	dessen	PDS	*))	der	sg	masc	-	(29|(24)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	8	Stelle	NN	*	stelle	sg	fem	-	29)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	9	treten	VVFIN	*)	treten	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	11	Die	ART	(S*	der	sg	fem	-	(28)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	12	schon	ADV	*	schon	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	13	verlernt	VVPP	*	verlernen	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	15	ohn	PPER	(VP*	ohn	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	16	einen	ART	(PP*	ein	sg	masc	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	17	herrschenden	ADJA	*	herrschend	sg	masc	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	18	Wunsch	NN	*	wunsch	sg	masc	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	19	aller	PIAT	(NP*	aller	pl	masc	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	20	Wünsche	NN	*))	wunsch	pl	masc	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	21	sich	PRF	*	sich	pl	-	-	(28)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	22	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	23	dehnen	VVINF	*))))	dehnen	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	24	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	Nichts	PIS	*	nichts	*	neut	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ah	NE	(VROOT(PSEUDO(DL*	ah	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	ich	PPER	(S*	ich	sg	*	-	(2)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	erschrecke	VVFIN	*))	erschrecken	sg	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	.	$.	(VROOT(PSEUDO*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Mein	PTKANT	*	mein	sg	masc	-	(26
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	mein	PPOSAT	*	mein	sg	masc	-	(0)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	Wunsch	NN	*	wunsch	sg	masc	-	26)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	wird	VAFIN	*	werden	sg	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	dann	ADV	*	dann	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	An	APPR	*	an	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	des	ART	*	der	sg	masc	-	(29|(24
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	8	erfüllten	ADJA	*	erfüllt	sg	masc	-	24)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	9	Stelle	NN	*	stelle	sg	fem	-	29)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	10	treten	VVINF	*	treten	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	11	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	12	meiner	PIS	*	mein	sg	fem	-	(0)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	13	.	$.	*	--	-	-	-	-

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Mein	PPOSAT	*	mein	sg	masc	-	(26|(0)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	Wunsch	NN	*	wunsch	sg	masc	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	dich	PRF	*	dich	sg	*	-	(2)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	in	APPR	*	in	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	Europa	NE	*	europa	sg	neut	(LOC*)	(30)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	dich	PRF	*	dich	sg	*	-	(2)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	8	in	APPR	*	in	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	9	Händen	NN	*	hand	pl	fem	-	(31)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	10	Zu	PTKZU	*	zu	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	11	wissen	VVINF	*	wissen	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	13	welche	PWAT	*	welcher	sg	fem	-	(31)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	14	deiner	PPOSAT	*	dein	sg	fem	-	(2)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	15	würdig	ADJD	*	würdig	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	16	sind	VAFIN	*	sein	pl	-	-	26)

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	RECHA	NE	(VROOT(PSEUDO*	recha	-	-	(LOC*)	(2
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	2)

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Du	PPER	(VROOT(PSEUDO(S*	du	sg	*	-	(0)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	irrst	VVFIN	*)	irrst	sg	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	Was	PWS	(S*	was	sg	neut	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	diesen	PDAT	(NP*	dieser	sg	masc	-	(26
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	Wunsch	NN	*)	wunsch	sg	masc	-	26)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	zu	APPR	(PP*	zu	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	deinem	ADJD	*))	dein	sg	masc	-	(0)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	macht	VVFIN	(S*	machen	sg	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	8	Das	ART	(VP(NP*	der	sg	neut	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	9	nämliche	ADJA	*)	nämlich	sg	neut	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	10	verhindert	VVPP	*	verhindern	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	12	daß	KOUS	(S*	daß	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	13	er	PPER	*	er	sg	masc	-	(26)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	14	meiner	PPOSAT	(VP(NP*	mein	sg	fem	-	(2)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	15	Je	NN	*)	je	sg	fem	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	16	werden	VAINF	*)	werden	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	17	kann	VMFIN	*)))	können	sg	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	18	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Dich	PPER	*	dich	sg	*	-	(0)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	zieht	VVFIN	*	ziehen	sg	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	dein	PPOSAT	*	dein	sg	neut	-	(32|(0)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	Vaterland	NN	*	vaterland	sg	neut	-	32)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	:	$.	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	Und	KON	*	und	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	meines	PIS	*	mein	sg	masc	-	(67)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	8	meines	PPOSS	*	mein	sg	masc	-	(67)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	9	sollte	VMFIN	*	sollen	sg	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	10	mich	PPER	*	mich	sg	*	-	(2)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	11	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	12	halten	VVINF	*	halten	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	13	?	$.	*	--	-	-	-	-

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ein	ART	(VROOT(PSEUDO(NP*	ein	sg	neut	-	(34
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	Bild	NN	*	bild	sg	neut	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	der	ART	(NP*	der	pl	fem	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	Deinen	NN	*)	dein	pl	fem	-	(0)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	das	PRELS	(S*	der	sg	neut	-	(34)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	in	APPR	(PP*	in	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	deiner	PPOSAT	*	dein	sg	fem	-	(35|(0)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	8	Seele	NN	*)	seele	sg	fem	-	35)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	9	Noch	ADV	(AVP*	noch	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	10	nicht	PTKNEG	*)	nicht	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	11	verloschen	ADJA	(NP*	verlosch	-	-	-	34)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	12	Als	NN	*)	als	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	13	die	ART	(S*	der	sg	fem	-	(36
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	14	ich	PPER	*	ich	sg	*	-	(2)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	15	sehn	CARD	*	sehn	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	16	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	17	und	KON	(S*	und	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	18	greifen	VVINF	*	greifen	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	19	kann	VMFIN	*))	können	sg	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	20	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	21	und	KON	(S*	und	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	22	hören	VVINF	*	hören	-	-	-	36)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	23	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	24	Die	ART	(NP*	der	pl	neut	-	(36
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	25	Meinen	NN	*))))	meinen	pl	neut	-	36)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	26	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Sperre	VVFIN	(VROOT(PSEUDO(S*	sperre	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	dich	PPER	*	dich	sg	*	-	(2)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	so	ADV	(NP*	so	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	viel	PIS	*)	viel	*	*	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	du	PPER	*	du	sg	*	-	(2)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	willst	VMFIN	*)	wollen	sg	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Des	ART	(VROOT(PSEUDO(S(NP*	der	-	-	-	(37|(38
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	Himmels	NN	*	himmel	pl	masc	-	38)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	Wege	NN	*)	weg	pl	masc	-	37)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	sind	VAFIN	*	sein	pl	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	des	ART	(NP*	der	sg	masc	-	(38
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	Himmels	NN	*	himmel	sg	masc	-	38)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	Wege	NN	*))	weg	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	wenn	KOUS	*	wenn	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	es	PPER	*	es	sg	neut	-	(39)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	nun	ADV	*	nun	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	dein	PIAT	(NP*	dein	sg	masc	-	(17|(2)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	Retter	NN	*	retter	sg	masc	-	17)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	selber	ADV	*)	selber	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	wäre	VAFIN	*	sein	sg	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	9	Durch	NN	*	durch	sg	masc	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	10	den	ART	(NP*	der	sg	masc	-	(39)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	11	sein	PPOSAT	*	sein	sg	masc	-	(38|(17)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	12	Gott	NN	*)	gott	sg	masc	(PER*)	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	14	für	APPR	(S(PP*	für	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	15	den	PRELS	*)	der	sg	masc	-	(38)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	16	er	PPER	*	er	sg	masc	-	(17)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	17	kämpft	VVFIN	*	kämpfen	sg	-	-	38)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	18	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	19	dich	PPER	*	dich	sg	*	-	(2)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	20	in	APPR	(PP*	in	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	21	Das	ART	(NP*	der	sg	neut	-	(40
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	22	Land	NN	*))	land	sg	neut	-	40)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	23	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	24	dich	PPER	(VP*	dich	sg	*	-	(2)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	25	zu	APPR	(PP*	zu	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	26	dem	ART	*	der	sg	neut	-	(41
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	27	Volke	NN	*)	volk	sg	neut	-	41)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	28	führen	VVINF	*)	führen	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	29	wollte	VMFIN	*)	wollen	sg	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	30	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	31	Für	APPR	(S(PP*	für	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	32	welche	PRELS	*)	welcher	pl	masc	-	(41)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	33	du	PPER	*	du	sg	*	-	(2)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	34	geboren	VVPP	*	gebären	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	35	wurdest	VAFIN	*))	wurdest	sg	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	36	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	RECHA	NE	(VROOT(PSEUDO*	recha	-	-	(LOC*)	(2
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	2)

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Daja	NE	(VROOT(PSEUDO(MPN*	daja	-	-	-	(0)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*)))	--	-	-	-	-

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S(S*	was	sg	neut	-	(42
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	sprichst	ADV	*	sprichen	sg	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	du	PPER	*	du	sg	*	-	(0)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	da	ADV	*	da	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	nun	ADV	*	nun	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	wieder	ADV	*)	wieder	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	liebe	VVFIN	*	lieben	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	8	Daja	NE	*)	daja	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	9	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Du	PPER	(VROOT(PSEUDO(S*	du	sg	*	-	(0)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	hast	VAFIN	*	haben	sg	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	doch	ADV	*	doch	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	wahrlich	ADJD	*	wahrlich	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	deine	PPOSAT	(NP*	dein	-	-	-	(0)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	sonderbaren	ADJA	*	sonderbar	pl	masc	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	Begriffe	NN	*))	begreifen	pl	masc	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	»	XY	(VROOT(PSEUDO*	»	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	Sein	NN	*	sein	sg	masc	-	(17)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	sein	PPOSAT	(NP*	sein	sg	masc	-	(38|(17)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	Gott	NN	*)	gott	sg	masc	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	für	APPR	*	für	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	den	ART	*	der	sg	masc	-	(38)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	er	PPER	*	er	sg	masc	-	(17)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	kämpft	VVFIN	*	kämpfen	sg	-	-	38)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	!	$.	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	«	XY	*	«	-	-	-	-

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wem	PWS	(VROOT(PSEUDO(S*	wem	sg	*	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	eignet	VVFIN	*	eignen	sg	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	Gott	NN	*)	gott	sg	masc	-	(43)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	das	PDS	*	der	sg	neut	-	(38)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	für	APPR	(VP(PP*	für	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	ein	ART	*	ein	sg	neut	-	(68
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	Gott	NN	*	gott	sg	neut	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	68)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	Der	PRELS	(S*	der	sg	masc	-	(44)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	8	einem	ART	(NP*	ein	sg	neut	-	(46
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	9	Menschen	NN	*)	mensch	sg	neut	-	46)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	10	eignet	VVFIN	*))	eignen	sg	-	-	42)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	11	Muß	NN	(VP*	müssen	sg	*	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	12	kämpfen	VVINF	*)	kämpfen	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	13	lassen	VVINF	*))	lassen	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	14	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	Und	KON	(S*	und	-	-	-	(47
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	wie	PWAV	*	wie	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	weiß	VVFIN	*	weiß	sg	-	-	47)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	Man	PIS	(AVP*	man	sg	*	-	(46)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	denn	ADV	*)	denn	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	für	APPR	(S(PP*	für	-	-	-	(48
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	8	welchen	PWAT	*	welcher	sg	masc	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	9	Erdkloß	NN	*)	erdkloß	sg	masc	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	10	man	PIS	*	man	sg	*	-	(46)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	11	geboren	VVPP	*	gebären	-	-	-	48)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	13	Wenn	KOUS	(S*	wenn	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	14	mans	PIS	(S*	man	sg	*	-	(69)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	15	für	APPR	(AVP(AVP*	für	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	16	den	ART	*)	der	sg	masc	-	(49)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	17	nicht	PTKNEG	*)	nicht	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	18	ist	VAFIN	*)	sein	sg	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	19	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	20	auf	APPR	(NP(PP*	auf	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	21	welchem	PRELS	*)	welcher	sg	masc	-	(49)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	22	man	PIS	*))))	man	sg	*	-	(46)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	23	Geboren	NN	*	gebären	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	24	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	Wenn	KOUS	(S*	wenn	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	mein	PPOSAT	(NP*	mein	sg	masc	-	(1|(2)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	Vater	NN	*)	vater	sg	masc	-	1)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	dich	PPER	*	dich	sg	-	-	(0)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	so	ADV	*	so	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	hörte	VVFIN	*)	hören	sg	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	Was	PWS	(S*	was	sg	neut	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	tat	VVFIN	*	taten	sg	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	er	PPER	*	er	sg	masc	-	(1)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	dir	PPER	*	dir	sg	*	-	(0)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	mir	PPER	*	sich	sg	*	-	(2)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	immer	ADV	(AVP*	immer	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	8	nur	ADV	*))	nur	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	9	mein	PPOSAT	(NP*	mein	sg	neut	-	(2)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	10	Glück	NN	*	glück	sg	neut	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	11	So	ADV	(VP(AP*	so	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	12	weit	ADJD	*)	weit	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	13	von	APPR	(PP*	von	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	14	ihm	PPER	*)	ihm	sg	masc	-	(1)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	15	als	APPR	(PP*	als	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	16	möglich	ADJD	*)	möglich	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	17	vorzuspiegeln	VVIZU	*))	vorspiegeln	pl	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	18	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	tat	VVFIN	*	taten	sg	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	er	PPER	*	er	sg	masc	-	(1)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	dir	PPER	*	dir	sg	*	-	(0)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	den	ART	(NP*	der	sg	masc	-	(50
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	Samen	NN	*	samen	sg	masc	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	der	ART	(NP*	der	sg	masc	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	8	Vernunft	NN	*))	vernunft	sg	masc	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	50)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	10	Den	NE	(S*	der	sg	masc	-	(50)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	11	er	PPER	*	er	sg	masc	-	(1)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	12	so	ADV	(AP*	so	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	13	rein	ADJD	*	rein	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	14	in	APPR	(PP*	in	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	15	meine	PPOSAT	*	mein	sg	fem	-	(51|(2)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	16	Seele	NN	*))	seele	sg	fem	-	51)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	17	streute	VVFIN	*	streuen	sg	fem	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	18	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	19	Mit	APPR	(VP(PP*	mit	sg	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	20	deines	PPOSAT	*	dein	sg	neut	-	(32|(0)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	21	Landes	NN	*)	land	sg	neut	-	32)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	22	Unkraut	NN	(CNP*	unkraut	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	23	oder	KON	*	oder	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	24	Blumen	NN	*)	blume	pl	fem	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	25	So	ADV	*	so	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	26	gern	ADV	*	gern	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	27	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	28	mischen	VVINF	*))))	mischen	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	29	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	Liebe	NN	(NP*	liebe	pl	*	-	(0
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	liebe	VVFIN	(S*	lieben	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	Daja	NE	*	daja	-	-	(PER*)	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	0)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	Er	PPER	(S*	er	sg	masc	-	(1)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	will	VMFIN	*	wollen	sg	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	8	nun	ADV	*	nun	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	9	deine	PPOSAT	(NP*	dein	pl	*	-	(52|(0)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	10	bunten	ADJA	*	bunt	pl	fem	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	11	Blumen	NN	*)	blume	pl	fem	-	52)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	12	nicht	PTKNEG	*)))	nicht	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	13	Auf	APPR	*	auf	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	14	meinem	PPOSAT	(NP*	mein	sg	masc	-	(51|(2)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	15	Boden	NN	*)	boden	sg	masc	-	51)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	16	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	Und	KON	(S*	und	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(2)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	muß	VMFIN	*	müssen	sg	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	dir	PPER	*	dir	sg	*	-	(0)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	sagen	VVINF	(VP*	sagen	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	Ich	PPER	(VP(AVP(S(NP*	ich	sg	*	-	(2)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	8	selber	ADV	*)	selber	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	9	fühle	VVFIN	*	fühlen	sg	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	10	meinen	PPOSAT	(NP*	meinen	sg	masc	-	(51|(2)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	11	Boden	NN	*)	boden	sg	masc	-	51)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	13	wenn	KOUS	(S*	wenn	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	14	Sie	PPER	*	sie	sg	*	-	(52)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	15	noch	ADV	(AP*	noch	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	16	so	ADV	*	so	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	17	schön	ADJD	*)	schön	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	18	ihn	PPER	*	ihn	sg	masc	-	(51)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	19	kleiden	VVFIN	*))	kleiden	pl	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	20	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	21	so	ADV	*)	so	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	22	entkräftet	VVPP	*	entkräften	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	23	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	24	So	ADV	(VP*	so	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	25	ausgezehrt	VVPP	*	auszehren	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	26	durch	APPR	(PP*	durch	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	27	deine	PPOSAT	*	dein	pl	masc	-	(52|(0)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	28	Blumen	NN	*)))))	blume	pl	masc	-	52)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	29	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	30	fühle	VVFIN	(S*	fühlen	sg	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	31	In	APPR	(NP(PP*	in	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	32	ihrem	PPOSAT	*	ihr	sg	masc	-	(53|(53)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	33	Dufte	NN	*)	dufte	sg	masc	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	34	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	35	sauersüßem	ADJA	*	sauersüß	sg	masc	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	36	Dufte	NN	*)	dufte	sg	masc	-	53)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	37	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	38	Mich	PPER	*	mich	sg	*	-	(2)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	39	so	ADV	*	so	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	40	betäubt	VVFIN	*	betäuben	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	41	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	42	so	ADV	(AP*	so	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	43	schwindelnd	ADJD	*))	schwindelnd	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	44	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	Dein	PPOSAT	(S(NP*	dein	-	-	-	(0)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	Gehirn	NN	*)	gehirn	pl	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	Ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	dessen	PDS	(VP*	der	sg	neut	-	(53)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	mehr	ADV	*	mehr	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	gewohnt	VVPP	*))	wohnen	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(2)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	tadle	VVFIN	*	tadlen	sg	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	drum	ADV	*	drum	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	Die	ART	(NP*	der	pl	*	-	(54
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	stärkern	TRUNC	*	stärkern	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	Nerven	NN	*)	nerv	pl	masc	-	54)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	8	die	PRELS	(S*	der	pl	masc	-	(54)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	9	ihn	PPER	*	ihn	sg	masc	-	(53)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	10	vertragen	VVFIN	*))	vertragen	pl	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nur	ADV	(VROOT(PSEUDO(CS(S*	nur	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	schlägt	VVFIN	*	schlagen	sg	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	er	PPER	*	er	sg	masc	-	(53)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	mir	PPER	*	sich	sg	*	-	(2)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	zu	PTKVZ	*)	zu	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	und	KON	*	und	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	8	schon	ADV	(S(NP*	schon	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	9	dein	PPOSAT	*	dein	-	-	-	(55|(0)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	10	Engel	NN	*	engel	sg	*	-	55)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	12	Wie	PWAV	(S*	wie	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	13	wenig	PIS	*	wenig	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	14	fehlte	VVFIN	*	fehlen	sg	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	15	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	16	daß	KOUS	(S*	daß	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	17	er	PPER	*	er	sg	masc	-	(55)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	18	mich	PPER	(NP*	mich	sg	*	-	(2)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	19	zur	APPRART	(PP*	zu	sg	fem	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	20	Närrin	NN	*)))))	närrin	sg	fem	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	21	Gemacht	VVPP	*))	gemacht	sg	fem	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	22	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	Noch	ADV	*	noch	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	schäm	VVFIN	*	schäm	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	'	$(	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	ich	PPER	*	ich	sg	*	-	(2)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	mich	PRF	*	mich	sg	-	-	(2)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	vor	APPR	*	vor	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	meinem	PPOSAT	*	mein	sg	masc	-	(1|(2)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	8	Vater	NN	*	vater	sg	masc	-	1)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	9	Der	ART	*	der	sg	masc	-	(56
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	10	Posse	NN	*	posse	sg	masc	-	56)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	11	!	$.	*	--	-	-	-	-

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	DAJA	NE	(VROOT(PSEUDO*	daja	-	-	-	(0
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	0)

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Posse	NN	(VROOT(PSEUDO*	posse	-	-	-	(56)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	Als	KOKOM	*	als	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	ob	KOUS	*	ob	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	der	ART	*	der	sg	masc	-	(50
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	Verstand	NN	*	verstand	sg	masc	-	50)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	Nur	ADV	*	nur	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	hier	ADV	*	hier	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	zu	APPR	*	zu	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	8	Hause	NN	*	haus	sg	neut	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	9	wäre	VAFIN	*	sein	sg	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	10	!	$.	*	--	-	-	-	-

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Posse	NN	(VROOT(PSEUDO*	posse	-	-	-	(47)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Posse	NN	(VROOT(PSEUDO*	posse	-	-	-	(47)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wenn	KOUS	(VROOT(PSEUDO(S*	wenn	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	ich	PPER	*	ich	sg	*	-	(0)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	nur	ADV	*	nur	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	reden	VVINF	*	reden	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	dürfte	VMFIN	*)	dürfen	sg	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	RECHA	NE	(VROOT(PSEUDO*	recha	-	-	(LOC*)	(2
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	2)

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Darfst	VVFIN	(VROOT(PSEUDO(S*	darfst	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	du	PPER	*	du	sg	*	-	(0)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	nicht	PTKNEG	*)	nicht	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wenn	KOUS	(VROOT(PSEUDO(S(AVP(S*	wenn	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	war	VAFIN	*	sein	sg	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(2)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	ganz	ADV	*	ganz	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	Ohr	NN	*)	ohr	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	so	ADV	*	so	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	8	oft	ADV	*)	oft	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	9	es	PPER	*	es	sg	neut	-	(57)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	10	dir	PPER	*	dir	sg	*	-	(0)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	11	Gefiel	NN	*	gefiel	sg	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	13	von	APPR	(S(PP*	von	-	-	-	(57
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	14	deinen	PPOSAT	*	dein	pl	masc	-	(58|(0)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	15	Glaubenshelden	NN	*)	glaubensheld	pl	masc	-	58)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	16	mich	PPER	*	mich	sg	*	-	57)|(2)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	17	Zu	APPR	(PP*	zu	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	18	unterhalten	ADJA	*)))	unterhalten	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	19	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Hab	XY	*	hab	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	'	$(	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(2)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	ihren	PPOSAT	*	ihr	sg	masc	-	(58)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	Taten	NN	*	tat	sg	masc	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	Nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	stets	ADV	*	stets	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	Bewunderung	NN	*	bewunderung	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	8	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	9	und	KON	*	und	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	10	ihren	PPOSAT	*	ihr	pl	neut	-	(58)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	11	Leiden	NN	*	leid	pl	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	12	Nicht	PTKNEG	*	nicht	sg	neut	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	13	immer	ADV	*	immer	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	14	Tränen	NN	*	träne	pl	fem	-	(59)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	15	gern	ADV	*	gern	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	16	gezollt	VVPP	*	zollen	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	17	?	$.	*	--	-	-	-	-

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ihr	PPOSAT	(VROOT(PSEUDO(S(NP*	ihr	sg	masc	-	(52|(58)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	Glaube	NN	*	glaube	sg	masc	-	52)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	Schien	NE	*)	schien	sg	masc	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	freilich	ADV	*	freilich	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	mir	PPER	*	sich	sg	*	-	(2)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	das	ART	(NP*	der	sg	neut	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	Heldenmäßigste	NN	*)	heldenmäßigster	sg	neut	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	An	APPR	(S(PP*	an	sg	neut	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	8	ihnen	PPER	*)	ihnen	pl	*	-	(58)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	9	nie	ADV	*))	nie	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Doch	KON	(VROOT(PSEUDO(S*	doch	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	so	ADV	(AVP*	so	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	viel	PIAT	(NP*	viel	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	tröstender	ADJA	*	tröstend	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	War	NN	*))	sein	sg	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	mir	PPER	*	sich	sg	*	-	(2)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	die	ART	(NP*	der	sg	fem	-	(60
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	Lehre	NN	*)	lehre	sg	fem	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	9	daß	KOUS	(S*	daß	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	10	Ergebenheit	NN	*	ergebenheit	sg	fem	-	60)|(61)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	11	In	APPR	(VP(PP*	in	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	12	Gott	NN	*)	gott	sg	masc	-	(43)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	13	von	APPR	(PP*	von	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	14	unserm	PPOSAT	*	unser	sg	masc	-	(62|(46)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	15	Wähnen	NN	*	wähnen	sg	masc	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	16	über	APPR	(PP*	über	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	17	Gott	NN	*))	gott	sg	neut	-	62)|(43)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	18	So	ADV	(CAVP*	so	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	19	ganz	ADV	*	ganz	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	20	und	KON	*	und	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	21	gar	ADV	(AVP*	gar	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	22	nicht	PTKNEG	*))	nicht	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	23	abhängt	VVPP	*)))	abhängen	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	24	.	$.	*))	--	-	-	-	-

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	Liebe	NN	(NP*	liebe	sg	fem	-	(0
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	Daja	NE	*	daja	sg	fem	(PER*)	0)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	Das	PDS	(CO(S*	der	sg	neut	-	(60)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	hat	VAFIN	*	haben	sg	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	mein	PPOSAT	(VP(NP*	mein	sg	masc	-	(1|(2)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	Vater	NN	*)	vater	sg	masc	-	1)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	8	uns	PPER	*	uns	pl	*	-	(63)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	9	so	ADV	(AVP*	so	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	10	oft	ADV	*)	oft	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	11	gesagt	VVPP	*))	sagen	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	12	;	$.	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	13	Darüber	PROAV	(S*	darüber	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	14	hast	VAFIN	*	haben	sg	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	15	du	PPER	(NP*	du	sg	*	-	(0)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	16	selbst	ADV	*)	selbst	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	17	mit	APPR	(PP*	mit	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	18	ihm	PPER	*)	ihm	sg	masc	-	(1)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	19	so	ADV	*	so	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	20	oft	ADV	*	oft	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	21	Dich	PPER	*	dich	sg	*	-	(0)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	22	einverstanden	ADJD	*)))	einverstanden	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	23	:	$.	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	24	warum	PWAV	(S(S*	warum	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	25	untergräbst	ADV	*	untergräbst	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	26	Du	PPER	*	du	sg	*	-	(0)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	27	denn	ADV	(AVP*	denn	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	28	allein	ADV	*))	allein	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	29	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	30	was	PWS	*	was	sg	neut	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	31	du	PPER	*	du	sg	*	-	(0)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	32	mit	APPR	(PP*	mit	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	33	ihm	PPER	*)	ihm	sg	masc	-	(1)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	34	zugleich	ADV	*	zugleich	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	35	Gebauet	NN	*)	gebauet	sg	masc	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	36	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	Liebe	NN	*	liebe	sg	fem	-	(0
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	Daja	NE	*	daja	sg	fem	(PER*)	0)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	das	PDS	*	der	sg	neut	-	(42)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	kein	PIAT	*	kein	sg	neut	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	Gespräch	NN	*	gespräch	sg	neut	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	9	womit	PWAV	*	womit	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	10	wir	PPER	*	wir	pl	*	-	(63)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	11	unserm	PPOSAT	*	unser	sg	masc	-	(17|(63)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	12	Freund	NN	*	freund	sg	masc	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	13	'	$(	*	--	-	-	-	17)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	14	am	PTKA	*	an	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	15	besten	ADJD	*	gut	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	16	Entgegen	APPR	*	entgegen	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	17	sehn	CARD	*	sehn	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	18	.	$.	*	--	-	-	-	-

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Für	APPR	(VROOT(PSEUDO(S(PP*	für	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	mich	PPER	*)	mich	sg	*	-	(2)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	zwar	ADV	(NP*	zwar	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	ja	ADV	*))	ja	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Denn	KON	(VROOT(PSEUDO(S(AVP(S*	denn	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	mir	PPER	*	sich	sg	*	-	(2)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	Mir	PPER	*	sich	sg	*	-	(2)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	liegt	VVFIN	*	liegen	sg	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	daran	PROAV	(AP*	daran	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	unendlich	ADJD	*))	unendlich	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	8	ob	KOUS	*)	ob	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	9	auch	ADV	(NP*	auch	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	10	er	PPER	*))	er	sg	masc	-	(17)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	11	.	$.	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	12	.	$.	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	13	.	$.	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	14	Horch	NE	(NP*	horch	-	-	(PER*)	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	15	,	$,	*	--	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	16	Daja	NE	*)	daja	-	-	(PER*)	(0)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	17	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	Kommt	VVFIN	(S*	kommen	sg	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	es	PPER	*	es	sg	neut	-	(46)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*)	nicht	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	an	APPR	*	an	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	5	unsre	ADJA	(NP*	unsr	-	-	-	(64|(65)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	6	Türe	NN	*)	türe	-	-	-	64)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	7	?	$.	*))	--	-	-	-	-

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wenn	KOUS	(VROOT(PSEUDO(S*	wenn	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	Er	PPER	*	er	sg	masc	-	(66)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	2	es	PPER	*	es	sg	neut	-	(17)
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	3	wäre	VAFIN	*)	sein	sg	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	0	horch	PTKVZ	*	horch	-	-	-	-
Nathan_Act3_Scene1.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

#end document
