#begin document (Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll); part 000
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nathan	NE	(VROOT(PSEUDO(CNP*	nathan	-	-	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	und	KON	*	und	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	der	ART	(NP*	der	sg	masc	-	(5
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Klosterbruder	NN	*))	klosterbruder	sg	masc	-	5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	(	$(	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ich	PPER	*	ich	sg	*	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	bliebe	VVFIN	*	bleiben	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Rechas	NE	*	recha	sg	*	-	(15|(2)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Vater	NN	*	vater	sg	masc	-	15)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Doch	ADV	*	doch	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	gar	ADV	*	gar	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	zu	PTKZU	*	zu	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	gern	ADV	*	gern	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	!	$.	*	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Zwar	ADV	*	zwar	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	kann	VMFIN	*	können	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	ichs	ADV	*	ichs	-	-	-	(15)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	denn	ADV	*	denn	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	bleiben	VVINF	*	bleiben	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	Auch	NN	*	auch	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	wenn	KOUS	*	wenn	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	ich	PPER	*	ich	sg	*	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	aufhör	VVFIN	*	aufhör	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	es	PPER	*	es	sg	neut	-	(15)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	zu	PTKZU	*	zu	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	heißen	VVINF	*	heißen	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	?	$.	*	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ihr	PPER	*	ihr	pl	*	-	(2)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Ihr	PPER	*	ihr	pl	*	-	(2)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	selbst	ADV	*	selbst	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	werd	VVFIN	*	werden	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	ichs	PPER	*	ichs	-	-	-	(15)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	doch	ADV	*	doch	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	immer	ADV	*	immer	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	auch	ADV	*	auch	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	noch	ADV	*	noch	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	heißen	VVINF	*	heißen	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	Wenn	KOUS	*	wenn	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	sie	PPER	*	sie	sg	fem	-	(2)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	erkennt	VVFIN	*	erkennen	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	wie	PWAV	*	wie	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	19	gern	ADV	*	gern	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	20	ichs	ADJD	*	ichs	-	-	-	(15)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	21	wäre	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	22	.	$.	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	23	)	$(	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	24	–	$.	*	–	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	25	Geh	NE	*	geh	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	26	!	$.	*	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Was	PWS	(S*	was	sg	neut	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	zu	APPR	(PP*	zu	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Euern	NN	*	euer	pl	masc	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Diensten	NN	*))	dienst	pl	masc	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	frommer	ADJA	(NP*	fromm	sg	masc	-	(5
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	Bruder	NN	*)	bruder	sg	masc	-	5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	(LOC*)	(5
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nicht	PTKNEG	(VROOT(PSEUDO(NP*	nicht	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	eben	ADV	*	eben	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	viel	PIS	*)	viel	*	*	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ich	PPER	(S*	ich	sg	*	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	freue	VVFIN	*	freuen	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	mich	PPER	*	mich	sg	-	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Herr	NN	(VP(NP*	herr	sg	masc	-	(1
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	Nathan	NE	*	nathan	sg	masc	(PER*)	1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	Euch	PPER	(S(NP*	euch	pl	masc	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	annoch	ADV	*)	annoch	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	wohl	ADV	*))	wohl	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	sehn	VAINF	*)))	sehn	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	So	ADV	*	so	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	kennt	VVFIN	*	kennen	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Ihr	PPER	*	ihr	pl	*	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	mich	PPER	*	mich	sg	*	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	?	$.	*	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	(LOC*)	(5
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Je	ADV	(VROOT(PSEUDO*	je	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	nu	XY	*	nu	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	;	$.	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	wer	PWS	(S*	wer	sg	masc	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	kennt	VVFIN	*	kennen	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Euch	PPER	*	euch	pl	*	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	nicht	PTKNEG	*)	nicht	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ihr	PPER	(VROOT(PSEUDO(S*	ihr	pl	*	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	habt	VAFIN	*	haben	pl	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	so	ADV	(VP(NP(AP*	so	-	-	-	(16
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	manchem	PIAT	*)	mancher	sg	masc	-	16)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Ja	NN	*)	ja	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Euern	NN	*	euer	pl	fem	-	(17|(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	Namen	NN	(NP*	name	pl	fem	-	17)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	in	APPR	(PP*	in	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	die	ART	*	der	sg	fem	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	Hand	NN	*))	hand	sg	fem	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	gedrückt	VVPP	*))	drücken	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Er	PPER	(VROOT(PSEUDO(S*	er	sg	masc	-	(17)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	steht	VVFIN	*	stehen	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	in	APPR	(PP*	in	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	meiner	PIS	*)	mein	sg	fem	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	auch	ADV	*	auch	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	seit	APPR	(PP*	seit	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	vielen	PIAT	*	vieler	pl	neut	-	(18
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	Jahren	NN	*))	jahr	pl	neut	-	18)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*))	nathan	-	-	-	(1)

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	nach	APPR	(VROOT(PSEUDO(AP(PP*	nach	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	seinem	PPOSAT	*	sein	sg	masc	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Beutel	NN	*)	beutel	sg	masc	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	langend	ADJD	*)	langend	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Kommt	VVFIN	*	kommen	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Bruder	NN	*	bruder	sg	masc	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	kommt	VVFIN	*	kommen	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	;	$.	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	ich	PPER	*	ich	sg	*	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	frisch	ADJD	*	frisch	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	ihn	PPER	*	ihn	sg	masc	-	(17)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	auf	PTKVZ	*	auf	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	.	$.	*	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	(LOC*)	(5
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Habt	VAFIN	*	haben	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Dank	NN	*	dank	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	*	ich	sg	*	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	würd	VAFIN	*	würd	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	es	PPER	*	es	sg	neut	-	(19)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Ärmern	NN	*	ärmer	pl	-	-	(16)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	stehlen	VVINF	*	stehlen	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	;	$.	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	nehme	VVFIN	*	nehmen	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	nichts	PIS	*	nichts	*	neut	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	.	$.	*	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Wenn	KOUS	(S*	wenn	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Ihr	PPER	*	ihr	pl	*	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	mir	PPER	*	sich	sg	*	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	nur	ADV	*)	nur	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	erlauben	VVINF	(S*	erlauben	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	wollt	VMFIN	*	wollen	pl	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	ein	ART	(VP(NP*	ein	*	*	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	wenig	PIAT	(NP*	wenig	*	*	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	Euch	PPER	(AP*	euch	pl	*	-	(20|(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	meinen	PPOSAT	*)	meinen	sg	masc	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	Namen	NN	*))	name	sg	masc	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	aufzufrischen	VVIZU	*))	auffrischen	-	-	-	20)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Denn	KON	(VROOT(PSEUDO(S*	denn	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ich	PPER	*	ich	sg	*	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	kann	VMFIN	*	können	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	mich	PPER	(VP*	mich	sg	-	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	rühmen	VVINF	*	rühmen	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	auch	ADV	(VP(VP*	auch	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	in	APPR	(PP*	in	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	Eure	PPOSAT	*	euer	-	-	-	(21|(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	Hand	NN	*	hand	*	*	-	21)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	Etwas	ADV	*)	etwas	*	*	-	(2)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	gelegt	VVPP	*)	legen	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	haben	VAINF	*)	haben	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	was	PWS	(S*	was	sg	neut	-	(2)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	zu	APPR	(PP*	zu	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	Verachten	NN	*)	verachten	pl	*	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	19	war	VAFIN	*))))	sein	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	20	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Verzeiht	VVPP	*	verzeihen	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ich	PPER	*	ich	sg	*	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	schäme	VVFIN	*	schämen	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	mich	PRF	*	mich	sg	-	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	–	PPER	*	–	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Sagt	NN	*	sagt	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	was	PWS	*	was	sg	neut	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	?	$.	*	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	und	KON	*	und	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	nehmt	VVFIN	(S*	nehmt	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	zur	APPRART	(PP*	zu	sg	fem	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Buße	NN	*	buße	sg	fem	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	siebenfach	CARD	*)	siebenfach	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	Den	ART	(NP*	der	sg	masc	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	Wert	NN	*)	wert	sg	masc	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	desselben	PDS	*	derselbe	sg	masc	-	(22)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	von	APPR	(PP*	von	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	mir	PPER	*)	sich	sg	*	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	an	PTKVZ	*)	an	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	(LOC*)	(5
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Hört	VVIMP	(VROOT(PSEUDO(S*	hören	pl	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	doch	ADV	*	doch	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Vor	APPR	(PP*	vor	-	-	-	(23
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	allen	PIAT	*	aller	pl	*	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Dingen	NN	*)	ding	pl	*	-	23)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	wie	KOKOM	(VP(NP*	wie	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	ich	PPER	*)	ich	sg	*	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	selber	ADV	*	selber	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	nur	ADV	(VP(AVP*	nur	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	Erst	ADV	*)	erst	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	heut	ADV	*	heut	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	an	APPR	(PP*	an	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	dies	PDS	*	dieser	sg	neut	-	(2
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	mein	PPOSAT	(NP*	mein	sg	neut	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	Euch	PPER	(AP*	euch	pl	*	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	vertrautes	ADJA	*)	vertraut	sg	neut	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	Pfand	NN	*))	pfand	sg	neut	-	2)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	Erinnert	VVPP	*)	erinnern	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	19	worden	VAPP	*))	werden	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	20	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Mir	NE	(VROOT(PSEUDO(NP*	sich	sg	*	-	(22
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	vertrautes	ADJA	*	vertraut	sg	neut	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Pfand	NN	*)	pfand	sg	neut	-	22)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	(LOC*)	(5
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Vor	APPR	(VROOT(PSEUDO(S(PP*	vor	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	kurzem	ADJA	*)	kurz	sg	*	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	saß	VVFIN	*	sitzen	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	noch	ADV	*	noch	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	als	APPR	(CPP(PP*	als	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	Eremit	NN	*)	eremit	sg	neut	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	Auf	APPR	(PP*	auf	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	Quarantana	NE	*)	quarantana	sg	neut	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	unweit	APPR	(PP*	unweit	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	Jericho	NE	*)))	jericho	sg	neut	(LOC*)	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Da	ADV	*	da	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	kam	VVFIN	*	kommen	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	arabisch	ADJD	*	arabisch	sg	masc	(MISC*)	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Raubgesindel	NN	*	raubgesindel	sg	masc	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	brach	VVFIN	*	brechen	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	Mein	PPOSAT	*	mein	sg	masc	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	Gotteshäuschen	NN	*	gotteshäusche	sg	masc	(LOC*)	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	ab	PTKVZ	*	ab	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	und	KON	*	und	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	meine	PPOSAT	*	mein	sg	fem	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	Zelle	NN	*	zelle	sg	fem	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	Und	KON	*	und	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	schleppte	VVFIN	*	schleppen	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	mich	PPER	*	mich	sg	*	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	mit	APPR	*	mit	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	fort	PTKVZ	*	fort	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	.	$.	*	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Zum	APPRART	(VROOT(PSEUDO(S(PP*	zu	sg	neut	-	(24
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Glück	NN	*)	glück	sg	neut	-	24)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	entkam	VVFIN	*	entkommen	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Ich	PPER	(NP*	ich	sg	*	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	noch	ADV	*	noch	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	und	KON	(CS(S*	und	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	floh	VVFIN	*	floh	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	hierher	PROAV	*	hierher	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	zum	APPRART	(PP*	zu	sg	neut	-	(8
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	Patriarchen	NN	*)	patriarchen	sg	neut	-	8)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	Um	KOUI	(VP*	um	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	mir	PPER	*	sich	sg	*	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	ein	ART	(NP*	ein	sg	masc	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	ander	ADJA	*	ander	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	Plätzchen	NN	*)	plätzchen	sg	*	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	auszubitten	VVIZU	*))	auszubeiten	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	19	Allwo	NE	(S*	allwo	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	20	ich	PPER	(VP*	ich	sg	*	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	21	meinem	PPOSAT	(NP*	mein	sg	masc	-	(25|(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	22	Gott	NN	*	gott	sg	masc	-	25)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	23	in	APPR	(PP*	in	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	24	Einsamkeit	NN	*)	einsamkeit	sg	fem	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	25	Bis	APPR	(PP*	bis	sg	fem	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	26	an	APPR	*	an	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	27	mein	PPOSAT	*	mein	sg	neut	-	(26|(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	28	selig	ADJD	*	selig	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	29	Ende	NN	*))	ende	sg	neut	-	26)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	30	dienen	VVINF	*)	dienen	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	31	könne	VMFIN	*))))	können	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	32	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	steh	VVFIN	*	steh	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	auf	APPR	(PP*	auf	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Kohlen	NN	(CNP*	kohle	pl	fem	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	guter	ADJA	(NP*	gut	*	*	-	(5
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	Bruder	NN	*))))	bruder	*	*	-	5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Macht	NN	(VROOT(PSEUDO*	macht	sg	fem	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Es	PPER	(AP*	es	sg	neut	-	(20)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	kurz	ADJD	*)	kurz	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Das	ART	(VROOT(PSEUDO(NP*	der	sg	neut	-	(22
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Pfand	NN	*)	pfand	sg	neut	-	22)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	das	ART	(VROOT(PSEUDO(NP*	der	sg	neut	-	(22
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	mir	PPER	(AP*	sich	sg	*	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	vertraute	ADJA	*)	vertraut	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Pfand	NN	*)	pfand	sg	neut	-	22)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	(LOC*)	(5
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Sogleich	ADV	(VROOT(PSEUDO*	sogleich	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Herr	NN	(NP*	herr	sg	masc	-	(1
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Nathan	NE	*)	nathan	sg	masc	(PER*)	1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Nun	ADV	(NP*	nun	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	der	ART	(S(NP*	der	sg	masc	-	(8
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Patriarch	NN	*)	patriarch	sg	masc	-	8)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Versprach	VVFIN	*	versprach	sg	neut	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	mir	PPER	*	sich	sg	*	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	eine	ART	(NP*	ein	sg	fem	-	(27
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	Siedelei	NN	*	siedelei	sg	fem	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	auf	APPR	(PP*	auf	-	-	-	(28
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	Tabor	NN	*)	tabor	sg	-	(LOC*)	27)|28)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	Sobald	NE	*)	sobald	sg	masc	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	als	APPR	(PP*	als	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	eine	PIS	*)	ein	sg	fem	-	(27)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	leer	PTKVZ	*))	leer	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	;	$.	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	und	KON	(S*	und	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	hieß	VVFIN	*	heißen	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	19	inzwischen	ADV	*	inzwischen	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	20	Im	APPRART	(PP*	in	sg	neut	-	(29
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	21	Kloster	NN	*)	kloster	sg	neut	-	29)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	22	mich	PPER	(VP*	mich	sg	*	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	23	als	APPR	(PP*	als	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	24	Laienbruder	NN	*)	laienbruder	sg	masc	-	(30)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	25	bleiben	VVINF	*))	bleiben	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	26	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Da	ADV	(VROOT(PSEUDO(CS(S*	da	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	bin	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	itzt	ADJD	*	itzen	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Herr	NN	(NP*	herr	sg	masc	-	(1
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	Nathan	NE	*	nathan	sg	masc	(PER*)	1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	;	$.	*))	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	und	KON	*	und	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	verlange	VVFIN	(S*	verlang	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	Des	ART	(NP*	der	-	-	-	(31
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	Tags	NN	*)	tags	-	-	-	31)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	wohl	ADV	(AVP*	wohl	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	hundertmal	ADV	*)	hundertmal	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	auf	APPR	(PP*	auf	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	Tabor	NN	*)))	tabor	-	-	(LOC*)	(28)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Denn	KON	(VROOT(PSEUDO(S*	denn	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Der	ART	(NP*	der	sg	masc	-	(8
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Patriarch	NN	*)	patriarch	sg	masc	-	8)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	braucht	VVFIN	*	brauchen	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	mich	PPER	*)	mich	sg	*	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	zu	APPR	*	zu	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	allerlei	PIAT	*	allerlei	*	*	-	(32
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	32)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	Wovor	KOUS	(S*	wovor	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	ich	PPER	*	ich	sg	*	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	großen	ADJA	(NP*	groß	sg	masc	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	Ekel	NN	*)	ekel	sg	masc	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	habe	VAFIN	*)	haben	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Zum	APPRART	(VROOT(PSEUDO(PP*	zu	sg	neut	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Exempel	NN	*)	exempel	sg	neut	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	:	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Macht	NN	*	macht	sg	fem	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	bitt	VVFIN	*	bitt	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Euch	PPER	*	euch	pl	*	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	!	$.	*	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	(LOC*)	(5
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nun	ADV	(VROOT(PSEUDO(CS*	nun	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	es	PPER	(S*	es	sg	neut	-	(20)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	kömmt	VVFIN	*))	kömmen	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Da	ADV	*	da	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	hat	VAFIN	*	haben	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	ihm	PPER	*	ihm	sg	masc	-	(8)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	jemand	PIS	*	jemand	sg	masc	-	(33)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	heut	ADV	*	heut	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	ins	APPRART	*	in	sg	neut	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	Ohr	NN	*	ohr	sg	neut	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	gesetzt	VVPP	*	setzen	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	:	$.	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	Es	PPER	*	es	sg	neut	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	lebe	VVFIN	*	leben	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	hier	ADV	*	hier	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	herum	ADV	*	herum	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	ein	ART	*	ein	sg	masc	-	(34
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	Jude	NN	*	jude	sg	masc	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	der	PRELS	*	der	sg	masc	-	34)|(34)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	19	Ein	ART	*	ein	sg	masc	-	(35
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	20	Christenkind	NE	*	christenkind	sg	masc	-	35)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	21	als	APPR	*	als	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	22	seine	PPOSAT	*	sein	sg	fem	-	(36
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	23	Tochter	NN	*	tochter	sg	fem	-	36)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	24	sich	PRF	*	sich	sg	-	-	(34)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	25	Erzöge	NN	*	erzöge	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	26	.	$.	*	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wie	PWAV	(VROOT(PSEUDO*	wie	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Betroffen	VVPP	*	betreffen	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	(LOC*)	(5
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Hört	VVFIN	(VROOT(PSEUDO(S*	hören	pl	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	mich	PPER	*	mich	sg	*	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	nur	ADV	*	nur	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	aus	PTKVZ	*)	aus	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Indem	KOUS	*	indem	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Er	PPER	*	er	sg	masc	-	(8)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	mir	PPER	*	sich	sg	*	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	nun	ADV	*	nun	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	aufträgt	VVFIN	*	auftragen	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	diesem	PDAT	*	dieser	sg	masc	-	(34
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	Juden	NN	*	Jude	sg	masc	-	34)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	stracks	VVFIN	*	stracks	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	Wo	PWAV	*	wo	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	möglich	ADJD	*	möglich	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	auf	APPR	*	auf	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	die	ART	*	der	sg	fem	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	Spur	NN	*	Spur	sg	fem	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	zu	PTKZU	*	zu	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	kommen	VVINF	*	kommen	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	19	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	20	und	KON	*	und	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	21	Gewaltig	ADJD	*	gewaltig	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	22	sich	PRF	*	sich	sg	-	-	(8)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	23	ob	KOUS	*	ob	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	24	eines	ART	*	ein	sg	masc	-	(37
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	25	solchen	PIAT	*	solcher	sg	masc	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	26	Frevels	NN	*	frevel	sg	masc	-	37)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	27	Erzürnt	NN	*	erzürnt	sg	masc	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	28	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	29	der	PRELS	*	der	sg	masc	-	(37)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	30	ihm	PPER	*	ihm	sg	masc	-	(8)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	31	die	ART	*	der	sg	fem	-	(38
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	32	wahre	ADJA	*	wahr	sg	fem	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	33	Sünde	NN	*	sünde	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	34	wider	APPR	*	wider	-	-	-	38)|(25)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	35	Den	NE	*	den	sg	masc	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	36	heil	PTKVZ	*	heil	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	37	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	38	gen	APPR	*	gen	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	39	Geist	NN	*	geist	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	40	bedünkt	VVPP	*	bedünken	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	41	;	$.	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	42	–	VAFIN	*	–	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	43	das	PDS	*	der	sg	neut	-	(37)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	44	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	45	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	46	die	ART	*	der	sg	fem	-	(38
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	47	Sünde	NN	*	sünde	sg	fem	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	48	,	$,	*	--	-	-	-	38)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	49	Die	NN	*	der	sg	fem	-	(38)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	50	aller	PIAT	*	aller	sg	fem	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	51	Sünden	NN	*	sünde	pl	masc	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	52	größte	ADJA	*	groß	sg	fem	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	53	Sünd	NN	*	sünd	sg	fem	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	54	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	55	uns	PPER	*	uns	pl	*	-	(39)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	56	gilt	VVFIN	*	gelten	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	57	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	58	Nur	ADV	*	nur	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	59	daß	KOUS	*	daß	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	60	wir	PPER	*	wir	pl	*	-	(39)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	61	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	62	Gott	NN	*	gott	sg	masc	(PER*)	(25)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	63	sei	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	64	Dank	NN	*	dank	sg	masc	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	65	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	66	so	ADV	*	so	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	67	recht	ADV	*	recht	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	68	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	69	wissen	VVINF	*	wissen	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	70	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	71	Worin	PWAV	*	worin	sg	*	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	72	sie	PPER	*	sie	sg	fem	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	73	eigentlich	ADV	*	eigentlich	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	74	besteht	VVFIN	*	bestehen	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	75	:	$.	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	76	–	PPER	*	–	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	77	da	ADV	*	da	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	78	wacht	VVFIN	*	wachen	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	79	Mit	APPR	*	mit	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	80	einmal	ADV	*	einmal	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	81	mein	PPOSAT	*	mein	sg	neut	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	82	Gewissen	NN	*	gewissen	sg	neut	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	83	auf	PTKVZ	*	auf	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	84	;	$.	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	85	und	KON	*	und	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	86	mir	PPER	*	sich	sg	*	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	87	Fällt	NN	*	fallen	pl	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	88	bei	PTKVZ	*	bei	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	89	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	90	ich	PPER	*	ich	sg	*	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	91	könnte	VMFIN	*	können	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	92	selber	ADV	*	selber	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	93	wohl	ADV	*	wohl	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	94	vor	APPR	*	vor	-	-	-	(18
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	95	Zeiten	NN	*	zeit	pl	fem	-	18)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	96	Zu	APPR	*	zu	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	97	dieser	PDAT	*	dieser	sg	fem	-	(37
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	98	unverzeihlich	ADJD	*	unverzeihlich	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	99	großen	ADJA	*	groß	sg	fem	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	100	Sünde	NN	*	sünd	sg	fem	-	37)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	101	Gelegenheit	NN	*	gelegenheit	sg	fem	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	102	gegeben	VVPP	*	geben	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	103	haben	VAINF	*	haben	pl	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	104	.	$.	*	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Sagt	NN	*	sagen	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	:	$.	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Hat	VAFIN	(S*	haben	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Euch	PPER	*	euch	sg	*	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	ein	ART	(NP*	ein	sg	neut	-	(40
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	Reitknecht	NN	*)	reitknecht	sg	neut	-	40)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	nicht	PTKNEG	(VP(PP*	nicht	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	vor	APPR	*	vor	-	-	-	(18
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	achtzehn	CARD	*	achtzehn	pl	neut	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	Jahren	NN	*)	jahr	pl	neut	-	18)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	Ein	ART	(NP*	ein	sg	neut	-	(35
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	Töchterchen	NN	*)	töchterchen	sg	neut	-	35)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	gebracht	VVPP	*	bringen	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	von	APPR	(PP*	von	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	wenig	PIAT	*	wenig	*	*	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	Wochen	NN	*)))	woche	pl	fem	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wie	PWAV	*	wie	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	das	PDS	*	der	sg	neut	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Nun	ADV	*	nun	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	freilich	ADV	*	freilich	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	–	CARD	*	–	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	allerdings	ADV	*	allerdings	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	–	XY	*	–	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	(LOC*)	(5
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ei	XY	(VROOT(PSEUDO*	ei	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	seht	VVFIN	(S*	sehen	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Mich	PPER	*	mich	sg	fem	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	doch	ADV	*	doch	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	recht	ADV	*	recht	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	an	PTKVZ	*)	an	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Der	ART	*	der	sg	masc	-	(40
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Reitknecht	NN	*	reitknecht	sg	masc	-	40)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	der	PDS	*	der	sg	masc	-	(40)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	bin	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	ich	PPER	*	ich	sg	*	-	(118)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	.	$.	*	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Seid	VAFIN	*	sein	pl	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ihr	PPER	*	ihr	pl	*	-	(41)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	(LOC*)	(5
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(S(NP*	der	sg	masc	-	(42
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Herr	NN	*	herr	sg	masc	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	von	APPR	(S(PP*	von	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	welchem	PRELS	*)	welcher	sg	masc	-	(42)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	ichs	APPRART	(PP*)	ich	sg	masc	-	(2)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	Euch	PPER	*	euch	sg	masc	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	brachte	VVFIN	*))	bringen	sg	-	-	42)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	War	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	–	PPER	*	–	sg	fem	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	mir	PPER	(NP*	sich	sg	*	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	recht	NN	*)	recht	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	–	CARD	*	–	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	ein	ART	(NP*	ein	sg	masc	-	(43
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	Herr	NN	*	herr	sg	masc	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	von	APPR	(PP*	von	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	Filneck	NN	*)))	filneck	sg	neut	-	43)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	19	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Wolf	NE	*	wolf	-	-	(PER*)	(43)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Von	APPR	*	von	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Filneck	NE	*	filneck	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Richtig	ADJD	(VROOT(PSEUDO*	richtig	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	(LOC*)	(5
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Weil	KOUS	*	weil	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	die	ART	*	der	pl	masc	-	(44
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Mutter	NN	*	mutter	pl	masc	-	44)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	kurz	ADJD	*	kurz	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Vorher	ADV	*	vorher	pl	masc	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	gestorben	VVPP	*	sterben	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	war	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	;	$.	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	und	KON	*	und	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	sich	PRF	*	sich	sg	-	-	(42)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	der	ART	*	der	sg	masc	-	(42
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	Vater	NN	*	vater	sg	masc	-	42)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	Nach	APPR	*	nach	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	–	NN	*	–	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	mein	PPOSAT	*	mein	-	-	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	ich	PPER	*	ich	sg	*	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	–	XY	*	–	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	Gazza	NE	*	gazza	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	19	plötzlich	ADJD	*	plötzlich	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	20	werfen	VVINF	*	werfen	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	21	mußte	VMFIN	*	müssen	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	22	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	23	Wohin	NN	*	wohin	sg	neut	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	24	das	ART	*	der	sg	neut	-	(2
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	25	Würmchen	NN	*	würmchen	sg	fem	-	2)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	26	ihm	PPER	*	ihm	sg	masc	-	(42)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	27	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	28	folgen	VVINF	*	folgen	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	29	konnte	VMFIN	*	können	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	30	:	$.	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	31	So	ADV	*	so	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	32	sandt	ADJD	*	sandt	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	33	ers	APPRART	*	ers	-	-	-	(117)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	34	Euch	NN	*	euch	pl	*	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	35	.	$.	*	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Und	KON	*	und	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	traf	VVFIN	*	treffen	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Euch	PPER	*	euch	pl	*	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	damit	PROAV	*	damit	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	in	APPR	*	in	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	Darun	NE	*	darun	-	-	(LOC*)	(45)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	?	$.	*	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ganz	ADV	(VROOT(PSEUDO(S(ISU*	ganz	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	recht	ADJD	*))	recht	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	(LOC*)	(5
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Es	PPER	*	es	sg	neut	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	wär	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	kein	PIAT	*	kein	sg	neut	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Wunder	NN	*	wunder	sg	neut	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	Wenn	KOUS	*	wenn	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	mein	PPOSAT	*	mein	sg	neut	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	Gedächtnis	NN	*	gedächtnis	sg	neut	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	mich	PPER	*	mich	sg	*	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	betrög	VVFIN	*	betrög	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	.	$.	*	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	*	ich	sg	*	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	habe	VAFIN	*	haben	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Der	ART	*	der	sg	fem	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	braven	ADJA	*	braven	pl	masc	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Herrn	NN	*	herr	pl	masc	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	so	ADV	*	so	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	viel	PIS	*	viel	*	*	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	gehabt	VAPP	*	haben	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	;	$.	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	und	KON	*	und	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	diesem	PDAT	*	dieser	sg	masc	-	(42)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	Hab	NN	*	hab	sg	masc	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	ich	PPER	*	ich	sg	*	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	nur	ADV	*	nur	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	gar	ADV	*	gar	-	-	-	(46
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	zu	APPR	*	zu	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	kurze	ADJA	*	kurz	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	Zeit	NN	*	zeit	-	-	-	46)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	19	gedient	VVPP	*	dienen	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	20	.	$.	*	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Er	PPER	(VROOT(PSEUDO(CS(S*	er	sg	masc	-	(42)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	blieb	VVFIN	*	bleiben	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	bald	ADV	(AVP*	bald	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	drauf	PROAV	*)	drauf	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	bei	APPR	(PP*	bei	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Askalon	NN	*))	askalon	-	-	-	(47)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	;	$.	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	und	KON	*	und	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	war	VAFIN	(S*	sein	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	Wohl	ADV	*	wohl	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	sonst	ADV	*	sonst	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	ein	ART	(NP*	ein	sg	masc	-	(113
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	lieber	ADJA	*	lieber	sg	masc	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	Herr	NN	*)))	herr	sg	masc	-	113)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ja	PTKANT	*	ja	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	wohl	ADV	*	wohl	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	ja	ADV	(VROOT(PSEUDO(S*	ja	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	wohl	ADV	*)	wohl	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Dem	PWS	*	der	sg	-	-	(49)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	ich	PPER	*	ich	sg	*	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	so	ADV	*	so	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	viel	PIS	*	viel	*	*	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	so	ADV	*	so	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	viel	ADV	*	viel	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	zu	APPR	*	zu	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	danken	NN	*	danken	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	habe	XY	*	haben	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	!	$.	*	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(VP(NP*	der	sg	masc	-	(49)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	mehr	PIAT	(AP*	mehr	*	*	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	als	KOKOM	(NP*	als	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	einmal	ADV	(NP*	einmal	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	mich	PPER	*)	mich	sg	*	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	dem	ART	(NP*	der	sg	masc	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	Schwert	NN	*))))	schwert	sg	masc	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	entrissen	VVPP	*)	entreißen	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	(LOC*)	(5
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	O	ITJ	(VROOT(PSEUDO(AP*	O	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	schön	ADJD	*)	schön	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	So	ADV	*	so	-	-	-	(50
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	werd	ADJD	*	werden	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	t	CARD	*	T	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Ihr	PPER	*	ihr	pl	*	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	seines	PPOSAT	*	sein	sg	neut	-	(2|(42)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	Töchterchens	NN	*	töchterchen	sg	neut	-	50)|2)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	Euch	PPER	*	euch	pl	*	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	um	KOUI	*	um	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	so	ADV	*	so	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	lieber	ADV	*	lieber	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	angenommen	VVPP	*	annehmen	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	haben	VAFIN	*	haben	pl	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	.	$.	*	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Das	PDS	(VROOT(PSEUDO(S*	der	sg	neut	-	(50)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	könnt	VVFIN	*	können	pl	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Ihr	PPER	(VP*	ihr	pl	*	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	denken	VVINF	*))	denken	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	(LOC*)	(5
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nun	ADV	(VROOT(PSEUDO(S*	nun	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	wo	PWAV	*	wo	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	es	PPER	*	es	sg	neut	-	(2)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	denn	ADV	*)	denn	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Es	PPER	(VROOT(PSEUDO(S*	es	sg	neut	-	(2)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	doch	ADV	(VP*	doch	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	wohl	ADV	*	wohl	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	etwa	ADV	(AVP*	etwa	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	gar	ADV	*)	gar	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	gestorben	VVPP	*))	sterben	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Laßts	NN	(S*	laßt	-	-	-	(2)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	lieber	ADV	*	lieber	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	gestorben	VVPP	(VP*	sterben	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	sein	VAINF	*))	sein	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Wenn	KOUS	(S*	wenn	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	sonst	ADV	*	sonst	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Nur	ADV	*	nur	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	niemand	PIS	*	niemand	sg	masc	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	um	APPR	(PP*	um	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	die	ART	*	der	sg	fem	-	(51
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	Sache	NN	*)	sache	sg	fem	-	51)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	weiß	VVFIN	*)	weiß	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	:	$.	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	so	ADV	(S*	so	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	hat	VAFIN	*	haben	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	Es	PPER	(NP*	es	sg	neut	-	(52)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	gute	ADJA	*	gut	pl	masc	-	(53
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	Wege	NN	*))	weg	pl	masc	-	53)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Hat	VAFIN	*	haben	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	es	PPER	*	es	sg	neut	-	(52)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	(LOC*)	(5
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Traut	VVFIN	(VROOT(PSEUDO(S*	traut	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	mir	PPER	(NP*	sich	sg	*	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Nathan	NE	*))	nathan	-	-	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Denn	KON	(VROOT(PSEUDO(S*	denn	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	seht	VVFIN	*	sehen	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	ich	PPER	(S*	ich	sg	*	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	denke	VVFIN	*	denken	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	so	ADV	*))	so	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wenn	KOUS	(VROOT(PSEUDO(S(S*	wenn	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	an	APPR	(PP*	an	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	das	ART	*	der	sg	neut	-	(54
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Gute	NN	*	gute	sg	neut	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	54)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Das	KOUS	(S*	der	sg	neut	-	(54)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	ich	PPER	*	ich	sg	*	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	tun	VVINF	*)	tun	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	vermeine	VVFIN	*	vermein	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	gar	ADV	(AP*	gar	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	zu	PTKA	*	zu	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	nah	ADJD	*)	nah	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	Was	PWS	*	was	sg	neut	-	(55
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	gar	ADV	*	gar	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	zu	APPR	(PP*	zu	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	Schlimmes	NN	*)))	schlimmes	sg	neut	-	55)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	grenzt	VVFIN	*)	grenzen	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	19	:	$.	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	20	so	ADV	(S(CAVP(AVP*	so	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	21	tu	ADJD	(S*	tu	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	22	ich	PPER	*	ich	sg	*	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	23	lieber	ADV	*	lieber	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	24	Das	ART	(NP*	der	sg	neut	-	(54
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	25	Gute	NN	*)	gute	sg	neut	-	54)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	26	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	27	;	$.	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	28	weil	KOUS	(S*	weil	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	29	wir	PPER	*	wir	pl	*	-	(33)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	30	das	ART	(NP*	der	sg	neut	-	(55
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	31	Schlimme	NN	*	schlimme	sg	neut	-	55)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	32	zwar	ADV	(AP*	zwar	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	33	So	ADV	(AVP*	so	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	34	ziemlich	ADV	*)	ziemlich	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	35	zuverlässig	ADJD	*))	zuverlässig	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	36	kennen	VVINF	*)))	kennen	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	37	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	38	aber	KON	*	aber	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	39	Bei	APPR	*)	bei	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	40	weiten	VVFIN	*	weit	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	41	nicht	PTKNEG	(NP*	nicht	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	42	das	ART	*	der	sg	neut	-	(54
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	43	Gute	NN	*)))	gute	sg	neut	-	54)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	44	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	War	VAFIN	(S*	sein	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	ja	ADV	*	ja	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	wohl	ADV	*)	wohl	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Natürlich	ADV	(S*	natürlich	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	;	$.	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	wenn	KOUS	*	wenn	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	das	ART	(NP*	der	sg	neut	-	(116
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	Christentöchterchen	NN	*)	christentöchterch	sg	neut	(MISC*)	116)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	Recht	NN	*	recht	sg	neut	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	gut	ADJD	*	gut	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	von	APPR	(VP(VP(PP*	von	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	Euch	PPER	*)	euch	pl	*	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	erzogen	VVPP	*)	erziehen	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	werden	VAINF	*)	werden	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	sollte	VMFIN	*	sollen	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	:	$.	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	Daß	KOUS	(S*	daß	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	Ihrs	NN	*	ihr	-	-	-	(114)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	19	als	APPR	(PP*	als	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	20	Euer	NN	*	euer	-	-	-	(57|(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	21	eigen	ADJA	(NP*	eigen	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	22	Töchterchen	NN	*))	töchterch	pl	fem	-	57)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	23	Erzögt	VVFIN	*))	erzögen	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	24	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Das	PDS	*	der	sg	neut	-	(58|(56)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	hättet	VVFIN	*	hätten	sg	neut	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Ihr	PPER	*	ihr	pl	*	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	mit	APPR	*	mit	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	aller	PIAT	*	aller	sg	fem	-	(59
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	Lieb	NN	*	lieb	*	*	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	'	$(	*	--	-	-	-	58)|59)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	Und	KON	*	und	*	*	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	Treue	NN	*	treue	sg	fem	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	nun	ADV	*	nun	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	getan	VVPP	*	tun	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	und	KON	*	und	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	müßtet	VMFIN	*	müßten	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	so	ADV	*	so	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	Belohnet	VVPP	*	belohnet	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	werden	VAINF	*	werden	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	?	$.	*	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Das	PDS	(VROOT(PSEUDO(S*	der	sg	neut	-	(58)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	will	VMFIN	*	wollen	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	mir	PPER	*	sich	sg	*	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	ein	PTKVZ	*)	ein	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ei	XY	(VROOT(PSEUDO*	ei	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	freilich	ADV	(S(AP*	freilich	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	klüger	ADJD	*)	klug	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	hättet	VVFIN	*	hätten	pl	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Ihr	PPER	*)	ihr	pl	*	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	getan	VVPP	*	tun	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	;	$.	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	Wenn	KOUS	(CS(S*	wenn	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	Ihr	PPER	(NP*	ihr	pl	*	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	die	ART	(NP*	der	sg	fem	-	(2
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	Christin	NN	*)	christin	sg	fem	-	2)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	durch	APPR	(PP*	durch	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	die	ART	*	der	sg	fem	-	(0
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	zweite	ADJA	*	zweiter	sg	fem	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	Hand	NN	*))	hand	sg	fem	-	0)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	Als	APPR	(VP(VP(PP*	als	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	Christin	NN	*)	christin	sg	fem	-	(60)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	auferziehen	VVINF	*)	auferziehen	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	19	lassen	VVINF	*))	lassen	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	20	:	$.	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	21	aber	ADV	*	aber	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	22	So	ADV	(S*	so	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	23	hättet	VVFIN	*	hätten	pl	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	24	Ihr	PPER	*	ihr	pl	*	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	25	das	ART	(NP*	der	sg	neut	-	(2
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	26	Kindchen	NN	*	kindchen	sg	neut	-	2)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	27	Eures	PPOSAT	(NP*	dein	sg	masc	-	(42|(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	28	Freunds	NN	*))	freund	sg	masc	-	42)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	29	Auch	ADV	(VP(AVP*	auch	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	30	nicht	PTKNEG	*)	nicht	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	31	geliebt	VVPP	*)))	lieben	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	32	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Und	KON	*	und	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Kinder	NN	*	kind	pl	neut	-	(61)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	brauchen	VVFIN	*	brauchen	pl	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Liebe	NN	*	liebe	pl	*	-	(62)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Wärs	NN	*	wär	-	-	-	(62)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	eines	ART	*	ein	sg	neut	-	(63
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	wilden	ADJA	*	wild	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	Tieres	NN	*	tier	*	*	-	63)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	Lieb	NE	*	lieb	*	*	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	auch	ADV	*	auch	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	nur	ADV	*	nur	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	In	APPR	*	in	-	-	-	(64
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	solchen	PIAT	*	solcher	pl	neut	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	Jahren	NN	*	jahr	pl	neut	-	64)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	mehr	ADV	*	mehr	*	*	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	19	als	KOKOM	*	als	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	20	Christentum	NN	*	christentum	sg	neut	-	(65)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	21	.	$.	*	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Zum	APPRART	(VROOT(PSEUDO(S(PP*	zu	-	-	-	(65
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Christentume	NN	*)	christentume	pl	masc	-	65)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	hats	VAFIN	*	hats	pl	masc	-	(2)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	noch	ADV	(NP(AVP*	noch	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	immer	ADV	*)	immer	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Zeit	NN	*))	zeit	sg	fem	-	(66)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wenn	KOUS	(VROOT(PSEUDO(S(AVP(S*	wenn	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	nur	ADV	(NP*	nur	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	das	ART	*	der	sg	neut	-	(2
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Mädchen	NN	*)	mädchen	sg	neut	-	2)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	sonst	ADV	(VP*	sonst	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	gesund	ADJD	(CAP*	gesund	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	und	KON	*	und	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	fromm	ADJD	*)	fromm	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	Vor	APPR	(PP*	vor	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	Euern	NN	*	euer	pl	masc	-	(67|(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	Augen	NN	*)	auge	pl	neut	-	67)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	aufgewachsen	VVPP	*)	aufwachsen	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	ist	VAFIN	*)	sein	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	So	ADV	*)	so	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	bliebs	ADV	(PP*	blieb	-	-	-	(2)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	vor	APPR	*	vor	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	Gottes	NN	*	gott	sg	masc	(PER*)	(25)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	Augen	NN	*)	auge	pl	neut	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	19	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	20	was	PWS	(S*	was	sg	neut	-	(68
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	21	es	PPER	*	es	sg	neut	-	(2)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	22	war	VAFIN	*))	sein	sg	-	-	68)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	23	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	denn	ADV	*	denn	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	das	ART	(NP*	der	sg	neut	-	(65
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	ganze	ADJA	*	ganz	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	Christentum	NN	*	christentum	sg	neut	-	65)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	Aufs	APPRART	(PP*	auf	sg	neut	-	(69
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	Judentum	NN	*))	judentum	sg	neut	-	69)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	gebaut	VVPP	*)	bauen	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Es	PPER	(VROOT(PSEUDO(CS(S*	es	sg	neut	-	(70)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	hat	VAFIN	*	haben	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	mich	PPER	(VP*	mich	sg	*	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	oft	ADV	*	oft	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Geärgert	VVPP	*))	geärgert	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	hat	VAFIN	(S*	haben	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	mir	PPER	(VP*	sich	sg	*	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	Tränen	NN	*	träne	sg	masc	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	gnug	ADJD	*	gnug	sg	masc	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	gekostet	VVPP	*))	kosten	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	Wenn	KOUS	(S*	wenn	-	-	-	(70
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	Christen	NN	*	christ	pl	masc	(MISC*)	(39)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	gar	ADV	(AVP*	gar	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	so	ADV	*	so	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	sehr	ADV	*)	sehr	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	vergessen	VVINF	*	vergessen	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	konnten	VMFIN	*)	können	pl	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	19	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	20	Daß	KOUS	(S*	daß	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	21	unser	PPOSAT	(NP*	unser	sg	masc	-	(25|(39)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	22	Herr	NN	*)	herr	sg	masc	-	25)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	23	ja	ADV	*	ja	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	24	selbst	ADV	(NP*	selbst	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	25	ein	ART	*	ein	sg	masc	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	26	Jude	NN	*)	jude	sg	masc	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	27	war	VAFIN	*))))	sein	sg	-	-	70)

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ihr	PPER	(VROOT(PSEUDO(S(NP*	ihr	sg	masc	-	(5
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	guter	ADJA	(NP*	gut	sg	masc	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Bruder	NN	*))	bruder	sg	masc	-	5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	müßt	VMFIN	*	müßen	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	mein	PPOSAT	(VP(NP*	mein	sg	masc	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	Fürsprach	NN	*)	fürsprach	sg	masc	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	sein	VAINF	*	sein	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	Wenn	KOUS	(CS(S*	wenn	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	Haß	NN	(CNP*	haß	sg	masc	-	(71)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	und	KON	*	und	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	Gleisnerei	NN	*)	gleisnerei	sg	masc	-	(72)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	sich	PRF	(VP*	sich	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	gegen	APPR	(PP*	gegen	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	mich	PPER	*)	mich	sg	*	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	Erheben	VVINF	*)	erheben	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	sollten	VMFIN	*)	sollen	pl	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	19	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	20	–	NN	(S(NP*	–	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	21	wegen	APPR	(PP*	wegen	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	22	einer	ART	*	ein	sg	fem	-	(52
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	23	Tat	NN	*	tat	-	-	-	52)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	24	–	NE	(MPN*	–	sg	fem	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	25	Ah	NE	*)))	ah	sg	fem	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	26	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	27	wegen	APPR	(PP*	wegen	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	28	einer	ART	*	ein	sg	fem	-	(52
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	29	Tat	NN	*)))))	tat	sg	fem	-	52)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	30	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Nur	ADV	(S*)	nur	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Ihr	PPER	(S*	ihr	pl	*	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Ihr	PPER	*	ihr	pl	*	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	sollt	VVFIN	*	sollen	pl	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	Sie	PPER	(VP*	sie	pl	*	-	(51)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	wissen	VVINF	*))	wissen	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Nehmt	VVFIN	(S*	nehmt	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	sie	PPER	*	sie	sg	fem	-	(51)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	aber	ADV	*)	aber	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	mit	APPR	(NP(PP*	mit	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	ins	APPRART	*	in	sg	neut	-	(26
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	Grab	NN	*))	grab	sg	neut	-	26)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Noch	ADV	(VROOT(PSEUDO(S*	noch	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	hat	VAFIN	*	haben	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	mich	PPER	*	mich	sg	*	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	nie	ADV	(VP*	nie	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	die	ART	(NP*	der	sg	fem	-	(73
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Eitelkeit	NN	*)	eitelkeit	sg	fem	-	73)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	versucht	VVPP	*	versuchen	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	Sie	PPER	(VP(NP*	sie	pl	*	-	(51)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	jemand	PIS	*)	jemand	sg	masc	-	(74
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	andern	VVINF	*	anderer	-	-	-	74)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	erzählen	VVINF	*))))	erzählen	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Euch	PPER	*	euch	-	-	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Allein	ADV	*	allein	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	erzähl	VVFIN	*	erzähl	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	ich	PPER	*	ich	sg	*	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	sie	PPER	*	sie	sg	fem	-	(51)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	.	$.	*	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Der	ART	*	der	sg	masc	-	(5
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	frommen	ADJA	*	fromm	pl	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Einfalt	NN	*	einfalt	sg	-	-	5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Allein	ADV	*	allein	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	erzähl	ADJD	*	erzähl	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	ich	PPER	*	ich	sg	*	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	sie	PPER	*	sie	sg	fem	-	(51)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	.	$.	*	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Weil	KOUS	(VROOT(PSEUDO(S*	weil	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	die	ART	(NP*	der	sg	fem	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	allein	ADV	(AP*	allein	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Versteht	NN	*))	verstehen	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	was	PWS	(S*	was	sg	neut	-	(75)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	sich	PRF	*	sich	sg	-	-	(76)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	der	ART	(VP(NP*	der	sg	masc	-	(76
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	gottergebne	ADJA	*	gottergebn	sg	masc	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	Mensch	NN	*	mensch	sg	masc	-	76)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	Für	APPR	(PP*	für	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	Taten	NN	*))	tat	pl	fem	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	abgewinnen	VVINF	*)	abgewinnen	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	kann	VMFIN	*))	können	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	(LOC*)	(5
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ihr	PPER	(VROOT(PSEUDO(CS(S*	ihr	pl	*	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	seid	VAFIN	*	sein	pl	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Gerührt	NN	*)	gerührt	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	und	KON	*	und	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Euer	PPOSAT	(S(NP*	euer	*	*	-	(67|(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	Auge	NN	*)	auge	-	-	-	67)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	steht	VVFIN	*	stehen	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	voll	APPR	(PP*	voll	-	-	-	(77
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	Wasser	NN	*)))	wasser	sg	neut	-	77)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ihr	PPER	(VROOT(PSEUDO(S*	ihr	pl	*	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	traft	VVFIN	*	trafen	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	mich	PPER	*	mich	sg	*	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	mit	APPR	(PP*	mit	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	dem	ART	*	der	sg	neut	-	(2
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Kinde	NN	*	kind	sg	neut	-	2)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	zu	APPR	(PP*	zu	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	Darun	NE	*)))	darun	-	-	-	(45)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ihr	PPER	(VROOT(PSEUDO(CS(S*	ihr	pl	*	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	wißt	VVFIN	*	wissen	pl	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	wohl	ADV	*	wohl	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	aber	ADV	*	aber	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	daß	KOUS	(S*	daß	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	wenig	PIAT	(NP(NP*	wenig	*	*	-	(78
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	Tage	NN	*)	tag	*	*	-	78)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	Zuvor	NN	*	zuvor	sg	*	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	,	$,	*)	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	in	APPR	(PP*	in	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	Gath	NE	*)	gath	sg	neut	(LOC*)	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	die	ART	(NP*	der	pl	masc	-	(39
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	Christen	NN	*)	christ	pl	masc	(MISC*)	39)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	alle	PIAT	(VP(NP*	aller	pl	*	-	(79
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	Juden	NN	*)	Jude	pl	*	-	79)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	Mit	APPR	(PP*	mit	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	Weib	NN	(CNP*	weib	sg	masc	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	19	und	KON	*	und	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	20	Kind	NN	*))	kind	sg	neut	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	21	ermordet	VVPP	*)	ermorden	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	22	hatten	VAFIN	*))	haben	pl	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	23	;	$.	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	24	wißt	VVFIN	(S*	wissen	pl	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	25	Wohl	ADV	*	wohl	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	26	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	27	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	28	daß	KOUS	(S*	daß	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	29	unter	APPR	(PP*	unter	-	-	-	(79
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	30	diesen	PDAT	*	dieser	pl	*	-	79)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	31	meine	PPOSAT	(NP*	mein	pl	*	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	32	Frau	NN	*	frau	pl	*	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	33	Mit	APPR	(PP*	mit	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	34	sieben	CARD	*))	sieben	-	-	-	(80
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	35	hoffnungsvollen	ADJA	*	hoffnungsvoll	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	36	Söhnen	NN	*)	söhnen	sg	masc	-	80)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	37	sich	PRF	*	sich	sg	-	-	(81)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	38	Befunden	NN	(NP*	befunde	pl	masc	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	39	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	40	die	PRELS	(S*	der	pl	masc	-	(81
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	41	in	APPR	(PP*	in	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	42	meines	PPOSAT	*	mein	sg	masc	-	(82|(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	43	Bruders	NN	*)	bruder	sg	masc	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	44	Hause	NN	(VP(NP*	haus	sg	neut	-	82)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	45	,	$,	*	--	-	-	-	81)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	46	Zu	APPR	(S(PP*	zu	sg	neut	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	47	dem	PRELS	*)	der	sg	neut	-	(82)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	48	ich	PPER	*	ich	sg	*	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	49	sie	PPER	*	sie	sg	fem	-	(81)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	50	geflüchtet	VVPP	*	flüchten	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	51	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	52	insgesamt	ADV	*	insgesamt	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	53	Verbrennen	NN	*)))	verbrennen	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	54	müssen	VMFIN	*)))))	müssen	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	55	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	(LOC*)	(5
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Allgerechter	ADJD	(VROOT(PSEUDO*	allgerechter	-	-	-	(25)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Als	KOUS	*	als	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ihr	PPER	*	ihr	sg	neut	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	kamt	VVFIN	*	kamen	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	hatt	VAFIN	*	hatt	-	-	-	(83
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	ich	PPER	*	ich	sg	*	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	drei	CARD	*	drei	-	-	-	(78
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	Tag	NN	*	tag	sg	masc	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	'	$(	*	--	-	-	-	78)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	und	KON	*	und	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	Nächt	NN	*	nächt	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	in	APPR	*	in	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	Asch	NE	*	asch	sg	neut	(LOC*)	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	'	$(	*	--	-	-	-	83)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	Und	CARD	*	und	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	Staub	NN	*	staub	sg	masc	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	vor	APPR	*	vor	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	19	Gott	NN	*	gott	sg	masc	-	(84)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	20	gelegen	VVPP	*	liegen	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	21	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	22	und	KON	*	und	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	23	geweint	VVPP	*	weinen	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	24	.	$.	*	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Geweint	NN	*	geweint	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Beiher	NN	(VROOT(PSEUDO(CS(S*	beiher	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	mit	APPR	(VP(PP*	mit	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Gott	NN	*)	gott	sg	masc	-	(84)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	auch	ADV	*	auch	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	wohl	ADV	*	wohl	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	gerechtet	VVPP	*))	rechten	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	Gezürnt	NN	(S*)	gezürnt	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	getobt	VVPP	*	toben	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	mich	PRF	(S(CNP*	mich	sg	*	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	und	KON	*	und	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	die	ART	(NP*	der	sg	fem	-	(85
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	Welt	NN	*))	welt	sg	fem	-	85)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	verwünscht	VVPP	*)	verwünschen	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	;	$.	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	Der	ART	(S(NP*	der	sg	masc	-	(39
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	Christenheit	NN	*)	christenheit	sg	masc	-	39)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	19	den	ART	(VP(NP*	der	sg	masc	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	20	unversöhnlichsten	ADJA	*	unversöhnlich	sg	masc	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	21	Haß	NN	*)	haß	sg	masc	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	22	zugeschworen	VVPP	*)))	zugeschwor	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	23	–	$.	*))	–	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	(LOC*)	(5
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ach	ITJ	(VROOT(PSEUDO(S*)	ach	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	glaubs	VVFIN	*	glaub	sg	-	-	(83)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Euch	PPER	*	euch	pl	*	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	wohl	ADV	*)	wohl	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Doch	KON	(VROOT(PSEUDO(S*	doch	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	nun	ADV	*	nun	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	kam	VVFIN	*	kommen	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	die	ART	(NP*	der	sg	fem	-	(86
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Vernunft	NN	*)	vernunft	sg	fem	-	86)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	allmählig	ADJD	(AVP*	allmählig	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	wieder	ADV	*))	wieder	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Sie	PPER	*	sie	sg	fem	-	(86)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	sprach	VVFIN	*	sprechen	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	mit	APPR	*	mit	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	sanfter	ADJA	*	sanft	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Stimm	NN	*	stimm	*	*	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	:	$.	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	»	$(	*	»	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	und	KON	*	und	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	doch	ADV	*	doch	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	Gott	NN	*	gott	sg	masc	-	(84)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	!	$.	*	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Doch	KON	(VROOT(PSEUDO(S*	doch	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	war	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	auch	ADV	(VP(AP(AVP*	auch	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Gottes	NN	(NP*	gott	sg	masc	-	(84)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Ratschluß	NN	*))	ratschluß	sg	masc	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	das	ART	*)))	der	sg	neut	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wohlan	NN	(VROOT(PSEUDO*	wohlan	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Komm	VVIMP	*	komm	pl	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	übe	XY	(VROOT(PSEUDO*	üben	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	was	PWS	(S*	was	sg	neut	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	du	PPER	*	du	sg	*	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	längst	ADV	(VP*	längst	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	begriffen	VVPP	*)	begreifen	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	hast	VAFIN	*)	haben	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	;	$.	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	Was	PWS	(S*	was	sg	neut	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	sicherlich	ADV	*	sicherlich	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	zu	PTKZU	(VP(VZ*	zu	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	üben	VVINF	*)	üben	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	schwerer	ADJD	(S(VP*	schwer	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	Als	NN	*	als	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	begreifen	VVINF	*))	begreifen	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	ist	VAFIN	*)	sein	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	19	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	20	wenn	KOUS	(S*	wenn	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	21	du	PPER	*	du	sg	*	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	22	nur	ADV	*))	nur	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	23	willst	VMFIN	*)	wollen	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	24	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Steh	NE	*	steh	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	auf	PTKVZ	*	auf	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	«	XY	*	«	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ich	PPER	(S*	ich	sg	*	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	stand	VVFIN	*)	stehen	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	rief	VVFIN	*	rufen	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	zu	APPR	(PP*	zu	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Gott	NN	*)	gott	-	-	-	(84)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	:	$.	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	ich	PPER	*	ich	sg	*	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	will	VMFIN	*)	wollen	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Willst	VVFIN	(VROOT(PSEUDO(CS(S*	willen	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	du	PPER	*	du	sg	*	-	(84)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	nur	ADV	*)	nur	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	daß	KOUS	(S*	daß	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	ich	PPER	*	ich	sg	*	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	will	VMFIN	*))	wollen	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Indem	PIS	*	indem	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	stiegt	VVFIN	*	stiegen	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Ihr	PPOSAT	*	ihr	sg	neut	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Vom	APPRART	*	von	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Pferd	NN	*	pferd	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	und	KON	*	und	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	überreichtet	VVFIN	*	überreichten	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	mir	PPER	*	sich	sg	*	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	das	ART	*	der	sg	neut	-	(2
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	Kind	NN	*	kind	sg	neut	-	2)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	In	APPR	*	in	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	Euern	NN	*	euer	*	*	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	Mantel	NE	*	mantel	sg	*	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	eingehüllt	VVPP	*	einhüllen	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	.	$.	*	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Was	PWS	*	was	sg	neut	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Ihr	PPER	*	ihr	pl	*	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Mir	NE	*	sich	sg	*	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	damals	ADV	*	damals	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	sagtet	VVFIN	*	sagten	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	;	$.	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	was	PWS	*	was	sg	neut	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	ich	PPER	*	ich	sg	*	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	Euch	PPER	*	euch	sg	-	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	:	$.	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	hab	VAFIN	*	hab	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	ich	PPER	*	ich	sg	*	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	Vergessen	VVPP	*	vergessen	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	.	$.	*	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	So	ADV	*	so	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	viel	PIS	*	viel	*	*	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	weiß	VVFIN	*	weißn	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	nur	ADV	*	nur	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	;	$.	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	ich	PPER	*	ich	sg	*	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	nahm	VVFIN	*	nehmen	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	Das	ART	*	der	sg	neut	-	(2
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	Kind	NN	*	kind	sg	neut	-	2)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	trugs	ADV	*	trug	-	-	-	(2)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	auf	APPR	*	auf	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	mein	PPOSAT	*	mein	sg	neut	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	Lager	NN	*	lager	sg	neut	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	küßt	VVFIN	*	küssen	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	es	PPER	*	es	sg	neut	-	(2)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	19	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	20	warf	VVFIN	*	werfen	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	21	Mich	NE	*	mich	sg	*	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	22	auf	APPR	*	auf	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	23	die	ART	*	der	sg	fem	-	(87
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	24	Knie	NN	*	knie	sg	fem	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	25	'	$(	*	--	-	-	-	87)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	26	und	KON	*	und	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	27	schluchzte	VVFIN	*	schluchzen	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	28	:	$.	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	29	Gott	NN	*	gott	-	-	-	(84)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	30	!	$.	*	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	auf	APPR	(VROOT(PSEUDO(PP*	auf	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Sieben	CARD	*)	sieben	-	-	-	(80)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Doch	KON	(S*	doch	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	nun	ADV	*	nun	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	schon	ADV	*	schon	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Eines	PIS	(AVP*	ein	sg	neut	-	(2)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	wieder	ADV	*))	wieder	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	(LOC*)	(5
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nathan	NE	(VROOT(PSEUDO(MPN*	nathan	-	-	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*)))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nathan	NE	(VROOT(PSEUDO(MPN*	nathan	-	-	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*)))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ihr	PPER	(VROOT(PSEUDO(S*	ihr	sg	masc	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	seid	VAFIN	*	sein	pl	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	ein	ART	(NP*	ein	sg	masc	-	(88
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Christ	NN	*))	christ	sg	masc	-	88)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Bei	APPR	(NP(PP*	bei	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Gott	NN	*)	gott	sg	masc	(PER*)	(25)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Ihr	PPER	(S*	ihr	pl	*	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	seid	VAFIN	*	sein	pl	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	ein	ART	(NP*	ein	sg	masc	-	(88
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	Christ	NN	*)))	christ	sg	masc	-	88)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ein	ART	(VROOT(PSEUDO(S(NP*	ein	sg	masc	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	beßrer	ADJA	*	beßrer	sg	masc	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Christ	NN	*)	christ	sg	masc	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	war	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	nie	ADV	*)	nie	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wohl	ADV	(VROOT(PSEUDO(NP*	wohl	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	uns	PPER	*)	uns	pl	*	-	(89)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Denn	KON	(VROOT(PSEUDO(S*	denn	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	was	PWS	(NP(S*	was	sg	neut	-	(90)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Mich	PPER	*	mich	sg	*	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Euch	PPER	*	euch	pl	*	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	zum	APPRART	(PP*	zu	sg	neut	-	(88
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Christen	NN	*)	christ	sg	neut	-	88)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	macht	VVFIN	*)	machen	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	das	PDS	*)	der	sg	neut	-	(90)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	macht	VVFIN	*	machen	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	Euch	PPER	*	euch	pl	*	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	mir	PPER	*	sich	sg	*	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	Zum	APPRART	(PP*	zu	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	Juden	NN	*))	Jude	pl	masc	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Aber	KON	(S*	aber	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	laßt	VVIMP	*	lassen	pl	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	uns	PPER	*	uns	pl	*	-	(89)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	länger	ADJD	*	lang	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	Einander	NN	(VP*	einander	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	nur	ADV	*	nur	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	erweichen	VVINF	*))	erweichen	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Hier	ADV	(VROOT(PSEUDO(S*	hier	-	-	-	(91
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	brauchts	VVFIN	*	brauchts	-	-	-	(92)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Tat	NN	*)	tat	-	-	-	(75)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	91)

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Und	KON	*	und	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	ob	KOUS	*	ob	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	mich	PPER	*	mich	sg	*	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	siebenfache	ADJA	*	siebenfach	sg	fem	-	(59
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Liebe	NN	*	liebe	sg	fem	-	59)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	schon	ADV	*	schon	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	Bald	ADV	*	bald	sg	*	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	an	APPR	*	an	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	dies	PDS	*	dieser	sg	neut	-	(2
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	einz	ADV	*	einz	sg	neut	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	ge	ADJA	*	GE	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	fremde	ADJA	*	fremd	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	Mädchen	NN	*	mädchen	-	-	-	2)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	band	VVFIN	*	binden	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	;	$.	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	Ob	NN	*	ob	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	der	ART	*	der	pl	neut	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	Gedanke	NN	*	gedanke	pl	neut	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	19	mich	PPER	*	mich	sg	*	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	20	schon	ADV	*	schon	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	21	tötet	VVFIN	*	töten	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	22	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	23	daß	KOUS	*	daß	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	24	Ich	PPER	*	ich	sg	*	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	25	meine	PPOSAT	*	mein	sg	-	-	(80|(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	26	sieben	CARD	*	sieben	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	27	Söhn	NN	*	söhn	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	28	'	$(	*	--	-	-	-	80)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	29	in	APPR	*	in	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	30	ihr	PPER	*	ihr	sg	fem	-	(2)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	31	aufs	APPRART	*	auf	sg	neut	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	32	neue	ADJA	*	neu	sg	neut	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	33	Verlieren	NN	*	verlieren	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	34	soll	VMFIN	*	sollen	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	35	:	$.	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	36	–	XY	*	–	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	37	wenn	KOUS	*	wenn	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	38	sie	PPER	*	sie	sg	fem	-	(2)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	39	von	APPR	*	von	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	40	meinen	PPOSAT	*	mein	pl	neut	-	(93|(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	41	Händen	NN	*	hand	pl	neut	-	93)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	42	Die	ART	*	der	sg	fem	-	(94
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	43	Vorsicht	NN	*	vorsicht	sg	fem	-	94)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	44	wiederfodert	VVFIN	*	wierfodern	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	45	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	46	–	PWS	*	–	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	47	ich	PPER	*	ich	sg	*	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	48	gehorche	VVFIN	*	gehorchen	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	49	!	$.	*	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	(LOC*)	(5
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nun	ADV	(VROOT(PSEUDO*	nun	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	vollends	ADV	*	vollends	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Eben	NN	*	eben	pl	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	das	PDS	*	der	sg	neut	-	(91)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	bedacht	VVPP	*	bedacht	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	ich	PPER	*	ich	sg	*	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	mich	PRF	*	mich	sg	-	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	So	ADV	*	so	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	viel	PIS	*	viel	*	*	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	Euch	PPER	*	euch	pl	-	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	anzuraten	VVIZU	*	anraten	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	!	$.	*	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	so	ADV	*	so	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	hats	VAFIN	*	hats	-	-	-	(91)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Euch	PPER	*	euch	pl	masc	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Euer	NE	(VP(NP*	euer	sg	*	-	(86|(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	guter	ADJA	*	gut	sg	masc	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	Geist	NN	*)	geist	sg	masc	-	86)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	schon	ADV	*	schon	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	angeraten	VVPP	*))	angerat	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nur	ADV	(VROOT(PSEUDO(S*	nur	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	muß	VMFIN	*	müssen	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	der	ART	(NP*	der	sg	masc	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	erste	ADJA	(AP*	erster	sg	masc	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	beste	ADJA	*))	gut	sg	masc	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	mir	PPER	*	sich	sg	*	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	sie	PPER	*	sie	pl	*	-	(2)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	Entreißen	VVINF	*	entreißen	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	wollen	VMFIN	*)	wollen	pl	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	(LOC*)	(5
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nein	PTKANT	(VROOT(PSEUDO(S*	nein	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	gewiß	ADV	*	gewiß	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*)	nicht	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wer	PWS	*	wer	sg	masc	-	(95
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Auf	APPR	*	auf	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	sie	PPER	*	sie	*	*	-	(2)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	größre	ADJA	*	größr	pl	neut	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Rechte	NN	*	recht	pl	neut	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	hat	VAFIN	*	haben	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	als	KOUS	*	als	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	ich	PPER	*	ich	sg	*	-	95)|(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	Muß	NN	*	müssen	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	frühere	VVFIN	*	früh	sg	masc	-	(96)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	zum	APPRART	*	zu	sg	neut	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	mindsten	ADJA	*	mind	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	haben	VAFIN	*	haben	pl	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	–	XY	*	–	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	(LOC*)	(5
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Freilich	ADV	(VROOT(PSEUDO(S*)	freilich	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Die	ART	(VROOT(PSEUDO(VP(NP*	der	sg	fem	-	(96)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	ihm	PPER	(CNP*	ihm	sg	masc	-	(95)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Natur	NN	*	natur	sg	fem	-	(97)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	und	KON	*	und	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Blut	NN	*))	blut	sg	neut	-	(98)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	erteilen	VVINF	*)	erteilen	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	(LOC*)	(5
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	So	ADV	*	so	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Mein	PPOSAT	*	mein	sg	masc	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	es	PPER	*	es	sg	neut	-	(91)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	auch	ADV	*	auch	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	!	$.	*	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Drum	ADV	*	drum	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	nennt	VVFIN	*	nennen	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	mir	PPER	*	sich	sg	*	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	nur	ADV	*	nur	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	geschwind	ADJD	*	geschwind	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Den	ART	*	der	sg	masc	-	(95
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	Mann	NN	*	mann	sg	masc	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	der	PRELS	*	der	sg	masc	-	(95)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	ihr	PPER	*	ihr	sg	masc	-	(2)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	als	APPR	*	als	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	Bruder	NN	*	bruder	sg	masc	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	oder	KON	*	oder	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	Ohm	NN	*	ohm	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	Als	APPR	*	als	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	Vetter	NN	*	vetter	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	oder	KON	*	oder	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	sonst	ADV	*	sonst	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	19	als	APPR	*	als	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	20	Sipp	NN	*	sipp	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	21	verwandt	VVPP	*	verwanden	-	-	-	95)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	22	Ihm	PPER	*	ihm	sg	masc	-	(95)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	23	will	VMFIN	*	wollen	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	24	ich	PPER	*	ich	sg	*	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	25	sie	PPER	*	sie	*	*	-	(2)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	26	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	27	vorenthalten	ADJA	*	vorenthalten	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	28	–	NN	*	–	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	29	Sie	PPER	*	sie	pl	*	-	(2
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	30	,	$,	*	--	-	-	-	2)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	31	Die	PDS	*	der	pl	fem	-	(2)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	32	jedes	PIAT	*	jeder	sg	neut	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	33	Hauses	NN	*	haus	sg	neut	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	34	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	35	jedes	PIAT	*	jeder	sg	neut	-	(99
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	36	Glaubens	NN	*	glauben	sg	neut	-	99)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	37	Zierde	NN	*	zierd	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	38	Zu	APPR	*	zu	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	39	sein	PPOSAT	*	sein	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	40	erschaffen	VVPP	*	erschaffen	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	41	und	KON	*	und	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	42	erzogen	VVPP	*	erziehen	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	43	ward	VVFIN	*	werden	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	44	.	$.	*	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ich	PPER	*	ich	sg	*	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	hoff	VVFIN	*	hoff	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Ihr	PPER	*	ihr	pl	*	-	(100|(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	wißt	VVFIN	*	wissen	pl	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	von	APPR	*	von	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	diesem	PDAT	*	dieser	sg	masc	-	(42
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	Euern	NN	*	euer	sg	masc	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	Herrn	NN	*	herr	sg	masc	-	100)|42)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	Und	KON	*	und	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	dem	ART	*	der	sg	neut	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	Geschlechte	NN	*	geschlecht	sg	neut	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	dessen	PDS	*	der	sg	neut	-	(42)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	mehr	PIS	*	mehr	*	*	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	als	KOKOM	*	als	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	ich	PPER	*	ich	sg	*	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	19	.	$.	*	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	(LOC*)	(5
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Das	PDS	(VROOT(PSEUDO(S*	der	sg	neut	-	(100)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	guter	ADJA	(NP*	gut	*	*	-	(1
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Nathan	NN	*)	nathan	*	*	-	1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	wohl	ADV	*	wohl	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	nun	ADV	*	nun	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	schwerlich	ADJD	*)	schwerlich	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Denn	KON	(S*	denn	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Ihr	PPER	*	ihr	pl	*	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	habt	VAFIN	*	haben	pl	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	ja	ADV	(VP*	ja	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	schon	ADV	*	schon	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	gehört	VVPP	*	gehören	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	daß	KOUS	(S*	daß	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	ich	PPER	*	ich	sg	*	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	nur	ADV	(AVP*	nur	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	gar	ADV	*))))	gar	-	-	-	(46)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	Zu	APPR	(VP(PP*	zu	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	kurze	ADJA	*	kurz	sg	fem	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	Zeit	NN	*)	zeit	sg	fem	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	bei	APPR	(PP*	bei	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	ihm	PPER	*)	ihm	sg	masc	-	(42)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	gewesen	VAPP	*)	sein	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wißt	VVFIN	(VROOT(PSEUDO(S*	wißen	pl	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ihr	PPER	*	ihr	pl	*	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	denn	ADV	*	denn	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	wenigstens	ADV	*	wenigstens	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	was	PWS	(S*	was	sg	neut	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	für	APPR	(PP*	für	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	Geschlechts	NN	*)	geschlecht	pl	masc	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	Die	ART	(NP*	der	pl	masc	-	(44
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	Mutter	NN	*)	mutter	sg	fem	-	44)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	war	VAFIN	*))	sein	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	War	VAFIN	(S*	sein	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	sie	PPER	*	sie	sg	fem	-	(44)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*)	nicht	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	eine	ART	(NP*	ein	sg	fem	-	(101
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Stauffin	NN	*)	stauffin	sg	fem	-	101)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	(LOC*)	(5
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wohl	ADV	(VROOT(PSEUDO(S(ISU*	wohl	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	möglich	ADJD	*))	möglich	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ja	PTKANT	(S*	ja	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	mich	PPER	*	mich	sg	*	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	dünkt	VVFIN	*)	dünken	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Hieß	VVFIN	(VROOT(PSEUDO(S*	hieß	-	-	-	(102
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	ihr	PPOSAT	(NP*	ihr	sg	masc	-	(103|(44)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Bruder	NN	*	bruder	sg	masc	-	103)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Conrad	NE	*)	conrad	sg	masc	-	(104
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	von	APPR	(PP*	von	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	Stauffen	NN	*))	stauff	pl	masc	-	104)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO(S*	–	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	und	KON	*	und	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	war	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Tempelherr	NN	*)))	tempelherr	-	-	-	102)|(105)

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	(LOC*)	(5
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wenn	KOUS	(VROOT(PSEUDO(S*	wenn	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	michs	PPER	*	michs	-	-	-	(102)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	triegt	VVFIN	*)	triegen	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Doch	KON	(VROOT(PSEUDO(S*	doch	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	halt	ADV	*)	halt	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Da	ADV	*	da	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	fällt	VVFIN	*	fallen	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	mir	PPER	*	sich	sg	*	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	ein	PTKVZ	*	ein	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Daß	KOUS	*	daß	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	ich	PPER	*	ich	sg	*	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	vom	APPRART	*	von	sg	neut	-	(42
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	selgen	ADJA	*	selgen	pl	masc	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	Herrn	NN	*	herr	sg	masc	-	42)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	ein	ART	*	ein	sg	neut	-	(106
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	Büchelchen	NN	*	büchelchen	sg	neut	-	106)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	Noch	ADV	*	noch	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	hab	VAFIN	*	hab	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	.	$.	*	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	zogs	VVFIN	*	zog	sg	-	-	(106)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	ihm	PPER	*	ihm	sg	masc	-	(42)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	aus	APPR	(PP*	aus	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	dem	ART	*	der	sg	masc	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Busen	NN	*)	busen	sg	masc	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	als	KOUS	(S*	als	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	Wir	PPER	*	wir	pl	*	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	ihn	PPER	*	ihn	sg	masc	-	(42)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	bei	APPR	(PP*	bei	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	Askalon	NN	*)	askalon	sg	neut	(PER*)	(47)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	verscharrten	VVFIN	*))	verscharren	pl	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nun	ADV	(VROOT(PSEUDO(S*)	nun	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	(LOC*)	(5
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Es	PPER	(VROOT(PSEUDO(S*	es	sg	neut	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	sind	VAFIN	*	sein	pl	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Gebete	NN	(NP*	gebet	pl	neut	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	drin	ADV	*))	drin	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wir	PPER	(VROOT(PSEUDO(S(NP*	wir	pl	*	-	(39)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	nennens	ADV	*)	nennens	pl	-	-	(106)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	ein	ART	(NP*	ein	sg	masc	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Brevier	NN	*))	brevier	sg	masc	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Das	PDS	*	der	sg	neut	-	(106)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	dacht	VVFIN	*	dacht	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	ich	PPER	*	ich	sg	*	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	kann	VMFIN	*	können	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	ein	ART	*	ein	sg	masc	-	(39
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	Christenmensch	NN	*	christenmensch	sg	masc	(MISC*)	39)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	Ja	NN	*	ja	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	wohl	ADV	*	wohl	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	noch	ADV	*	noch	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	brauchen	VVFIN	*	brauchen	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	.	$.	*	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ich	PPER	*	ich	sg	*	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	nun	ADV	*	nun	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	freilich	ADV	*	freilich	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	–	$(	*	–	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	Ich	PPER	*	ich	sg	masc	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	kann	VMFIN	*	können	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	lesen	VVINF	*	lesen	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	–	XY	*	–	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Tut	XY	*	tut	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	nichts	PIS	*	nichts	*	neut	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Nur	ADV	(AP(PP*	nur	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	zur	APPRART	*	zu	sg	fem	-	(107
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Sache	NN	*))	sache	sg	fem	-	107)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	(LOC*)	(5
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	In	APPR	(VROOT(PSEUDO(S(PP*	in	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	diesem	PDAT	*	dieser	sg	neut	-	(106
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Büchelchen	NN	*)	büchelchen	sg	neut	-	106)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	stehn	VVFIN	*	stehn	sg	*	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	vorn	ADV	(CAVP*	vorn	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	und	KON	*	und	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	hinten	ADV	*)	hinten	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	Wie	PWAV	(S*	wie	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	ich	PPER	*	ich	sg	*	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	mir	PPER	(VP(VP*	sich	sg	*	-	(5)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	sagen	VVINF	*)	sagen	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	lassen	VVINF	*)	lassen	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	mit	APPR	(CS(S(PP*	mit	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	des	ART	*	der	sg	masc	-	(115
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	Herrn	NN	*)	herr	sg	masc	-	115)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	17	Selbsteigner	ADJA	(NP*	selbsteigner	sg	masc	(PER*)	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	18	Hand	NN	*))	hand	sg	masc	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	19	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	20	die	ART	(S(NP*	der	pl	*	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	21	Angehörigen	NN	*)	angehörige	pl	*	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	22	Von	APPR	(VP(PP*	von	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	23	ihm	PPER	(CNP*	ihm	sg	masc	-	(42)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	24	und	KON	*	und	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	25	ihr	PPER	*))	ihr	sg	fem	-	(44)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	26	geschrieben	VVPP	*)))))	schreiben	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	27	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	O	KON	(VROOT(PSEUDO(VP(AP*	O	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	erwünscht	ADJD	*))	erwünschen	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Geht	VVFIN	*	gehen	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	lauft	VVFIN	*	laufen	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	holt	VVFIN	(VROOT(PSEUDO(S*	holen	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	mir	PPER	*	sich	sg	*	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	das	ART	(NP*	der	sg	neut	-	(106
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	Büchelchen	NN	*))	büchelchen	sg	neut	-	106)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Geschwind	NN	(VROOT(PSEUDO*	geschwind	sg	neut	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	bin	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	bereit	ADJD	(AP*	bereit	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	mit	APPR	(PP*	mit	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Gold	NN	*	gold	sg	neut	-	(109)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	es	PPER	(CO(VP*	es	sg	neut	-	(106)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	aufzuwiegen	VVIZU	*)	auuwiegen	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	;	$.	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	Und	KON	(S*	und	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	tausend	CARD	(NP*	tausend	-	-	-	(110
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	Dank	NN	*	dank	-	-	-	110)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	dazu	PROAV	*))))))	dazu	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Eilt	VVIMP	*	eilt	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	lauft	VVFIN	*	laufen	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	(LOC*)	(5
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Recht	NN	(VROOT(PSEUDO(NP*	recht	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	gern	ADV	*)	gern	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Es	PPER	(VROOT(PSEUDO(S*	es	sg	neut	-	(106)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	Arabisch	ADJD	*	arabisch	-	-	(MISC*)	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	aber	ADV	*	aber	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	was	PWS	(S*	was	sg	neut	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	der	ART	(NP*	der	sg	masc	-	(42
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	Herr	NN	*)	herr	sg	masc	-	42)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	Hineingeschrieben	NN	*))	hineingeschrieb	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ab	NN	(VROOT(PSEUDO*	ab	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Einerlei	PIS	*	einerlei	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nur	ADV	(VROOT(PSEUDO(AP*	nur	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	her	PTKVZ	*)	her	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Gott	NN	*	gott	-	-	-	(84)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	wenn	KOUS	(VROOT(PSEUDO(S*	wenn	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	ich	PPER	*	ich	sg	*	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	doch	ADV	*	doch	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	das	ART	(NP*	der	sg	neut	-	(2
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Mädchen	NN	*)	mädchen	sg	neut	-	2)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	noch	ADV	(CO*	noch	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	behalten	VVINF	*	behalten	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	Und	KON	(S*	und	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	einen	ART	(NP*	ein	sg	masc	-	(95
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	solchen	PIAT	(NP*	solcher	sg	masc	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	Eidam	NN	*))))	eidam	sg	masc	-	95)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	mir	PPER	(VP*	sich	sg	*	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	damit	PROAV	*	damit	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	Erkaufen	VVINF	*)	erkaufen	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	könnte	VMFIN	*)	können	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Schwerlich	ADJD	*	schwerlich	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	wohl	ADV	*	wohl	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Nun	ADV	*	nun	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	fall	FM	*	fall	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Es	PPER	*	es	sg	neut	-	(107)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	aus	PTKVZ	*	aus	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	wie	PWAV	*	wie	-	-	-	(107
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	s	PPER	*	--	-	-	-	107)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	will	VMFIN	*	wollen	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	!	$.	*	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	sg	masc	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Wer	PWS	(S*	wer	sg	masc	-	(111
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	mag	VMFIN	*)	mögen	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	es	PPER	*	es	sg	neut	-	(112)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	aber	ADV	(NP(VP*	aber	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	denn	ADV	*	denn	-	-	-	111)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	Gewesen	NN	*	gewesen	*	neut	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	sein	VAINF	*)	sein	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	9	der	PRELS	(S*	der	sg	masc	-	(112|(112)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	10	bei	APPR	(PP*	bei	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	11	dem	ART	*	der	sg	masc	-	(8
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	12	Patriarchen	NN	*)	patriarch	sg	masc	-	112)|8)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	13	So	ADV	(VP(AVP*	so	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	14	etwas	ADV	*)	etwas	*	neut	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	15	angebracht	VVPP	*)))	anbringen	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	16	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	Das	PDS	(VROOT(PSEUDO(S*	der	sg	neut	-	(111)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	muß	VMFIN	*	müssen	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(1)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	doch	ADV	*	doch	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Zu	APPR	(VP(PP*	zu	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	fragen	ADJD	*)	fragen	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	vergessen	VVPP	*))	vergessen	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	1	Wenn	KOUS	(S*	wenn	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	2	es	PPER	*	es	sg	neut	-	(111)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	3	gar	ADV	*)	gar	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	4	Von	APPR	(S(PP*	von	-	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	5	Daja	NE	*)	daja	-	-	(PER*)	(0)
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	6	käme	VVFIN	*)	kommen	sg	-	-	-
Nathan_Act4_Scene7.part.xml.rkpt.0.CoNLL2012.conll	000	7	?	$.	*))	--	-	-	-	-

#end document
