#begin document (Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll); part 000
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(CNP(NP*	der	sg	masc	-	(8
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Patriarch	NN	*	patriarch	sg	masc	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	welcher	PRELS	(S*	welcher	sg	masc	-	(8)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	mit	APPR	(PP*	mit	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	allem	PIS	*)	alle	sg	neut	-	(15
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	geistlichen	ADJA	(NP*	geistlich	sg	neut	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	Pomp	NN	*)	pomp	sg	neut	-	15)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	den	ART	(NP*	der	sg	masc	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	einen	ADJA	*	ein	sg	masc	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	Kreuzgang	NN	*)	kreuzgang	sg	masc	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	heraufkömmt	VVFIN	*))	heraufkömmen	sg	-	-	8)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	und	KON	*	und	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	die	ART	(NP*	der	pl	masc	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	15	Vorigen	NN	*))	vorige	pl	masc	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	16	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(16
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	16)

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(66)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	wich	VVFIN	*	weichen	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	ihm	PPER	*	ihm	sg	*	-	(8)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	lieber	ADV	*	lieber	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	aus	PTKVZ	*)	aus	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Wär	VAFIN	*	sein	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	mein	PPOSAT	*	mein	-	-	-	(4)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	Mann	NN	*	mann	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	!	$.	*	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ein	ART	(NP*	ein	sg	masc	-	(8
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	dicker	ADJA	(CAP*	dick	sg	masc	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	roter	ADJA	*))	rot	sg	masc	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	freundlicher	ADJA	*	freundlich	sg	masc	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	Prälat	NN	*	prälat	sg	masc	-	8)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	welcher	PWAT	(NP*	welcher	sg	masc	-	(15
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	Prunk	NN	*))	prunk	sg	masc	-	15)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	(LOC*)	(5
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ihr	PPER	(VROOT(PSEUDO(S*	ihr	pl	*	-	(16)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	solltet	VMFIN	*	sollten	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	ihn	PPER	*	ihn	sg	masc	-	(8)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	erst	ADV	(NP*	erst	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	sehn	CARD	*)	sehn	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	Nach	APPR	(PP*	nach	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	Hofe	NN	*)	hof	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	sich	PRF	(VP*	sich	sg	-	-	(8)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	erheben	VVINF	*))	erheben	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Itzo	NE	(VROOT(PSEUDO(S*	itzo	sg	*	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	kömmt	VVFIN	*	kömmen	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	Er	PPER	(NP*	er	sg	masc	-	(8)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	nur	ADV	*	nur	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	von	APPR	(PP*	von	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	einem	ART	*	ein	sg	neut	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	Kranken	NN	*)))	kranke	sg	neut	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(16
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	16)

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wie	PWAV	*	wie	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	sich	PRF	*	sich	sg	-	-	(7)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	da	ADV	*	da	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	Nicht	PTKNEG	*	nicht	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	Saladin	NE	*	saladin	sg	fem	-	(7)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	wird	VAFIN	*	werden	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	schämen	VVINF	*	schämen	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	müssen	VMINF	*	müssen	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	!	$.	*	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	PATRIARCH	NE	(VROOT(PSEUDO*))	patriarch	-	-	-	(8)

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	indem	KOUS	(VROOT(PSEUDO(S(S*	indem	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	er	PPER	*	er	sg	masc	-	(8)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	näher	ADJD	*	nah	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	kömmt	VVFIN	*)	kömmen	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	winkt	VVFIN	*	winken	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	dem	ART	(NP*	der	sg	masc	-	(5
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	Bruder	NN	*))	bruder	sg	masc	-	5)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Hier	ADV	(VROOT(PSEUDO(S*)	hier	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Das	PDS	(S*	der	sg	neut	-	(16)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	ja	ADV	*	ja	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	wohl	ADV	*	wohl	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	der	ART	(NP*	der	sg	fem	-	(17
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	Tempelherr	NN	*))	tempelherr	sg	fem	-	17)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Was	PWS	*	was	sg	neut	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	will	VMFIN	*	wollen	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	Er	PPER	*	er	sg	masc	-	(16)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	?	$.	*	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	KLOSTERBRUDER	NE	(VROOT(PSEUDO*	klosterbruder	sg	neut	(LOC*)	(5
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	5)

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Weiß	NN	*	weiß	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	.	$.	*	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	PATRIARCH	NE	(VROOT(PSEUDO*))	patriarch	-	-	-	(8)

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	auf	APPR	(VROOT(PSEUDO(AP(PP*	auf	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	ihn	PPER	*)	ihn	sg	masc	-	(16)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	zugehend	ADJD	*	zugehend	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	indem	KOUS	(S*	indem	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	der	ART	(NP*	der	sg	masc	-	(5
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	Bruder	NN	*)	bruder	sg	masc	-	5)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	und	KON	*	und	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	das	ART	(VP(NP*	der	sg	neut	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	Gefolge	NN	*)	gefolge	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	zurücktreten	VVINF	*)))	zurücktreten	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nun	ADV	(VROOT(PSEUDO*	nun	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	Herr	NN	(NP*	herr	sg	masc	-	(16
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	Ritter	NE	*)	ritter	sg	masc	(PER*)	16)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Sehr	ADV	(NP(AP*	sehr	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	erfreut	ADJD	*)	erfreuen	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	Den	ART	*	der	pl	masc	-	(16
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	braven	ADJA	*)	brave	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	jungen	ADJA	(NP*	jung	pl	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	Mann	NN	*	mann	-	-	-	16)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	zu	APPR	(PP*	zu	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	sehn	CARD	*))	sehn	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ei	XY	*	ei	pl	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	noch	ADV	(AVP*	noch	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	So	ADV	*)	so	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	gar	ADV	(S(ISU*	gar	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	jung	ADJD	*))	jung	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Nun	ADV	(VP(VP(AP(AVP*	nun	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	mit	APPR	(NP(PP*	mit	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	Gottes	NN	*	gott	sg	masc	-	(18)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	Hülfe	NN	*	hülfe	sg	fem	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	daraus	PROAV	*)	daraus	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	Kann	NE	*))	können	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	etwas	PIS	*))	etwas	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	werden	VAINF	*)	werden	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(16
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	16)

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Mehr	ADV	*	mehr	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	ehrwürd	NE	*	ehrwürd	-	-	-	(8
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	ger	ADJA	*	g	*	*	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	Herr	NN	*	herr	sg	masc	-	8)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	Wohl	NN	*	wohl	sg	masc	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	schwerlich	ADJD	*	schwerlich	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	als	KOKOM	*	als	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	schon	ADV	*	schon	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	.	$.	*	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Und	KON	*	und	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	eher	ADV	*	eher	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	noch	ADV	*	noch	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	Was	PWS	*	was	sg	neut	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	weniger	ADV	*	weniger	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	.	$.	*	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	PATRIARCH	NE	(VROOT(PSEUDO*	patriarch	sg	neut	-	(8
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(8)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	wünsche	VVFIN	*	wünschen	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	wenigstens	ADV	*	wenigstens	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	Daß	KOUS	(S*	daß	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	so	ADV	*	so	-	-	-	(16
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	ein	ART	(NP*	ein	sg	masc	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	frommer	ADJA	*	fromm	sg	masc	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	Ritter	NN	*)	ritter	sg	masc	-	16)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	lange	ADV	(AVP*	lange	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	noch	ADV	*)	noch	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	Der	ART	(NP*	der	sg	masc	-	(19
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	lieben	ADJA	*	lieben	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	Christenheit	NN	*	christenheit	sg	fem	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	19)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	15	der	ART	(CS(S(NP*	der	sg	fem	-	(20
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	16	Sache	NN	*)	sache	sg	fem	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	17	Gottes	NN	(CNP(NP*	gott	sg	masc	(LOC*)	20)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	18	Zu	APPR	(PP*	zu	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	19	Ehr	NN	*))	ehr	sg	fem	-	(21)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	20	und	KON	*	und	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	21	Frommen	NN	*)	fromme	sg	neut	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	22	blühn	VVFIN	*)	blühn	sg	masc	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	23	und	KON	*	und	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	24	grünen	VVFIN	*))	grün	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	25	möge	VMFIN	*))	mögen	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	26	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Das	PDS	(VROOT(PSEUDO(S(S*	der	sg	neut	-	(21)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	wird	VAFIN	*	werden	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	denn	ADV	(VP*	denn	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	auch	ADV	*	auch	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	fehlen	VVINF	*))	fehlen	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	wenn	KOUS	(S*	wenn	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	nur	ADV	*	nur	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	fein	ADJD	*	fein	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	Die	ART	(NP*	der	sg	fem	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	junge	ADJA	*	jung	sg	fem	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	Tapferkeit	NN	*)	tapferkeit	sg	fem	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	dem	ART	(VP(NP*	der	sg	masc	-	(22
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	reifen	ADJA	*	reifen	sg	masc	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	15	Rate	NN	*	rate	sg	fem	-	22)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	16	Des	ART	(NP*	der	sg	masc	-	(23
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	17	Alters	NN	*))	alter	sg	masc	-	23)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	18	folgen	VVINF	*)	folgen	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	19	will	VMFIN	*))	wollen	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	20	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Womit	NN	*	womit	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	wär	VAFIN	*	sein	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	sonst	ADV	*	sonst	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	Dem	ART	*	der	sg	neut	-	(16
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	Herrn	NN	*	herr	sg	masc	-	16)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	zu	PTKZU	*	zu	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	dienen	VVINF	*	dienen	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	?	$.	*	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(16
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	16)

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Mit	APPR	(VROOT(PSEUDO(S(PP*	mit	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	dem	ART	*	der	sg	masc	-	(22
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	nämlichen	ADJA	*)	nämlich	sg	masc	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	22)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	Woran	PWAV	(S*	woran	*	*	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	es	PPER	*	es	sg	neut	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	meiner	PPOSAT	(NP*	mein	sg	fem	-	(4)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	Jugend	NN	*)	jugend	sg	fem	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	fehlt	VVFIN	*	fehlen	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	:	$.	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	mit	APPR	(PP*	mit	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	Rat	NN	*)))	Rat	-	-	-	(24)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	PATRIARCH	NE	(VROOT(PSEUDO*	patriarch	sg	neut	-	(8
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Recht	NN	(VROOT(PSEUDO(NP*	recht	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	gern	ADV	*)	gern	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Nur	ADV	(S*	nur	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	der	ART	(VP(NP*	der	sg	masc	-	(24
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	Rat	NN	*)	Rat	sg	masc	-	24)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	auch	ADV	*	auch	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	anzunehmen	VVIZU	*))	annehmen	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(16
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	16)

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Doch	KON	(VROOT(PSEUDO(S*	doch	-	-	-	(25
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	blindlings	ADV	*	blindlings	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	nicht	PTKNEG	*)	nicht	-	-	-	25)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	PATRIARCH	NE	(VROOT(PSEUDO*	patriarch	sg	neut	-	(8
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wer	PWS	(VROOT(PSEUDO(S*	wer	sg	masc	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	sagt	VVFIN	*	sagen	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	denn	ADV	(NP*	denn	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	das	PDS	*))	der	sg	neut	-	(25)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ei	XY	*	ei	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	freilich	ADV	(S*	freilich	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	Muß	NN	*	müssen	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	niemand	PIS	(VP*	niemand	sg	masc	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	die	ART	(NP*	der	sg	fem	-	(26
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	Vernunft	NN	*	vernunft	sg	fem	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	die	ART	(S(NP*	der	sg	fem	-	(26)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	Gott	NN	*)	gott	sg	fem	-	(18)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	ihm	PPER	*	ihm	sg	masc	-	(27)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	gab	VVFIN	*	geben	sg	-	-	26)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	Zu	PPER	(S*	zu	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	brauchen	VVFIN	*)))	brauchen	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	15	unterlassen	VVINF	*))	unterlassen	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	16	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	17	–	XY	*	–	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	18	wo	PWAV	(S*	wo	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	19	sie	PPER	*	sie	sg	fem	-	(26)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	20	hin	ADV	*	hin	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	21	Gehört	VVFIN	*)	gehören	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	22	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Gehört	VVFIN	(S*	gehören	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	sie	PPER	*)	sie	sg	fem	-	(26)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	aber	ADV	(AVP*	aber	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	überall	ADV	*)	überall	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	Denn	KON	(S*	denn	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	hin	ADV	*)	hin	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	O	XY	*	O	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	nein	PTKANT	*	nein	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Zum	APPRART	(NP(PP*	zu	sg	neut	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	Beispiel	NN	*)	beispiel	sg	neut	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	:	$.	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	wenn	KOUS	(NP(CS(S*	wenn	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	uns	PPER	*	uns	pl	*	-	(27)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	Gott	NN	*	gott	sg	masc	(PER*)	(18)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	Durch	APPR	(PP*	durch	sg	masc	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	einen	PIS	*	ein	sg	masc	-	(28
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	seiner	PPOSAT	(NP*	sein	sg	masc	-	(18)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	Engel	NN	*)))	engel	sg	-	-	28)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	–	NN	(S*	–	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	15	sagen	VVINF	*)	sagen	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	16	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	17	Durch	APPR	(PP*	durch	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	18	einen	ART	*	ein	sg	masc	-	(28
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	19	Diener	NN	*	diener	sg	masc	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	20	seines	PPOSAT	(NP*	sein	sg	neut	-	(18)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	21	Worts	NN	*))))	wort	sg	neut	-	28)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	22	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	23	–	KOUS	(S*	–	sg	neut	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	24	ein	ART	(NP*	ein	sg	neut	-	(29
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	25	Mittel	NN	*)	mittel	sg	neut	-	29)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	26	Bekannt	NN	(VP*	bekannt	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	27	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	28	machen	VVINF	*))	machen	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	29	würdiget	VVFIN	*	würdiget	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	30	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	31	das	ART	(VP(NP*	der	sg	neut	-	(29)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	32	Wohl	NN	*	wohl	sg	neut	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	33	Der	ART	(NP*	der	sg	masc	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	34	ganzen	ADJA	*	ganz	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	35	Christenheit	NN	*)	christenheit	sg	fem	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	36	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	37	das	ART	(NP*	der	sg	neut	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	38	Heil	NN	*	heil	sg	neut	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	39	der	ART	(CNP(NP*	der	sg	masc	-	(30
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	40	Kirche	NN	*)	kirche	sg	masc	-	30)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	41	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	42	Auf	APPR	(AVP*	auf	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	43	irgend	ADV	*)	irgend	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	44	eine	ART	(NP*	ein	sg	fem	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	45	ganz	ADV	(AP*	ganz	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	46	besondre	ADJA	*)	besondre	sg	fem	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	47	Weise	NN	*	weise	sg	fem	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	48	Zu	APPR	(PP*	zu	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	49	fördern	NN	*)))))	fördern	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	50	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	51	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	52	befestigen	VVINF	*)))))	befestigen	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	53	:	$.	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	54	wer	PWS	(S*	wer	sg	masc	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	55	darf	VMFIN	*	dürfen	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	56	Sich	PRF	*	sich	sg	-	-	(27)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	57	da	ADV	*	da	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	58	noch	ADV	(AP*	noch	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	59	unterstehn	ADJD	*)	unterstehn	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	60	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	61	die	ART	(NP*	der	sg	fem	-	(20
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	62	Willkür	NN	*)	willkür	sg	fem	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	63	des	ART	(NP*	der	sg	masc	-	(18
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	64	,	$,	*	--	-	-	-	20)|18)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	65	Der	PRELS	(S*	der	sg	masc	-	(18)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	66	die	ART	(NP*	der	sg	fem	-	(26
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	67	Vernunft	NN	*)	vernunft	sg	fem	-	26)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	68	erschaffen	VVFIN	*))	erschaffen	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	69	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	70	nach	APPR	(VP(PP*	nach	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	71	Vernunft	NN	*)	vernunft	sg	fem	-	(26)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	72	Zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	73	untersuchen	VVINF	*)))	untersuchen	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	74	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	das	ART	(NP*	der	sg	neut	-	(31
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	ewige	ADJA	*	ewig	sg	neut	-	31)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	Gesetz	NN	*	gesetz	sg	neut	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	der	ART	(NP*	der	sg	fem	-	(18
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	Herrlichkeit	NN	*	herrlichkeit	sg	fem	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	des	ART	(NP*	der	sg	masc	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	Himmels	NN	*)	himmel	sg	masc	-	18)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	nach	APPR	(NP(PP*	nach	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	Den	NE	*	der	pl	masc	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	kleinen	ADJA	*	klein	pl	masc	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	Regeln	NN	*)	regel	pl	masc	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	einer	PIS	*)))	ein	sg	fem	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	eiteln	VVFIN	*	eiteln	pl	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	15	Ehre	NN	(VP*	ehre	pl	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	16	Zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	17	prüfen	VVINF	*)))	prüfen	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	18	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Doch	KON	(CO(AVP*	doch	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	hiervon	PROAV	*	hiervon	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	genug	ADV	*))	genug	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Was	PWS	(S*	was	sg	neut	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	Es	PPER	(NP*	es	sg	neut	-	(32)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	denn	ADV	*	denn	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	worüber	PWAV	(S*	worüber	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	unsern	PPOSAT	(NP*	unsern	-	-	-	(24
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	Rat	NN	*)	Rat	sg	masc	-	24)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	für	APPR	(PP*	für	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	itzt	ADJD	*))))	itzen	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	Der	ART	(S(NP*	der	sg	masc	-	(16
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	Herr	NN	*)	herr	sg	masc	-	16)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	verlangt	VVFIN	*)	verlangen	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(16
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	16)

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Gesetzt	VVPP	*	setzen	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	ehrwürd	NE	*	ehrwürd	-	-	-	(8
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	ger	ADJA	*	g	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	Vater	NN	*	vater	-	-	-	8)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	Ein	ART	*	ein	sg	neut	-	(33
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	Jude	NN	*	jude	sg	neut	-	33)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	hätt	VAFIN	*	hätt	*	*	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	ein	ART	*	ein	sg	neut	-	(34
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	einzig	ADJD	*	einzig	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	Kind	NN	*	kind	sg	neut	-	34)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	15	–	NN	*	–	sg	neut	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	16	es	PPER	*	es	sg	neut	-	(34)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	17	sei	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	18	Ein	ART	*	ein	sg	masc	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	19	Mädchen	NN	*	mädchen	sg	masc	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	20	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	21	–	$.	*	–	sg	neut	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	22	das	PDS	*	der	sg	neut	-	(34)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	23	er	PPER	*	er	sg	masc	-	(33)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	24	mit	APPR	*	mit	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	25	der	ART	*	der	sg	fem	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	26	größten	ADJA	*	groß	sg	fem	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	27	Sorgfalt	NN	*	sorgfalt	sg	fem	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	28	Zu	APPR	*	zu	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	29	allem	PIS	*	alle	sg	neut	-	(35
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	30	Guten	NN	*	gute	pl	*	-	35)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	31	auferzogen	VVPP	*	auferehen	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	32	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	33	das	ART	*	der	sg	neut	-	(34)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	34	Er	NN	*	er	sg	masc	-	(33)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	35	liebe	VVFIN	*	lieben	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	36	mehr	PIS	*	mehr	*	*	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	37	als	KOKOM	*	als	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	38	seine	PPOSAT	*	sein	sg	fem	-	(33)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	39	Seele	NN	*	seele	sg	fem	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	40	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	41	das	PRELS	*	der	sg	neut	-	(34)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	42	Ihn	PPER	*	ihn	sg	masc	-	(33)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	43	wieder	ADV	*	wieder	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	44	mit	APPR	*	mit	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	45	der	ART	*	der	sg	fem	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	46	frömmsten	ADJA	*	frömmst	sg	fem	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	47	Liebe	NN	*	liebe	sg	fem	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	48	liebe	VVFIN	*	lieben	sg	fem	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	49	.	$.	*	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Und	KON	*	und	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	nun	ADV	*	nun	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	würd	VAFIN	*	würd	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	unser	PPOSAT	*	unser	sg	masc	-	(19
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	einem	PIS	*	ein	sg	masc	-	19)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	hinterbracht	VVPP	*	hintbringen	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	Dies	APPRART	*	dieser	sg	neut	-	(34
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	Mädchen	NN	*	mädchen	sg	neut	-	34)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	sei	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	des	ART	*	der	sg	masc	-	(33
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	Juden	NN	*	Jude	sg	masc	(MISC*)	33)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	Tochter	NN	*	tochter	sg	fem	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	15	;	$.	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	16	Er	PPER	*	er	sg	masc	-	(33)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	17	hab	VAFIN	*	hab	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	18	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	19	es	PPER	*	es	sg	neut	-	(34)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	20	in	APPR	*	in	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	21	der	ART	*	der	sg	fem	-	(36
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	22	Kindheit	NN	*	kindheit	sg	fem	-	36)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	23	aufgelesen	VVPP	*	auflesen	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	24	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	25	Gekauft	NN	*	gekauft	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	26	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	27	gestohlen	VVPP	*	stehlen	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	28	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	29	–	NN	*	–	sg	neut	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	30	was	PWS	*	was	sg	neut	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	31	Ihr	PPER	*	ihr	pl	*	-	(8)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	32	wollt	VMFIN	*	wollen	pl	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	33	;	$.	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	34	man	PIS	*	man	sg	*	-	(27)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	35	wisse	VVFIN	*	wissen	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	36	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	37	Das	ART	*	der	sg	neut	-	(34
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	38	Mädchen	NN	*	mädchen	sg	neut	-	34)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	39	sei	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	40	ein	ART	*	ein	sg	masc	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	41	Christenkind	NN	*	christenkind	sg	masc	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	42	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	43	und	KON	*	und	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	44	sei	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	45	Getauft	NN	*	getauft	sg	neut	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	46	;	$.	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	47	der	ART	*	der	sg	masc	-	(33
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	48	Jude	NN	*	jude	sg	masc	-	33)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	49	hab	VAFIN	*	hab	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	50	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	51	es	PPER	*	es	sg	neut	-	(34)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	52	nur	ADV	*	nur	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	53	als	APPR	*	als	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	54	Jüdin	NN	*	jüdin	sg	fem	-	(37)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	55	Erzogen	VVPP	*	erziehen	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	56	;	$.	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	57	laß	VVFIN	*	lassen	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	58	es	PPER	*	es	sg	neut	-	(34)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	59	nur	ADV	*	nur	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	60	als	APPR	*	als	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	61	Jüdin	NN	*	jüdin	sg	fem	-	(37)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	62	und	KON	*	und	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	63	Als	APPR	*	als	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	64	seine	PPOSAT	*	sein	sg	fem	-	(38|(33)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	65	Tochter	NN	*	tochter	sg	fem	-	38)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	66	so	ADV	*	so	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	67	verharren	VVINF	*	verharren	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	68	:	$.	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	69	–	PPER	*	–	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	70	sagt	VVFIN	*	sagen	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	71	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	72	Ehrwürd	NE	*	ehrwürd	sg	masc	-	(8
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	73	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	74	ger	ADJA	*	g	pl	masc	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	75	Vater	NN	*	vater	pl	masc	-	8)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	76	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	77	was	PWS	*	was	sg	neut	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	78	wär	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	79	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	80	hierbei	ADV	*	hierbei	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	81	wohl	ADV	*	wohl	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	82	Zu	NN	*	zu	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	83	tun	VVINF	*	tun	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	84	?	$.	*	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	PATRIARCH	NE	(VROOT(PSEUDO*	patriarch	sg	neut	-	(8
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Mich	PPER	(VROOT(PSEUDO(S*	mich	sg	*	-	(8)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	schaudert	VVFIN	*)	schaudern	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Doch	KON	*	doch	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	zu	APPR	*	zu	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	allererst	ADV	*	allererst	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	Erkläre	NN	*	erkläre	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	sich	PRF	*	sich	sg	-	-	(16)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	der	ART	*	der	sg	masc	-	(16
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	Herr	NN	*	herr	sg	masc	-	16)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	ob	KOUS	*	ob	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	so	ADV	*	so	-	-	-	(32
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	ein	ART	*	ein	sg	masc	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	Fall	NN	*	fall	sg	masc	-	32)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	Ein	ART	*	ein	sg	neut	-	(39
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	Faktum	NN	*	faktum	sg	neut	-	39)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	15	oder	KON	*	oder	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	16	eine	ART	*	ein	sg	fem	-	(40
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	17	Hypothes	NN	*	hypothes	-	-	-	40)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	18	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	19	.	$.	*	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Das	PDS	(VROOT(PSEUDO(S*	der	sg	neut	-	(41)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	sagen	VVINF	*)	sagen	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	:	$.	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	ob	KOUS	(S(AVP(CS(S*	ob	-	-	-	(41
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	der	ART	(NP*	der	sg	masc	-	(16
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	Herr	NN	*)	herr	sg	masc	-	16)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	sich	PRF	*	sich	sg	-	-	(16)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	das	ART	(NP*	der	sg	neut	-	41)|(32)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	Nur	NN	*)	nur	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	bloß	ADV	(AVP*	bloß	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	so	ADV	*)	so	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	dichtet	VVFIN	*)	dichten	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	15	oder	KON	*	oder	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	16	obs	NN	(S*	ob	-	-	-	(32)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	17	geschehn	VVPP	*))	geschehn	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	18	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	19	Und	KON	*)	und	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	20	fortfährt	VVFIN	*	fortfahren	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	21	zu	PTKA	(AP*	zu	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	22	geschehn	ADJD	*)))	geschehn	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	23	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(16
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	16)

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(4)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	glaubte	VVFIN	*	glauben	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	das	ART	(VP(NP*	der	sg	neut	-	(41)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	Sei	NN	*	sei	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	eins	CARD	*)	eins	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	um	KOUI	*	um	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	Euer	PPOSAT	(NP*	euer	*	*	-	(24|(8)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	Hochehrwürden	NN	*	hochehrwürd	pl	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	Meinung	NN	(NP*	meinung	sg	fem	-	24)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	Bloß	NN	*))	bloß	sg	neut	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	vernehmen	VVINF	*)))	vernehmen	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	PATRIARCH	NE	(VROOT(PSEUDO*	patriarch	sg	neut	-	(8
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Eins	NN	(VROOT(PSEUDO*	eins	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Da	KOUS	*	da	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	seh	XY	*	seh	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	der	ART	*	der	sg	masc	-	(16
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	Herr	NN	*	herr	sg	masc	-	16)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	Wie	PWAV	*	wie	sg	fem	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	sich	PRF	*	sich	sg	-	-	(26)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	die	ART	*	der	sg	fem	-	(26
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	stolze	ADJA	*	stolz	sg	fem	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	menschliche	ADJA	*	menschlich	sg	fem	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	Vernunft	NN	*	vernunft	sg	fem	-	26)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	Im	APPRART	*	in	sg	neut	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	Geistlichen	NN	*	geistliche	sg	neut	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	doch	ADV	*	doch	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	irren	VVINF	*	irren	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	15	kann	VMFIN	*	können	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	16	.	$.	*	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Mit	APPR	*	mit	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	nichten	VMFIN	*	nicht	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Denn	KON	(VROOT(PSEUDO(S*	denn	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	der	ART	(NP*	der	sg	masc	-	(32
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	vorgetragne	ADJA	*	vorgetragn	sg	masc	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	Fall	NN	*)	fall	sg	masc	-	32)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	nur	ADV	*	nur	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	so	ADV	*	so	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	Ein	ART	(NP*	ein	sg	neut	-	(40
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	Spiel	NN	*	spiel	sg	neut	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	des	ART	(NP*	der	sg	masc	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	Witzes	NN	*))	witz	sg	masc	-	40)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	:	$.	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	so	ADV	(S*	so	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	verlohnt	VVFIN	*	verlohnen	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	es	PPER	*	es	sg	neut	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	15	sich	PRF	*	sich	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	16	Der	ART	(NP*	der	sg	masc	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	17	Mühe	NN	*)	mühe	sg	masc	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	18	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	19	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	20	im	APPRART	(PP*	in	sg	masc	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	21	Ernst	NN	*)))	ernst	sg	masc	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	22	ihn	PPER	(VP*	ihn	sg	masc	-	(32)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	23	durchzudenken	VVIZU	*)	durchzudenken	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	24	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(8)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	will	VMFIN	*	wollen	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	den	ART	(VP(VP(NP*	der	pl	masc	-	(16
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	Herrn	NN	*	herr	sg	masc	-	16)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	damit	PROAV	(S(VP*	damit	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	auf	APPR	(PP*	auf	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	das	ART	*	der	sg	neut	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	Theater	NN	*)	theater	sg	neut	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	Verwiesen	VVPP	*)	verweisen	sg	neut	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	haben	VAFIN	*)	haben	pl	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	wo	PWAV	(S*	wo	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	dergleichen	PIS	*	dergleichen	pl	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	pro	APPR	(PP*	pro	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	Et	NN	*)	et	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	15	contra	VVFIN	*	contra	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	16	sich	PRF	*	sich	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	17	mit	APPR	(PP*	mit	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	18	vielem	ADJA	*	vieler	sg	neut	-	(21
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	19	Beifall	NN	*)	beifall	sg	neut	-	21)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	20	könnte	VMFIN	*))	können	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	21	Behandeln	VVINF	*)	behandeln	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	22	lassen	VVINF	*))	lassen	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	23	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Hat	VAFIN	*	haben	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	der	ART	*	der	sg	masc	-	(16
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	Herr	NN	*	herr	sg	masc	-	16)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	mich	PPER	*	mich	sg	-	-	(8)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	aber	ADV	*	aber	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	Nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	bloß	ADV	*	bloß	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	mit	APPR	*	mit	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	einer	ART	*	ein	sg	fem	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	theatral	ADJD	*	theatral	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	schen	VVFIN	*	sch	pl	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	Schnurre	NE	*	schnurr	pl	*	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	Zum	APPRART	*	zu	pl	*	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	15	besten	ADJA	*	gut	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	16	;	$.	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	17	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	18	der	ART	*	der	sg	masc	-	(32
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	19	Fall	NN	*	fall	sg	masc	-	32)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	20	ein	ART	*	ein	sg	neut	-	(39
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	21	Faktum	NN	*	faktum	sg	neut	-	39)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	22	;	$.	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	23	hätt	VAFIN	*	hätt	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	24	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	25	Er	PPER	*	er	sg	masc	-	(32)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	26	sich	PRF	*	sich	sg	-	-	(32)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	27	wohl	ADV	*	wohl	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	28	gar	ADV	*	gar	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	29	in	APPR	*	in	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	30	unsrer	ADJA	*	unsrer	sg	fem	-	(14|(8)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	31	Diözes	NN	*	diöz	sg	masc	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	32	'	$(	*	--	-	-	-	14)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	33	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	34	In	APPR	*	in	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	35	unsrer	ADJD	*	unsrer	sg	masc	-	(14|(8)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	36	lieben	ADJA	*	lieb	pl	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	37	Stadt	NN	*	stadt	sg	*	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	38	Jerusalem	NE	*	jerusalem	sg	neut	(LOC*)	14)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	39	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	40	Eräugnet	NN	*	eräugnet	sg	neut	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	41	:	$.	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	42	–	XY	*	–	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	43	ja	ADV	*	ja	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	44	alsdann	ADV	*	alsdann	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	45	–	CARD	*	–	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(16
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	16)

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Und	KON	*	und	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	was	PWS	*	was	sg	neut	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	alsdann	ADV	*	alsdann	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	?	$.	*	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	PATRIARCH	NE	(VROOT(PSEUDO*	patriarch	sg	neut	-	(8
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Dann	ADV	(VROOT(PSEUDO(S*	dann	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	wäre	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	mit	APPR	(PP*	mit	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	dem	ART	*	der	sg	neut	-	(33
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	Juden	NN	*)	Jude	sg	neut	-	33)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	fördersamst	VVFIN	*	fördersamen	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	Die	ART	(NP*	der	sg	fem	-	(42
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	Strafe	NN	*	strafe	sg	fem	-	42)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	zu	APPR	(PP*	zu	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	vollziehn	NN	*)	vollziehn	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	die	ART	(NP*	der	sg	fem	-	(42)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	päpstliches	ADJA	*))	päpstlich	sg	neut	-	(43)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	Und	KON	(NP*	und	sg	neut	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	kaiserliches	ADJA	*	kaiserlich	sg	neut	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	15	Recht	NN	*)	recht	sg	neut	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	16	so	ADV	(NP(AP*	so	-	-	-	(32
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	17	einem	ART	*)	ein	sg	masc	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	18	Frevel	NN	*)	frevel	sg	masc	-	32)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	19	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	20	So	ADV	(VP*	so	-	-	-	(32
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	21	einer	ART	(NP*	ein	sg	fem	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	22	Lastertat	NN	*)	lastertat	sg	fem	-	32)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	23	bestimmen	VVINF	*))	bestimmen	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	24	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(16
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	16)

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	So	ADV	(VROOT(PSEUDO(S*)	so	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	PATRIARCH	NE	(VROOT(PSEUDO*	patriarch	sg	neut	-	(8
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	zwar	ADV	*	zwar	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	bestimmen	VVFIN	*	bestimmen	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	obbesagte	ADJA	(NP*	obbesagt	pl	neut	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	Rechte	NN	*	recht	pl	neut	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	Dem	ART	(NP*	der	sg	neut	-	(44
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	Juden	NN	*)	Jude	pl	masc	(MISC*)	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	welcher	PRELS	(S*	welcher	pl	masc	-	(44)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	einen	ART	(NP*	ein	sg	masc	-	(19
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	Christen	NN	*	christ	sg	masc	-	19)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	zur	APPRART	(PP*	zu	sg	fem	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	Apostasie	NN	*))	apostasie	sg	fem	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	verführt	VVFIN	*))	verführen	sg	-	-	44)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	Den	ART	(NP*	der	sg	masc	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	15	Holzstoß	NN	*))	holzstoß	sg	masc	(MISC*)	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	16	–	$.	*))	–	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(16
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	16)

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	So	ADV	(VROOT(PSEUDO(S*)	so	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	PATRIARCH	NE	(VROOT(PSEUDO*	patriarch	sg	neut	-	(8
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	wie	PWAV	*	wie	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	vielmehr	ADV	*	vielmehr	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	dem	ART	(NP*	der	sg	neut	-	(45
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	Juden	NN	*	Jude	sg	neut	(MISC*)	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	45)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	Der	PRELS	(S*	der	sg	masc	-	(45)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	mit	APPR	(PP*	mit	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	Gewalt	NN	*)	gewalt	sg	fem	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	ein	ART	(NP*	ein	sg	neut	-	(34
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	armes	ADJA	*	arm	sg	neut	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	Christenkind	NN	*	christenkind	sg	neut	-	34)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	Dem	ART	(NP*	der	sg	neut	-	(19
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	Bunde	NN	*	bunde	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	seiner	PPOSAT	(NP*	sein	pl	masc	-	(34)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	15	Tauf	NN	*)))	tauf	-	-	-	19)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	16	entreißt	VVFIN	*)))	entreißen	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	17	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Denn	KON	(VROOT(PSEUDO(S*	denn	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	Nicht	PTKNEG	(CNP(NP*	nicht	sg	neut	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	alles	PIS	*)	alle	sg	neut	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	was	PRELS	(NP*	was	sg	neut	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	man	PIS	*))	man	sg	*	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	Kindern	NN	*	kind	pl	neut	-	(46)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	tut	VVFIN	*	tun	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	Gewalt	NN	*)	gewalt	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	*	*	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Zu	PTKZU	*	zu	sg	*	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	sagen	VVINF	*	sagen	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	:	$.	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	–	PPER	*	–	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	ausgenommen	VVPP	*	ausnehmen	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	was	PWS	*	was	sg	neut	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	die	ART	*	der	sg	fem	-	(30
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	Kirch	NE	*	kirch	sg	fem	(PER*)	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	'	$(	*	--	-	-	-	30)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	An	APPR	*	an	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	Kindern	NN	*	kind	pl	neut	-	(46)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	tut	VVFIN	*	tun	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	.	$.	*	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(16
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	16)

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wenn	KOUS	(VROOT(PSEUDO(S*	wenn	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	aber	ADV	(VP*	aber	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	nun	ADV	(PP*	nun	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	das	ART	*	der	sg	neut	-	(34
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	Kind	NN	(CNP*	kind	sg	neut	-	34)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	Erbarmte	NN	*)	erbarmte	pl	neut	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	seiner	PPOSAT	*	sein	pl	neut	-	(34)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	sich	PRF	(S*	sich	sg	-	-	(33)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	der	ART	(NP*	der	sg	masc	-	(33
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	Jude	NN	*)	jude	sg	masc	-	33)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	nicht	PTKNEG	*)	nicht	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	Vielleicht	NN	*	vielleicht	sg	neut	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	im	APPRART	(PP*	in	sg	neut	-	(47
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	15	Elend	NN	*))	elend	sg	neut	-	47)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	16	umgekommen	VVPP	*)	umkommen	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	17	wäre	VAFIN	*)	sein	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	18	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	PATRIARCH	NE	(VROOT(PSEUDO*	patriarch	sg	neut	-	(8
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Tut	XY	*	tut	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	nichts	PIS	*	nichts	*	neut	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	der	ART	(VROOT(PSEUDO(S(NP*	der	sg	masc	-	(33
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Jude	NN	*)	jude	sg	masc	-	33)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	wird	VAFIN	*	werden	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	verbrannt	VVPP	*)	verbrennen	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Denn	KON	(S*	denn	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	besser	ADJD	*	gut	-	-	-	(48
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	48)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	Es	PPER	*	es	sg	neut	-	(34)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	wäre	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	hier	ADV	(VP*	hier	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	im	APPRART	(PP*	in	sg	neut	-	(47
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	Elend	NN	*)	elend	-	-	-	47)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	umgekommen	VVPP	*))	umkommen	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	Als	NE	*	als	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	daß	KOUS	(S*	daß	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	zu	APPR	(VP(PP*	zu	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	seinem	PPOSAT	*	sein	sg	masc	-	(49|(34)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	15	ewigen	ADJA	*	ewig	sg	masc	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	16	Verderben	NN	*)	verderben	sg	neut	-	49)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	17	Es	PPER	(NP*	es	sg	neut	-	(34)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	18	so	ADV	*)	so	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	19	gerettet	VVPP	*))	retten	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	20	ward	VVFIN	*	werden	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	21	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Zu	APPR	(NP(PP*	zu	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	dem	PDS	*)	der	sg	neut	-	(48)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	was	PRELS	(S*	was	sg	neut	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	hat	VAFIN	*	haben	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	Der	ART	(VP(NP*	der	sg	masc	-	(33
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	Jude	NN	*	jude	sg	masc	-	33)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	Gott	NN	*)	gott	sg	masc	(PER*)	(18)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	denn	ADV	*	denn	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	vorzugreifen	VVIZU	*)))	vorgreifen	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Gott	NN	*	gott	sg	masc	-	(18)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Kann	NE	*	können	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	wen	PWS	*	wen	sg	masc	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	er	PPER	*	er	sg	masc	-	(18)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	retten	VVINF	*	retten	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	will	VMFIN	*	wollen	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	schon	ADV	*	schon	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	ohn	PPER	*	ohn	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	ihn	PPER	*	ihn	sg	masc	-	(33)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	retten	VVFIN	*	retten	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	.	$.	*	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(16
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	16)

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Auch	ADV	*	auch	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Trotz	VVFIN	*	trotz	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	ihm	PPER	*	ihm	sg	masc	-	(33)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	sollt	VMFIN	*	sollen	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	meinen	VVFIN	*	meinen	sg	masc	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	–	PPER	*	–	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	selig	ADJD	*	selig	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	machen	VVINF	*	machen	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	.	$.	*	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	PATRIARCH	NE	(VROOT(PSEUDO*	patriarch	sg	neut	-	(8
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Tut	XY	*	tut	-	-	-	(50
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	nichts	PIS	*	nichts	*	neut	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	der	ART	(VROOT(PSEUDO(S(NP*	der	sg	masc	-	(33
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Jude	NN	*)	jude	sg	masc	-	33)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	wird	VAFIN	*	werden	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	verbrannt	VVPP	*)	verbrennen	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	50)

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(16
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	16)

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Das	PDS	*	der	sg	neut	-	(50)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	geht	VVFIN	*	gehen	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	Mir	PPER	*	sich	sg	*	-	(4)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	nah	ADJD	*	nah	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	!	$.	*	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Besonders	ADV	(VROOT(PSEUDO(CS(S*	besonders	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	da	KOUS	*	da	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	man	PIS	*	man	sg	*	-	(51)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	sagt	VVFIN	*	sagen	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	er	PPER	(S*	er	sg	masc	-	(52|(1)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	habe	VAFIN	*	haben	sg	-	-	52)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	Das	ART	(NP*	der	sg	neut	-	(2
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	Mädchen	NN	*)	mädchen	sg	neut	-	2)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	nicht	PTKNEG	*))	nicht	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	sowohl	KON	*	sowohl	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	in	APPR	(S(PP*	in	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	seinem	PPOSAT	*	sein	sg	neut	-	(67)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	15	als	KOKOM	(AP*	als	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	16	Vielmehr	ADV	*	vielmehr	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	17	in	APPR	(PP*	in	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	18	keinem	PIAT	*	kein	sg	masc	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	19	Glauben	NN	*)	glaube	sg	masc	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	20	auferzogen	VVPP	*	auferehen	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	21	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	22	Und	KON	(S*	und	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	23	sie	PPER	*	sie	sg	fem	-	(2)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	24	von	APPR	(PP*	von	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	25	Gott	NN	*)	gott	sg	masc	(PER*)	(54)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	26	nicht	PTKNEG	(AVP*	nicht	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	27	mehr	ADV	*)	mehr	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	28	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	29	weniger	ADV	*))	weniger	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	30	Gelehrt	NN	*)	gelehrt	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	31	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	32	als	KOKOM	(S*	als	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	33	der	ART	(NP*	der	sg	masc	-	(26
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	34	Vernunft	NN	*)	vernunft	sg	masc	-	26)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	35	genügt	VVFIN	*)))	genügen	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	36	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	PATRIARCH	NE	(VROOT(PSEUDO*	patriarch	sg	neut	-	(8
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Tut	XY	*	tut	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	nichts	PIS	*	nichts	*	neut	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Der	ART	*	der	sg	masc	-	(33
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Jude	NN	*	jude	sg	masc	-	33)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	wird	VAFIN	*	werden	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	verbrannt	VVPP	*	verbrennen	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	.	$.	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	.	$.	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	.	$.	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	Ja	PTKANT	*	ja	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	wär	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	allein	ADV	*	allein	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	Schon	ADV	*	schon	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	dieserwegen	PDAT	*	dieserwegen	-	-	-	(52)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	wert	ADJD	*	wert	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	15	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	16	dreimal	ADV	*	dreimal	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	17	verbrannt	VVPP	*	verbrennen	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	18	Zu	NN	*	zu	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	19	werden	VAINF	*	werden	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	20	!	$.	*	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Was	PWS	*	was	sg	neut	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	ein	ART	*	ein	sg	masc	-	(46
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Kind	NN	*	kind	sg	masc	-	46)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	ohn	PPER	*	ohn	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	allen	PIAT	*	aller	pl	masc	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	Glauben	NN	*	glaube	pl	masc	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	Erwachsen	NN	*	erwachsen	pl	masc	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	lassen	VVINF	*	lassen	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	?	$.	*	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Wie	PWAV	*	wie	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	die	ART	(VROOT(PSEUDO(S(NP*	der	sg	fem	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	große	ADJA	*	groß	sg	fem	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	Pflicht	NN	*	pflicht	sg	fem	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	Zu	NN	*)	zu	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	glauben	VVFIN	*	glauben	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	ganz	ADV	(VP(CAVP*	ganz	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	und	KON	*	und	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	gar	ADV	*)	gar	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	ein	ART	(NP*	ein	sg	neut	-	(46
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	Kind	NN	*)	kind	sg	neut	-	46)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	lehren	VVINF	*))	lehren	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Das	PDS	(VROOT(PSEUDO(S*	der	sg	neut	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	zu	PTKA	(AP*	zu	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	arg	ADJD	*))	arg	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Mich	PPER	(S*	mich	sg	*	-	(8)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	wundert	VVFIN	*	wundern	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	sehr	ADV	*	sehr	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	Herr	NN	(NP*	herr	sg	masc	-	(16
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	Ritter	NE	*)	ritter	sg	masc	(PER*)	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	16)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	Euch	PPER	(NP*	euch	sg	masc	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	selbst	ADV	*))	selbst	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	.	$.	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	.	$.	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(16
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	16)

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ehrwürd	NE	*	ehrwürd	-	-	-	(8
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	ger	ADJA	*	g	sg	masc	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	Herr	NN	*	herr	sg	masc	-	8)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	das	ART	*	der	sg	neut	-	(55
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	übrige	ADJA	*	übrig	sg	neut	-	55)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	Wenn	KOUS	*	wenn	sg	masc	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	Gott	NN	*	gott	sg	masc	(PER*)	(18)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	will	VMFIN	*	wollen	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	in	APPR	*	in	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	der	ART	*	der	sg	fem	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	Beichte	NN	*	beichte	sg	fem	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	15	.	$.	*	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Will	VMFIN	*	wollen	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	gehn	CARD	*	gehn	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	.	$.	*	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	PATRIARCH	NE	(VROOT(PSEUDO*	patriarch	sg	neut	-	(8
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Was	PWS	*	was	sg	neut	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	?	$.	*	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	mir	PPER	(VROOT(PSEUDO(S*	sich	sg	*	-	(8)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	nun	ADV	*	nun	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	Nicht	PTKNEG	(NP(AVP*	nicht	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	einmal	ADV	*)	einmal	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	Rede	NN	*)	rede	-	-	-	(55)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	stehn	VVFIN	*)	stehn	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Den	ART	(NP*	der	sg	masc	-	(33
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	Bösewicht	NN	*	bösewicht	sg	masc	-	33)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	Den	NE	(VP(NP*	der	sg	masc	-	(33
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	Juden	NE	*)	Jude	pl	masc	-	33)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	mir	PPER	*	sich	sg	*	-	(8)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	nennen	VVINF	*))	nennen	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO(S*	–	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	mir	PPER	*	sich	sg	*	-	(8)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	ihn	PPER	*	ihn	sg	masc	-	(33)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	Zur	APPRART	(VP(PP*	zu	sg	fem	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	Stelle	NN	*)	stelle	sg	fem	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	schaffen	VVINF	*))	schaffen	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	O	NE	*	O	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	da	ADV	(S*)	da	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	weiß	VVFIN	(S*	weiß	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	ich	PPER	*	ich	sg	*	-	(8)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	Rat	NN	*)	Rat	sg	masc	-	(24)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	*	ich	sg	*	-	(8)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	geh	XY	*	geh	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	sogleich	ADV	*	sogleich	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	zum	APPRART	*	zu	-	-	-	(7
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	Sultan	NN	*	sultan	sg	neut	-	7)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	.	$.	*	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Saladin	NN	*	saladin	-	-	(PER*)	(7)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	Vermöge	NN	(NP*	vermöge	sg	fem	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	der	ART	(NP*	der	sg	fem	-	(56
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	Kapitulation	NN	*	kapitulation	sg	fem	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	56)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	Die	NN	(CS(S*	der	sg	fem	-	(56)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	er	PPER	*	er	sg	masc	-	(7)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	beschworen	VVFIN	*	beschwören	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	muß	VMFIN	(S*	müssen	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	uns	PPER	*	uns	pl	*	-	(51)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	muß	VMFIN	(S*	müssen	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	15	uns	PPER	*	uns	pl	*	-	(51)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	16	schützen	VVINF	(VP*	schützen	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	17	;	$.	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	18	Bei	APPR	(CO(PP*	bei	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	19	allen	PIAT	*	aller	pl	*	-	(43
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	20	Rechten	NN	*)	rechte	pl	*	-	43)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	21	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	22	allen	PIAT	(VP(NP*	aller	pl	*	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	23	Lehren	NN	*)	lehre	pl	*	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	24	schützen	VVINF	*))))))	schützen	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	25	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	26	Die	PDS	(S*	der	pl	*	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	27	wir	PPER	*	wir	pl	*	-	(51)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	28	zu	APPR	(PP*	zu	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	29	unsrer	ADJD	(AP*	unsrer	sg	*	-	(57|(51)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	30	allerheiligsten	ADJA	*))	allerheiligster	pl	fem	-	57)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	31	Religion	NN	*	religion	sg	fem	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	32	nur	ADV	(AVP*	nur	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	33	immer	ADV	*)	immer	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	34	rechnen	VVINF	*	rechnen	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	35	dürfen	VMFIN	*))))	dürfen	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	36	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Gottlob	NE	(VROOT(PSEUDO(MPN*	gottlob	-	-	(PER*)	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*)))	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	wir	PPER	(VROOT(PSEUDO(S*	wir	pl	*	-	(19)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	haben	VAFIN	*	haben	pl	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	das	ART	(NP*	der	sg	neut	-	(18
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	Original	NN	*))	original	sg	neut	-	18)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wir	PPER	(VROOT(PSEUDO(S*	wir	pl	*	-	(19)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	haben	VAFIN	*	haben	pl	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	seine	PPOSAT	(CNP(NP*	sein	sg	fem	-	(58|(18)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	Hand	NN	*)	hand	sg	fem	-	58)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	sein	PPOSAT	(NP*	sein	-	-	-	(31|(18)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	Siegel	NN	*)))	siegel	sg	masc	-	31)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wir	PPER	*	wir	pl	*	-	(19)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Auch	ADV	*	auch	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	mach	VVFIN	*	machen	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	ich	PPER	*	ich	sg	*	-	(8)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	ihm	PPER	*	ihm	sg	masc	-	(7)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	gar	ADV	*	gar	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	leicht	ADJD	*	leicht	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	begreiflich	ADJD	*	begreiflich	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	wie	KOKOM	*	wie	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	Gefährlich	ADJD	*	gefährlich	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	selber	ADV	*	selber	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	für	APPR	*	für	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	den	ART	*	der	sg	masc	-	(59
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	15	Staat	NN	*	staat	sg	masc	-	59)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	16	es	PPER	*	es	sg	neut	-	(60)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	17	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	18	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	19	Nichts	NN	*	nichts	*	neut	-	(60
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	20	glauben	VVINF	*	glauben	-	-	-	60)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	21	!	$.	*	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Alle	PIAT	(VROOT(PSEUDO(S(S(NP*	aller	sg	*	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	bürgerliche	ADJA	*	bürgerlich	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	Bande	NN	*)	Bande	*	*	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	Sind	VAFIN	*	sein	sg	masc	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	aufgelöset	VVPP	*)	auelösen	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	sind	VAFIN	*	sein	pl	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	zerrissen	VVPP	*	zerreißen	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	wenn	KOUS	(S*	wenn	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	Der	ART	(NP*	der	sg	masc	-	(27
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	Mensch	NN	*)	mensch	sg	masc	-	27)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	nichts	PIS	(VP*	nichts	*	neut	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	glauben	VVINF	*)	glauben	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	darf	VMFIN	*))	dürfen	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	15	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Hinweg	NN	*	hinweg	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	hinweg	ADV	(VROOT(PSEUDO(PP*	hinweg	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Mit	APPR	*	mit	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	solchem	PIAT	*	solcher	sg	neut	-	(32
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	Frevel	NN	*)	frevel	sg	neut	-	32)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	.	$.	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(16
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	16)

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Schade	ADJD	(VROOT(PSEUDO(S*	schade	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	daß	KOUS	(S*	daß	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	Den	ART	(VP(NP*	der	sg	masc	-	(24
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	trefflichen	ADJA	*	trefflich	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	Sermon	NN	*	sermon	-	-	-	24)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	mit	APPR	(PP*	mit	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	beßrer	ADJA	*	beßr	-	-	-	(61
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	Muße	NN	*))	muße	-	-	-	61)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	Genießen	VVINF	*)	genießen	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	kann	VMFIN	*))	können	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(4)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	bin	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	zum	APPRART	(VP(PP*	zu	sg	neut	-	(7
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	Saladin	NN	*)	saladin	sg	neut	-	7)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	Gerufen	VVPP	*))	gerufen	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	PATRIARCH	NE	(VROOT(PSEUDO*	patriarch	sg	neut	-	(8
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ja	PTKANT	*	ja	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	?	$.	*	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Nun	ADV	(AVP*	nun	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	so	ADV	*)	so	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	–	CARD	(PP*	–	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	Nun	ADV	(AP*	nun	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	freilich	ADV	*	freilich	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	–	CARD	*)	–	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	Dann	NN	*)	dann	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	–	XY	*))	–	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(16
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	16)

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(4)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	will	VMFIN	*	wollen	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	den	ART	(VP(NP*	der	sg	masc	-	(62|(7
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	Sultan	NN	*)	sultan	sg	masc	-	7)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	vorbereiten	VVINF	*	vorbereiten	-	-	-	62)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	wenn	KOUS	(S*	wenn	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	Es	PPER	(NP*	es	sg	neut	-	(62)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	Eurer	PPOSAT	(NP*	eurer	sg	masc	-	(8
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	Hochehrwürden	NN	*))	hochehrwürde	pl	fem	-	8)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	so	ADV	*	so	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	gefällt	VVFIN	*)))	fällen	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	PATRIARCH	NE	(VROOT(PSEUDO*	patriarch	sg	neut	-	(8
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	O	ITJ	(VROOT(PSEUDO(S*)	O	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	oh	FM	*	oh	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ich	PPER	(S*	ich	sg	*	-	(8)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	weiß	VVFIN	*	weiß	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	der	ART	(S(NP*	der	sg	masc	-	(16
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	Herr	NN	*)	herr	sg	masc	-	16)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	hat	VAFIN	*	haben	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	Gnade	NN	*	gnade	sg	fem	-	(63)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	funden	VVFIN	*))	fund	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	Vor	APPR	*	vor	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	Saladin	NE	*	saladin	-	-	-	(7)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ich	PPER	(VP(VP(NP*	ich	sg	*	-	(64|(8)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	bitte	ADV	*)	bitte	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	meiner	PIS	*	mein	sg	fem	-	(8)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	nur	ADV	*	nur	-	-	-	64)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	Im	APPRART	(PP*	in	sg	masc	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	besten	ADJA	*	gut	sg	masc	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	bei	APPR	(PP*	bei	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	ihm	PPER	*))	ihm	sg	masc	-	(7)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	eingedenk	VVPP	*)	eingedenk	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	sein	VAINF	*))	sein	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Mich	PPER	(S*	mich	sg	*	-	(8)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	treibt	VVFIN	*	treiben	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	der	ART	(NP*	der	sg	masc	-	(20
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	Eifer	NN	*))	eifer	sg	masc	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	Gottes	NN	(NP*	gott	sg	masc	(LOC*)	20)|(18)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	lediglich	ADV	*)	lediglich	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Was	PWS	*	was	sg	neut	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	ich	PPER	*	ich	sg	*	-	(8)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	zu	PTKA	*	zu	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	viel	PIS	*	viel	*	*	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	tu	PPER	*	tu	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	tu	PPER	*	tu	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	ich	PPER	*	ich	sg	*	-	(8)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	ihm	PPER	*	ihm	sg	masc	-	(18)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	.	$.	*	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Das	PDS	(S*	der	sg	neut	-	(64)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	wolle	VMFIN	*	wollen	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	Doch	NE	*	doch	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	ja	ADV	*	ja	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	der	ART	(VP(NP*	der	sg	masc	-	(16
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	Herr	NN	*)	herr	sg	masc	-	16)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	erwägen	VVINF	*))	erwägen	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	!	$.	*))	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Und	KON	(S*	und	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	wahr	PTKVZ	*)	wahr	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	Herr	NN	*	herr	sg	masc	-	(16
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	Ritter	NN	*	ritter	sg	masc	(PER*)	16)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	das	ART	(VROOT(PSEUDO(S(NP*	der	sg	neut	-	(32
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	vorhin	ADV	(NP*	vorhin	sg	neut	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	Erwähnte	NN	*)	erwähnt	sg	neut	-	32)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	von	APPR	(PP*	von	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	Dem	ART	*	der	sg	masc	-	(33
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	Juden	NN	*))	Jude	sg	masc	(MISC*)	33)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	war	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	nur	ADV	(NP*	nur	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	ein	ART	*	ein	sg	neut	-	(40
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	Problema	NN	*))	problema	sg	neut	-	40)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	?	$.	*))	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO(S*	–	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	Zu	PPER	(VP*	zu	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	sagen	VVINF	*))	sagen	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	–	$.	*))	–	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(16
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	16)

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ein	ART	(VROOT(PSEUDO(NP*	ein	sg	neut	-	(40
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Problema	NN	*)	problema	sg	neut	-	40)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Geht	VVFIN	(VROOT(PSEUDO(S*	gehen	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	ab	PTKVZ	*)	ab	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	PATRIARCH	NE	(VROOT(PSEUDO*	patriarch	sg	neut	-	(8
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	8)

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	(	$(	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	Dem	VVIMP	*	der	sg	neut	-	(40)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(8)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	tiefer	ADJD	*	tief	-	-	-	(65)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	Doch	KON	*	doch	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	auf	APPR	*	auf	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	den	ART	*	der	sg	masc	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	Grund	NN	*	grund	sg	masc	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	zu	PTKZU	*	zu	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	kommen	VVINF	*	kommen	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	suchen	VVINF	*	suchen	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	muß	VMFIN	*	müssen	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	.	$.	*	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Das	PDS	*	der	sg	neut	-	(65)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	wär	VAFIN	*	sein	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	so	ADV	*	so	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	wiederum	ADV	*	wiederum	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	ein	ART	*	ein	sg	masc	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	Auftrag	NN	*	auftrag	sg	masc	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	für	APPR	*	für	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	8	Den	ART	*	der	sg	masc	-	(5
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	9	Bruder	NN	*	bruder	*	*	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	10	Bonafides	NE	*	bonafide	sg	neut	-	5)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	11	.	$.	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	12	)	$(	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	13	–	XY	*	–	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	14	Hier	ADV	*	hier	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	15	,	$,	*	--	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	16	mein	PPOSAT	*	mein	sg	masc	-	(5|(8)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	17	Sohn	NN	*	sohn	sg	masc	-	5)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	18	!	$.	*	--	-	-	-	-

Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	0	Er	PPER	(VROOT(PSEUDO(S*	er	sg	masc	-	(8)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	1	spricht	VVFIN	*	sprechen	sg	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	2	im	APPRART	(PP*	in	sg	masc	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	3	Abgehn	NN	*	abgehn	sg	masc	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	4	mit	APPR	(PP*	mit	-	-	-	-
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	5	dem	ART	*	der	sg	masc	-	(5
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	6	Klosterbruder	NN	*)))	klosterbruder	sg	masc	-	5)
Nathan_Act4_Scene2.part.xml.rkpt.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

#end document
