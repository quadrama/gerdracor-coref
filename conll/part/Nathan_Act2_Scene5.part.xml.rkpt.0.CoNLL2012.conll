#begin document (Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll); part 000
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nathan	NE	(VROOT(PSEUDO(CNP*	nathan	-	-	-	(1)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	und	KON	*	und	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	bald	ADV	(NP(AVP*	bald	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	darauf	PROAV	*)	darauf	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	der	ART	*	der	sg	fem	-	(15
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	Tempelherr	NN	*))	tempelherr	sg	fem	-	15)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Fast	ADV	*	fast	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	scheu	ADJD	*	scheu	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	ich	PPER	*	ich	sg	*	-	(1)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	mich	PPER	*	mich	sg	*	-	(1)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	des	ART	*	der	sg	masc	-	(15
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	Sonderlings	NN	*	sonderling	sg	masc	-	15)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	.	$.	*	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Fast	ADV	(VROOT(PSEUDO(S*	fast	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	macht	VVFIN	*	machen	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	Mich	PPER	*	mich	sg	masc	-	(1)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	seine	PPOSAT	(VP(NP*	sein	sg	fem	-	(16|(15)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	rauhe	ADJA	*	rauh	sg	fem	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	Tugend	NN	*)	tugend	-	-	-	16)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	stutzen	VVINF	*))	stutzen	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Daß	KOUS	(VROOT(PSEUDO(S*	daß	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ein	ART	(NP*	ein	sg	masc	-	(17
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	Mensch	NN	*)	mensch	sg	masc	-	17)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	doch	ADV	(VP*	doch	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	einen	ART	(NP*	ein	sg	masc	-	(17
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	Menschen	NN	*)	mensch	sg	masc	-	17)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	so	ADV	*	so	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	verlegen	VVINF	*)	verlegen	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	Soll	NN	(VP*	soll	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	machen	VVINF	*)	machen	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	können	VMFIN	*)	können	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	!	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ha	NE	*	ha	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	er	PPER	(VROOT(PSEUDO(S*	er	sg	masc	-	(15)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	kömmt	VVFIN	*)	kömmen	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	Bei	APPR	*	bei	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	Gott	NN	*	gott	-	-	-	(18)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ein	ART	(VROOT(PSEUDO(NP*	ein	sg	masc	-	(15
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	Jüngling	NN	*	jüngling	sg	masc	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	wie	KOKOM	(NP*	wie	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	ein	ART	*	ein	sg	masc	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	Mann	NN	*))	mann	sg	masc	-	15)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(1)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	mag	VMFIN	*	mögen	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	ihn	PPER	*	ihn	sg	masc	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	wohl	ADV	*	wohl	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	Den	ART	(NP*	der	sg	masc	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	guten	ADJA	*	gut	sg	masc	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	trotzgen	ADJA	*	trotzgen	sg	masc	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	Blick	NN	*))	blick	sg	masc	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	!	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	den	ART	(VROOT(PSEUDO(NP*	der	sg	masc	-	(19
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	prallen	ADJA	*	prall	sg	masc	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	Gang	NN	*)	gang	sg	masc	-	19)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Die	ART	(VROOT(PSEUDO(S(NP*	der	sg	fem	-	(20
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	Schale	NN	*)	schale	sg	fem	-	20)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	kann	VMFIN	*	können	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	nur	ADV	(VP(AP*	nur	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	bitter	ADJD	*)	bitter	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	sein	VAINF	*)	sein	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	:	$.	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	der	ART	(NP*	der	sg	masc	-	(21
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	Kern	NN	*	kern	sg	masc	-	21)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	Ists	NE	*)	ist	sg	neut	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	sicher	ADV	*	sicher	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	nicht	PTKNEG	*)	nicht	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	Wo	PWAV	*	wo	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	sah	VVFIN	*	sehen	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	'	$(	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	ich	PPER	*	ich	sg	fem	-	(1)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	doch	ADV	*	doch	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	dergleichen	PIS	*	dergleichen	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	?	$.	*	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	Verzeihet	VVFIN	*	verzeihet	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	edler	ADJA	(NP*	edel	-	-	-	(15
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	Franke	NN	*)	franke	-	-	(PER*)	15)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	.	$.	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	.	$.	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Was	PWS	*	was	sg	neut	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	?	$.	*	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Erlaubt	VVPP	(VROOT(PSEUDO(VP*	erlauben	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	(S(ISU*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	.	$.	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	.	$.	*)))))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	Jude	NN	*)	jude	sg	fem	-	(1)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	?	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	was	PWS	*	was	sg	neut	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	?	$.	*	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Daß	KOUS	*	daß	-	-	-	(22
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	ich	PPER	*	ich	sg	*	-	(1)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	mich	PRF	*	mich	sg	-	-	(1)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	untersteh	VVFIN	*	untersteh	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	'	$(	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	Euch	PPER	*	euch	pl	-	-	(15)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	anzureden	VVIZU	*	anreden	-	-	-	22)

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Kann	VMFIN	*	können	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	ichs	CARD	*	ich	-	-	-	(22)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	wehren	VVINF	*	wehren	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	?	$.	*	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Doch	KON	(VROOT(PSEUDO(S*	doch	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	Nur	ADV	*	nur	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	kurz	ADJD	*)	kurz	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Verzieht	VVFIN	(VROOT(PSEUDO(CS(S*	verziehen	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	und	KON	*	und	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	eilet	VVFIN	(S*	eilet	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	nicht	PTKNEG	(AVP*	nicht	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	so	ADV	*)	so	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	stolz	ADJD	*))	stolz	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	Nicht	PTKNEG	(S(AVP*	nicht	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	so	ADV	*)	so	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	verächtlich	ADJD	(AP*	verächtlich	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	einem	ART	(PP*	ein	sg	masc	-	(1
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	12	Mann	NN	*	mann	sg	masc	-	1)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	13	vorüber	APPO	*)))	vorüber	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	15	Den	NE	(S*	der	sg	masc	-	(1)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	16	Ihr	PPER	*	ihr	sg	fem	-	(15)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	17	auf	APPR	(VP(PP*	auf	-	-	-	(23
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	18	ewig	ADJD	*)	ewig	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	19	Euch	PPER	*	euch	pl	*	-	(15)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	20	verbunden	VVPP	*)	verbinden	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	21	habt	VAFIN	*))	haben	pl	-	-	23)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	22	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wie	PWAV	*	wie	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	das	PDS	*	der	sg	neut	-	(23)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ah	NE	*	ah	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	fast	ADV	*	fast	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	errat	VVFIN	*	errat	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	'	$(	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	ichs	PTKVZ	*	ichs	-	-	-	(24)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	.	$.	*	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	?	$.	*	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ihr	PPER	*	ihr	pl	*	-	(24|(1)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	seid	VAFIN	*	sein	pl	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	.	$.	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	.	$.	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	.	$.	*	--	-	-	-	24)

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	*	ich	sg	*	-	(1)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	heiße	VVFIN	*	heiß	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	Nathan	NE	*	nathan	*	*	-	(25)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	;	$.	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	bin	VAFIN	*	sein	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	des	ART	*	der	sg	masc	-	(26|(2
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	Mädchens	NN	*	mädchen	sg	masc	-	2)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	Vater	NN	*	vater	sg	masc	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	26)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	Das	ART	*	der	sg	neut	-	(2)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	Eure	ADJA	*	euer	sg	neut	-	(15)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	Großmut	NN	*	großmut	sg	neut	(PER*)	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	12	aus	APPR	*	aus	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	13	dem	ART	*	der	sg	neut	-	(27
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	14	Feu	NN	*	feu	sg	neut	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	15	'	$(	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	16	r	PPER	*	--	-	-	-	27)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	17	gerettet	VVPP	*	retten	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	18	;	$.	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	19	Und	KON	*	und	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	20	komme	VVFIN	*	kommen	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	21	.	$.	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	22	.	$.	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	23	.	$.	*	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wenn	KOUS	(VROOT(PSEUDO(S*	wenn	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	zu	PTKZU	(VZ*	zu	-	-	-	(28
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	danken	VVINF	*)	danken	-	-	-	28)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	:	$.	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	–	PPER	(NP*	–	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	sparts	ADV	*))	sparts	-	-	-	(28)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	!	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	hab	VAFIN	*	hab	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	Um	APPR	*	um	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	diese	PDAT	*	dieser	pl	fem	-	(29
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	Kleinigkeit	NN	*	kleinigkeit	sg	fem	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	des	ART	*	der	sg	masc	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	Dankes	NN	*	dank	sg	masc	-	29)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	schon	ADV	*	schon	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	Zu	APPR	*	zu	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	viel	PIS	*	viel	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	erdulden	VVINF	*	erdulden	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	12	müssen	VMINF	*	müssen	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	13	.	$.	*	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	Vollends	NN	*	vollends	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	Ihr	PPER	(S*	ihr	pl	*	-	(1)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	Ihr	PPER	*	ihr	pl	*	-	(1)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	seid	VAFIN	*	sein	pl	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	mir	PPER	*	sich	sg	*	-	(4)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	gar	ADV	(NP*	gar	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	nichts	PIS	*)	nichts	*	neut	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	schuldig	ADJD	*)	schuldig	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wußt	VVIMP	*	wußt	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	'	$(	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	denn	ADV	*	denn	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	Daß	KOUS	*	daß	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	dieses	PDAT	*	dieser	sg	masc	-	(2
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	Mädchen	NN	*	mädchen	sg	masc	-	2)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	Eure	PPOSAT	*	euer	sg	fem	-	(30
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	Tochter	NN	*	tochter	sg	fem	-	30)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	war	VAFIN	*	sein	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	?	$.	*	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Es	PPER	(VROOT(PSEUDO(S*	es	sg	neut	-	(31)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	der	ART	(NP*	der	sg	masc	-	(32|(33
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	Tempelherren	NN	*	tempelherr	-	-	-	33)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	Pflicht	NE	*	pflicht	sg	fem	-	32)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	dem	ART	(VP(NP*	der	sg	masc	-	(87
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	ersten	ADJA	*	erster	sg	masc	-	87)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	Dem	NN	*)	der	sg	masc	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	besten	ADJD	*	gut	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	beizuspringen	VVIZU	*))	beizpringen	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	12	dessen	PRELAT	(NP*	der	sg	masc	-	(34|(17)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	13	Not	NN	*)	not	sg	-	-	34)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	14	Sie	PPER	(NP*	sie	sg	fem	-	(33)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	15	sehn	CARD	*	sehn	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	16	.	$.	*))))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Mein	PPOSAT	(VROOT(PSEUDO(S(NP*	mein	sg	neut	-	(35|(4)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	Leben	NN	*)	leben	sg	neut	-	35)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	war	VAFIN	*	sein	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	mir	PPER	(AP*	sich	sg	*	-	(4)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	ohnedem	ADV	(PP*	ohnedem	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	In	APPR	*	in	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	diesem	PDAT	*	dieser	sg	masc	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	Augenblicke	NN	*)	augenblick	sg	masc	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	lästig	ADJD	*))	lästig	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Gern	ADV	(VROOT(PSEUDO(S*	gern	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	Sehr	ADV	(AVP*	sehr	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	gern	ADV	*)	gern	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	ergriff	VVFIN	*	ergreifen	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	die	ART	(NP*	der	sg	fem	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	Gelegenheit	NN	*	gelegenheit	sg	fem	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	Es	PPER	(S(VP(NP*	es	sg	neut	-	(35)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	für	APPR	(PP*	für	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	ein	ART	*	ein	sg	neut	-	(36
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	12	andres	ADJA	*	andr	sg	neut	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	13	Leben	NN	*)	leben	sg	neut	-	36)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	14	in	APPR	(PP*	in	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	15	die	ART	*	der	sg	fem	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	16	Schanze	NN	*))	schanze	sg	fem	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	17	Zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	18	schlagen	VVINF	*)	schlagen	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	19	:	$.	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	20	für	APPR	(PP*	für	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	21	ein	ART	*	ein	sg	neut	-	(36
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	22	andres	ADJA	*	andres	sg	neut	-	36)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	23	–	NN	*))	–	sg	neut	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	24	wenns	ADV	*	wenns	sg	neut	-	(36)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	25	auch	ADV	(NP*	auch	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	26	nur	ADV	*	nur	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	27	Das	ART	*	der	sg	neut	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	28	Leben	NN	*	leben	sg	neut	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	29	einer	ART	(NP*	ein	sg	fem	-	(37
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	30	Jüdin	NN	*))	jüdin	sg	fem	-	37)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	31	wäre	VAFIN	*)))	sein	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	32	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Groß	ADJD	(VROOT(PSEUDO*	groß	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Groß	ADJD	(VROOT(PSEUDO(CAP*	groß	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	und	KON	*	und	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	abscheulich	ADJD	*)	abscheulich	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	Doch	KON	(S*	doch	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	die	ART	(NP*	der	sg	fem	-	(38
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	Wendung	NN	*)	wendung	sg	fem	-	38)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	läßt	VVFIN	*)	lassen	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	Sich	PRF	(VP*	sich	sg	-	-	(38)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	denken	VVINF	*)	denken	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Die	ART	(VROOT(PSEUDO(S(NP*	der	sg	fem	-	(39
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	bescheidne	ADJA	*	bescheidn	sg	fem	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	Größe	NN	*)	größe	sg	-	-	39)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	flüchtet	VVFIN	*	flüchten	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	Sich	PRF	*	sich	sg	-	-	(39)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	hinter	APPR	(PP*	hinter	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	das	ART	*	der	sg	neut	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	Abscheuliche	NN	*)	abscheulich	sg	neut	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	um	KOUI	(VP*	um	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	der	ART	(NP*	der	sg	fem	-	(40)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	Bewundrung	NN	*)	bewundrung	sg	fem	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	12	auszuweichen	VVIZU	*))	auuweichen	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	13	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	Aber	KON	(S*	aber	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	wenn	KOUS	*	wenn	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	Sie	PPER	*	sie	sg	*	-	(39)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	so	ADV	*	so	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	das	ART	(NP*	der	sg	neut	-	(40
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	Opfer	NN	*	opfer	sg	neut	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	der	ART	(NP*	der	sg	fem	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	Bewunderung	NN	*)))	bewunderung	sg	fem	-	40)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	Verschmäht	NN	*	verschmäht	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	:	$.	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	was	PWS	(S*	was	sg	neut	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	12	für	APPR	(PP*	für	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	13	ein	ART	*	ein	sg	neut	-	(41
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	14	Opfer	NN	*	opfer	sg	neut	-	41)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	15	denn	ADV	*)	denn	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	16	verschmäht	VVFIN	*	verschmähen	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	17	Sie	PPER	*	sie	sg	fem	-	(39)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	18	minder	PTKVZ	*)	minder	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	19	?	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ritter	NN	*	ritter	pl	-	-	(15)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	wenn	KOUS	*	wenn	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	Ihr	PPER	*	ihr	pl	*	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	hier	ADV	*	hier	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	fremd	ADJD	*	fremd	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	Und	KON	*	und	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	gefangen	VVPP	*	fangen	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	12	wäret	VVFIN	*	wäret	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	13	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	14	würd	VAFIN	*	würd	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	15	'	$(	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	16	ich	PPER	*	ich	sg	*	-	(1)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	17	Euch	PPER	*	euch	pl	*	-	(15)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	18	So	ADV	*	so	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	19	dreist	ADV	*	dreist	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	20	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	21	fragen	VVINF	*	fragen	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	22	.	$.	*	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Sagt	VVFIN	(VROOT(PSEUDO(S*	sagen	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	befehlt	VVFIN	(S*	befehlen	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	:	$.	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	womit	PWAV	(S*	womit	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	Kann	VMFIN	*	können	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	man	PIS	*	man	sg	*	-	(1)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	Euch	PPER	(VP*	euch	pl	*	-	(15)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	dienen	VVINF	*))))	dienen	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	?	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ihr	PPER	*	ihr	sg	neut	-	(1)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	?	$.	*	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Mit	APPR	(VROOT(PSEUDO(PP*	mit	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	nichts	PIS	*)	nichts	*	neut	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(1)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	bin	VAFIN	*	sein	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	Ein	ART	(NP*	ein	sg	masc	-	(42
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	reicher	ADJA	*	reich	sg	masc	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	Mann	NN	*))	mann	sg	masc	-	42)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(S(NP*	der	sg	masc	-	(43|(44
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	reichre	ADJA	*	reichr	sg	masc	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	Jude	NN	*)	jude	sg	masc	-	44)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	war	VAFIN	*	sein	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	Mir	NE	*	sich	sg	fem	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	nie	ADV	*	nie	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	der	ART	(NP*	der	sg	masc	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	beßre	ADJA	*	beßren	sg	masc	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	Jude	NN	*))))	jude	sg	masc	-	43)

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Dürft	VVFIN	(VROOT(PSEUDO(S*	dürft	-	-	-	(45
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ihr	PPER	*	ihr	pl	*	-	(15)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	denn	ADV	(VP*	denn	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	Darum	PROAV	*	darum	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	nützen	VVINF	*	nützen	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	was	PWS	(S*	was	sg	neut	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	dem	ART	(NP*	der	sg	neut	-	(43)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	ungeachtet	APPR	(PP*	ungeachtet	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	Er	PPER	*))	er	sg	masc	-	(44)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	Beßres	NN	*))	beßr	sg	neut	-	(46)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	12	hat	VAFIN	*)	haben	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	13	?	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	nicht	PTKNEG	(VROOT(PSEUDO(VP*	nicht	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	seinen	PPOSAT	(NP*	sein	sg	masc	-	(46|(44)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	Reichtum	NN	*)	reichtum	sg	masc	-	46)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	nützen	VVINF	*)))	nützen	-	-	-	45)

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nun	ADV	(VROOT(PSEUDO(S(AP*	nun	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	gut	ADJD	*	gut	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	das	PDS	(S*	der	sg	neut	-	(45)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	will	VMFIN	*	wollen	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	auch	ADV	*	auch	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	nicht	PTKNEG	(VP(AVP*	nicht	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	ganz	ADV	*)	ganz	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	verreden	VVINF	*)))	verreden	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	;	$.	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	Um	APPR	(PP*	um	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	12	meines	PPOSAT	*	mein	sg	masc	-	(47|(4)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	13	Mantels	NN	*	mantel	sg	masc	-	47)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	14	willen	APZR	*)	willen	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	15	nicht	PTKNEG	*)	nicht	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	16	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Sobald	KOUS	*	sobald	sg	masc	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	Der	ART	*	der	sg	masc	-	(47)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	ganz	ADV	*	ganz	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	und	KON	*	und	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	gar	ADV	*	gar	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	verschlissen	VVPP	*	verschlissen	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	;	$.	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	weder	KON	*	weder	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	Stich	NN	*	stich	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	Noch	NE	*	noch	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	Fetze	NE	*	fetz	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	länger	ADJD	*	lang	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	12	halten	VVINF	*	halten	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	13	will	VMFIN	*	wollen	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	14	:	$.	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	15	komm	VVIMP	*	kommen	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	16	'	$(	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	17	ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	18	Und	KON	*	und	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	19	borge	VVFIN	*	borgen	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	20	mir	PPER	*	sich	sg	*	-	(4)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	21	bei	APPR	*	bei	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	22	Euch	PPER	*	euch	pl	*	-	(1)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	23	zu	APPR	*	zu	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	24	einem	ART	*	ein	sg	masc	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	25	neuen	ADJA	*	neu	sg	masc	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	26	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	27	Tuch	NN	*	tuch	sg	masc	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	28	oder	KON	*	oder	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	29	Geld	NN	*	geld	sg	neut	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	30	.	$.	*	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	Seht	VVFIN	(S*	seht	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	mit	APPR	(PP*	mit	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	eins	CARD	*))	eins	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	so	ADV	(S(ISU*	so	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	finster	ADJD	*))	finster	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	!	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Noch	ADV	(VROOT(PSEUDO(S*	noch	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	seid	VAFIN	*	sein	pl	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	Ihr	PPER	*	ihr	pl	*	-	(1)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	sicher	ADJD	(AP*	sicher	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	;	$.	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	noch	ADV	(AVP(AVP*	noch	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	ists	ADV	*)	ist	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	so	ADV	*))	so	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	weit	ADJD	*	weit	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	Mit	APPR	(VP(PP*	mit	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	ihm	PPER	*)))	ihm	sg	masc	-	(47)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ihr	PPER	(VROOT(PSEUDO(S*	ihr	pl	*	-	(1)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	seht	VVFIN	*	sehen	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	;	$.	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	er	PPER	(S*	er	sg	masc	-	(47)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	so	ADV	(AVP*	so	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	ziemlich	ADV	*)	ziemlich	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	noch	ADV	*	noch	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	Im	APPRART	(PP*	in	sg	neut	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	Stande	NN	*)))	stand	sg	neut	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nur	ADV	(VROOT(PSEUDO(S(NP*	nur	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	der	ART	*	der	sg	fem	-	(48
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	eine	ART	(NP*	ein	sg	fem	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	Zipfel	NN	*))	zipfel	sg	fem	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	da	ADV	*	da	-	-	-	48)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	Hat	VAFIN	*	haben	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	einen	ART	(NP*	ein	sg	masc	-	(49
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	garstgen	ADJA	*	garstg	sg	masc	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	Fleck	NN	*)	fleck	sg	masc	-	49)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	;	$.	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	er	PPER	(S*	er	sg	masc	-	(48)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	12	versengt	VVPP	*))	versengen	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	13	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	das	PDS	*	der	sg	neut	-	(49)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	bekam	VVFIN	*	bekommen	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	er	PPER	*	er	sg	masc	-	(47)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	als	KOUS	(S*	als	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	Eure	PPOSAT	(NP*	euer	sg	-	-	(2|(1)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	Tochter	NN	*)	tochter	*	*	-	2)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	Durchs	APPRART	(PP*	durch	sg	masc	-	(27
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	Feuer	NN	*)	feuer	sg	neut	-	27)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	trug	VVFIN	*))	tragen	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*))	nathan	-	-	-	(1)

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	der	ART	(VROOT(PSEUDO(CO(S*	der	sg	masc	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	nach	APPR	(PP*	nach	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	dem	ART	*	der	sg	neut	-	(48
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	Zipfel	NN	*)	zipfel	sg	neut	-	48)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	greift	VVFIN	*)	greifen	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	und	KON	*	und	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	ihn	PPER	(S*	ihn	sg	masc	-	(48)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	betrachtet	VVFIN	*))	betrachten	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Es	PPER	(VROOT(PSEUDO(S*	es	sg	neut	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	doch	ADV	(AP*	doch	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	sonderbar	ADJD	*	sonderbar	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	Daß	KOUS	(S*	daß	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	so	ADV	*	so	-	-	-	(49
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	ein	ART	(NP*	ein	sg	masc	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	böser	ADJA	*	böse	sg	masc	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	Fleck	NN	*)	fleck	sg	masc	-	49)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	daß	KOUS	(S*	daß	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	12	so	ADV	*	so	-	-	-	(49
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	13	ein	ART	(NP*	ein	sg	neut	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	14	Brandmal	NN	*	brandmal	sg	neut	-	49)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	15	Dem	ART	(NP*	der	sg	neut	-	(15
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	16	Mann	NN	*))	mann	sg	-	-	15)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	17	ein	ART	(NP*	ein	sg	neut	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	18	beßres	ADJA	*	beßr	sg	neut	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	19	Zeugnis	NN	*)	zeugnis	sg	neut	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	20	redet	VVFIN	*	reden	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	21	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	22	als	APPR	(PP*	als	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	23	Sein	NN	*	sein	sg	masc	-	(50|(15)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	24	eigner	ADJA	(NP*	eign	sg	masc	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	25	Mund	NN	*))))))	mund	sg	masc	-	50)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	26	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(CS(S*	ich	sg	*	-	(1)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	möcht	VMFIN	*	möchen	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	ihn	PPER	*	ihn	sg	masc	-	(51|(49)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	küssen	VMFIN	*)	küssen	-	-	-	51)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	gleich	ADV	(S*	gleich	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	–	NN	(NP*	–	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	Den	ART	(NP*	der	pl	masc	-	(49
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	Flecken	NN	*))))	flecken	pl	masc	-	49)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	!	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ah	NE	(S*	ah	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	verzeiht	VVFIN	*)	verzeihen	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	!	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ich	PPER	(S*	ich	sg	*	-	(1)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	tat	VVFIN	*	taten	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	es	PPER	*	es	sg	neut	-	(51)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	ungern	ADV	*)	ungern	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Was	PWS	*	was	sg	neut	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	?	$.	*	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Eine	ART	*	ein	sg	fem	-	(52
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	Träne	NN	*	träne	sg	fem	-	52)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	fiel	VVFIN	*	fallen	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	darauf	PROAV	*	darauf	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	.	$.	*	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Tut	XY	*	tut	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	nichts	PIS	*	nichts	*	neut	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	!	$.	*	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Er	PPER	(VROOT(PSEUDO(S*	er	sg	masc	-	(1)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	hat	VAFIN	*	haben	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	der	ART	(NP*	der	sg	fem	-	(52
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	Tropfen	NN	*	tropfen	pl	masc	-	52)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	mehr	ADV	*))	mehr	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	(	$(	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	Bald	ADV	*	bald	sg	neut	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	aber	ADV	*	aber	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	fängt	VVFIN	*	fangen	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	Mich	PPER	*	mich	sg	masc	-	(4)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	dieser	PDAT	*	dieser	sg	masc	-	(1
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	Jud	NN	*	jud	sg	masc	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	'	$(	*	--	-	-	-	1)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	an	APPR	*	an	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	zu	PTKZU	*	zu	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	verwirren	VVINF	*	verwirren	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	12	.	$.	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	13	)	$(	*	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wär	XY	*	sein	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	'	$(	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	t	XY	*	T	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	Ihr	PPER	*	ihr	pl	*	-	(15)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	wohl	ADV	*	wohl	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	so	ADV	*	so	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	gut	ADJD	*	gut	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	und	KON	*	und	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	schicktet	VVFIN	*	schickten	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	Euern	NN	*	euer	-	-	-	(47|(15)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	Mantel	NE	*	mantel	sg	fem	-	47)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	12	Auch	ADV	*	auch	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	13	einmal	ADV	*	einmal	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	14	meinem	PPOSAT	*	mein	sg	masc	-	(2|(1)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	15	Mädchen	NN	*	mädchen	sg	masc	-	2)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	16	?	$.	*	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Was	PWS	*	was	sg	neut	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	damit	PROAV	*	damit	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Auch	ADV	(VROOT(PSEUDO(VP(NP*	auch	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	ihren	PPOSAT	*	ihr	sg	masc	-	(53|(2)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	Mund	NN	*	mund	sg	masc	-	53)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	auf	APPR	(PP*	auf	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	diesen	PDAT	*	dieser	sg	masc	-	(49
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	Fleck	NN	*))	fleck	sg	masc	-	49)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	drücken	VVINF	*))	drücken	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Denn	KON	(VROOT(PSEUDO(S*	denn	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	Eure	PPOSAT	(VP(NP*	euer	-	-	-	(15)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	Kniee	NN	*)	kniee	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	selber	ADV	*	selber	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	umfassen	VVINF	*))	umfassen	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	Wünscht	VVFIN	*	wünscht	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	sie	PPER	*	sie	sg	fem	-	(2)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	nun	ADV	*	nun	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	wohl	ADV	*	wohl	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	vergebens	ADV	*)	vergebens	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Aber	KON	(VROOT(PSEUDO(NP*	aber	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	Jude	NN	(NP*	jude	sg	fem	-	(1
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	–	CARD	*))	–	pl	-	-	1)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	Ihr	PPER	(S*	ihr	pl	*	-	(1)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	heißet	VVFIN	*	heißen	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	Nathan	NE	*)	nathan	-	-	-	(25)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	?	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	Aber	KON	*	aber	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	Nathan	NE	*	nathan	-	-	(PER*)	(1)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	–	CARD	*	–	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	Ihr	PPER	*	ihr	pl	*	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	Setzt	VVFIN	*	setzen	pl	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	Eure	PPOSAT	*	euer	pl	neut	-	(54|(1)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	Worte	NN	*	wort	pl	neut	-	54)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	sehr	ADV	*	sehr	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	–	ADJD	*	–	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	sehr	ADV	*	sehr	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	12	gut	ADJD	*	gut	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	13	–	ADJD	*	–	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	14	sehr	ADV	*	sehr	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	15	spitz	ADJD	*	spitz	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	16	–	$(	*	–	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	17	Ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	18	bin	VAFIN	*	sein	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	19	betreten	VVPP	*	betreten	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	20	–	$(	*	–	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	21	Allerdings	ADV	*	allerdings	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	22	–	$(	*	–	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	23	ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	24	hätte	VAFIN	*	haben	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	25	.	$.	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	26	.	$.	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	27	.	$.	*	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Stellt	NN	(VROOT(PSEUDO(S*	stellen	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	und	KON	*	und	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	verstellt	VVFIN	(S*	verstellen	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	Euch	PPER	*	euch	pl	*	-	(15)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	wie	PWAV	(S*	wie	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	Ihr	PPER	*	ihr	pl	*	-	(15)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	wollt	VMFIN	*)))	wollen	pl	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	*	ich	sg	*	-	(1)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	find	VVFIN	*	find	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	'	$(	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	Auch	ADV	*	auch	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	hier	ADV	*	hier	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	Euch	PPER	*	euch	pl	*	-	(15)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	aus	PTKVZ	*	aus	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	.	$.	*	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ihr	PPER	(VROOT(PSEUDO(S*	ihr	pl	*	-	(15)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	wart	VVFIN	*	sein	pl	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	zu	PTKA	(AA*	zu	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	gut	ADJD	*)	gut	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	zu	APPR	(PP*	zu	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	bieder	ADJD	*)	bieder	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	Um	KOUI	(VP*	um	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	höflicher	ADJD	*	höflich	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	sein	VAINF	*)))	sein	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	12	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	Das	ART	(NP*	der	sg	neut	-	(2
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	Mädchen	NN	*	mädchen	sg	neut	-	2)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	ganz	ADV	(S(CNP(NP*	ganz	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	Gefühl	NN	*)	gefühl	sg	neut	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	;	$.	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	der	ART	(NP*	der	sg	masc	-	(0
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	weibliche	ADJA	*	weiblich	sg	fem	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	Gesandte	NN	*)	gesandter	pl	*	-	0)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	ganz	ADV	(NP*	ganz	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	12	Dienstfertigkeit	NN	*))	dienstfertigkeit	sg	fem	-	(55)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	13	;	$.	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	14	der	ART	(NP*	der	sg	masc	-	(1
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	15	Vater	NN	*)	vater	sg	masc	-	1)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	16	weit	ADJD	*	weit	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	17	entfernt	ADJD	*	entfernt	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	18	–	$.	*	–	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	19	Ihr	PPER	(S*	ihr	pl	*	-	(15)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	20	trugt	VVFIN	*	trugen	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	21	für	APPR	(PP*	für	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	22	ihren	PPOSAT	*	ihr	sg	masc	-	(2)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	23	guten	ADJA	*	gut	sg	masc	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	24	Namen	NN	*))))	name	sg	masc	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	25	Sorge	NN	*	sorge	sg	fem	-	(56)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	26	;	$.	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	27	Floht	VVFIN	(CS(S*	floht	sg	fem	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	28	ihre	PPOSAT	(NP*	ihr	sg	fem	-	(2)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	29	Prüfung	NN	*))	prüfung	sg	fem	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	30	;	$.	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	31	floht	VVFIN	(S*	flohen	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	32	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	33	um	KOUI	(VP*	um	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	34	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	35	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	36	siegen	VVINF	*))))	siegen	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	37	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Auch	ADV	*	auch	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	dafür	PROAV	*	dafür	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	dank	APPR	*	dank	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	'	$(	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	ich	PPER	*	ich	sg	*	-	(1)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	Euch	PPER	*	euch	pl	*	-	(15)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	–	XY	*	–	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(4)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	muß	VMFIN	*	müssen	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	gestehn	VVPP	(VP*	gestehn	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	Ihr	PPER	(S*	ihr	pl	*	-	(1)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	wißt	VVFIN	*	wissen	pl	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	wie	PWAV	(S*	wie	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	Tempelherren	NN	*	tempelherr	pl	fem	-	(33)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	denken	VVINF	*	denken	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	sollten	VMFIN	*))))	sollen	pl	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nur	ADV	(VROOT(PSEUDO(NP*	nur	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	Tempelherren	NN	*)	tempelherr	pl	fem	-	(33)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	sollten	VMFIN	*	sollen	pl	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	bloß	ADV	*	bloß	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	?	$.	*	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	bloß	ADV	(AVP*	bloß	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	Weil	KOUS	(S*	weil	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	es	PPER	*	es	sg	neut	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	die	ART	(NP*	der	pl	fem	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	Ordensregeln	NN	*)))	ordensregel	pl	fem	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	so	ADV	*	so	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	gebieten	VVFIN	*)	gebieten	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	?	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(1)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	weiß	VVFIN	*	weiß	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	wie	PWAV	(S*	wie	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	gute	ADJA	(NP*	gut	pl	masc	-	(57
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	Menschen	NN	*)	mensch	pl	masc	-	57)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	denken	VVINF	*	denken	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	;	$.	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	weiß	VVFIN	(S*	weiß	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	Daß	KOUS	(S*	daß	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	alle	PIAT	(NP*	aller	pl	neut	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	12	Länder	NN	*)	land	pl	neut	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	13	gute	ADJA	(VP(NP*	gut	pl	masc	-	(57
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	14	Menschen	NN	*)	mensch	pl	masc	-	57)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	15	tragen	VVINF	*)))))	tragen	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	16	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Mit	APPR	(VROOT(PSEUDO(PP*	mit	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	Unterschied	NN	*	unterschied	sg	-	-	(58)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	doch	ADV	(AP*	doch	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	hoffentlich	ADJD	*))	hoffentlich	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	?	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ja	PTKANT	*	ja	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	wohl	ADV	*	wohl	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	;	$.	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	An	APPR	*	an	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	Farb	NN	*	farb	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	'	$(	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	an	APPR	*	an	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	Kleidung	NN	*	kleidung	sg	fem	-	(59)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	an	APPR	*	an	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	Gestalt	NN	*	gestalt	sg	fem	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	12	verschieden	VVPP	*	verschieden	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	13	.	$.	*	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Auch	ADV	(VROOT(PSEUDO(S(AVP*	auch	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	hier	ADV	*)	hier	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	bald	ADV	*	bald	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	mehr	ADV	*	mehr	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	bald	ADV	(NP*	bald	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	weniger	PIS	*	weniger	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	als	KOKOM	(AVP*	als	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	dort	ADV	*)))	dort	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Mit	APPR	(VROOT(PSEUDO(AP(PP*	mit	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	diesem	PDAT	*	dieser	sg	masc	-	(58
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	Unterschied	NN	*	unterschied	sg	masc	-	58)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	ists	ADV	*)	ists	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	weit	ADJD	*	weit	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	her	ADV	*)	her	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Der	ART	(VROOT(PSEUDO(CS(S(NP*	der	sg	masc	-	(39
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	große	ADJA	*	groß	sg	masc	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	Mann	NN	*)	mann	sg	masc	-	39)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	braucht	VVFIN	*	brauchen	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	überall	ADV	(NP(AP*	überall	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	viel	PIAT	*)	viel	*	*	-	(60
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	Boden	NN	*	boden	sg	masc	-	60)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	;	$.	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	Und	KON	(VP*	und	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	mehrere	PIAT	(AP*	mehrere	pl	neut	-	(39)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	zu	PTKA	*	zu	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	12	nah	ADJD	*)	nah	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	13	gepflanzt	VVPP	*)))	pflanzen	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	15	zerschlagen	VVFIN	(S*	zerschlagen	pl	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	16	Sich	PRF	*	sich	pl	-	-	(39)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	17	nur	ADV	*	nur	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	18	die	ART	(NP*	der	pl	neut	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	19	Äste	NN	*)))	äst	pl	neut	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	20	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Mittelgut	ADJD	(VROOT(PSEUDO(S(AP*	mittelgut	-	-	-	(61)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	wie	KOKOM	(NP*	wie	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	wir	PPER	*))	wir	pl	*	-	(62)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	Findt	VVFIN	*	findt	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	sich	PRF	*	sich	sg	-	-	(61)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	hingegen	ADV	*	hingegen	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	überall	ADV	(PP*	überall	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	in	APPR	*	in	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	Menge	NN	*))	menge	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nur	ADV	(VROOT(PSEUDO(S*	nur	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	muß	VMFIN	*	müssen	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	der	ART	(NP*	der	sg	masc	-	(61
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	eine	PIS	*)	ein	sg	masc	-	61)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	den	ART	(VP(NP*	der	pl	masc	-	(61
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	andern	PIS	*)	anderer	-	-	-	61)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	mäkeln	VVINF	*))	mäkeln	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nur	ADV	(VROOT(PSEUDO(S*	nur	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	muß	VMFIN	*	müssen	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	der	ART	(NP*	der	sg	masc	-	(61
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	Knorr	NN	*)	knorr	sg	masc	-	61)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	den	ART	(VP(NP*	der	sg	masc	-	(61
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	Knuppen	NN	*)	knuppe	sg	masc	-	61)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	hübsch	ADJD	*	hübsch	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	vertragen	VVINF	*))	vertragen	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nur	ADV	(VROOT(PSEUDO(S*	nur	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	muß	VMFIN	*	müssen	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	ein	ART	(NP*	ein	sg	neut	-	(61
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	Gipfelchen	NN	*)	gipfelchen	sg	neut	-	61)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	sich	PRF	*	sich	sg	-	-	(61)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	vermessen	VVINF	(VP*	vermessen	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	Daß	KOUS	(S*	daß	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	es	PPER	*	es	sg	neut	-	(61)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	allein	ADV	(VP*	allein	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	der	ART	(NP*	der	sg	fem	-	(63
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	12	Erde	NN	*)	erde	sg	fem	-	63)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	13	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	14	entschossen	VVPP	*))))	entschießen	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	15	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Sehr	ADV	(VROOT(PSEUDO(VP*	sehr	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	wohl	ADV	*	wohl	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	gesagt	VVPP	*)	sagen	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	Doch	KON	(S*	doch	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	kennt	VVFIN	*	kennen	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	Ihr	PPER	*	ihr	sg	fem	-	(1)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	auch	ADV	*)	auch	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	das	ART	(NP*	der	sg	neut	-	(64
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	Volk	NN	*	volk	sg	neut	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	64)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	Das	KOUS	(S*	der	sg	neut	-	(64)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	diese	PDAT	(NP*	dieser	sg	fem	-	(65
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	Menschenmäkelei	NN	*)	menschenmäkelei	sg	fem	-	65)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	zu	APPR	(PP*	zu	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	12	erst	ADV	(AP*	erst	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	13	Getrieben	NN	*))))	getrieb	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	14	?	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wißt	VVFIN	(VROOT(PSEUDO(S*	wißen	pl	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ihr	PPER	(NP*	ihr	pl	*	-	(1
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	Nathan	NE	(NP*	nathan	-	-	-	1)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	welches	PWAT	(S(NP*	welcher	sg	neut	-	(66
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	Volk	NN	*)	volk	sg	neut	-	66)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	Zu	PPER	*	zu	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	erst	ADV	(NP*	erst	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	das	ART	*	der	sg	neut	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	auserwählte	ADJA	*	auserwählt	sg	neut	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	Volk	NN	*)	volk	sg	neut	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	12	sich	PRF	*	sich	sg	-	-	(66)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	13	nannte	VVFIN	*))))	nennen	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	14	?	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wie	PWAV	(VROOT(PSEUDO*	wie	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	?	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	wenn	KOUS	(VROOT(PSEUDO(S*	wenn	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	dieses	PDAT	(NP*	dieser	sg	neut	-	(64
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	Volk	NN	*)	volk	sg	neut	-	64)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	nun	ADV	(AVP*	nun	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	zwar	ADV	*	zwar	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	nicht	PTKNEG	*)	nicht	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	haßte	VVFIN	*	hassen	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	Doch	KON	(S*	doch	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	wegen	APPR	(VP(PP*	wegen	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	12	seines	PPOSAT	*	sein	sg	masc	-	(67|(64)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	13	Stolzes	NN	*)	stolz	sg	masc	-	67)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	14	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	15	verachten	VVINF	*))	verachten	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	16	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	17	Mich	PPER	(S*	mich	sg	*	-	(4)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	18	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	19	entbrechen	VVINF	*	entbrechen	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	20	könnte	VMFIN	*)))	können	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	21	?	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Seines	PPOSAT	(VROOT(PSEUDO(DL(NP*	sein	sg	masc	-	(67|(64)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	Stolzes	NN	*)	stolz	sg	masc	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	;	$.	*	--	-	-	-	67)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	Den	VAFIN	(S*	der	sg	masc	-	(67)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	es	PPER	*	es	sg	neut	-	(64)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	auf	APPR	(PP*	auf	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	Christ	NE	(CNP*	christ	sg	masc	-	(68)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	und	KON	*	und	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	Muselmann	NE	*))	muselmann	sg	*	-	(69)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	vererbte	VVFIN	*	vererben	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	Nur	ADV	(S(NP*	nur	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	12	sein	PPOSAT	*	sein	sg	masc	-	(18|(64)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	13	Gott	NN	*)	gott	sg	masc	(PER*)	18)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	14	sei	VAFIN	*	sein	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	15	der	ART	(NP*	der	sg	masc	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	16	rechte	ADJA	*	rechter	sg	masc	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	17	Gott	NN	*))))	gott	sg	masc	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	18	!	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ihr	PPER	(S*	ihr	pl	*	-	(1)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	stutzt	VVFIN	*)	stutzen	pl	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	Daß	KOUS	(S*	daß	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	ein	ART	(NP*	ein	sg	masc	-	(70
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	Christ	NN	*)	christ	sg	masc	-	70)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	ein	ART	(NP*	ein	sg	masc	-	(71
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	Tempelherr	NN	*)	tempelherr	sg	masc	-	71)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	13	so	ADV	*	so	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	14	rede	VVFIN	*)	reden	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	15	?	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wenn	KOUS	(VROOT(PSEUDO(S*	wenn	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	hat	VAFIN	*	haben	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	und	KON	(S*	und	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	wo	PWAV	*	wo	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	die	ART	(VP(NP*	der	sg	fem	-	(72
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	fromme	ADJA	*	fromm	sg	fem	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	Raserei	NN	*	raserei	sg	fem	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	72)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	Den	NE	*)	der	pl	masc	-	(73
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	bessern	VVINF	*)	bessern	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	Gott	NN	(VP*	gott	-	-	-	73)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	12	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	13	haben	VAINF	*))	haben	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	14	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	15	diesen	PDS	(VP(S*	dieser	pl	masc	-	(73
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	16	bessern	VVFIN	*	bessern	-	-	-	73)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	17	Der	ART	(NP*	der	sg	fem	-	(63
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	18	ganzen	ADJA	*	ganz	sg	fem	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	19	Welt	NN	*)	welt	sg	fem	-	63)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	20	als	APPR	(PP*	als	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	21	besten	ADJA	*))	gut	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	22	aufzudringen	VVIZU	*	aufdringen	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	23	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	24	In	APPR	(S(PP*	in	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	25	ihrer	PPOSAT	*	ihr	sg	fem	-	(72)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	26	schwärzesten	ADJA	*	schwarz	pl	neut	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	27	Gestalt	NN	*)	gestalt	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	28	sich	PRF	*	sich	sg	-	-	(72)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	29	mehr	PIAT	(NP*	mehr	*	*	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	30	Gezeigt	NN	*)	gezeigt	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	31	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	32	als	KOKOM	(AVP*	als	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	33	hier	ADV	*)	hier	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	34	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	35	als	KOKOM	(AP*	als	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	36	itzt	ADJD	*)))))	itzt	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	37	?	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wem	PWS	(VROOT(PSEUDO(S*	wem	sg	*	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	hier	ADV	*	hier	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	wem	PWS	*	wem	sg	*	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	itzt	VVFIN	*	itzen	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	Die	ART	(NP*	der	pl	fem	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	Schuppen	NN	*)	schuppe	pl	fem	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	vom	APPRART	(VP(PP*	von	sg	*	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	Auge	NN	*)	auge	sg	*	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	fallen	VVINF	*))	fallen	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	.	$.	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	12	.	$.	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	13	.	$.	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	14	Doch	KON	(S*	doch	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	15	Sei	NN	*	sei	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	16	blind	ADJD	*	blind	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	17	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	18	wer	PWS	(S*	wer	sg	masc	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	19	will	VMFIN	*))	wollen	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	20	!	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	*	–	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	Vergeßt	VVPP	*	vergeßt	pl	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	was	PWS	*	was	sg	neut	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	ich	PPER	*	ich	sg	*	-	(4)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	gesagt	VVPP	*	sagen	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	;	$.	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	Und	KON	*	und	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	laßt	VVIMP	*	lassen	pl	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	mich	PRF	*	mich	sg	*	-	(4)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	!	$.	*	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Will	VMFIN	*	wollen	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	gehen	VVINF	*	gehen	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	.	$.	*	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ha	XY	*	ha	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ihr	PPER	(VROOT(PSEUDO(S*	ihr	pl	*	-	(15)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	wißt	VVFIN	*	wissen	pl	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	wie	PWAV	(S(AVP*	wie	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	viel	ADV	*)	viel	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	fester	ADJD	*))	fest	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	Ich	PPER	(S*	ich	sg	*	-	(1)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	nun	ADV	*	nun	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	mich	PRF	(VP*	mich	sg	-	-	(1)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	an	APPR	(PP*	an	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	Euch	PPER	*)	euch	pl	*	-	(15)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	12	drängen	VVINF	*)	drängen	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	13	werde	VAFIN	*)	werden	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	14	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	Kommt	VVFIN	(S*	kommen	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	Wir	PPER	*	wir	pl	*	-	(62)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	müssen	VMFIN	*)	müssen	pl	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	müssen	VMFIN	(S*	müssen	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	Freunde	NN	(VP*	freund	pl	masc	-	(74)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	sein	VAINF	*))	sein	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	!	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	Verachtet	VVFIN	*	verachten	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	Mein	PPOSAT	(S(NP*	mein	sg	neut	-	(64|(1)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	Volk	NN	*)	volk	sg	neut	-	64)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	so	ADV	(AVP*	so	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	sehr	ADV	*)	sehr	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	Ihr	PPER	*	ihr	pl	*	-	(15)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	wollt	VMFIN	*)	wollen	pl	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Wir	PPER	(VROOT(PSEUDO(S*	wir	pl	*	-	(62)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	haben	VAFIN	*	haben	pl	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	beide	PIAT	(VP(NP*	beide	pl	fem	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	Uns	NN	*)	uns	pl	*	-	(62)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	unser	PPOSAT	(NP*	unser	sg	neut	-	(66
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	Volk	NN	*)	volk	sg	neut	-	66)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	auserlesen	VVINF	*))	auserlesen	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Sind	VAFIN	(VROOT(PSEUDO(S*	sein	pl	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	Wir	PPER	(NP*	wir	pl	*	-	(62)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	unser	PPOSAT	*	unser	sg	neut	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	Volk	NN	*))	volk	sg	neut	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Was	PWS	(VROOT(PSEUDO(S*	was	sg	neut	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	heißt	VVFIN	*	heißen	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	denn	ADV	*	denn	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	Volk	NN	*)	volk	sg	neut	-	(66)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	?	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Sind	NE	(VROOT(PSEUDO(NP*	sein	pl	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	Christ	NN	(CNP*	christ	sg	masc	-	(68)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	und	KON	*	und	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	Jude	NN	*)	jude	sg	masc	-	(75)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	eher	ADV	(NP*	eher	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	Christ	NN	(CNP*	christ	-	-	-	(76)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	und	KON	*	und	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	Jude	NN	*))	jude	sg	-	-	(77)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	Als	APPR	(PP*	als	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	Mensch	NN	*))	mensch	sg	masc	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	?	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ah	NE	(VROOT(PSEUDO(MPN*	ah	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	!	$.	*)))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	wenn	KOUS	(VROOT(PSEUDO(S*	wenn	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	ich	PPER	*	ich	sg	*	-	(1)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	einen	PIS	(NP*	ein	sg	masc	-	(78|(79
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	mehr	ADV	*)	mehr	-	-	-	79)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	in	APPR	(NP(PP*	in	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	Euch	PPER	*)	euch	pl	*	-	78)|(15)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	Gefunden	NN	*)	gefunde	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	hätte	VAFIN	*	haben	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	dem	PRELS	(S*	der	sg	masc	-	(79)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	es	PPER	*	es	sg	neut	-	(80)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	gnügt	VVFIN	*	gnügen	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	12	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	13	ein	ART	(VP(NP*	ein	sg	masc	-	(80
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	14	Mensch	NN	*)	mensch	sg	masc	-	80)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	15	Zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	16	heißen	VVINF	*))))	heißen	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	17	!	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ja	PTKANT	(VROOT(PSEUDO(S(S*	ja	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	bei	APPR	(PP*	bei	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	Gott	NN	*))	gott	sg	masc	(PER*)	(81)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	das	PDS	*	der	sg	neut	-	(78)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	habt	VAFIN	*	haben	pl	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	Ihr	PPER	(NP*	ihr	pl	*	-	(1
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	Nathan	NE	*	nathan	-	-	-	1)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	!	$.	*))))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Das	PDS	*	der	sg	neut	-	(78)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	habt	VAFIN	*	haben	pl	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	Ihr	PPER	*	ihr	pl	*	-	(1)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	Eure	PPOSAT	(NP*	euer	sg	fem	-	(82|(1)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	Hand	NN	*)	hand	sg	fem	-	82)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	Ich	PPER	(S*	ich	sg	*	-	(4)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	schäme	VVFIN	*	schämen	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	mich	PRF	*	mich	sg	-	-	(4)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	Euch	PPER	*	euch	pl	*	-	(1)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	einen	ART	(VP(VP(NP*	ein	sg	masc	-	(83
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	Augenblick	NN	*)	augenblick	sg	masc	-	83)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	verkannt	VVPP	*)	verkennen	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	zu	PTKZU	(VZ*	zu	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	haben	VAINF	*)))	haben	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(S*	und	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	ich	PPER	*	ich	sg	masc	-	(1)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	bin	VAFIN	*	sein	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	stolz	ADJD	(AVP*	stolz	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	darauf	PROAV	*))	darauf	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Nur	ADV	(VROOT(PSEUDO(AP(NP(PP*	nur	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	das	ART	*	der	sg	neut	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	Gemeine	NN	*	gemein	sg	neut	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	Verkennt	NN	*)	verkennen	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	man	PIS	*)	man	sg	*	-	(17)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	selten	ADJD	*)	selten	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Und	KON	(VROOT(PSEUDO(AP(S*	und	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	das	ART	(NP*	der	sg	neut	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	Seltene	NN	*)	seltener	sg	neut	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	Vergißt	VVFIN	*	vergissen	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	man	PIS	*)	man	sg	*	-	(17)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	schwerlich	ADJD	*)	schwerlich	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	Nathan	NE	*	nathan	-	-	-	(1)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	ja	ADV	*	ja	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	;	$.	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	Wir	PPER	(S*	wir	pl	*	-	(62)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	müssen	VMFIN	*	müssen	pl	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	,	$,	*	--	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	müssen	VMFIN	(S*	müssen	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	Freunde	NN	(VP*	freund	pl	masc	-	(74)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	werden	VAINF	*)))	werden	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Sind	VAFIN	(VROOT(PSEUDO(S*	sein	pl	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	Es	PPER	*	es	sg	neut	-	(74)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	schon	ADV	*)	schon	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	.	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	Wie	PWAV	(S*	wie	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	wird	VAFIN	*	werden	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	sich	PRF	(VP*	sich	sg	-	-	(2)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	meine	PPOSAT	(NP*	mein	sg	fem	-	(2|(1)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	Recha	NN	*)	recha	sg	fem	-	2)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	freuen	VVINF	*))	freuen	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	!	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO(CNP*	–	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	Und	KON	*	und	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	ah	XY	*)	ah	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	!	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	welch	PWAT	(VROOT(PSEUDO(S(NP(AP*	welcher	-	-	-	(84
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	eine	ART	*	ein	sg	fem	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	heitre	ADJA	*)	heitr	sg	fem	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	Ferne	NN	*)	ferne	sg	fem	-	84)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	schließt	VVFIN	*	schließen	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	Sich	PRF	*	sich	sg	-	-	(84)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	meinen	PPOSAT	(NP*	mein	pl	neut	-	(85|(1)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	Blicken	NN	*)	blick	pl	fem	-	85)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	auf	PTKVZ	*)	auf	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	!	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	–	XY	(VROOT(PSEUDO*	–	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	Kennt	VVFIN	(S*	kennt	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	sie	PPER	*	sie	sg	fem	-	(2)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	nur	ADV	*)	nur	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	erst	ADV	*	erst	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	!	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ich	PPER	(VROOT(PSEUDO(S*	ich	sg	*	-	(4)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	brenne	VVFIN	*	brennen	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	vor	APPR	(PP*	vor	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	Verlangen	NN	*	verlangen	pl	masc	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	–	CARD	*)	–	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	Wer	PWS	(NP(AVP(S*	wer	sg	*	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	stürzt	VVFIN	*)	stürzen	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	7	dort	ADV	*	dort	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	8	Aus	APPR	(AP(PP*	aus	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	9	Euerm	NN	*)))	euerm	*	*	-	(86|(1)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	10	Hause	NN	*))	haus	sg	neut	-	86)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	11	?	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ists	ADV	(VROOT(PSEUDO(S*	ist	-	-	-	(0)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	nicht	PTKNEG	*	nicht	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	ihre	PPOSAT	(NP*	ihr	sg	fem	-	(1)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	Daja	NE	*	daja	sg	fem	(PER*)	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	?	$.	*))))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	NATHAN	NE	(VROOT(PSEUDO*	nathan	-	-	(LOC*)	(1
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	1)

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Ja	PTKANT	*	ja	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	wohl	ADV	*	wohl	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	.	$.	*	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	So	ADV	(VROOT(PSEUDO(S(ISU*	so	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	ängstlich	ADJD	*))	ängstlich	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	?	$.	*))	--	-	-	-	-

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	TEMPELHERR	NE	(VROOT(PSEUDO*	tempelherr	-	-	(LOC*)	(15
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	.	$.	*))	--	-	-	-	15)

Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	0	Unsrer	NE	(VROOT(PSEUDO(S(MPN*	unsrer	*	*	-	(2|(62)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	1	Recha	NE	*)	recha	sg	neut	(PER*)	2)
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	2	ist	VAFIN	*	sein	sg	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	3	Doch	NE	*	doch	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	4	nichts	PIS	(VP*	nichts	*	neut	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	5	begegnet	VVPP	*))	begegnen	-	-	-	-
Nathan_Act2_Scene5.part.xml.rkpt.0.CoNLL2012.conll	000	6	?	$.	*))	--	-	-	-	-

#end document
